version: '3.9'

services:

 spring_cloud:
     build:
       context: .
       dockerfile: ./dockerFileCloud
     networks:
       web:
         ipv4_address: 172.16.238.2
     ports:
       - '8050:8050'
       
 zookeeper:
    image: wurstmeister/zookeeper:latest
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
     web:
       ipv4_address: 172.16.238.3
  
  
 broker1:
    image: wurstmeister/kafka
    container_name: broker1
    ports:
      - "8092:8092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT_HOST://:8092, PLAINTEXT://:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT_HOST://localhost:8092,PLAINTEXT://broker1:8092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_MIN_INSYNC_REPLICAS: 1
    networks:
     web:
       ipv4_address: 172.16.238.4
 
 broker2:
    image: wurstmeister/kafka
    container_name: broker2
    ports:
      - "8093:8093"
    depends_on:
      - zookeeper
      - broker1
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT_HOST://:8093, PLAINTEXT://:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT_HOST://localhost:8093,PLAINTEXT://broker2:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_MIN_INSYNC_REPLICAS: 1
    networks:
     web:
       ipv4_address: 172.16.238.5
       
       
       
 init-kafka:
    image: confluentinc/cp-kafka:6.1.1
    depends_on:
      - broker1
      - broker2
    entrypoint: [ '/bin/sh', '-c' ]
    command: |
      '
      kafka-topics --bootstrap-server broker1:9092 --create --if-not-exists --topic messages --replication-factor 2 --partitions 2 
      kafka-configs --bootstrap-server broker1:9092 --entity-type topics --entity-name messages --alter --add-config      "segment.ms=86400000,segment.bytes=104857600,retention.ms=172800000,cleanup.policy=delete"
      '
      
      
      
 sender_message:
    build:
      context: .
      dockerfile: ./dockerFileSender
    depends_on:
      - broker1
      - broker2
    networks:
      web:
        ipv4_address: 172.16.238.6
      
       
       





networks:
  web:
    driver: bridge
    name: web
    ipam:
      driver: default
      config:
        - subnet: 172.16.238.0/24
          gateway: 172.16.238.1

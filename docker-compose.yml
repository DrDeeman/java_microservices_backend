version: '3.9'
services:

 spring_cloud:
     build:
       context: .
       dockerfile: ./dockerFile
     networks:
       web:
         ipv4_address: 172.16.238.2
     ports:
       - '8050:8050'



 db:
   image: postgres:13.3
   container_name: service_postgres
   environment:
     - POSTGRES_DB=postgres
     - POSTGRES_USER=postgres
     - POSTGRES_PASSWORD=postgres
     - PGDATA=/var/lib/postgresql/data/pgdata
   volumes:
    - ./backups/products.sql:/docker-entrypoint-initdb.d/a.sql
    - ~/pgdataProductDocker:/var/lib/postgresql/data
   ports:
     - "5433:5432"
   networks:
     web:
       ipv4_address: 172.16.238.3
   healthcheck:
     test: ["CMD-SHELL", "pg_isready -U postgres -d products"]
     interval: 10s
     timeout: 5s
     retries: 5
   tty: true



 pgadmin:
   user: root
   container_name: service_pgadmin
   image: dpage/pgadmin4
   environment:
     PGADMIN_DEFAULT_EMAIL: "stalkerdrdeeman@gmail.com"
     PGADMIN_DEFAULT_PASSWORD: "passwd"
     PGADMIN_CONFIG_SERVER_MODE: "False"
   volumes:
     - /var/Docker_pgadmin:/var/lib/pgadmin
   ports:
     - "5050:80"
   restart: unless-stopped
   deploy:
     resources:
       limits:
         cpus: '0.5'
         memory: 1G
   networks:
     web:
       ipv4_address: 172.16.238.4
   depends_on:
     db:
       condition: service_healthy




 spring_tomcat_product:
    image: tomcat:10.1.16-jdk17
    volumes:
      - ./ProductMicroService/site/app.war:/usr/local/tomcat/webapps/app.war
    ports:
      - '8082:8080'
    networks:
         web:
           ipv4_address: 172.16.238.5
    depends_on:
         db:
           condition: service_healthy



networks:
  web:
    driver: bridge
    name: web
    ipam:
      driver: default
      config:
        - subnet: 172.16.238.0/24
          gateway: 172.16.238.1
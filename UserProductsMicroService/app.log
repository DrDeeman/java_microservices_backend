[INFO ] 28-02-2024 12:04:55.451 [background-preinit] Version - HV000001: Hibernate Validator 8.0.1.Final
[INFO ] 28-02-2024 12:04:55.664 [main] TestSpringBootApplication - Starting TestSpringBootApplication using Java 17.0.10 with PID 1344403 (/home/dima/backend_microservice/UserProductsMicroService/target/classes started by dima in /home/dima/backend_microservice/UserProductsMicroService)
[INFO ] 28-02-2024 12:04:55.693 [main] TestSpringBootApplication - No active profile set, falling back to 1 default profile: "default"
[INFO ] 28-02-2024 12:04:57.632 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO ] 28-02-2024 12:04:57.688 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 18 ms. Found 0 JPA repository interfaces.
[ERROR] 28-02-2024 12:04:59.713 [main] AprLifecycleListener - An incompatible version [1.2.23] of the Apache Tomcat Native library is installed, while Tomcat requires version [1.2.34]
[INFO ] 28-02-2024 12:05:00.522 [main] TomcatWebServer - Tomcat initialized with port(s): 8300 (http)
[INFO ] 28-02-2024 12:05:00.557 [main] Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8300"]
[INFO ] 28-02-2024 12:05:00.565 [main] StandardService - Starting service [Tomcat]
[INFO ] 28-02-2024 12:05:00.566 [main] StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.11]
[INFO ] 28-02-2024 12:05:01.914 [main] TldScanner - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
[INFO ] 28-02-2024 12:05:01.946 [main] [/users_products_api] - Initializing Spring embedded WebApplicationContext
[INFO ] 28-02-2024 12:05:01.953 [main] ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 5864 ms
[INFO ] 28-02-2024 12:05:02.345 [main] Version - HHH000412: Hibernate ORM core version 6.2.6.Final
[INFO ] 28-02-2024 12:05:02.355 [main] Environment - HHH000406: Using bytecode reflection optimizer
[DEBUG] 28-02-2024 12:05:02.789 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@19ad75e5
[DEBUG] 28-02-2024 12:05:02.790 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@19ad75e5
[DEBUG] 28-02-2024 12:05:02.791 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@19ad75e5
[DEBUG] 28-02-2024 12:05:02.792 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@7cd5fcf4
[DEBUG] 28-02-2024 12:05:02.792 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@7cd5fcf4
[DEBUG] 28-02-2024 12:05:02.793 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@19cdc217
[DEBUG] 28-02-2024 12:05:02.793 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@19cdc217
[DEBUG] 28-02-2024 12:05:02.795 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@5f5297e3
[DEBUG] 28-02-2024 12:05:02.796 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@5f5297e3
[DEBUG] 28-02-2024 12:05:02.797 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@2d22d3b1
[DEBUG] 28-02-2024 12:05:02.797 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@2d22d3b1
[DEBUG] 28-02-2024 12:05:02.798 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@2d22d3b1
[DEBUG] 28-02-2024 12:05:02.798 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@7ec3a8bd
[DEBUG] 28-02-2024 12:05:02.799 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@7ec3a8bd
[DEBUG] 28-02-2024 12:05:02.799 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@7ec3a8bd
[DEBUG] 28-02-2024 12:05:02.800 [main] BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@9690008
[DEBUG] 28-02-2024 12:05:02.801 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@9690008
[DEBUG] 28-02-2024 12:05:02.802 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@42cf6349
[DEBUG] 28-02-2024 12:05:02.803 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@79cb8ffa
[DEBUG] 28-02-2024 12:05:02.805 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@79cb8ffa
[DEBUG] 28-02-2024 12:05:02.806 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@1a2e563e
[DEBUG] 28-02-2024 12:05:02.807 [main] BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@5b066c33
[DEBUG] 28-02-2024 12:05:02.808 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@62ea8931
[DEBUG] 28-02-2024 12:05:02.808 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@62ea8931
[DEBUG] 28-02-2024 12:05:02.809 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@62ea8931
[DEBUG] 28-02-2024 12:05:02.809 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@47fb7ec9
[DEBUG] 28-02-2024 12:05:02.810 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@47fb7ec9
[DEBUG] 28-02-2024 12:05:02.810 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@47fb7ec9
[DEBUG] 28-02-2024 12:05:02.811 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@2f8c4fae
[DEBUG] 28-02-2024 12:05:02.812 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@2f8c4fae
[DEBUG] 28-02-2024 12:05:02.812 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@2f8c4fae
[DEBUG] 28-02-2024 12:05:02.814 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@4703c998
[DEBUG] 28-02-2024 12:05:02.815 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@4703c998
[DEBUG] 28-02-2024 12:05:02.815 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@4703c998
[DEBUG] 28-02-2024 12:05:02.816 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@71166348
[DEBUG] 28-02-2024 12:05:02.821 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@71166348
[DEBUG] 28-02-2024 12:05:02.822 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@71166348
[DEBUG] 28-02-2024 12:05:02.822 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@6d874695
[DEBUG] 28-02-2024 12:05:02.823 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@6d874695
[DEBUG] 28-02-2024 12:05:02.823 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@20bb85b4
[DEBUG] 28-02-2024 12:05:02.824 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@20bb85b4
[DEBUG] 28-02-2024 12:05:02.827 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@79add732
[DEBUG] 28-02-2024 12:05:02.828 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@79add732
[DEBUG] 28-02-2024 12:05:02.828 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@79add732
[DEBUG] 28-02-2024 12:05:02.829 [main] BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@3be3e76c
[DEBUG] 28-02-2024 12:05:02.829 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@6c07ad6b
[DEBUG] 28-02-2024 12:05:02.830 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@6c07ad6b
[DEBUG] 28-02-2024 12:05:02.830 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@10ed037a
[DEBUG] 28-02-2024 12:05:02.831 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@76e4212
[DEBUG] 28-02-2024 12:05:02.831 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@76e4212
[DEBUG] 28-02-2024 12:05:02.832 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@76e4212
[DEBUG] 28-02-2024 12:05:02.832 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@23121d14
[DEBUG] 28-02-2024 12:05:02.833 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@72af90e8
[DEBUG] 28-02-2024 12:05:02.833 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@aa1bb14
[DEBUG] 28-02-2024 12:05:02.837 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@7faa0680
[DEBUG] 28-02-2024 12:05:02.838 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@7faa0680
[DEBUG] 28-02-2024 12:05:02.838 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@4c635edc
[DEBUG] 28-02-2024 12:05:02.839 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@4c635edc
[DEBUG] 28-02-2024 12:05:02.839 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@4245bf68
[DEBUG] 28-02-2024 12:05:02.840 [main] BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@45bbc52f
[DEBUG] 28-02-2024 12:05:02.840 [main] BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@6a8a551e
[DEBUG] 28-02-2024 12:05:02.841 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@3cc9632d
[DEBUG] 28-02-2024 12:05:02.841 [main] BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@53982523
[DEBUG] 28-02-2024 12:05:02.841 [main] BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@489110c2
[DEBUG] 28-02-2024 12:05:02.842 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@700b9e6b
[DEBUG] 28-02-2024 12:05:02.842 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@700b9e6b
[DEBUG] 28-02-2024 12:05:02.843 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@7ac5b4c
[DEBUG] 28-02-2024 12:05:02.843 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@7ac5b4c
[DEBUG] 28-02-2024 12:05:02.844 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@150fc7a7
[DEBUG] 28-02-2024 12:05:02.844 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@150fc7a7
[DEBUG] 28-02-2024 12:05:02.844 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@55d8c2c4
[DEBUG] 28-02-2024 12:05:02.846 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@55d8c2c4
[DEBUG] 28-02-2024 12:05:02.848 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@798cf6d2
[DEBUG] 28-02-2024 12:05:02.849 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@798cf6d2
[DEBUG] 28-02-2024 12:05:02.849 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@1c1fa494
[DEBUG] 28-02-2024 12:05:02.850 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@77c66a4f
[DEBUG] 28-02-2024 12:05:02.852 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@649b5891
[DEBUG] 28-02-2024 12:05:02.853 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@649b5891
[DEBUG] 28-02-2024 12:05:02.853 [main] BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@7a3f08b6
[DEBUG] 28-02-2024 12:05:02.854 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@1be52861
[DEBUG] 28-02-2024 12:05:02.854 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@5fb5ad40
[DEBUG] 28-02-2024 12:05:02.855 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@615439f7
[DEBUG] 28-02-2024 12:05:02.856 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@615439f7
[DEBUG] 28-02-2024 12:05:02.856 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@632cf7d3
[DEBUG] 28-02-2024 12:05:02.857 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@51b87df7
[DEBUG] 28-02-2024 12:05:02.857 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@2315052d
[DEBUG] 28-02-2024 12:05:02.857 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@2315052d
[DEBUG] 28-02-2024 12:05:02.858 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@634e1b39
[DEBUG] 28-02-2024 12:05:02.858 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@634e1b39
[DEBUG] 28-02-2024 12:05:02.859 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@67d8faec
[DEBUG] 28-02-2024 12:05:02.859 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@67d8faec
[DEBUG] 28-02-2024 12:05:02.861 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@67d8faec
[DEBUG] 28-02-2024 12:05:02.861 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@751d7425
[DEBUG] 28-02-2024 12:05:02.862 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@751d7425
[DEBUG] 28-02-2024 12:05:02.862 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@751d7425
[DEBUG] 28-02-2024 12:05:02.862 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@7eaa2bc6
[DEBUG] 28-02-2024 12:05:02.867 [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@6dae70f9
[DEBUG] 28-02-2024 12:05:02.868 [main] BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@4d81e83a
[DEBUG] 28-02-2024 12:05:02.868 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@4d81e83a
[DEBUG] 28-02-2024 12:05:02.869 [main] BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@53a301f3
[DEBUG] 28-02-2024 12:05:02.869 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@53a301f3
[DEBUG] 28-02-2024 12:05:02.870 [main] BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@53a301f3
[DEBUG] 28-02-2024 12:05:02.870 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@7cf8f45a
[DEBUG] 28-02-2024 12:05:02.870 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@62cf6a84
[DEBUG] 28-02-2024 12:05:02.871 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@204d9edf
[DEBUG] 28-02-2024 12:05:02.871 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@204d9edf
[DEBUG] 28-02-2024 12:05:02.872 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@6b2aafbc
[DEBUG] 28-02-2024 12:05:02.872 [main] BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@6b2aafbc
[DEBUG] 28-02-2024 12:05:02.872 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@6b2aafbc
[DEBUG] 28-02-2024 12:05:02.873 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@50cbcca7
[DEBUG] 28-02-2024 12:05:02.873 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@50cbcca7
[DEBUG] 28-02-2024 12:05:02.874 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@49491770
[DEBUG] 28-02-2024 12:05:02.874 [main] BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@49491770
[DEBUG] 28-02-2024 12:05:02.875 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@5bec3e0
[DEBUG] 28-02-2024 12:05:02.875 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@5bec3e0
[DEBUG] 28-02-2024 12:05:02.876 [main] BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@3b57dba4
[DEBUG] 28-02-2024 12:05:02.877 [main] BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@3b57dba4
[DEBUG] 28-02-2024 12:05:02.877 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@35f7969d
[DEBUG] 28-02-2024 12:05:02.877 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@35f7969d
[DEBUG] 28-02-2024 12:05:02.878 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@3404e5c4
[DEBUG] 28-02-2024 12:05:02.895 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@6ddc67d0
[DEBUG] 28-02-2024 12:05:02.896 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@6ddc67d0
[DEBUG] 28-02-2024 12:05:02.899 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@165614f5
[DEBUG] 28-02-2024 12:05:02.900 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@6e685e6c
[DEBUG] 28-02-2024 12:05:02.900 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@5b0902b4
[DEBUG] 28-02-2024 12:05:02.901 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@9d3d54e
[DEBUG] 28-02-2024 12:05:02.901 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@2f04993d
[DEBUG] 28-02-2024 12:05:02.902 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@333398f
[DEBUG] 28-02-2024 12:05:02.902 [main] BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@103c97ff
[DEBUG] 28-02-2024 12:05:02.903 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@7d25913
[DEBUG] 28-02-2024 12:05:02.903 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@c14e5a5
[DEBUG] 28-02-2024 12:05:04.256 [main] DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7ea3839e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@16b76858)
[DEBUG] 28-02-2024 12:05:04.263 [main] JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
[DEBUG] 28-02-2024 12:05:04.264 [main] JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 28-02-2024 12:05:04.286 [main] BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@17c53dfb
[DEBUG] 28-02-2024 12:05:04.286 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@17c53dfb
[DEBUG] 28-02-2024 12:05:04.287 [main] BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@6ddc67d0`
[DEBUG] 28-02-2024 12:05:04.294 [main] JdbcTypeRegistry - addDescriptor(3100, NumericTypeDescriptor) replaced previous registration(org.hibernate.dialect.PostgreSQLIntervalSecondJdbcType@247bbfba)
[DEBUG] 28-02-2024 12:05:04.309 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 28-02-2024 12:05:04.310 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 28-02-2024 12:05:04.310 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 28-02-2024 12:05:04.311 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 28-02-2024 12:05:04.311 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 28-02-2024 12:05:04.312 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 28-02-2024 12:05:04.314 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 28-02-2024 12:05:04.314 [main] BasicTypeRegistry - Adding type registration OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 28-02-2024 12:05:04.315 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 28-02-2024 12:05:04.320 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5a13f1f7] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@5dae5a70]
[INFO ] 28-02-2024 12:05:04.488 [main] BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
[INFO ] 28-02-2024 12:05:05.744 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 28-02-2024 12:05:05.748 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5a13f1f7] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@115ef673]
[TRACE] 28-02-2024 12:05:05.763 [main] TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@115ef673] for TypeConfiguration
[WARN ] 28-02-2024 12:05:06.405 [main] JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[INFO ] 28-02-2024 12:05:07.465 [main] Http11NioProtocol - Starting ProtocolHandler ["http-nio-8300"]
[INFO ] 28-02-2024 12:05:07.525 [main] TomcatWebServer - Tomcat started on port(s): 8300 (http) with context path '/users_products_api'
[INFO ] 28-02-2024 12:05:07.558 [main] TestSpringBootApplication - Started TestSpringBootApplication in 13.082 seconds (process running for 19.827)
[TRACE] 28-02-2024 12:06:22.594 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@115ef673] for TypeConfiguration
[DEBUG] 28-02-2024 12:06:22.595 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@33a98cf4] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@115ef673]
[INFO ] 28-02-2024 12:54:06.295 [background-preinit] Version - HV000001: Hibernate Validator 8.0.1.Final
[INFO ] 28-02-2024 12:54:06.644 [main] TestSpringBootApplication - Starting TestSpringBootApplication using Java 17.0.10 with PID 1370017 (/home/dima/backend_microservice/UserProductsMicroService/target/classes started by dima in /home/dima/backend_microservice/UserProductsMicroService)
[INFO ] 28-02-2024 12:54:06.669 [main] TestSpringBootApplication - No active profile set, falling back to 1 default profile: "default"
[INFO ] 28-02-2024 12:54:08.699 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO ] 28-02-2024 12:54:08.768 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 18 ms. Found 0 JPA repository interfaces.
[ERROR] 28-02-2024 12:54:11.037 [main] AprLifecycleListener - An incompatible version [1.2.23] of the Apache Tomcat Native library is installed, while Tomcat requires version [1.2.34]
[INFO ] 28-02-2024 12:54:11.790 [main] TomcatWebServer - Tomcat initialized with port(s): 8300 (http)
[INFO ] 28-02-2024 12:54:11.870 [main] Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8300"]
[INFO ] 28-02-2024 12:54:11.879 [main] StandardService - Starting service [Tomcat]
[INFO ] 28-02-2024 12:54:11.880 [main] StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.11]
[INFO ] 28-02-2024 12:54:12.851 [main] TldScanner - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
[INFO ] 28-02-2024 12:54:12.882 [main] [/users_products_api] - Initializing Spring embedded WebApplicationContext
[INFO ] 28-02-2024 12:54:12.888 [main] ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 5905 ms
[INFO ] 28-02-2024 12:54:13.265 [main] Version - HHH000412: Hibernate ORM core version 6.2.6.Final
[INFO ] 28-02-2024 12:54:13.277 [main] Environment - HHH000406: Using bytecode reflection optimizer
[DEBUG] 28-02-2024 12:54:13.740 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@79add732
[DEBUG] 28-02-2024 12:54:13.740 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@79add732
[DEBUG] 28-02-2024 12:54:13.741 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@79add732
[DEBUG] 28-02-2024 12:54:13.742 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@3be3e76c
[DEBUG] 28-02-2024 12:54:13.743 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@3be3e76c
[DEBUG] 28-02-2024 12:54:13.743 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@6c07ad6b
[DEBUG] 28-02-2024 12:54:13.744 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@6c07ad6b
[DEBUG] 28-02-2024 12:54:13.744 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@10ed037a
[DEBUG] 28-02-2024 12:54:13.745 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@10ed037a
[DEBUG] 28-02-2024 12:54:13.745 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@76e4212
[DEBUG] 28-02-2024 12:54:13.746 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@76e4212
[DEBUG] 28-02-2024 12:54:13.746 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@76e4212
[DEBUG] 28-02-2024 12:54:13.746 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@23121d14
[DEBUG] 28-02-2024 12:54:13.747 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@23121d14
[DEBUG] 28-02-2024 12:54:13.747 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@23121d14
[DEBUG] 28-02-2024 12:54:13.748 [main] BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@72af90e8
[DEBUG] 28-02-2024 12:54:13.748 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@72af90e8
[DEBUG] 28-02-2024 12:54:13.749 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@aa1bb14
[DEBUG] 28-02-2024 12:54:13.750 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@7faa0680
[DEBUG] 28-02-2024 12:54:13.750 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@7faa0680
[DEBUG] 28-02-2024 12:54:13.751 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@4c635edc
[DEBUG] 28-02-2024 12:54:13.751 [main] BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@4245bf68
[DEBUG] 28-02-2024 12:54:13.751 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@45bbc52f
[DEBUG] 28-02-2024 12:54:13.752 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@45bbc52f
[DEBUG] 28-02-2024 12:54:13.752 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@45bbc52f
[DEBUG] 28-02-2024 12:54:13.753 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@6a8a551e
[DEBUG] 28-02-2024 12:54:13.753 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@6a8a551e
[DEBUG] 28-02-2024 12:54:13.754 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@6a8a551e
[DEBUG] 28-02-2024 12:54:13.754 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@3cc9632d
[DEBUG] 28-02-2024 12:54:13.754 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@3cc9632d
[DEBUG] 28-02-2024 12:54:13.755 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@3cc9632d
[DEBUG] 28-02-2024 12:54:13.755 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@53982523
[DEBUG] 28-02-2024 12:54:13.757 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@53982523
[DEBUG] 28-02-2024 12:54:13.757 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@53982523
[DEBUG] 28-02-2024 12:54:13.757 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@489110c2
[DEBUG] 28-02-2024 12:54:13.758 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@489110c2
[DEBUG] 28-02-2024 12:54:13.758 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@489110c2
[DEBUG] 28-02-2024 12:54:13.759 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@700b9e6b
[DEBUG] 28-02-2024 12:54:13.759 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@700b9e6b
[DEBUG] 28-02-2024 12:54:13.760 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@7ac5b4c
[DEBUG] 28-02-2024 12:54:13.761 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@7ac5b4c
[DEBUG] 28-02-2024 12:54:13.761 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@150fc7a7
[DEBUG] 28-02-2024 12:54:13.762 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@150fc7a7
[DEBUG] 28-02-2024 12:54:13.762 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@150fc7a7
[DEBUG] 28-02-2024 12:54:13.763 [main] BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@55d8c2c4
[DEBUG] 28-02-2024 12:54:13.763 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@798cf6d2
[DEBUG] 28-02-2024 12:54:13.763 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@798cf6d2
[DEBUG] 28-02-2024 12:54:13.764 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@1c1fa494
[DEBUG] 28-02-2024 12:54:13.764 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@77c66a4f
[DEBUG] 28-02-2024 12:54:13.765 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@77c66a4f
[DEBUG] 28-02-2024 12:54:13.765 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@77c66a4f
[DEBUG] 28-02-2024 12:54:13.766 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@649b5891
[DEBUG] 28-02-2024 12:54:13.766 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@7a3f08b6
[DEBUG] 28-02-2024 12:54:13.766 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@1be52861
[DEBUG] 28-02-2024 12:54:13.767 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@5fb5ad40
[DEBUG] 28-02-2024 12:54:13.768 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@5fb5ad40
[DEBUG] 28-02-2024 12:54:13.768 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@615439f7
[DEBUG] 28-02-2024 12:54:13.769 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@615439f7
[DEBUG] 28-02-2024 12:54:13.769 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@632cf7d3
[DEBUG] 28-02-2024 12:54:13.769 [main] BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@51b87df7
[DEBUG] 28-02-2024 12:54:13.770 [main] BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@2315052d
[DEBUG] 28-02-2024 12:54:13.770 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@634e1b39
[DEBUG] 28-02-2024 12:54:13.771 [main] BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@67d8faec
[DEBUG] 28-02-2024 12:54:13.771 [main] BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@751d7425
[DEBUG] 28-02-2024 12:54:13.772 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@7eaa2bc6
[DEBUG] 28-02-2024 12:54:13.772 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@7eaa2bc6
[DEBUG] 28-02-2024 12:54:13.772 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@6dae70f9
[DEBUG] 28-02-2024 12:54:13.773 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@6dae70f9
[DEBUG] 28-02-2024 12:54:13.773 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@4d81e83a
[DEBUG] 28-02-2024 12:54:13.773 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@4d81e83a
[DEBUG] 28-02-2024 12:54:13.774 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@53a301f3
[DEBUG] 28-02-2024 12:54:13.774 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@53a301f3
[DEBUG] 28-02-2024 12:54:13.775 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@7cf8f45a
[DEBUG] 28-02-2024 12:54:13.775 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@7cf8f45a
[DEBUG] 28-02-2024 12:54:13.775 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@62cf6a84
[DEBUG] 28-02-2024 12:54:13.776 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@204d9edf
[DEBUG] 28-02-2024 12:54:13.776 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@6b2aafbc
[DEBUG] 28-02-2024 12:54:13.776 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@6b2aafbc
[DEBUG] 28-02-2024 12:54:13.777 [main] BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@50cbcca7
[DEBUG] 28-02-2024 12:54:13.777 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@49491770
[DEBUG] 28-02-2024 12:54:13.778 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@5bec3e0
[DEBUG] 28-02-2024 12:54:13.778 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@3b57dba4
[DEBUG] 28-02-2024 12:54:13.778 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@3b57dba4
[DEBUG] 28-02-2024 12:54:13.779 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@35f7969d
[DEBUG] 28-02-2024 12:54:13.779 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3404e5c4
[DEBUG] 28-02-2024 12:54:13.779 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@47569167
[DEBUG] 28-02-2024 12:54:13.780 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@47569167
[DEBUG] 28-02-2024 12:54:13.780 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@42d9e8d2
[DEBUG] 28-02-2024 12:54:13.780 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@42d9e8d2
[DEBUG] 28-02-2024 12:54:13.781 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@4b93dd6a
[DEBUG] 28-02-2024 12:54:13.781 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@4b93dd6a
[DEBUG] 28-02-2024 12:54:13.781 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@4b93dd6a
[DEBUG] 28-02-2024 12:54:13.782 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@582a3b19
[DEBUG] 28-02-2024 12:54:13.782 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@582a3b19
[DEBUG] 28-02-2024 12:54:13.782 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@582a3b19
[DEBUG] 28-02-2024 12:54:13.783 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@2b0454d2
[DEBUG] 28-02-2024 12:54:13.783 [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@2616b618
[DEBUG] 28-02-2024 12:54:13.784 [main] BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@73bb573d
[DEBUG] 28-02-2024 12:54:13.784 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@73bb573d
[DEBUG] 28-02-2024 12:54:13.784 [main] BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@7ac058a0
[DEBUG] 28-02-2024 12:54:13.784 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@7ac058a0
[DEBUG] 28-02-2024 12:54:13.785 [main] BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@7ac058a0
[DEBUG] 28-02-2024 12:54:13.785 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@736b21ee
[DEBUG] 28-02-2024 12:54:13.785 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@60deefed
[DEBUG] 28-02-2024 12:54:13.785 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@49754e74
[DEBUG] 28-02-2024 12:54:13.786 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@49754e74
[DEBUG] 28-02-2024 12:54:13.786 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@31881aa2
[DEBUG] 28-02-2024 12:54:13.787 [main] BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@31881aa2
[DEBUG] 28-02-2024 12:54:13.787 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@31881aa2
[DEBUG] 28-02-2024 12:54:13.787 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@1b46392c
[DEBUG] 28-02-2024 12:54:13.788 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@1b46392c
[DEBUG] 28-02-2024 12:54:13.788 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@cf01c2e
[DEBUG] 28-02-2024 12:54:13.789 [main] BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@cf01c2e
[DEBUG] 28-02-2024 12:54:13.789 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@6f15f52a
[DEBUG] 28-02-2024 12:54:13.789 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@6f15f52a
[DEBUG] 28-02-2024 12:54:13.790 [main] BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@1eb9bf60
[DEBUG] 28-02-2024 12:54:13.790 [main] BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@1eb9bf60
[DEBUG] 28-02-2024 12:54:13.790 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@341c6ac2
[DEBUG] 28-02-2024 12:54:13.791 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@341c6ac2
[DEBUG] 28-02-2024 12:54:13.791 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@38811103
[DEBUG] 28-02-2024 12:54:13.805 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@7d25913
[DEBUG] 28-02-2024 12:54:13.805 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@7d25913
[DEBUG] 28-02-2024 12:54:13.808 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@5d14e99e
[DEBUG] 28-02-2024 12:54:13.809 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@38cfecf3
[DEBUG] 28-02-2024 12:54:13.809 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@682618e5
[DEBUG] 28-02-2024 12:54:13.810 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@25ad25f5
[DEBUG] 28-02-2024 12:54:13.810 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@5f0f70c7
[DEBUG] 28-02-2024 12:54:13.810 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@1860a7a1
[DEBUG] 28-02-2024 12:54:13.811 [main] BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@40d96578
[DEBUG] 28-02-2024 12:54:13.811 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@c97721b
[DEBUG] 28-02-2024 12:54:13.811 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@283ab206
[DEBUG] 28-02-2024 12:54:15.258 [main] DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@57bdceaa) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@52909a97)
[DEBUG] 28-02-2024 12:54:15.264 [main] JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
[DEBUG] 28-02-2024 12:54:15.265 [main] JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 28-02-2024 12:54:15.286 [main] BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@79d4ff58
[DEBUG] 28-02-2024 12:54:15.286 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@79d4ff58
[DEBUG] 28-02-2024 12:54:15.287 [main] BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@7d25913`
[DEBUG] 28-02-2024 12:54:15.289 [main] JdbcTypeRegistry - addDescriptor(3100, NumericTypeDescriptor) replaced previous registration(org.hibernate.dialect.PostgreSQLIntervalSecondJdbcType@70f4abc1)
[DEBUG] 28-02-2024 12:54:15.304 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 28-02-2024 12:54:15.305 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 28-02-2024 12:54:15.305 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 28-02-2024 12:54:15.306 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 28-02-2024 12:54:15.306 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 28-02-2024 12:54:15.306 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 28-02-2024 12:54:15.308 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 28-02-2024 12:54:15.309 [main] BasicTypeRegistry - Adding type registration OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 28-02-2024 12:54:15.309 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 28-02-2024 12:54:15.315 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@194911c1] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@4751cd3]
[INFO ] 28-02-2024 12:54:16.088 [main] BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
[INFO ] 28-02-2024 12:54:19.249 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 28-02-2024 12:54:19.250 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@194911c1] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@30e15628]
[TRACE] 28-02-2024 12:54:19.256 [main] TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@30e15628] for TypeConfiguration
[WARN ] 28-02-2024 12:54:19.677 [main] JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[INFO ] 28-02-2024 12:54:21.054 [main] Http11NioProtocol - Starting ProtocolHandler ["http-nio-8300"]
[INFO ] 28-02-2024 12:54:21.112 [main] TomcatWebServer - Tomcat started on port(s): 8300 (http) with context path '/users_products_api'
[INFO ] 28-02-2024 12:54:21.145 [main] TestSpringBootApplication - Started TestSpringBootApplication in 16.062 seconds (process running for 21.726)
[TRACE] 28-02-2024 13:06:46.372 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@30e15628] for TypeConfiguration
[DEBUG] 28-02-2024 13:06:46.373 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@6715ee04] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@30e15628]
[INFO ] 28-02-2024 13:06:56.970 [background-preinit] Version - HV000001: Hibernate Validator 8.0.1.Final
[INFO ] 28-02-2024 13:06:57.063 [main] TestSpringBootApplication - Starting TestSpringBootApplication using Java 17.0.10 with PID 1376672 (/home/dima/backend_microservice/UserProductsMicroService/target/classes started by dima in /home/dima/backend_microservice/UserProductsMicroService)
[INFO ] 28-02-2024 13:06:57.079 [main] TestSpringBootApplication - No active profile set, falling back to 1 default profile: "default"
[INFO ] 28-02-2024 13:06:58.891 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO ] 28-02-2024 13:06:59.362 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 444 ms. Found 1 JPA repository interfaces.
[ERROR] 28-02-2024 13:07:01.420 [main] AprLifecycleListener - An incompatible version [1.2.23] of the Apache Tomcat Native library is installed, while Tomcat requires version [1.2.34]
[INFO ] 28-02-2024 13:07:02.520 [main] TomcatWebServer - Tomcat initialized with port(s): 8300 (http)
[INFO ] 28-02-2024 13:07:02.547 [main] Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8300"]
[INFO ] 28-02-2024 13:07:02.559 [main] StandardService - Starting service [Tomcat]
[INFO ] 28-02-2024 13:07:02.562 [main] StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.11]
[INFO ] 28-02-2024 13:07:04.264 [main] TldScanner - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
[INFO ] 28-02-2024 13:07:04.332 [main] [/users_products_api] - Initializing Spring embedded WebApplicationContext
[INFO ] 28-02-2024 13:07:04.345 [main] ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 7085 ms
[INFO ] 28-02-2024 13:07:05.349 [main] Version - HHH000412: Hibernate ORM core version 6.2.6.Final
[INFO ] 28-02-2024 13:07:05.356 [main] Environment - HHH000406: Using bytecode reflection optimizer
[DEBUG] 28-02-2024 13:07:05.787 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@44faa4f2
[DEBUG] 28-02-2024 13:07:05.788 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@44faa4f2
[DEBUG] 28-02-2024 13:07:05.788 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@44faa4f2
[DEBUG] 28-02-2024 13:07:05.789 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@6793f752
[DEBUG] 28-02-2024 13:07:05.789 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@6793f752
[DEBUG] 28-02-2024 13:07:05.790 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@1216eb3f
[DEBUG] 28-02-2024 13:07:05.792 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@1216eb3f
[DEBUG] 28-02-2024 13:07:05.793 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@59e7564b
[DEBUG] 28-02-2024 13:07:05.794 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@59e7564b
[DEBUG] 28-02-2024 13:07:05.795 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@482ba4b1
[DEBUG] 28-02-2024 13:07:05.795 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@482ba4b1
[DEBUG] 28-02-2024 13:07:05.796 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@482ba4b1
[DEBUG] 28-02-2024 13:07:05.796 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@307af381
[DEBUG] 28-02-2024 13:07:05.797 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@307af381
[DEBUG] 28-02-2024 13:07:05.798 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@307af381
[DEBUG] 28-02-2024 13:07:05.798 [main] BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@1510b9a2
[DEBUG] 28-02-2024 13:07:05.798 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@1510b9a2
[DEBUG] 28-02-2024 13:07:05.799 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@76a6f045
[DEBUG] 28-02-2024 13:07:05.799 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@633ddc0c
[DEBUG] 28-02-2024 13:07:05.800 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@633ddc0c
[DEBUG] 28-02-2024 13:07:05.801 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@4bcdd11
[DEBUG] 28-02-2024 13:07:05.802 [main] BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@1471b98d
[DEBUG] 28-02-2024 13:07:05.802 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@5514579e
[DEBUG] 28-02-2024 13:07:05.803 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@5514579e
[DEBUG] 28-02-2024 13:07:05.803 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@5514579e
[DEBUG] 28-02-2024 13:07:05.804 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@58c42c8c
[DEBUG] 28-02-2024 13:07:05.804 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@58c42c8c
[DEBUG] 28-02-2024 13:07:05.805 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@58c42c8c
[DEBUG] 28-02-2024 13:07:05.805 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@3af236d0
[DEBUG] 28-02-2024 13:07:05.806 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@3af236d0
[DEBUG] 28-02-2024 13:07:05.806 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@3af236d0
[DEBUG] 28-02-2024 13:07:05.806 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@23564dd2
[DEBUG] 28-02-2024 13:07:05.807 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@23564dd2
[DEBUG] 28-02-2024 13:07:05.807 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@23564dd2
[DEBUG] 28-02-2024 13:07:05.808 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@54895681
[DEBUG] 28-02-2024 13:07:05.808 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@54895681
[DEBUG] 28-02-2024 13:07:05.809 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@54895681
[DEBUG] 28-02-2024 13:07:05.809 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@2dd0a0d0
[DEBUG] 28-02-2024 13:07:05.810 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@2dd0a0d0
[DEBUG] 28-02-2024 13:07:05.810 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@6bf570c
[DEBUG] 28-02-2024 13:07:05.811 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@6bf570c
[DEBUG] 28-02-2024 13:07:05.811 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@1796b2d4
[DEBUG] 28-02-2024 13:07:05.812 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@1796b2d4
[DEBUG] 28-02-2024 13:07:05.812 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@1796b2d4
[DEBUG] 28-02-2024 13:07:05.812 [main] BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@935d3f9
[DEBUG] 28-02-2024 13:07:05.813 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@214b342f
[DEBUG] 28-02-2024 13:07:05.813 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@214b342f
[DEBUG] 28-02-2024 13:07:05.814 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@5db0003d
[DEBUG] 28-02-2024 13:07:05.814 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@7f12094d
[DEBUG] 28-02-2024 13:07:05.815 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@7f12094d
[DEBUG] 28-02-2024 13:07:05.815 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@7f12094d
[DEBUG] 28-02-2024 13:07:05.815 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@589fb74d
[DEBUG] 28-02-2024 13:07:05.816 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@200d1a3d
[DEBUG] 28-02-2024 13:07:05.816 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@7de147e9
[DEBUG] 28-02-2024 13:07:05.817 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@12567179
[DEBUG] 28-02-2024 13:07:05.817 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@12567179
[DEBUG] 28-02-2024 13:07:05.817 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@37d699a1
[DEBUG] 28-02-2024 13:07:05.818 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@37d699a1
[DEBUG] 28-02-2024 13:07:05.818 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@7f42b194
[DEBUG] 28-02-2024 13:07:05.818 [main] BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@8eb6f9a
[DEBUG] 28-02-2024 13:07:05.819 [main] BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@29170a47
[DEBUG] 28-02-2024 13:07:05.819 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@2a8f8555
[DEBUG] 28-02-2024 13:07:05.819 [main] BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@402b4f81
[DEBUG] 28-02-2024 13:07:05.820 [main] BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@13ef7fa1
[DEBUG] 28-02-2024 13:07:05.821 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@23b1aa9
[DEBUG] 28-02-2024 13:07:05.821 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@23b1aa9
[DEBUG] 28-02-2024 13:07:05.821 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@54489296
[DEBUG] 28-02-2024 13:07:05.822 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@54489296
[DEBUG] 28-02-2024 13:07:05.823 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@4e8598d9
[DEBUG] 28-02-2024 13:07:05.823 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@4e8598d9
[DEBUG] 28-02-2024 13:07:05.824 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@267ff4df
[DEBUG] 28-02-2024 13:07:05.824 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@267ff4df
[DEBUG] 28-02-2024 13:07:05.824 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@7c4b5ceb
[DEBUG] 28-02-2024 13:07:05.824 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@7c4b5ceb
[DEBUG] 28-02-2024 13:07:05.825 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@6c07add6
[DEBUG] 28-02-2024 13:07:05.825 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@e26a3df
[DEBUG] 28-02-2024 13:07:05.825 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@57a667c8
[DEBUG] 28-02-2024 13:07:05.826 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@57a667c8
[DEBUG] 28-02-2024 13:07:05.826 [main] BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@712cd5d3
[DEBUG] 28-02-2024 13:07:05.826 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2094bf3d
[DEBUG] 28-02-2024 13:07:05.827 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@1b17d8ab
[DEBUG] 28-02-2024 13:07:05.827 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@7f6b7426
[DEBUG] 28-02-2024 13:07:05.830 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@7f6b7426
[DEBUG] 28-02-2024 13:07:05.830 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@687eb455
[DEBUG] 28-02-2024 13:07:05.831 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@6d969330
[DEBUG] 28-02-2024 13:07:05.831 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@4861cca9
[DEBUG] 28-02-2024 13:07:05.831 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@4861cca9
[DEBUG] 28-02-2024 13:07:05.832 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@6c8f4bc7
[DEBUG] 28-02-2024 13:07:05.832 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@6c8f4bc7
[DEBUG] 28-02-2024 13:07:05.832 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@714e861f
[DEBUG] 28-02-2024 13:07:05.833 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@714e861f
[DEBUG] 28-02-2024 13:07:05.833 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@714e861f
[DEBUG] 28-02-2024 13:07:05.834 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@28989415
[DEBUG] 28-02-2024 13:07:05.834 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@28989415
[DEBUG] 28-02-2024 13:07:05.834 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@28989415
[DEBUG] 28-02-2024 13:07:05.834 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@6eda012b
[DEBUG] 28-02-2024 13:07:05.835 [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@781dbe44
[DEBUG] 28-02-2024 13:07:05.835 [main] BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@7d66a126
[DEBUG] 28-02-2024 13:07:05.836 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@7d66a126
[DEBUG] 28-02-2024 13:07:05.836 [main] BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@1132baa3
[DEBUG] 28-02-2024 13:07:05.836 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@1132baa3
[DEBUG] 28-02-2024 13:07:05.836 [main] BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@1132baa3
[DEBUG] 28-02-2024 13:07:05.837 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@2fdf22f7
[DEBUG] 28-02-2024 13:07:05.837 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@3a2546d6
[DEBUG] 28-02-2024 13:07:05.837 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@7282af25
[DEBUG] 28-02-2024 13:07:05.838 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@7282af25
[DEBUG] 28-02-2024 13:07:05.838 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@7661e474
[DEBUG] 28-02-2024 13:07:05.839 [main] BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@7661e474
[DEBUG] 28-02-2024 13:07:05.839 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@7661e474
[DEBUG] 28-02-2024 13:07:05.840 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@20ffb8d5
[DEBUG] 28-02-2024 13:07:05.840 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@20ffb8d5
[DEBUG] 28-02-2024 13:07:05.840 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@307c59ea
[DEBUG] 28-02-2024 13:07:05.841 [main] BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@307c59ea
[DEBUG] 28-02-2024 13:07:05.841 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@57e03347
[DEBUG] 28-02-2024 13:07:05.842 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@57e03347
[DEBUG] 28-02-2024 13:07:05.842 [main] BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@2edb2f8b
[DEBUG] 28-02-2024 13:07:05.842 [main] BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@2edb2f8b
[DEBUG] 28-02-2024 13:07:05.843 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@733f1395
[DEBUG] 28-02-2024 13:07:05.843 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@733f1395
[DEBUG] 28-02-2024 13:07:05.843 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@21dea711
[DEBUG] 28-02-2024 13:07:05.859 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@374c3975
[DEBUG] 28-02-2024 13:07:05.859 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@374c3975
[DEBUG] 28-02-2024 13:07:05.862 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@24691c5
[DEBUG] 28-02-2024 13:07:05.863 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@7b91d9f
[DEBUG] 28-02-2024 13:07:05.864 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@6537ac
[DEBUG] 28-02-2024 13:07:05.864 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@3b218c74
[DEBUG] 28-02-2024 13:07:05.864 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@ddffa6c
[DEBUG] 28-02-2024 13:07:05.865 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@42c54bad
[DEBUG] 28-02-2024 13:07:05.865 [main] BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@6bb4cc0e
[DEBUG] 28-02-2024 13:07:05.865 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@5cc1bf20
[DEBUG] 28-02-2024 13:07:05.866 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@2e3f324e
[DEBUG] 28-02-2024 13:07:07.263 [main] DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6caa4dc5) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6ed51944)
[DEBUG] 28-02-2024 13:07:07.268 [main] JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
[DEBUG] 28-02-2024 13:07:07.269 [main] JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 28-02-2024 13:07:07.291 [main] BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@5f3f3d00
[DEBUG] 28-02-2024 13:07:07.291 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@5f3f3d00
[DEBUG] 28-02-2024 13:07:07.292 [main] BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@374c3975`
[DEBUG] 28-02-2024 13:07:07.295 [main] JdbcTypeRegistry - addDescriptor(3100, NumericTypeDescriptor) replaced previous registration(org.hibernate.dialect.PostgreSQLIntervalSecondJdbcType@75cacb3e)
[DEBUG] 28-02-2024 13:07:07.310 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 28-02-2024 13:07:07.311 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 28-02-2024 13:07:07.311 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 28-02-2024 13:07:07.312 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 28-02-2024 13:07:07.312 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 28-02-2024 13:07:07.312 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 28-02-2024 13:07:07.314 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 28-02-2024 13:07:07.315 [main] BasicTypeRegistry - Adding type registration OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 28-02-2024 13:07:07.315 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 28-02-2024 13:07:07.319 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@778c2e7c] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@b70fa38]
[INFO ] 28-02-2024 13:07:08.077 [main] BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
[INFO ] 28-02-2024 13:07:10.715 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 28-02-2024 13:07:10.717 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@778c2e7c] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@4440750]
[TRACE] 28-02-2024 13:07:10.728 [main] TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@4440750] for TypeConfiguration
[WARN ] 28-02-2024 13:07:11.891 [main] JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[INFO ] 28-02-2024 13:07:13.010 [main] Http11NioProtocol - Starting ProtocolHandler ["http-nio-8300"]
[INFO ] 28-02-2024 13:07:13.085 [main] TomcatWebServer - Tomcat started on port(s): 8300 (http) with context path '/users_products_api'
[INFO ] 28-02-2024 13:07:13.123 [main] TestSpringBootApplication - Started TestSpringBootApplication in 17.203 seconds (process running for 20.664)
[INFO ] 28-02-2024 13:12:14.597 [http-nio-8300-exec-1] [/users_products_api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[INFO ] 28-02-2024 13:12:14.599 [http-nio-8300-exec-1] DispatcherServlet - Initializing Servlet 'dispatcherServlet'
[INFO ] 28-02-2024 13:12:14.603 [http-nio-8300-exec-1] DispatcherServlet - Completed initialization in 3 ms
[DEBUG] 28-02-2024 13:12:15.072 [http-nio-8300-exec-1] SQL - select e1_0.id,e1_0.email,e1_0.login,e1_0.name,e1_0.password from users e1_0 where e1_0.id=?
[WARN ] 28-02-2024 13:12:15.118 [http-nio-8300-exec-1] SqlExceptionHelper - SQL Error: 0, SQLState: 42703
[ERROR] 28-02-2024 13:12:15.118 [http-nio-8300-exec-1] SqlExceptionHelper - ERROR: column e1_0.name does not exist
  Позиция: 38
[INFO ] 28-02-2024 13:12:15.129 [http-nio-8300-exec-1] DefaultLoadEventListener - HHH000327: Error performing load command
org.hibernate.exception.SQLGrammarException: JDBC exception executing SQL [select e1_0.id,e1_0.email,e1_0.login,e1_0.name,e1_0.password from users e1_0 where e1_0.id=?] [ERROR: column e1_0.name does not exist
  Позиция: 38] [n/a]
	at org.hibernate.exception.internal.SQLStateConversionDelegate.convert(SQLStateConversionDelegate.java:89) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:56) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:108) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:94) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.executeQuery(DeferredResultSetAccess.java:257) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.getResultSet(DeferredResultSetAccess.java:163) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.sql.results.jdbc.internal.JdbcValuesResultSetImpl.advanceNext(JdbcValuesResultSetImpl.java:254) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.sql.results.jdbc.internal.JdbcValuesResultSetImpl.processNext(JdbcValuesResultSetImpl.java:134) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.sql.results.jdbc.internal.AbstractJdbcValues.next(AbstractJdbcValues.java:19) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.sql.results.internal.RowProcessingStateStandardImpl.next(RowProcessingStateStandardImpl.java:66) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.sql.results.spi.ListResultsConsumer.consume(ListResultsConsumer.java:178) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.sql.results.spi.ListResultsConsumer.consume(ListResultsConsumer.java:33) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.doExecuteQuery(JdbcSelectExecutorStandardImpl.java:361) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.executeQuery(JdbcSelectExecutorStandardImpl.java:168) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.list(JdbcSelectExecutorStandardImpl.java:93) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:31) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.loader.ast.internal.SingleIdLoadPlan.load(SingleIdLoadPlan.java:146) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.loader.ast.internal.SingleIdLoadPlan.load(SingleIdLoadPlan.java:118) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.loader.ast.internal.SingleIdEntityLoaderStandardImpl.load(SingleIdEntityLoaderStandardImpl.java:73) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.persister.entity.AbstractEntityPersister.doLoad(AbstractEntityPersister.java:3481) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.persister.entity.AbstractEntityPersister.load(AbstractEntityPersister.java:3471) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.event.internal.DefaultLoadEventListener.loadFromDatasource(DefaultLoadEventListener.java:581) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.event.internal.DefaultLoadEventListener.loadFromCacheOrDatasource(DefaultLoadEventListener.java:567) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.event.internal.DefaultLoadEventListener.load(DefaultLoadEventListener.java:536) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.event.internal.DefaultLoadEventListener.doLoad(DefaultLoadEventListener.java:529) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.event.internal.DefaultLoadEventListener.load(DefaultLoadEventListener.java:202) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.event.internal.DefaultLoadEventListener.loadWithRegularProxy(DefaultLoadEventListener.java:282) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.event.internal.DefaultLoadEventListener.proxyOrLoad(DefaultLoadEventListener.java:237) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.event.internal.DefaultLoadEventListener.doOnLoad(DefaultLoadEventListener.java:106) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.event.internal.DefaultLoadEventListener.onLoad(DefaultLoadEventListener.java:78) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:138) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.internal.SessionImpl.fireLoadNoChecks(SessionImpl.java:1231) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.internal.SessionImpl.fireLoad(SessionImpl.java:1219) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.loader.internal.IdentifierLoadAccessImpl.doLoad(IdentifierLoadAccessImpl.java:194) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.loader.internal.IdentifierLoadAccessImpl.lambda$load$1(IdentifierLoadAccessImpl.java:160) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.loader.internal.IdentifierLoadAccessImpl.perform(IdentifierLoadAccessImpl.java:107) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.loader.internal.IdentifierLoadAccessImpl.load(IdentifierLoadAccessImpl.java:160) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.internal.SessionImpl.find(SessionImpl.java:2406) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.internal.SessionImpl.find(SessionImpl.java:2377) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:568) ~[?:?]
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:311) ~[spring-orm-6.0.11.jar:6.0.11]
	at jdk.proxy2.$Proxy122.find(Unknown Source) ~[?:?]
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById(SimpleJpaRepository.java:312) ~[spring-data-jpa-3.1.2.jar:3.1.2]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:568) ~[?:?]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:288) ~[spring-data-commons-3.1.2.jar:3.1.2]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:136) [spring-data-commons-3.1.2.jar:3.1.2]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:120) [spring-data-commons-3.1.2.jar:3.1.2]
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:516) [spring-data-commons-3.1.2.jar:3.1.2]
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285) [spring-data-commons-3.1.2.jar:3.1.2]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:628) [spring-data-commons-3.1.2.jar:3.1.2]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) [spring-aop-6.0.11.jar:6.0.11]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:168) [spring-data-commons-3.1.2.jar:3.1.2]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143) [spring-data-commons-3.1.2.jar:3.1.2]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) [spring-aop-6.0.11.jar:6.0.11]
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123) [spring-tx-6.0.11.jar:6.0.11]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:391) [spring-tx-6.0.11.jar:6.0.11]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) [spring-tx-6.0.11.jar:6.0.11]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) [spring-aop-6.0.11.jar:6.0.11]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137) [spring-tx-6.0.11.jar:6.0.11]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) [spring-aop-6.0.11.jar:6.0.11]
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:164) [spring-data-jpa-3.1.2.jar:3.1.2]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) [spring-aop-6.0.11.jar:6.0.11]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97) [spring-aop-6.0.11.jar:6.0.11]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) [spring-aop-6.0.11.jar:6.0.11]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:244) [spring-aop-6.0.11.jar:6.0.11]
	at jdk.proxy2.$Proxy125.findById(Unknown Source) [?:?]
	at DAO.DAOUserProducts.getUser(DAOUserProducts.java:16) [classes/:?]
	at controller.CRUDUserProducts.getUserWithProducts(CRUDUserProducts.java:20) [classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:568) ~[?:?]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205) [spring-web-6.0.11.jar:6.0.11]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150) [spring-web-6.0.11.jar:6.0.11]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) [spring-webmvc-6.0.11.jar:6.0.11]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884) [spring-webmvc-6.0.11.jar:6.0.11]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797) [spring-webmvc-6.0.11.jar:6.0.11]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) [spring-webmvc-6.0.11.jar:6.0.11]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081) [spring-webmvc-6.0.11.jar:6.0.11]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974) [spring-webmvc-6.0.11.jar:6.0.11]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011) [spring-webmvc-6.0.11.jar:6.0.11]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903) [spring-webmvc-6.0.11.jar:6.0.11]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564) [tomcat-embed-core-10.1.11.jar:6.0]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) [spring-webmvc-6.0.11.jar:6.0.11]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) [tomcat-embed-core-10.1.11.jar:6.0]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) [tomcat-embed-websocket-10.1.11.jar:10.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) [spring-web-6.0.11.jar:6.0.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) [spring-web-6.0.11.jar:6.0.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) [spring-web-6.0.11.jar:6.0.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) [spring-web-6.0.11.jar:6.0.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) [spring-web-6.0.11.jar:6.0.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) [spring-web-6.0.11.jar:6.0.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:166) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at java.lang.Thread.run(Thread.java:840) [?:?]
Caused by: org.postgresql.util.PSQLException: ERROR: column e1_0.name does not exist
  Позиция: 38
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2713) ~[postgresql-42.6.0.jar:42.6.0]
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2401) ~[postgresql-42.6.0.jar:42.6.0]
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:368) ~[postgresql-42.6.0.jar:42.6.0]
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:498) ~[postgresql-42.6.0.jar:42.6.0]
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:415) ~[postgresql-42.6.0.jar:42.6.0]
	at org.postgresql.jdbc.PgPreparedStatement.executeWithFlags(PgPreparedStatement.java:190) ~[postgresql-42.6.0.jar:42.6.0]
	at org.postgresql.jdbc.PgPreparedStatement.executeQuery(PgPreparedStatement.java:134) ~[postgresql-42.6.0.jar:42.6.0]
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.executeQuery(DeferredResultSetAccess.java:239) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	... 119 more
[ERROR] 28-02-2024 13:12:15.209 [http-nio-8300-exec-1] [dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [/users_products_api] threw exception [Request processing failed: org.springframework.dao.InvalidDataAccessResourceUsageException: JDBC exception executing SQL [select e1_0.id,e1_0.email,e1_0.login,e1_0.name,e1_0.password from users e1_0 where e1_0.id=?] [ERROR: column e1_0.name does not exist
  Позиция: 38] [n/a]; SQL [n/a]] with root cause
org.postgresql.util.PSQLException: ERROR: column e1_0.name does not exist
  Позиция: 38
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2713) ~[postgresql-42.6.0.jar:42.6.0]
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2401) ~[postgresql-42.6.0.jar:42.6.0]
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:368) ~[postgresql-42.6.0.jar:42.6.0]
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:498) ~[postgresql-42.6.0.jar:42.6.0]
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:415) ~[postgresql-42.6.0.jar:42.6.0]
	at org.postgresql.jdbc.PgPreparedStatement.executeWithFlags(PgPreparedStatement.java:190) ~[postgresql-42.6.0.jar:42.6.0]
	at org.postgresql.jdbc.PgPreparedStatement.executeQuery(PgPreparedStatement.java:134) ~[postgresql-42.6.0.jar:42.6.0]
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.executeQuery(DeferredResultSetAccess.java:239) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.getResultSet(DeferredResultSetAccess.java:163) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.sql.results.jdbc.internal.JdbcValuesResultSetImpl.advanceNext(JdbcValuesResultSetImpl.java:254) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.sql.results.jdbc.internal.JdbcValuesResultSetImpl.processNext(JdbcValuesResultSetImpl.java:134) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.sql.results.jdbc.internal.AbstractJdbcValues.next(AbstractJdbcValues.java:19) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.sql.results.internal.RowProcessingStateStandardImpl.next(RowProcessingStateStandardImpl.java:66) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.sql.results.spi.ListResultsConsumer.consume(ListResultsConsumer.java:178) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.sql.results.spi.ListResultsConsumer.consume(ListResultsConsumer.java:33) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.doExecuteQuery(JdbcSelectExecutorStandardImpl.java:361) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.executeQuery(JdbcSelectExecutorStandardImpl.java:168) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.list(JdbcSelectExecutorStandardImpl.java:93) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:31) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.loader.ast.internal.SingleIdLoadPlan.load(SingleIdLoadPlan.java:146) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.loader.ast.internal.SingleIdLoadPlan.load(SingleIdLoadPlan.java:118) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.loader.ast.internal.SingleIdEntityLoaderStandardImpl.load(SingleIdEntityLoaderStandardImpl.java:73) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.persister.entity.AbstractEntityPersister.doLoad(AbstractEntityPersister.java:3481) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.persister.entity.AbstractEntityPersister.load(AbstractEntityPersister.java:3471) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.event.internal.DefaultLoadEventListener.loadFromDatasource(DefaultLoadEventListener.java:581) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.event.internal.DefaultLoadEventListener.loadFromCacheOrDatasource(DefaultLoadEventListener.java:567) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.event.internal.DefaultLoadEventListener.load(DefaultLoadEventListener.java:536) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.event.internal.DefaultLoadEventListener.doLoad(DefaultLoadEventListener.java:529) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.event.internal.DefaultLoadEventListener.load(DefaultLoadEventListener.java:202) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.event.internal.DefaultLoadEventListener.loadWithRegularProxy(DefaultLoadEventListener.java:282) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.event.internal.DefaultLoadEventListener.proxyOrLoad(DefaultLoadEventListener.java:237) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.event.internal.DefaultLoadEventListener.doOnLoad(DefaultLoadEventListener.java:106) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.event.internal.DefaultLoadEventListener.onLoad(DefaultLoadEventListener.java:78) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:138) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.internal.SessionImpl.fireLoadNoChecks(SessionImpl.java:1231) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.internal.SessionImpl.fireLoad(SessionImpl.java:1219) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.loader.internal.IdentifierLoadAccessImpl.doLoad(IdentifierLoadAccessImpl.java:194) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.loader.internal.IdentifierLoadAccessImpl.lambda$load$1(IdentifierLoadAccessImpl.java:160) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.loader.internal.IdentifierLoadAccessImpl.perform(IdentifierLoadAccessImpl.java:107) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.loader.internal.IdentifierLoadAccessImpl.load(IdentifierLoadAccessImpl.java:160) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.internal.SessionImpl.find(SessionImpl.java:2406) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.internal.SessionImpl.find(SessionImpl.java:2377) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:568) ~[?:?]
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:311) ~[spring-orm-6.0.11.jar:6.0.11]
	at jdk.proxy2.$Proxy122.find(Unknown Source) ~[?:?]
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById(SimpleJpaRepository.java:312) ~[spring-data-jpa-3.1.2.jar:3.1.2]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:568) ~[?:?]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:288) ~[spring-data-commons-3.1.2.jar:3.1.2]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:136) ~[spring-data-commons-3.1.2.jar:3.1.2]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:120) ~[spring-data-commons-3.1.2.jar:3.1.2]
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:516) ~[spring-data-commons-3.1.2.jar:3.1.2]
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285) ~[spring-data-commons-3.1.2.jar:3.1.2]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:628) ~[spring-data-commons-3.1.2.jar:3.1.2]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.0.11.jar:6.0.11]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:168) ~[spring-data-commons-3.1.2.jar:3.1.2]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143) ~[spring-data-commons-3.1.2.jar:3.1.2]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.0.11.jar:6.0.11]
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123) ~[spring-tx-6.0.11.jar:6.0.11]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:391) ~[spring-tx-6.0.11.jar:6.0.11]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.0.11.jar:6.0.11]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.0.11.jar:6.0.11]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137) ~[spring-tx-6.0.11.jar:6.0.11]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.0.11.jar:6.0.11]
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:164) ~[spring-data-jpa-3.1.2.jar:3.1.2]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.0.11.jar:6.0.11]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97) ~[spring-aop-6.0.11.jar:6.0.11]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.0.11.jar:6.0.11]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:244) ~[spring-aop-6.0.11.jar:6.0.11]
	at jdk.proxy2.$Proxy125.findById(Unknown Source) ~[?:?]
	at DAO.DAOUserProducts.getUser(DAOUserProducts.java:16) ~[classes/:?]
	at controller.CRUDUserProducts.getUserWithProducts(CRUDUserProducts.java:20) ~[classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:568) ~[?:?]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205) ~[spring-web-6.0.11.jar:6.0.11]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150) ~[spring-web-6.0.11.jar:6.0.11]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.0.11.jar:6.0.11]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884) ~[spring-webmvc-6.0.11.jar:6.0.11]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797) ~[spring-webmvc-6.0.11.jar:6.0.11]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.0.11.jar:6.0.11]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081) ~[spring-webmvc-6.0.11.jar:6.0.11]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974) ~[spring-webmvc-6.0.11.jar:6.0.11]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011) ~[spring-webmvc-6.0.11.jar:6.0.11]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903) ~[spring-webmvc-6.0.11.jar:6.0.11]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564) ~[tomcat-embed-core-10.1.11.jar:6.0]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.0.11.jar:6.0.11]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.11.jar:6.0]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205) ~[tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149) ~[tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.11.jar:10.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174) ~[tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149) ~[tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.0.11.jar:6.0.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.0.11.jar:6.0.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174) ~[tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149) ~[tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.0.11.jar:6.0.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.0.11.jar:6.0.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174) ~[tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149) ~[tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.0.11.jar:6.0.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.0.11.jar:6.0.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174) ~[tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149) ~[tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:166) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at java.lang.Thread.run(Thread.java:840) [?:?]
[DEBUG] 28-02-2024 13:24:08.609 [http-nio-8300-exec-2] SQL - select e1_0.id,e1_0.email,e1_0.login,e1_0.name,e1_0.password from users e1_0 where e1_0.id=?
[TRACE] 28-02-2024 13:25:10.544 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@4440750] for TypeConfiguration
[DEBUG] 28-02-2024 13:25:10.546 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@4c2c985a] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@4440750]
[INFO ] 28-02-2024 13:25:22.444 [background-preinit] Version - HV000001: Hibernate Validator 8.0.1.Final
[INFO ] 28-02-2024 13:25:22.578 [main] TestSpringBootApplication - Starting TestSpringBootApplication using Java 17.0.10 with PID 1386912 (/home/dima/backend_microservice/UserProductsMicroService/target/classes started by dima in /home/dima/backend_microservice/UserProductsMicroService)
[INFO ] 28-02-2024 13:25:22.602 [main] TestSpringBootApplication - No active profile set, falling back to 1 default profile: "default"
[INFO ] 28-02-2024 13:25:24.406 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO ] 28-02-2024 13:25:25.200 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 768 ms. Found 1 JPA repository interfaces.
[ERROR] 28-02-2024 13:25:26.708 [main] AprLifecycleListener - An incompatible version [1.2.23] of the Apache Tomcat Native library is installed, while Tomcat requires version [1.2.34]
[INFO ] 28-02-2024 13:25:27.514 [main] TomcatWebServer - Tomcat initialized with port(s): 8300 (http)
[INFO ] 28-02-2024 13:25:27.536 [main] Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8300"]
[INFO ] 28-02-2024 13:25:27.543 [main] StandardService - Starting service [Tomcat]
[INFO ] 28-02-2024 13:25:27.544 [main] StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.11]
[INFO ] 28-02-2024 13:25:28.807 [main] TldScanner - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
[INFO ] 28-02-2024 13:25:28.828 [main] [/users_products_api] - Initializing Spring embedded WebApplicationContext
[INFO ] 28-02-2024 13:25:28.832 [main] ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 6030 ms
[INFO ] 28-02-2024 13:25:29.272 [main] Version - HHH000412: Hibernate ORM core version 6.2.6.Final
[INFO ] 28-02-2024 13:25:29.280 [main] Environment - HHH000406: Using bytecode reflection optimizer
[DEBUG] 28-02-2024 13:25:29.703 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@44faa4f2
[DEBUG] 28-02-2024 13:25:29.704 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@44faa4f2
[DEBUG] 28-02-2024 13:25:29.705 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@44faa4f2
[DEBUG] 28-02-2024 13:25:29.705 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@6793f752
[DEBUG] 28-02-2024 13:25:29.706 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@6793f752
[DEBUG] 28-02-2024 13:25:29.707 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@1216eb3f
[DEBUG] 28-02-2024 13:25:29.707 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@1216eb3f
[DEBUG] 28-02-2024 13:25:29.708 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@59e7564b
[DEBUG] 28-02-2024 13:25:29.708 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@59e7564b
[DEBUG] 28-02-2024 13:25:29.708 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@482ba4b1
[DEBUG] 28-02-2024 13:25:29.709 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@482ba4b1
[DEBUG] 28-02-2024 13:25:29.709 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@482ba4b1
[DEBUG] 28-02-2024 13:25:29.710 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@307af381
[DEBUG] 28-02-2024 13:25:29.710 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@307af381
[DEBUG] 28-02-2024 13:25:29.711 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@307af381
[DEBUG] 28-02-2024 13:25:29.712 [main] BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@1510b9a2
[DEBUG] 28-02-2024 13:25:29.712 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@1510b9a2
[DEBUG] 28-02-2024 13:25:29.712 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@76a6f045
[DEBUG] 28-02-2024 13:25:29.713 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@633ddc0c
[DEBUG] 28-02-2024 13:25:29.713 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@633ddc0c
[DEBUG] 28-02-2024 13:25:29.714 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@4bcdd11
[DEBUG] 28-02-2024 13:25:29.714 [main] BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@1471b98d
[DEBUG] 28-02-2024 13:25:29.715 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@5514579e
[DEBUG] 28-02-2024 13:25:29.715 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@5514579e
[DEBUG] 28-02-2024 13:25:29.715 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@5514579e
[DEBUG] 28-02-2024 13:25:29.716 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@58c42c8c
[DEBUG] 28-02-2024 13:25:29.716 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@58c42c8c
[DEBUG] 28-02-2024 13:25:29.717 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@58c42c8c
[DEBUG] 28-02-2024 13:25:29.717 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@3af236d0
[DEBUG] 28-02-2024 13:25:29.717 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@3af236d0
[DEBUG] 28-02-2024 13:25:29.718 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@3af236d0
[DEBUG] 28-02-2024 13:25:29.718 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@23564dd2
[DEBUG] 28-02-2024 13:25:29.719 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@23564dd2
[DEBUG] 28-02-2024 13:25:29.719 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@23564dd2
[DEBUG] 28-02-2024 13:25:29.720 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@54895681
[DEBUG] 28-02-2024 13:25:29.720 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@54895681
[DEBUG] 28-02-2024 13:25:29.721 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@54895681
[DEBUG] 28-02-2024 13:25:29.721 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@2dd0a0d0
[DEBUG] 28-02-2024 13:25:29.721 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@2dd0a0d0
[DEBUG] 28-02-2024 13:25:29.722 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@6bf570c
[DEBUG] 28-02-2024 13:25:29.722 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@6bf570c
[DEBUG] 28-02-2024 13:25:29.723 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@1796b2d4
[DEBUG] 28-02-2024 13:25:29.723 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@1796b2d4
[DEBUG] 28-02-2024 13:25:29.724 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@1796b2d4
[DEBUG] 28-02-2024 13:25:29.724 [main] BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@935d3f9
[DEBUG] 28-02-2024 13:25:29.725 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@214b342f
[DEBUG] 28-02-2024 13:25:29.725 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@214b342f
[DEBUG] 28-02-2024 13:25:29.725 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@5db0003d
[DEBUG] 28-02-2024 13:25:29.726 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@7f12094d
[DEBUG] 28-02-2024 13:25:29.727 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@7f12094d
[DEBUG] 28-02-2024 13:25:29.727 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@7f12094d
[DEBUG] 28-02-2024 13:25:29.728 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@589fb74d
[DEBUG] 28-02-2024 13:25:29.728 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@200d1a3d
[DEBUG] 28-02-2024 13:25:29.728 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@7de147e9
[DEBUG] 28-02-2024 13:25:29.729 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@12567179
[DEBUG] 28-02-2024 13:25:29.729 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@12567179
[DEBUG] 28-02-2024 13:25:29.729 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@37d699a1
[DEBUG] 28-02-2024 13:25:29.730 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@37d699a1
[DEBUG] 28-02-2024 13:25:29.730 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@7f42b194
[DEBUG] 28-02-2024 13:25:29.730 [main] BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@8eb6f9a
[DEBUG] 28-02-2024 13:25:29.731 [main] BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@29170a47
[DEBUG] 28-02-2024 13:25:29.731 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@2a8f8555
[DEBUG] 28-02-2024 13:25:29.731 [main] BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@402b4f81
[DEBUG] 28-02-2024 13:25:29.732 [main] BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@13ef7fa1
[DEBUG] 28-02-2024 13:25:29.732 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@23b1aa9
[DEBUG] 28-02-2024 13:25:29.732 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@23b1aa9
[DEBUG] 28-02-2024 13:25:29.733 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@54489296
[DEBUG] 28-02-2024 13:25:29.734 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@54489296
[DEBUG] 28-02-2024 13:25:29.734 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@4e8598d9
[DEBUG] 28-02-2024 13:25:29.734 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@4e8598d9
[DEBUG] 28-02-2024 13:25:29.734 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@267ff4df
[DEBUG] 28-02-2024 13:25:29.735 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@267ff4df
[DEBUG] 28-02-2024 13:25:29.736 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@7c4b5ceb
[DEBUG] 28-02-2024 13:25:29.736 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@7c4b5ceb
[DEBUG] 28-02-2024 13:25:29.736 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@6c07add6
[DEBUG] 28-02-2024 13:25:29.737 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@e26a3df
[DEBUG] 28-02-2024 13:25:29.737 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@57a667c8
[DEBUG] 28-02-2024 13:25:29.737 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@57a667c8
[DEBUG] 28-02-2024 13:25:29.738 [main] BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@712cd5d3
[DEBUG] 28-02-2024 13:25:29.738 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2094bf3d
[DEBUG] 28-02-2024 13:25:29.738 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@1b17d8ab
[DEBUG] 28-02-2024 13:25:29.739 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@7f6b7426
[DEBUG] 28-02-2024 13:25:29.739 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@7f6b7426
[DEBUG] 28-02-2024 13:25:29.740 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@687eb455
[DEBUG] 28-02-2024 13:25:29.740 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@6d969330
[DEBUG] 28-02-2024 13:25:29.740 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@4861cca9
[DEBUG] 28-02-2024 13:25:29.740 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@4861cca9
[DEBUG] 28-02-2024 13:25:29.741 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@6c8f4bc7
[DEBUG] 28-02-2024 13:25:29.741 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@6c8f4bc7
[DEBUG] 28-02-2024 13:25:29.741 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@714e861f
[DEBUG] 28-02-2024 13:25:29.742 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@714e861f
[DEBUG] 28-02-2024 13:25:29.742 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@714e861f
[DEBUG] 28-02-2024 13:25:29.742 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@28989415
[DEBUG] 28-02-2024 13:25:29.743 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@28989415
[DEBUG] 28-02-2024 13:25:29.743 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@28989415
[DEBUG] 28-02-2024 13:25:29.743 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@6eda012b
[DEBUG] 28-02-2024 13:25:29.744 [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@781dbe44
[DEBUG] 28-02-2024 13:25:29.744 [main] BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@7d66a126
[DEBUG] 28-02-2024 13:25:29.744 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@7d66a126
[DEBUG] 28-02-2024 13:25:29.745 [main] BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@1132baa3
[DEBUG] 28-02-2024 13:25:29.745 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@1132baa3
[DEBUG] 28-02-2024 13:25:29.745 [main] BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@1132baa3
[DEBUG] 28-02-2024 13:25:29.746 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@2fdf22f7
[DEBUG] 28-02-2024 13:25:29.746 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@3a2546d6
[DEBUG] 28-02-2024 13:25:29.746 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@7282af25
[DEBUG] 28-02-2024 13:25:29.746 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@7282af25
[DEBUG] 28-02-2024 13:25:29.747 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@7661e474
[DEBUG] 28-02-2024 13:25:29.747 [main] BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@7661e474
[DEBUG] 28-02-2024 13:25:29.747 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@7661e474
[DEBUG] 28-02-2024 13:25:29.748 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@20ffb8d5
[DEBUG] 28-02-2024 13:25:29.748 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@20ffb8d5
[DEBUG] 28-02-2024 13:25:29.748 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@307c59ea
[DEBUG] 28-02-2024 13:25:29.749 [main] BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@307c59ea
[DEBUG] 28-02-2024 13:25:29.749 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@57e03347
[DEBUG] 28-02-2024 13:25:29.750 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@57e03347
[DEBUG] 28-02-2024 13:25:29.750 [main] BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@2edb2f8b
[DEBUG] 28-02-2024 13:25:29.750 [main] BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@2edb2f8b
[DEBUG] 28-02-2024 13:25:29.751 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@733f1395
[DEBUG] 28-02-2024 13:25:29.751 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@733f1395
[DEBUG] 28-02-2024 13:25:29.751 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@21dea711
[DEBUG] 28-02-2024 13:25:29.772 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@374c3975
[DEBUG] 28-02-2024 13:25:29.773 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@374c3975
[DEBUG] 28-02-2024 13:25:29.776 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@24691c5
[DEBUG] 28-02-2024 13:25:29.777 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@7b91d9f
[DEBUG] 28-02-2024 13:25:29.777 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@6537ac
[DEBUG] 28-02-2024 13:25:29.777 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@3b218c74
[DEBUG] 28-02-2024 13:25:29.778 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@ddffa6c
[DEBUG] 28-02-2024 13:25:29.778 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@42c54bad
[DEBUG] 28-02-2024 13:25:29.778 [main] BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@6bb4cc0e
[DEBUG] 28-02-2024 13:25:29.778 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@5cc1bf20
[DEBUG] 28-02-2024 13:25:29.779 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@2e3f324e
[DEBUG] 28-02-2024 13:25:31.288 [main] DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@145a821d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6caa4dc5)
[DEBUG] 28-02-2024 13:25:31.293 [main] JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
[DEBUG] 28-02-2024 13:25:31.294 [main] JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 28-02-2024 13:25:31.314 [main] BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@740c4868
[DEBUG] 28-02-2024 13:25:31.314 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@740c4868
[DEBUG] 28-02-2024 13:25:31.315 [main] BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@374c3975`
[DEBUG] 28-02-2024 13:25:31.317 [main] JdbcTypeRegistry - addDescriptor(3100, NumericTypeDescriptor) replaced previous registration(org.hibernate.dialect.PostgreSQLIntervalSecondJdbcType@1fc1c7e)
[DEBUG] 28-02-2024 13:25:31.333 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 28-02-2024 13:25:31.334 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 28-02-2024 13:25:31.334 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 28-02-2024 13:25:31.335 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 28-02-2024 13:25:31.335 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 28-02-2024 13:25:31.335 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 28-02-2024 13:25:31.337 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 28-02-2024 13:25:31.337 [main] BasicTypeRegistry - Adding type registration OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 28-02-2024 13:25:31.338 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 28-02-2024 13:25:31.340 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6a4a2090] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@778c2e7c]
[INFO ] 28-02-2024 13:25:32.179 [main] BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
[INFO ] 28-02-2024 13:25:34.972 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 28-02-2024 13:25:34.974 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6a4a2090] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@377cbdae]
[TRACE] 28-02-2024 13:25:34.980 [main] TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@377cbdae] for TypeConfiguration
[WARN ] 28-02-2024 13:25:36.528 [main] JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[INFO ] 28-02-2024 13:25:37.704 [main] Http11NioProtocol - Starting ProtocolHandler ["http-nio-8300"]
[INFO ] 28-02-2024 13:25:37.763 [main] TomcatWebServer - Tomcat started on port(s): 8300 (http) with context path '/users_products_api'
[INFO ] 28-02-2024 13:25:37.797 [main] TestSpringBootApplication - Started TestSpringBootApplication in 16.392 seconds (process running for 19.364)
[INFO ] 28-02-2024 13:25:40.935 [http-nio-8300-exec-1] [/users_products_api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[INFO ] 28-02-2024 13:25:40.936 [http-nio-8300-exec-1] DispatcherServlet - Initializing Servlet 'dispatcherServlet'
[INFO ] 28-02-2024 13:25:40.940 [http-nio-8300-exec-1] DispatcherServlet - Completed initialization in 2 ms
[DEBUG] 28-02-2024 13:25:41.253 [http-nio-8300-exec-1] SQL - select e1_0.id,e1_0.email,e1_0.login,e1_0.name,e1_0.password from users e1_0 where e1_0.id=?
[DEBUG] 28-02-2024 13:25:41.550 [http-nio-8300-exec-1] SQL - select p1_0.id_user,p1_0.id,p1_0.name,p1_0.page_image,p1_0.price,p1_0.raiting,p1_0.year_issue from products p1_0 where p1_0.id_user=?
[WARN ] 28-02-2024 13:25:41.720 [http-nio-8300-exec-1] DefaultHandlerExceptionResolver - Failure while trying to resolve exception [org.springframework.http.converter.HttpMessageNotWritableException]
java.lang.IllegalStateException: Cannot call sendError() after the response has been committed
	at org.apache.catalina.connector.ResponseFacade.checkCommitted(ResponseFacade.java:503) ~[tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.catalina.connector.ResponseFacade.sendError(ResponseFacade.java:347) ~[tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver.sendServerError(DefaultHandlerExceptionResolver.java:581) ~[spring-webmvc-6.0.11.jar:6.0.11]
	at org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver.handleHttpMessageNotWritable(DefaultHandlerExceptionResolver.java:548) ~[spring-webmvc-6.0.11.jar:6.0.11]
	at org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver.doResolveException(DefaultHandlerExceptionResolver.java:221) [spring-webmvc-6.0.11.jar:6.0.11]
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:141) [spring-webmvc-6.0.11.jar:6.0.11]
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:80) [spring-webmvc-6.0.11.jar:6.0.11]
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1341) [spring-webmvc-6.0.11.jar:6.0.11]
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1152) [spring-webmvc-6.0.11.jar:6.0.11]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1098) [spring-webmvc-6.0.11.jar:6.0.11]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974) [spring-webmvc-6.0.11.jar:6.0.11]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011) [spring-webmvc-6.0.11.jar:6.0.11]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903) [spring-webmvc-6.0.11.jar:6.0.11]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564) [tomcat-embed-core-10.1.11.jar:6.0]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) [spring-webmvc-6.0.11.jar:6.0.11]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) [tomcat-embed-core-10.1.11.jar:6.0]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) [tomcat-embed-websocket-10.1.11.jar:10.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) [spring-web-6.0.11.jar:6.0.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) [spring-web-6.0.11.jar:6.0.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) [spring-web-6.0.11.jar:6.0.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) [spring-web-6.0.11.jar:6.0.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) [spring-web-6.0.11.jar:6.0.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) [spring-web-6.0.11.jar:6.0.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:166) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at java.lang.Thread.run(Thread.java:840) [?:?]
[ERROR] 28-02-2024 13:25:41.740 [http-nio-8300-exec-1] [dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [/users_products_api] threw exception [Request processing failed: org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Infinite recursion (StackOverflowError)] with root cause
java.lang.StackOverflowError: null
	at java.lang.ClassLoader.defineClass1(Native Method) ~[?:?]
	at java.lang.ClassLoader.defineClass(ClassLoader.java:1017) ~[?:?]
	at java.security.SecureClassLoader.defineClass(SecureClassLoader.java:150) ~[?:?]
	at jdk.internal.loader.BuiltinClassLoader.defineClass(BuiltinClassLoader.java:862) ~[?:?]
	at jdk.internal.loader.BuiltinClassLoader.findClassOnClassPathOrNull(BuiltinClassLoader.java:760) ~[?:?]
	at jdk.internal.loader.BuiltinClassLoader.loadClassOrNull(BuiltinClassLoader.java:681) ~[?:?]
	at jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:639) ~[?:?]
	at jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188) ~[?:?]
	at java.lang.ClassLoader.loadClass(ClassLoader.java:525) ~[?:?]
	at com.fasterxml.jackson.databind.JsonMappingException.prependPath(JsonMappingException.java:455) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:790) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
[TRACE] 28-02-2024 13:29:04.662 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@377cbdae] for TypeConfiguration
[DEBUG] 28-02-2024 13:29:04.663 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@641834d7] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@377cbdae]
[INFO ] 28-02-2024 13:29:16.568 [background-preinit] Version - HV000001: Hibernate Validator 8.0.1.Final
[INFO ] 28-02-2024 13:29:16.738 [main] TestSpringBootApplication - Starting TestSpringBootApplication using Java 17.0.10 with PID 1388918 (/home/dima/backend_microservice/UserProductsMicroService/target/classes started by dima in /home/dima/backend_microservice/UserProductsMicroService)
[INFO ] 28-02-2024 13:29:16.752 [main] TestSpringBootApplication - No active profile set, falling back to 1 default profile: "default"
[INFO ] 28-02-2024 13:29:18.517 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO ] 28-02-2024 13:29:18.973 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 436 ms. Found 1 JPA repository interfaces.
[ERROR] 28-02-2024 13:29:20.553 [main] AprLifecycleListener - An incompatible version [1.2.23] of the Apache Tomcat Native library is installed, while Tomcat requires version [1.2.34]
[INFO ] 28-02-2024 13:29:21.311 [main] TomcatWebServer - Tomcat initialized with port(s): 8300 (http)
[INFO ] 28-02-2024 13:29:21.333 [main] Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8300"]
[INFO ] 28-02-2024 13:29:21.340 [main] StandardService - Starting service [Tomcat]
[INFO ] 28-02-2024 13:29:21.341 [main] StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.11]
[INFO ] 28-02-2024 13:29:22.475 [main] TldScanner - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
[INFO ] 28-02-2024 13:29:22.494 [main] [/users_products_api] - Initializing Spring embedded WebApplicationContext
[INFO ] 28-02-2024 13:29:22.501 [main] ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 5590 ms
[INFO ] 28-02-2024 13:29:22.961 [main] Version - HHH000412: Hibernate ORM core version 6.2.6.Final
[INFO ] 28-02-2024 13:29:22.968 [main] Environment - HHH000406: Using bytecode reflection optimizer
[DEBUG] 28-02-2024 13:29:23.388 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@7bf018dd
[DEBUG] 28-02-2024 13:29:23.389 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@7bf018dd
[DEBUG] 28-02-2024 13:29:23.391 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@7bf018dd
[DEBUG] 28-02-2024 13:29:23.391 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@15a8cebd
[DEBUG] 28-02-2024 13:29:23.392 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@15a8cebd
[DEBUG] 28-02-2024 13:29:23.393 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@3f6c2763
[DEBUG] 28-02-2024 13:29:23.393 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@3f6c2763
[DEBUG] 28-02-2024 13:29:23.394 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@5c82031b
[DEBUG] 28-02-2024 13:29:23.395 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@5c82031b
[DEBUG] 28-02-2024 13:29:23.395 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@274fdea6
[DEBUG] 28-02-2024 13:29:23.396 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@274fdea6
[DEBUG] 28-02-2024 13:29:23.396 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@274fdea6
[DEBUG] 28-02-2024 13:29:23.397 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@74c121d4
[DEBUG] 28-02-2024 13:29:23.397 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@74c121d4
[DEBUG] 28-02-2024 13:29:23.398 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@74c121d4
[DEBUG] 28-02-2024 13:29:23.399 [main] BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@2a484710
[DEBUG] 28-02-2024 13:29:23.399 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@2a484710
[DEBUG] 28-02-2024 13:29:23.399 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@661e1399
[DEBUG] 28-02-2024 13:29:23.400 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@3ffd4b12
[DEBUG] 28-02-2024 13:29:23.401 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@3ffd4b12
[DEBUG] 28-02-2024 13:29:23.401 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@424f02b8
[DEBUG] 28-02-2024 13:29:23.402 [main] BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@2ad7bd26
[DEBUG] 28-02-2024 13:29:23.402 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@3cc3f13e
[DEBUG] 28-02-2024 13:29:23.403 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@3cc3f13e
[DEBUG] 28-02-2024 13:29:23.404 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@3cc3f13e
[DEBUG] 28-02-2024 13:29:23.404 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@69b3886f
[DEBUG] 28-02-2024 13:29:23.405 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@69b3886f
[DEBUG] 28-02-2024 13:29:23.405 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@69b3886f
[DEBUG] 28-02-2024 13:29:23.406 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@53d30d23
[DEBUG] 28-02-2024 13:29:23.408 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@53d30d23
[DEBUG] 28-02-2024 13:29:23.414 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@53d30d23
[DEBUG] 28-02-2024 13:29:23.415 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@44faa4f2
[DEBUG] 28-02-2024 13:29:23.416 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@44faa4f2
[DEBUG] 28-02-2024 13:29:23.416 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@44faa4f2
[DEBUG] 28-02-2024 13:29:23.417 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@6793f752
[DEBUG] 28-02-2024 13:29:23.418 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@6793f752
[DEBUG] 28-02-2024 13:29:23.418 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@6793f752
[DEBUG] 28-02-2024 13:29:23.419 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@1216eb3f
[DEBUG] 28-02-2024 13:29:23.419 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@1216eb3f
[DEBUG] 28-02-2024 13:29:23.420 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@59e7564b
[DEBUG] 28-02-2024 13:29:23.421 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@59e7564b
[DEBUG] 28-02-2024 13:29:23.421 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@482ba4b1
[DEBUG] 28-02-2024 13:29:23.422 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@482ba4b1
[DEBUG] 28-02-2024 13:29:23.422 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@482ba4b1
[DEBUG] 28-02-2024 13:29:23.423 [main] BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@307af381
[DEBUG] 28-02-2024 13:29:23.423 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@1510b9a2
[DEBUG] 28-02-2024 13:29:23.423 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@1510b9a2
[DEBUG] 28-02-2024 13:29:23.424 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@76a6f045
[DEBUG] 28-02-2024 13:29:23.424 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@633ddc0c
[DEBUG] 28-02-2024 13:29:23.425 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@633ddc0c
[DEBUG] 28-02-2024 13:29:23.425 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@633ddc0c
[DEBUG] 28-02-2024 13:29:23.426 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@4bcdd11
[DEBUG] 28-02-2024 13:29:23.426 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@1471b98d
[DEBUG] 28-02-2024 13:29:23.427 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@5514579e
[DEBUG] 28-02-2024 13:29:23.427 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@58c42c8c
[DEBUG] 28-02-2024 13:29:23.427 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@58c42c8c
[DEBUG] 28-02-2024 13:29:23.428 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@3af236d0
[DEBUG] 28-02-2024 13:29:23.429 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@3af236d0
[DEBUG] 28-02-2024 13:29:23.429 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@23564dd2
[DEBUG] 28-02-2024 13:29:23.429 [main] BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@54895681
[DEBUG] 28-02-2024 13:29:23.430 [main] BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@2dd0a0d0
[DEBUG] 28-02-2024 13:29:23.430 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@6bf570c
[DEBUG] 28-02-2024 13:29:23.431 [main] BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@1796b2d4
[DEBUG] 28-02-2024 13:29:23.431 [main] BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@935d3f9
[DEBUG] 28-02-2024 13:29:23.432 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@214b342f
[DEBUG] 28-02-2024 13:29:23.432 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@214b342f
[DEBUG] 28-02-2024 13:29:23.432 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@5db0003d
[DEBUG] 28-02-2024 13:29:23.433 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@5db0003d
[DEBUG] 28-02-2024 13:29:23.433 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@7f12094d
[DEBUG] 28-02-2024 13:29:23.434 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@7f12094d
[DEBUG] 28-02-2024 13:29:23.435 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@589fb74d
[DEBUG] 28-02-2024 13:29:23.435 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@589fb74d
[DEBUG] 28-02-2024 13:29:23.436 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@200d1a3d
[DEBUG] 28-02-2024 13:29:23.436 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@200d1a3d
[DEBUG] 28-02-2024 13:29:23.436 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@7de147e9
[DEBUG] 28-02-2024 13:29:23.437 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@12567179
[DEBUG] 28-02-2024 13:29:23.437 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@37d699a1
[DEBUG] 28-02-2024 13:29:23.437 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@37d699a1
[DEBUG] 28-02-2024 13:29:23.438 [main] BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@7f42b194
[DEBUG] 28-02-2024 13:29:23.438 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@8eb6f9a
[DEBUG] 28-02-2024 13:29:23.439 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@29170a47
[DEBUG] 28-02-2024 13:29:23.439 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@2a8f8555
[DEBUG] 28-02-2024 13:29:23.440 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@2a8f8555
[DEBUG] 28-02-2024 13:29:23.440 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@402b4f81
[DEBUG] 28-02-2024 13:29:23.441 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@13ef7fa1
[DEBUG] 28-02-2024 13:29:23.441 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@23b1aa9
[DEBUG] 28-02-2024 13:29:23.442 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@23b1aa9
[DEBUG] 28-02-2024 13:29:23.442 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@54489296
[DEBUG] 28-02-2024 13:29:23.442 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@54489296
[DEBUG] 28-02-2024 13:29:23.442 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@4e8598d9
[DEBUG] 28-02-2024 13:29:23.443 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@4e8598d9
[DEBUG] 28-02-2024 13:29:23.443 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@4e8598d9
[DEBUG] 28-02-2024 13:29:23.444 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@267ff4df
[DEBUG] 28-02-2024 13:29:23.444 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@267ff4df
[DEBUG] 28-02-2024 13:29:23.445 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@267ff4df
[DEBUG] 28-02-2024 13:29:23.445 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@7c4b5ceb
[DEBUG] 28-02-2024 13:29:23.446 [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@6c07add6
[DEBUG] 28-02-2024 13:29:23.446 [main] BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@e26a3df
[DEBUG] 28-02-2024 13:29:23.447 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@e26a3df
[DEBUG] 28-02-2024 13:29:23.447 [main] BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@57a667c8
[DEBUG] 28-02-2024 13:29:23.448 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@57a667c8
[DEBUG] 28-02-2024 13:29:23.448 [main] BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@57a667c8
[DEBUG] 28-02-2024 13:29:23.448 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@712cd5d3
[DEBUG] 28-02-2024 13:29:23.449 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@2094bf3d
[DEBUG] 28-02-2024 13:29:23.450 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@1b17d8ab
[DEBUG] 28-02-2024 13:29:23.450 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@1b17d8ab
[DEBUG] 28-02-2024 13:29:23.450 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@7f6b7426
[DEBUG] 28-02-2024 13:29:23.451 [main] BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@7f6b7426
[DEBUG] 28-02-2024 13:29:23.451 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@7f6b7426
[DEBUG] 28-02-2024 13:29:23.452 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@687eb455
[DEBUG] 28-02-2024 13:29:23.452 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@687eb455
[DEBUG] 28-02-2024 13:29:23.452 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@6d969330
[DEBUG] 28-02-2024 13:29:23.453 [main] BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@6d969330
[DEBUG] 28-02-2024 13:29:23.453 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@4861cca9
[DEBUG] 28-02-2024 13:29:23.454 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@4861cca9
[DEBUG] 28-02-2024 13:29:23.454 [main] BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@6c8f4bc7
[DEBUG] 28-02-2024 13:29:23.454 [main] BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@6c8f4bc7
[DEBUG] 28-02-2024 13:29:23.455 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@714e861f
[DEBUG] 28-02-2024 13:29:23.455 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@714e861f
[DEBUG] 28-02-2024 13:29:23.456 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@28989415
[DEBUG] 28-02-2024 13:29:23.470 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@350ff014
[DEBUG] 28-02-2024 13:29:23.471 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@350ff014
[DEBUG] 28-02-2024 13:29:23.474 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@504497fa
[DEBUG] 28-02-2024 13:29:23.475 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@5618fc1f
[DEBUG] 28-02-2024 13:29:23.476 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@60b1ff3b
[DEBUG] 28-02-2024 13:29:23.476 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@374c3975
[DEBUG] 28-02-2024 13:29:23.476 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@43c39321
[DEBUG] 28-02-2024 13:29:23.477 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@52aa7742
[DEBUG] 28-02-2024 13:29:23.477 [main] BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@3d0d120b
[DEBUG] 28-02-2024 13:29:23.478 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@6b5c134e
[DEBUG] 28-02-2024 13:29:23.478 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@34d9df9f
[DEBUG] 28-02-2024 13:29:25.269 [main] DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1282f784) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@41167ded)
[DEBUG] 28-02-2024 13:29:25.275 [main] JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
[DEBUG] 28-02-2024 13:29:25.276 [main] JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 28-02-2024 13:29:25.298 [main] BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@4b5798c2
[DEBUG] 28-02-2024 13:29:25.299 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@4b5798c2
[DEBUG] 28-02-2024 13:29:25.299 [main] BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@350ff014`
[DEBUG] 28-02-2024 13:29:25.302 [main] JdbcTypeRegistry - addDescriptor(3100, NumericTypeDescriptor) replaced previous registration(org.hibernate.dialect.PostgreSQLIntervalSecondJdbcType@31ab4859)
[DEBUG] 28-02-2024 13:29:25.317 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 28-02-2024 13:29:25.317 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 28-02-2024 13:29:25.318 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 28-02-2024 13:29:25.318 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 28-02-2024 13:29:25.318 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 28-02-2024 13:29:25.319 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 28-02-2024 13:29:25.323 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 28-02-2024 13:29:25.323 [main] BasicTypeRegistry - Adding type registration OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 28-02-2024 13:29:25.324 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 28-02-2024 13:29:25.328 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3b30eec5] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@43755e2f]
[INFO ] 28-02-2024 13:29:26.089 [main] BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
[INFO ] 28-02-2024 13:29:28.834 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 28-02-2024 13:29:28.835 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3b30eec5] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@638341b0]
[TRACE] 28-02-2024 13:29:28.841 [main] TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@638341b0] for TypeConfiguration
[WARN ] 28-02-2024 13:29:29.662 [main] JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[INFO ] 28-02-2024 13:29:30.636 [main] Http11NioProtocol - Starting ProtocolHandler ["http-nio-8300"]
[INFO ] 28-02-2024 13:29:30.711 [main] TomcatWebServer - Tomcat started on port(s): 8300 (http) with context path '/users_products_api'
[INFO ] 28-02-2024 13:29:30.746 [main] TestSpringBootApplication - Started TestSpringBootApplication in 15.385 seconds (process running for 18.937)
[INFO ] 28-02-2024 13:29:44.328 [http-nio-8300-exec-1] [/users_products_api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[INFO ] 28-02-2024 13:29:44.330 [http-nio-8300-exec-1] DispatcherServlet - Initializing Servlet 'dispatcherServlet'
[INFO ] 28-02-2024 13:29:44.334 [http-nio-8300-exec-1] DispatcherServlet - Completed initialization in 4 ms
[DEBUG] 28-02-2024 13:29:44.605 [http-nio-8300-exec-1] SQL - select e1_0.id,e1_0.email,e1_0.login,e1_0.name,e1_0.password from users e1_0 where e1_0.id=?
[DEBUG] 28-02-2024 13:29:44.987 [http-nio-8300-exec-1] SQL - select p1_0.id_user,p1_0.id,p1_0.name,p1_0.page_image,p1_0.price,p1_0.raiting,p1_0.year_issue from products p1_0 where p1_0.id_user=?
[TRACE] 28-02-2024 13:49:10.543 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@638341b0] for TypeConfiguration
[DEBUG] 28-02-2024 13:49:10.544 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@7d9cee21] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@638341b0]
[INFO ] 28-02-2024 13:49:20.606 [background-preinit] Version - HV000001: Hibernate Validator 8.0.1.Final
[INFO ] 28-02-2024 13:49:20.675 [main] TestSpringBootApplication - Starting TestSpringBootApplication using Java 17.0.10 with PID 1399054 (/home/dima/backend_microservice/UserProductsMicroService/target/classes started by dima in /home/dima/backend_microservice/UserProductsMicroService)
[INFO ] 28-02-2024 13:49:20.686 [main] TestSpringBootApplication - No active profile set, falling back to 1 default profile: "default"
[INFO ] 28-02-2024 13:49:22.442 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO ] 28-02-2024 13:49:22.926 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 457 ms. Found 1 JPA repository interfaces.
[ERROR] 28-02-2024 13:49:24.763 [main] AprLifecycleListener - An incompatible version [1.2.23] of the Apache Tomcat Native library is installed, while Tomcat requires version [1.2.34]
[INFO ] 28-02-2024 13:49:25.843 [main] TomcatWebServer - Tomcat initialized with port(s): 8300 (http)
[INFO ] 28-02-2024 13:49:25.869 [main] Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8300"]
[INFO ] 28-02-2024 13:49:25.880 [main] StandardService - Starting service [Tomcat]
[INFO ] 28-02-2024 13:49:25.883 [main] StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.11]
[INFO ] 28-02-2024 13:49:27.234 [main] TldScanner - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
[INFO ] 28-02-2024 13:49:27.255 [main] [/users_products_api] - Initializing Spring embedded WebApplicationContext
[INFO ] 28-02-2024 13:49:27.260 [main] ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 6384 ms
[INFO ] 28-02-2024 13:49:27.693 [main] Version - HHH000412: Hibernate ORM core version 6.2.6.Final
[INFO ] 28-02-2024 13:49:27.700 [main] Environment - HHH000406: Using bytecode reflection optimizer
[DEBUG] 28-02-2024 13:49:28.093 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@76a6f045
[DEBUG] 28-02-2024 13:49:28.094 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@76a6f045
[DEBUG] 28-02-2024 13:49:28.094 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@76a6f045
[DEBUG] 28-02-2024 13:49:28.095 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@633ddc0c
[DEBUG] 28-02-2024 13:49:28.095 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@633ddc0c
[DEBUG] 28-02-2024 13:49:28.096 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@4bcdd11
[DEBUG] 28-02-2024 13:49:28.096 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@4bcdd11
[DEBUG] 28-02-2024 13:49:28.097 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@1471b98d
[DEBUG] 28-02-2024 13:49:28.097 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@1471b98d
[DEBUG] 28-02-2024 13:49:28.098 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@5514579e
[DEBUG] 28-02-2024 13:49:28.098 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@5514579e
[DEBUG] 28-02-2024 13:49:28.099 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@5514579e
[DEBUG] 28-02-2024 13:49:28.099 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@58c42c8c
[DEBUG] 28-02-2024 13:49:28.100 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@58c42c8c
[DEBUG] 28-02-2024 13:49:28.100 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@58c42c8c
[DEBUG] 28-02-2024 13:49:28.101 [main] BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@3af236d0
[DEBUG] 28-02-2024 13:49:28.101 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@3af236d0
[DEBUG] 28-02-2024 13:49:28.102 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@23564dd2
[DEBUG] 28-02-2024 13:49:28.102 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@54895681
[DEBUG] 28-02-2024 13:49:28.103 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@54895681
[DEBUG] 28-02-2024 13:49:28.103 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@2dd0a0d0
[DEBUG] 28-02-2024 13:49:28.103 [main] BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@6bf570c
[DEBUG] 28-02-2024 13:49:28.104 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@1796b2d4
[DEBUG] 28-02-2024 13:49:28.104 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@1796b2d4
[DEBUG] 28-02-2024 13:49:28.105 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@1796b2d4
[DEBUG] 28-02-2024 13:49:28.105 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@935d3f9
[DEBUG] 28-02-2024 13:49:28.106 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@935d3f9
[DEBUG] 28-02-2024 13:49:28.106 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@935d3f9
[DEBUG] 28-02-2024 13:49:28.107 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@214b342f
[DEBUG] 28-02-2024 13:49:28.107 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@214b342f
[DEBUG] 28-02-2024 13:49:28.108 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@214b342f
[DEBUG] 28-02-2024 13:49:28.108 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@5db0003d
[DEBUG] 28-02-2024 13:49:28.108 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@5db0003d
[DEBUG] 28-02-2024 13:49:28.109 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@5db0003d
[DEBUG] 28-02-2024 13:49:28.109 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@7f12094d
[DEBUG] 28-02-2024 13:49:28.110 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@7f12094d
[DEBUG] 28-02-2024 13:49:28.110 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@7f12094d
[DEBUG] 28-02-2024 13:49:28.111 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@589fb74d
[DEBUG] 28-02-2024 13:49:28.111 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@589fb74d
[DEBUG] 28-02-2024 13:49:28.112 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@200d1a3d
[DEBUG] 28-02-2024 13:49:28.112 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@200d1a3d
[DEBUG] 28-02-2024 13:49:28.113 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@7de147e9
[DEBUG] 28-02-2024 13:49:28.113 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@7de147e9
[DEBUG] 28-02-2024 13:49:28.113 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@7de147e9
[DEBUG] 28-02-2024 13:49:28.114 [main] BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@12567179
[DEBUG] 28-02-2024 13:49:28.114 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@37d699a1
[DEBUG] 28-02-2024 13:49:28.115 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@37d699a1
[DEBUG] 28-02-2024 13:49:28.115 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@7f42b194
[DEBUG] 28-02-2024 13:49:28.115 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@8eb6f9a
[DEBUG] 28-02-2024 13:49:28.116 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@8eb6f9a
[DEBUG] 28-02-2024 13:49:28.116 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@8eb6f9a
[DEBUG] 28-02-2024 13:49:28.117 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@29170a47
[DEBUG] 28-02-2024 13:49:28.117 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@2a8f8555
[DEBUG] 28-02-2024 13:49:28.117 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@402b4f81
[DEBUG] 28-02-2024 13:49:28.118 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@13ef7fa1
[DEBUG] 28-02-2024 13:49:28.118 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@13ef7fa1
[DEBUG] 28-02-2024 13:49:28.118 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@23b1aa9
[DEBUG] 28-02-2024 13:49:28.119 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@23b1aa9
[DEBUG] 28-02-2024 13:49:28.119 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@54489296
[DEBUG] 28-02-2024 13:49:28.119 [main] BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@4e8598d9
[DEBUG] 28-02-2024 13:49:28.120 [main] BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@267ff4df
[DEBUG] 28-02-2024 13:49:28.121 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@7c4b5ceb
[DEBUG] 28-02-2024 13:49:28.121 [main] BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@6c07add6
[DEBUG] 28-02-2024 13:49:28.122 [main] BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@e26a3df
[DEBUG] 28-02-2024 13:49:28.122 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@57a667c8
[DEBUG] 28-02-2024 13:49:28.122 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@57a667c8
[DEBUG] 28-02-2024 13:49:28.123 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@712cd5d3
[DEBUG] 28-02-2024 13:49:28.123 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@712cd5d3
[DEBUG] 28-02-2024 13:49:28.124 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@2094bf3d
[DEBUG] 28-02-2024 13:49:28.124 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@2094bf3d
[DEBUG] 28-02-2024 13:49:28.124 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@1b17d8ab
[DEBUG] 28-02-2024 13:49:28.125 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@1b17d8ab
[DEBUG] 28-02-2024 13:49:28.125 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@7f6b7426
[DEBUG] 28-02-2024 13:49:28.125 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@7f6b7426
[DEBUG] 28-02-2024 13:49:28.126 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@687eb455
[DEBUG] 28-02-2024 13:49:28.126 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@6d969330
[DEBUG] 28-02-2024 13:49:28.126 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@4861cca9
[DEBUG] 28-02-2024 13:49:28.127 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@4861cca9
[DEBUG] 28-02-2024 13:49:28.127 [main] BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@6c8f4bc7
[DEBUG] 28-02-2024 13:49:28.127 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@714e861f
[DEBUG] 28-02-2024 13:49:28.128 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@28989415
[DEBUG] 28-02-2024 13:49:28.128 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@6eda012b
[DEBUG] 28-02-2024 13:49:28.128 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@6eda012b
[DEBUG] 28-02-2024 13:49:28.129 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@781dbe44
[DEBUG] 28-02-2024 13:49:28.129 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@7d66a126
[DEBUG] 28-02-2024 13:49:28.129 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@1132baa3
[DEBUG] 28-02-2024 13:49:28.130 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@1132baa3
[DEBUG] 28-02-2024 13:49:28.130 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@2fdf22f7
[DEBUG] 28-02-2024 13:49:28.130 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@2fdf22f7
[DEBUG] 28-02-2024 13:49:28.131 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@3a2546d6
[DEBUG] 28-02-2024 13:49:28.131 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@3a2546d6
[DEBUG] 28-02-2024 13:49:28.131 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@3a2546d6
[DEBUG] 28-02-2024 13:49:28.132 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@7282af25
[DEBUG] 28-02-2024 13:49:28.132 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@7282af25
[DEBUG] 28-02-2024 13:49:28.132 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@7282af25
[DEBUG] 28-02-2024 13:49:28.133 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@7661e474
[DEBUG] 28-02-2024 13:49:28.133 [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@20ffb8d5
[DEBUG] 28-02-2024 13:49:28.133 [main] BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@307c59ea
[DEBUG] 28-02-2024 13:49:28.134 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@307c59ea
[DEBUG] 28-02-2024 13:49:28.134 [main] BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@57e03347
[DEBUG] 28-02-2024 13:49:28.134 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@57e03347
[DEBUG] 28-02-2024 13:49:28.134 [main] BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@57e03347
[DEBUG] 28-02-2024 13:49:28.135 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@2edb2f8b
[DEBUG] 28-02-2024 13:49:28.135 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@733f1395
[DEBUG] 28-02-2024 13:49:28.136 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@21dea711
[DEBUG] 28-02-2024 13:49:28.136 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@21dea711
[DEBUG] 28-02-2024 13:49:28.136 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@7772d266
[DEBUG] 28-02-2024 13:49:28.137 [main] BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@7772d266
[DEBUG] 28-02-2024 13:49:28.137 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@7772d266
[DEBUG] 28-02-2024 13:49:28.137 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@a21c74
[DEBUG] 28-02-2024 13:49:28.138 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@a21c74
[DEBUG] 28-02-2024 13:49:28.138 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@b8a144e
[DEBUG] 28-02-2024 13:49:28.138 [main] BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@b8a144e
[DEBUG] 28-02-2024 13:49:28.139 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@5fb8dc01
[DEBUG] 28-02-2024 13:49:28.139 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@5fb8dc01
[DEBUG] 28-02-2024 13:49:28.140 [main] BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@3e38c472
[DEBUG] 28-02-2024 13:49:28.140 [main] BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@3e38c472
[DEBUG] 28-02-2024 13:49:28.140 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@2ee92e7d
[DEBUG] 28-02-2024 13:49:28.140 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@2ee92e7d
[DEBUG] 28-02-2024 13:49:28.141 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@759a678a
[DEBUG] 28-02-2024 13:49:28.155 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@60807fd9
[DEBUG] 28-02-2024 13:49:28.156 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@60807fd9
[DEBUG] 28-02-2024 13:49:28.159 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@5cc1bf20
[DEBUG] 28-02-2024 13:49:28.160 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@2e3f324e
[DEBUG] 28-02-2024 13:49:28.160 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@46cf8c07
[DEBUG] 28-02-2024 13:49:28.160 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@b56ec6c
[DEBUG] 28-02-2024 13:49:28.161 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@5abf6a99
[DEBUG] 28-02-2024 13:49:28.161 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@dc59ec2
[DEBUG] 28-02-2024 13:49:28.162 [main] BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@375084c9
[DEBUG] 28-02-2024 13:49:28.162 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@bd93bc3
[DEBUG] 28-02-2024 13:49:28.162 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@2a136383
[DEBUG] 28-02-2024 13:49:29.690 [main] DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@491893f8) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1f408ab6)
[DEBUG] 28-02-2024 13:49:29.695 [main] JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
[DEBUG] 28-02-2024 13:49:29.696 [main] JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 28-02-2024 13:49:29.716 [main] BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@29c59b6e
[DEBUG] 28-02-2024 13:49:29.717 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@29c59b6e
[DEBUG] 28-02-2024 13:49:29.717 [main] BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@60807fd9`
[DEBUG] 28-02-2024 13:49:29.719 [main] JdbcTypeRegistry - addDescriptor(3100, NumericTypeDescriptor) replaced previous registration(org.hibernate.dialect.PostgreSQLIntervalSecondJdbcType@37e55819)
[DEBUG] 28-02-2024 13:49:29.734 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 28-02-2024 13:49:29.734 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 28-02-2024 13:49:29.734 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 28-02-2024 13:49:29.735 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 28-02-2024 13:49:29.735 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 28-02-2024 13:49:29.735 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 28-02-2024 13:49:29.738 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 28-02-2024 13:49:29.738 [main] BasicTypeRegistry - Adding type registration OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 28-02-2024 13:49:29.739 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 28-02-2024 13:49:29.742 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@702096ef] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@5f0d8937]
[INFO ] 28-02-2024 13:49:30.679 [main] BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
[INFO ] 28-02-2024 13:49:33.148 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 28-02-2024 13:49:33.149 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@702096ef] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@2a525f88]
[TRACE] 28-02-2024 13:49:33.157 [main] TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@2a525f88] for TypeConfiguration
[WARN ] 28-02-2024 13:49:34.029 [main] JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[INFO ] 28-02-2024 13:49:35.499 [main] Http11NioProtocol - Starting ProtocolHandler ["http-nio-8300"]
[INFO ] 28-02-2024 13:49:35.559 [main] TomcatWebServer - Tomcat started on port(s): 8300 (http) with context path '/users_products_api'
[INFO ] 28-02-2024 13:49:35.612 [main] TestSpringBootApplication - Started TestSpringBootApplication in 16.073 seconds (process running for 19.174)
[INFO ] 28-02-2024 13:49:40.387 [http-nio-8300-exec-1] [/users_products_api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[INFO ] 28-02-2024 13:49:40.389 [http-nio-8300-exec-1] DispatcherServlet - Initializing Servlet 'dispatcherServlet'
[INFO ] 28-02-2024 13:49:40.394 [http-nio-8300-exec-1] DispatcherServlet - Completed initialization in 4 ms
[DEBUG] 28-02-2024 13:49:40.687 [http-nio-8300-exec-1] SQL - select e1_0.id,e1_0.email,e1_0.login,e1_0.name,e1_0.password,p1_0.id_user,p1_0.id,p1_0.name,p1_0.page_image,p1_0.price,p1_0.raiting,p1_0.year_issue from users e1_0 left join products p1_0 on e1_0.id=p1_0.id_user where e1_0.id=?
[TRACE] 29-02-2024 11:39:30.271 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@2a525f88] for TypeConfiguration
[DEBUG] 29-02-2024 11:39:30.274 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@707d2a7a] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@2a525f88]
[INFO ] 29-02-2024 11:39:57.956 [background-preinit] Version - HV000001: Hibernate Validator 8.0.1.Final
[INFO ] 29-02-2024 11:39:58.096 [main] TestCRUDUserProducts - Starting TestCRUDUserProducts using Java 17.0.10 with PID 1610486 (started by dima in /home/dima/backend_microservice/UserProductsMicroService)
[INFO ] 29-02-2024 11:39:58.109 [main] TestCRUDUserProducts - No active profile set, falling back to 1 default profile: "default"
[INFO ] 29-02-2024 11:39:59.535 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO ] 29-02-2024 11:40:00.048 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 483 ms. Found 1 JPA repository interfaces.
[INFO ] 29-02-2024 11:40:01.504 [main] Version - HHH000412: Hibernate ORM core version 6.2.6.Final
[INFO ] 29-02-2024 11:40:01.517 [main] Environment - HHH000406: Using bytecode reflection optimizer
[DEBUG] 29-02-2024 11:40:02.015 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@e5c2463
[DEBUG] 29-02-2024 11:40:02.016 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@e5c2463
[DEBUG] 29-02-2024 11:40:02.017 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@e5c2463
[DEBUG] 29-02-2024 11:40:02.018 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@6a950a3b
[DEBUG] 29-02-2024 11:40:02.018 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@6a950a3b
[DEBUG] 29-02-2024 11:40:02.019 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@4f7be6c8
[DEBUG] 29-02-2024 11:40:02.020 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@4f7be6c8
[DEBUG] 29-02-2024 11:40:02.020 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@647b9364
[DEBUG] 29-02-2024 11:40:02.021 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@647b9364
[DEBUG] 29-02-2024 11:40:02.022 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@b6bccb4
[DEBUG] 29-02-2024 11:40:02.022 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@b6bccb4
[DEBUG] 29-02-2024 11:40:02.023 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@b6bccb4
[DEBUG] 29-02-2024 11:40:02.023 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@49edcb30
[DEBUG] 29-02-2024 11:40:02.024 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@49edcb30
[DEBUG] 29-02-2024 11:40:02.024 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@49edcb30
[DEBUG] 29-02-2024 11:40:02.025 [main] BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@59303963
[DEBUG] 29-02-2024 11:40:02.026 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@59303963
[DEBUG] 29-02-2024 11:40:02.026 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@61e86192
[DEBUG] 29-02-2024 11:40:02.027 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@34330f77
[DEBUG] 29-02-2024 11:40:02.027 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@34330f77
[DEBUG] 29-02-2024 11:40:02.028 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@1320e68a
[DEBUG] 29-02-2024 11:40:02.029 [main] BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@4b033eac
[DEBUG] 29-02-2024 11:40:02.037 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@69c532af
[DEBUG] 29-02-2024 11:40:02.038 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@69c532af
[DEBUG] 29-02-2024 11:40:02.039 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@69c532af
[DEBUG] 29-02-2024 11:40:02.039 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@45a1d057
[DEBUG] 29-02-2024 11:40:02.040 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@45a1d057
[DEBUG] 29-02-2024 11:40:02.040 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@45a1d057
[DEBUG] 29-02-2024 11:40:02.041 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@51a16adf
[DEBUG] 29-02-2024 11:40:02.041 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@51a16adf
[DEBUG] 29-02-2024 11:40:02.042 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@51a16adf
[DEBUG] 29-02-2024 11:40:02.042 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@385d819
[DEBUG] 29-02-2024 11:40:02.043 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@385d819
[DEBUG] 29-02-2024 11:40:02.044 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@385d819
[DEBUG] 29-02-2024 11:40:02.044 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@4315c28c
[DEBUG] 29-02-2024 11:40:02.045 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@4315c28c
[DEBUG] 29-02-2024 11:40:02.045 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@4315c28c
[DEBUG] 29-02-2024 11:40:02.046 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@8fd91d1
[DEBUG] 29-02-2024 11:40:02.047 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@8fd91d1
[DEBUG] 29-02-2024 11:40:02.047 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@52d0f583
[DEBUG] 29-02-2024 11:40:02.052 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@52d0f583
[DEBUG] 29-02-2024 11:40:02.053 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@7fb8bad0
[DEBUG] 29-02-2024 11:40:02.054 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@7fb8bad0
[DEBUG] 29-02-2024 11:40:02.055 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@7fb8bad0
[DEBUG] 29-02-2024 11:40:02.055 [main] BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@12d40609
[DEBUG] 29-02-2024 11:40:02.056 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@76437e9b
[DEBUG] 29-02-2024 11:40:02.057 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@76437e9b
[DEBUG] 29-02-2024 11:40:02.057 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@236ae13d
[DEBUG] 29-02-2024 11:40:02.058 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@193eb1ba
[DEBUG] 29-02-2024 11:40:02.058 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@193eb1ba
[DEBUG] 29-02-2024 11:40:02.059 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@193eb1ba
[DEBUG] 29-02-2024 11:40:02.060 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@2be818da
[DEBUG] 29-02-2024 11:40:02.060 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@46320c9a
[DEBUG] 29-02-2024 11:40:02.061 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@32256e68
[DEBUG] 29-02-2024 11:40:02.061 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@5e7abaf7
[DEBUG] 29-02-2024 11:40:02.062 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@5e7abaf7
[DEBUG] 29-02-2024 11:40:02.063 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@353f472a
[DEBUG] 29-02-2024 11:40:02.063 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@353f472a
[DEBUG] 29-02-2024 11:40:02.064 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@63bfdbcb
[DEBUG] 29-02-2024 11:40:02.064 [main] BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@7af0affa
[DEBUG] 29-02-2024 11:40:02.065 [main] BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@71560f51
[DEBUG] 29-02-2024 11:40:02.065 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@3e1f1046
[DEBUG] 29-02-2024 11:40:02.066 [main] BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@23e3f5cd
[DEBUG] 29-02-2024 11:40:02.066 [main] BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@5c931134
[DEBUG] 29-02-2024 11:40:02.067 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@1d7eb170
[DEBUG] 29-02-2024 11:40:02.068 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@1d7eb170
[DEBUG] 29-02-2024 11:40:02.068 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@5b251fb9
[DEBUG] 29-02-2024 11:40:02.068 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@5b251fb9
[DEBUG] 29-02-2024 11:40:02.069 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@67d4c48d
[DEBUG] 29-02-2024 11:40:02.070 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@67d4c48d
[DEBUG] 29-02-2024 11:40:02.070 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@230a73f2
[DEBUG] 29-02-2024 11:40:02.071 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@230a73f2
[DEBUG] 29-02-2024 11:40:02.071 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@4b97b3d2
[DEBUG] 29-02-2024 11:40:02.072 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@4b97b3d2
[DEBUG] 29-02-2024 11:40:02.072 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@383cb5ce
[DEBUG] 29-02-2024 11:40:02.073 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@798deee8
[DEBUG] 29-02-2024 11:40:02.073 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@96897c8
[DEBUG] 29-02-2024 11:40:02.074 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@96897c8
[DEBUG] 29-02-2024 11:40:02.074 [main] BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@7f97bc14
[DEBUG] 29-02-2024 11:40:02.075 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@22d8f4ed
[DEBUG] 29-02-2024 11:40:02.075 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3434a4f0
[DEBUG] 29-02-2024 11:40:02.076 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@79afa369
[DEBUG] 29-02-2024 11:40:02.076 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@79afa369
[DEBUG] 29-02-2024 11:40:02.076 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@3b9ac754
[DEBUG] 29-02-2024 11:40:02.077 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@5e002356
[DEBUG] 29-02-2024 11:40:02.078 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@4f820f42
[DEBUG] 29-02-2024 11:40:02.078 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@4f820f42
[DEBUG] 29-02-2024 11:40:02.078 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@4b325930
[DEBUG] 29-02-2024 11:40:02.079 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@4b325930
[DEBUG] 29-02-2024 11:40:02.079 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@267f9765
[DEBUG] 29-02-2024 11:40:02.080 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@267f9765
[DEBUG] 29-02-2024 11:40:02.080 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@267f9765
[DEBUG] 29-02-2024 11:40:02.080 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@79ba0a6f
[DEBUG] 29-02-2024 11:40:02.081 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@79ba0a6f
[DEBUG] 29-02-2024 11:40:02.081 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@79ba0a6f
[DEBUG] 29-02-2024 11:40:02.082 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@261de205
[DEBUG] 29-02-2024 11:40:02.082 [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@7f3fc42f
[DEBUG] 29-02-2024 11:40:02.082 [main] BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@25a1a012
[DEBUG] 29-02-2024 11:40:02.083 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@25a1a012
[DEBUG] 29-02-2024 11:40:02.083 [main] BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@ce12fbb
[DEBUG] 29-02-2024 11:40:02.084 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@ce12fbb
[DEBUG] 29-02-2024 11:40:02.084 [main] BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@ce12fbb
[DEBUG] 29-02-2024 11:40:02.084 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@4525e9e8
[DEBUG] 29-02-2024 11:40:02.085 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@443a53df
[DEBUG] 29-02-2024 11:40:02.085 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@6c33da7a
[DEBUG] 29-02-2024 11:40:02.086 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@6c33da7a
[DEBUG] 29-02-2024 11:40:02.087 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@69aabcb0
[DEBUG] 29-02-2024 11:40:02.087 [main] BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@69aabcb0
[DEBUG] 29-02-2024 11:40:02.088 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@69aabcb0
[DEBUG] 29-02-2024 11:40:02.088 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@32a72c4
[DEBUG] 29-02-2024 11:40:02.089 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@32a72c4
[DEBUG] 29-02-2024 11:40:02.091 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@15986dd5
[DEBUG] 29-02-2024 11:40:02.092 [main] BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@15986dd5
[DEBUG] 29-02-2024 11:40:02.093 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@678a9516
[DEBUG] 29-02-2024 11:40:02.094 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@678a9516
[DEBUG] 29-02-2024 11:40:02.094 [main] BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@5bf9ea6b
[DEBUG] 29-02-2024 11:40:02.095 [main] BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@5bf9ea6b
[DEBUG] 29-02-2024 11:40:02.095 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@b950f82
[DEBUG] 29-02-2024 11:40:02.096 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@b950f82
[DEBUG] 29-02-2024 11:40:02.096 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@5d352de0
[DEBUG] 29-02-2024 11:40:02.132 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@35eee641
[DEBUG] 29-02-2024 11:40:02.133 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@35eee641
[DEBUG] 29-02-2024 11:40:02.170 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@1ac730cd
[DEBUG] 29-02-2024 11:40:02.171 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@668cc9a2
[DEBUG] 29-02-2024 11:40:02.171 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@5aa62ee7
[DEBUG] 29-02-2024 11:40:02.172 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@1f7cec93
[DEBUG] 29-02-2024 11:40:02.173 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@3c9ef6e9
[DEBUG] 29-02-2024 11:40:02.182 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@3cdff901
[DEBUG] 29-02-2024 11:40:02.182 [main] BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@57e5396b
[DEBUG] 29-02-2024 11:40:02.182 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@2f054f70
[DEBUG] 29-02-2024 11:40:02.183 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@6467ddc7
[DEBUG] 29-02-2024 11:40:04.103 [main] DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5f6494c0) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6826b70f)
[DEBUG] 29-02-2024 11:40:04.108 [main] JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
[DEBUG] 29-02-2024 11:40:04.109 [main] JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 29-02-2024 11:40:04.128 [main] BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@1f949ab9
[DEBUG] 29-02-2024 11:40:04.129 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@1f949ab9
[DEBUG] 29-02-2024 11:40:04.130 [main] BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@35eee641`
[DEBUG] 29-02-2024 11:40:04.133 [main] JdbcTypeRegistry - addDescriptor(3100, NumericTypeDescriptor) replaced previous registration(org.hibernate.dialect.PostgreSQLIntervalSecondJdbcType@39f42d0e)
[DEBUG] 29-02-2024 11:40:04.149 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 29-02-2024 11:40:04.150 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 29-02-2024 11:40:04.150 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 29-02-2024 11:40:04.151 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 29-02-2024 11:40:04.151 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 29-02-2024 11:40:04.151 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 29-02-2024 11:40:04.154 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 29-02-2024 11:40:04.154 [main] BasicTypeRegistry - Adding type registration OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 29-02-2024 11:40:04.155 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 29-02-2024 11:40:04.158 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@216f01] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@7c901203]
[INFO ] 29-02-2024 11:40:04.896 [main] BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
[INFO ] 29-02-2024 11:40:07.988 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 29-02-2024 11:40:07.991 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@216f01] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@8091d80]
[TRACE] 29-02-2024 11:40:08.022 [main] TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@8091d80] for TypeConfiguration
[INFO ] 29-02-2024 11:40:09.915 [main] SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
[INFO ] 29-02-2024 11:40:09.916 [main] TestDispatcherServlet - Initializing Servlet ''
[INFO ] 29-02-2024 11:40:09.923 [main] TestDispatcherServlet - Completed initialization in 3 ms
[INFO ] 29-02-2024 11:40:10.242 [main] TestCRUDUserProducts - Started TestCRUDUserProducts in 13.294 seconds (process running for 17.307)
[TRACE] 29-02-2024 11:40:12.178 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@8091d80] for TypeConfiguration
[DEBUG] 29-02-2024 11:40:12.181 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@361eb679] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@8091d80]
[INFO ] 29-02-2024 11:46:11.998 [background-preinit] Version - HV000001: Hibernate Validator 8.0.1.Final
[INFO ] 29-02-2024 11:46:12.117 [main] TestCRUDUserProducts - Starting TestCRUDUserProducts using Java 17.0.10 with PID 1613683 (started by dima in /home/dima/backend_microservice/UserProductsMicroService)
[INFO ] 29-02-2024 11:46:12.130 [main] TestCRUDUserProducts - No active profile set, falling back to 1 default profile: "default"
[INFO ] 29-02-2024 11:46:13.428 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO ] 29-02-2024 11:46:13.950 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 473 ms. Found 1 JPA repository interfaces.
[INFO ] 29-02-2024 11:46:15.013 [main] Version - HHH000412: Hibernate ORM core version 6.2.6.Final
[INFO ] 29-02-2024 11:46:15.021 [main] Environment - HHH000406: Using bytecode reflection optimizer
[DEBUG] 29-02-2024 11:46:15.446 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@741741d0
[DEBUG] 29-02-2024 11:46:15.446 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@741741d0
[DEBUG] 29-02-2024 11:46:15.447 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@741741d0
[DEBUG] 29-02-2024 11:46:15.448 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@5f9f3e58
[DEBUG] 29-02-2024 11:46:15.448 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@5f9f3e58
[DEBUG] 29-02-2024 11:46:15.449 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@3c19592c
[DEBUG] 29-02-2024 11:46:15.450 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@3c19592c
[DEBUG] 29-02-2024 11:46:15.450 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@60e1d87c
[DEBUG] 29-02-2024 11:46:15.451 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@60e1d87c
[DEBUG] 29-02-2024 11:46:15.451 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@2eb60c71
[DEBUG] 29-02-2024 11:46:15.452 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@2eb60c71
[DEBUG] 29-02-2024 11:46:15.453 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@2eb60c71
[DEBUG] 29-02-2024 11:46:15.454 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@87d9a01
[DEBUG] 29-02-2024 11:46:15.456 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@87d9a01
[DEBUG] 29-02-2024 11:46:15.457 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@87d9a01
[DEBUG] 29-02-2024 11:46:15.458 [main] BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@7e5b621b
[DEBUG] 29-02-2024 11:46:15.458 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@7e5b621b
[DEBUG] 29-02-2024 11:46:15.459 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@10177794
[DEBUG] 29-02-2024 11:46:15.459 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@e5c2463
[DEBUG] 29-02-2024 11:46:15.460 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@e5c2463
[DEBUG] 29-02-2024 11:46:15.460 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@6a950a3b
[DEBUG] 29-02-2024 11:46:15.461 [main] BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@4f7be6c8
[DEBUG] 29-02-2024 11:46:15.461 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@647b9364
[DEBUG] 29-02-2024 11:46:15.462 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@647b9364
[DEBUG] 29-02-2024 11:46:15.462 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@647b9364
[DEBUG] 29-02-2024 11:46:15.463 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@b6bccb4
[DEBUG] 29-02-2024 11:46:15.463 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@b6bccb4
[DEBUG] 29-02-2024 11:46:15.464 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@b6bccb4
[DEBUG] 29-02-2024 11:46:15.465 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@49edcb30
[DEBUG] 29-02-2024 11:46:15.465 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@49edcb30
[DEBUG] 29-02-2024 11:46:15.466 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@49edcb30
[DEBUG] 29-02-2024 11:46:15.466 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@59303963
[DEBUG] 29-02-2024 11:46:15.467 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@59303963
[DEBUG] 29-02-2024 11:46:15.467 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@59303963
[DEBUG] 29-02-2024 11:46:15.468 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@61e86192
[DEBUG] 29-02-2024 11:46:15.468 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@61e86192
[DEBUG] 29-02-2024 11:46:15.469 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@61e86192
[DEBUG] 29-02-2024 11:46:15.470 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@34330f77
[DEBUG] 29-02-2024 11:46:15.470 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@34330f77
[DEBUG] 29-02-2024 11:46:15.471 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@1320e68a
[DEBUG] 29-02-2024 11:46:15.471 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@1320e68a
[DEBUG] 29-02-2024 11:46:15.472 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@4b033eac
[DEBUG] 29-02-2024 11:46:15.473 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@4b033eac
[DEBUG] 29-02-2024 11:46:15.473 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@4b033eac
[DEBUG] 29-02-2024 11:46:15.475 [main] BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@69c532af
[DEBUG] 29-02-2024 11:46:15.476 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@45a1d057
[DEBUG] 29-02-2024 11:46:15.476 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@45a1d057
[DEBUG] 29-02-2024 11:46:15.477 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@51a16adf
[DEBUG] 29-02-2024 11:46:15.478 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@385d819
[DEBUG] 29-02-2024 11:46:15.478 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@385d819
[DEBUG] 29-02-2024 11:46:15.490 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@385d819
[DEBUG] 29-02-2024 11:46:15.491 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@4315c28c
[DEBUG] 29-02-2024 11:46:15.491 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@8fd91d1
[DEBUG] 29-02-2024 11:46:15.492 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@52d0f583
[DEBUG] 29-02-2024 11:46:15.492 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@7fb8bad0
[DEBUG] 29-02-2024 11:46:15.493 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@7fb8bad0
[DEBUG] 29-02-2024 11:46:15.494 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@12d40609
[DEBUG] 29-02-2024 11:46:15.494 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@12d40609
[DEBUG] 29-02-2024 11:46:15.495 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@76437e9b
[DEBUG] 29-02-2024 11:46:15.495 [main] BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@236ae13d
[DEBUG] 29-02-2024 11:46:15.496 [main] BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@193eb1ba
[DEBUG] 29-02-2024 11:46:15.497 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@2be818da
[DEBUG] 29-02-2024 11:46:15.511 [main] BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@46320c9a
[DEBUG] 29-02-2024 11:46:15.512 [main] BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@32256e68
[DEBUG] 29-02-2024 11:46:15.513 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@5e7abaf7
[DEBUG] 29-02-2024 11:46:15.513 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@5e7abaf7
[DEBUG] 29-02-2024 11:46:15.514 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@353f472a
[DEBUG] 29-02-2024 11:46:15.514 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@353f472a
[DEBUG] 29-02-2024 11:46:15.515 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@63bfdbcb
[DEBUG] 29-02-2024 11:46:15.517 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@63bfdbcb
[DEBUG] 29-02-2024 11:46:15.518 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@7af0affa
[DEBUG] 29-02-2024 11:46:15.518 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@7af0affa
[DEBUG] 29-02-2024 11:46:15.519 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@71560f51
[DEBUG] 29-02-2024 11:46:15.519 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@71560f51
[DEBUG] 29-02-2024 11:46:15.520 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@3e1f1046
[DEBUG] 29-02-2024 11:46:15.520 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@23e3f5cd
[DEBUG] 29-02-2024 11:46:15.521 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@5c931134
[DEBUG] 29-02-2024 11:46:15.521 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@5c931134
[DEBUG] 29-02-2024 11:46:15.522 [main] BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@1d7eb170
[DEBUG] 29-02-2024 11:46:15.522 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@5b251fb9
[DEBUG] 29-02-2024 11:46:15.523 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@67d4c48d
[DEBUG] 29-02-2024 11:46:15.523 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@230a73f2
[DEBUG] 29-02-2024 11:46:15.524 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@230a73f2
[DEBUG] 29-02-2024 11:46:15.524 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@4b97b3d2
[DEBUG] 29-02-2024 11:46:15.525 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@383cb5ce
[DEBUG] 29-02-2024 11:46:15.525 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@798deee8
[DEBUG] 29-02-2024 11:46:15.526 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@798deee8
[DEBUG] 29-02-2024 11:46:15.528 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@96897c8
[DEBUG] 29-02-2024 11:46:15.529 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@96897c8
[DEBUG] 29-02-2024 11:46:15.529 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@7f97bc14
[DEBUG] 29-02-2024 11:46:15.530 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@7f97bc14
[DEBUG] 29-02-2024 11:46:15.530 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@7f97bc14
[DEBUG] 29-02-2024 11:46:15.531 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@22d8f4ed
[DEBUG] 29-02-2024 11:46:15.531 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@22d8f4ed
[DEBUG] 29-02-2024 11:46:15.531 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@22d8f4ed
[DEBUG] 29-02-2024 11:46:15.532 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@3434a4f0
[DEBUG] 29-02-2024 11:46:15.532 [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@79afa369
[DEBUG] 29-02-2024 11:46:15.533 [main] BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@3b9ac754
[DEBUG] 29-02-2024 11:46:15.533 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@3b9ac754
[DEBUG] 29-02-2024 11:46:15.534 [main] BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@5e002356
[DEBUG] 29-02-2024 11:46:15.534 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@5e002356
[DEBUG] 29-02-2024 11:46:15.534 [main] BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@5e002356
[DEBUG] 29-02-2024 11:46:15.535 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@4f820f42
[DEBUG] 29-02-2024 11:46:15.535 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@4b325930
[DEBUG] 29-02-2024 11:46:15.536 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@267f9765
[DEBUG] 29-02-2024 11:46:15.537 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@267f9765
[DEBUG] 29-02-2024 11:46:15.538 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@79ba0a6f
[DEBUG] 29-02-2024 11:46:15.538 [main] BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@79ba0a6f
[DEBUG] 29-02-2024 11:46:15.539 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@79ba0a6f
[DEBUG] 29-02-2024 11:46:15.539 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@261de205
[DEBUG] 29-02-2024 11:46:15.539 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@261de205
[DEBUG] 29-02-2024 11:46:15.540 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@7f3fc42f
[DEBUG] 29-02-2024 11:46:15.540 [main] BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@7f3fc42f
[DEBUG] 29-02-2024 11:46:15.541 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@25a1a012
[DEBUG] 29-02-2024 11:46:15.542 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@25a1a012
[DEBUG] 29-02-2024 11:46:15.542 [main] BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@ce12fbb
[DEBUG] 29-02-2024 11:46:15.543 [main] BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@ce12fbb
[DEBUG] 29-02-2024 11:46:15.543 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@4525e9e8
[DEBUG] 29-02-2024 11:46:15.544 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@4525e9e8
[DEBUG] 29-02-2024 11:46:15.544 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@443a53df
[DEBUG] 29-02-2024 11:46:15.570 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@1e98b788
[DEBUG] 29-02-2024 11:46:15.572 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@1e98b788
[DEBUG] 29-02-2024 11:46:15.575 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@3b7c58e7
[DEBUG] 29-02-2024 11:46:15.576 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@79627d27
[DEBUG] 29-02-2024 11:46:15.576 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@6371cf2f
[DEBUG] 29-02-2024 11:46:15.577 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@b5b9333
[DEBUG] 29-02-2024 11:46:15.579 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@52b959df
[DEBUG] 29-02-2024 11:46:15.579 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@38588dea
[DEBUG] 29-02-2024 11:46:15.595 [main] BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@553d2579
[DEBUG] 29-02-2024 11:46:15.596 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@2a8f6e6
[DEBUG] 29-02-2024 11:46:15.596 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@1ac730cd
[DEBUG] 29-02-2024 11:46:16.960 [main] DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@57c69937) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1ad1c363)
[DEBUG] 29-02-2024 11:46:16.965 [main] JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
[DEBUG] 29-02-2024 11:46:16.966 [main] JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 29-02-2024 11:46:16.992 [main] BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@270d5060
[DEBUG] 29-02-2024 11:46:16.992 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@270d5060
[DEBUG] 29-02-2024 11:46:16.993 [main] BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@1e98b788`
[DEBUG] 29-02-2024 11:46:16.996 [main] JdbcTypeRegistry - addDescriptor(3100, NumericTypeDescriptor) replaced previous registration(org.hibernate.dialect.PostgreSQLIntervalSecondJdbcType@ee96866)
[DEBUG] 29-02-2024 11:46:17.010 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 29-02-2024 11:46:17.011 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 29-02-2024 11:46:17.011 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 29-02-2024 11:46:17.012 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 29-02-2024 11:46:17.012 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 29-02-2024 11:46:17.013 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 29-02-2024 11:46:17.015 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 29-02-2024 11:46:17.015 [main] BasicTypeRegistry - Adding type registration OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 29-02-2024 11:46:17.016 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 29-02-2024 11:46:17.019 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1002d192] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@9281d19]
[INFO ] 29-02-2024 11:46:17.717 [main] BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
[INFO ] 29-02-2024 11:46:20.170 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 29-02-2024 11:46:20.172 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1002d192] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@2e2cd42c]
[TRACE] 29-02-2024 11:46:20.184 [main] TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@2e2cd42c] for TypeConfiguration
[INFO ] 29-02-2024 11:46:22.167 [main] SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
[INFO ] 29-02-2024 11:46:22.168 [main] TestDispatcherServlet - Initializing Servlet ''
[INFO ] 29-02-2024 11:46:22.176 [main] TestDispatcherServlet - Completed initialization in 4 ms
[INFO ] 29-02-2024 11:46:22.475 [main] TestCRUDUserProducts - Started TestCRUDUserProducts in 11.488 seconds (process running for 15.759)
[TRACE] 29-02-2024 11:46:24.547 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@2e2cd42c] for TypeConfiguration
[DEBUG] 29-02-2024 11:46:24.548 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@4055fdc9] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@2e2cd42c]
[INFO ] 29-02-2024 11:55:47.066 [background-preinit] Version - HV000001: Hibernate Validator 8.0.1.Final
[INFO ] 29-02-2024 11:55:47.217 [main] TestCRUDUserProducts - Starting TestCRUDUserProducts using Java 17.0.10 with PID 1618603 (started by dima in /home/dima/backend_microservice/UserProductsMicroService)
[INFO ] 29-02-2024 11:55:47.228 [main] TestCRUDUserProducts - No active profile set, falling back to 1 default profile: "default"
[INFO ] 29-02-2024 11:55:48.181 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO ] 29-02-2024 11:55:48.648 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 446 ms. Found 1 JPA repository interfaces.
[INFO ] 29-02-2024 11:55:49.973 [main] Version - HHH000412: Hibernate ORM core version 6.2.6.Final
[INFO ] 29-02-2024 11:55:49.980 [main] Environment - HHH000406: Using bytecode reflection optimizer
[DEBUG] 29-02-2024 11:55:50.540 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@6a950a3b
[DEBUG] 29-02-2024 11:55:50.541 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@6a950a3b
[DEBUG] 29-02-2024 11:55:50.542 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@6a950a3b
[DEBUG] 29-02-2024 11:55:50.543 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@4f7be6c8
[DEBUG] 29-02-2024 11:55:50.544 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@4f7be6c8
[DEBUG] 29-02-2024 11:55:50.544 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@647b9364
[DEBUG] 29-02-2024 11:55:50.545 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@647b9364
[DEBUG] 29-02-2024 11:55:50.546 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@b6bccb4
[DEBUG] 29-02-2024 11:55:50.547 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@b6bccb4
[DEBUG] 29-02-2024 11:55:50.547 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@49edcb30
[DEBUG] 29-02-2024 11:55:50.548 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@49edcb30
[DEBUG] 29-02-2024 11:55:50.548 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@49edcb30
[DEBUG] 29-02-2024 11:55:50.549 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@59303963
[DEBUG] 29-02-2024 11:55:50.549 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@59303963
[DEBUG] 29-02-2024 11:55:50.550 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@59303963
[DEBUG] 29-02-2024 11:55:50.551 [main] BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@61e86192
[DEBUG] 29-02-2024 11:55:50.551 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@61e86192
[DEBUG] 29-02-2024 11:55:50.552 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@34330f77
[DEBUG] 29-02-2024 11:55:50.553 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@1320e68a
[DEBUG] 29-02-2024 11:55:50.553 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@1320e68a
[DEBUG] 29-02-2024 11:55:50.554 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@4b033eac
[DEBUG] 29-02-2024 11:55:50.555 [main] BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@69c532af
[DEBUG] 29-02-2024 11:55:50.555 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@45a1d057
[DEBUG] 29-02-2024 11:55:50.556 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@45a1d057
[DEBUG] 29-02-2024 11:55:50.556 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@45a1d057
[DEBUG] 29-02-2024 11:55:50.557 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@51a16adf
[DEBUG] 29-02-2024 11:55:50.558 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@51a16adf
[DEBUG] 29-02-2024 11:55:50.558 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@51a16adf
[DEBUG] 29-02-2024 11:55:50.559 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@385d819
[DEBUG] 29-02-2024 11:55:50.559 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@385d819
[DEBUG] 29-02-2024 11:55:50.560 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@385d819
[DEBUG] 29-02-2024 11:55:50.560 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@4315c28c
[DEBUG] 29-02-2024 11:55:50.561 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@4315c28c
[DEBUG] 29-02-2024 11:55:50.562 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@4315c28c
[DEBUG] 29-02-2024 11:55:50.562 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@8fd91d1
[DEBUG] 29-02-2024 11:55:50.563 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@8fd91d1
[DEBUG] 29-02-2024 11:55:50.564 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@8fd91d1
[DEBUG] 29-02-2024 11:55:50.564 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@52d0f583
[DEBUG] 29-02-2024 11:55:50.565 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@52d0f583
[DEBUG] 29-02-2024 11:55:50.565 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@7fb8bad0
[DEBUG] 29-02-2024 11:55:50.566 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@7fb8bad0
[DEBUG] 29-02-2024 11:55:50.566 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@12d40609
[DEBUG] 29-02-2024 11:55:50.568 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@12d40609
[DEBUG] 29-02-2024 11:55:50.568 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@12d40609
[DEBUG] 29-02-2024 11:55:50.570 [main] BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@76437e9b
[DEBUG] 29-02-2024 11:55:50.570 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@236ae13d
[DEBUG] 29-02-2024 11:55:50.570 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@236ae13d
[DEBUG] 29-02-2024 11:55:50.571 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@193eb1ba
[DEBUG] 29-02-2024 11:55:50.572 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@2be818da
[DEBUG] 29-02-2024 11:55:50.572 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@2be818da
[DEBUG] 29-02-2024 11:55:50.573 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@2be818da
[DEBUG] 29-02-2024 11:55:50.574 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@46320c9a
[DEBUG] 29-02-2024 11:55:50.574 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@32256e68
[DEBUG] 29-02-2024 11:55:50.574 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@5e7abaf7
[DEBUG] 29-02-2024 11:55:50.575 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@353f472a
[DEBUG] 29-02-2024 11:55:50.575 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@353f472a
[DEBUG] 29-02-2024 11:55:50.576 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@63bfdbcb
[DEBUG] 29-02-2024 11:55:50.576 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@63bfdbcb
[DEBUG] 29-02-2024 11:55:50.577 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@7af0affa
[DEBUG] 29-02-2024 11:55:50.577 [main] BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@71560f51
[DEBUG] 29-02-2024 11:55:50.578 [main] BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@3e1f1046
[DEBUG] 29-02-2024 11:55:50.579 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@23e3f5cd
[DEBUG] 29-02-2024 11:55:50.579 [main] BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@5c931134
[DEBUG] 29-02-2024 11:55:50.579 [main] BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@1d7eb170
[DEBUG] 29-02-2024 11:55:50.580 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@5b251fb9
[DEBUG] 29-02-2024 11:55:50.580 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@5b251fb9
[DEBUG] 29-02-2024 11:55:50.581 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@67d4c48d
[DEBUG] 29-02-2024 11:55:50.581 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@67d4c48d
[DEBUG] 29-02-2024 11:55:50.582 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@230a73f2
[DEBUG] 29-02-2024 11:55:50.582 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@230a73f2
[DEBUG] 29-02-2024 11:55:50.583 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@4b97b3d2
[DEBUG] 29-02-2024 11:55:50.583 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@4b97b3d2
[DEBUG] 29-02-2024 11:55:50.584 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@383cb5ce
[DEBUG] 29-02-2024 11:55:50.584 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@383cb5ce
[DEBUG] 29-02-2024 11:55:50.584 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@798deee8
[DEBUG] 29-02-2024 11:55:50.585 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@96897c8
[DEBUG] 29-02-2024 11:55:50.586 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@7f97bc14
[DEBUG] 29-02-2024 11:55:50.586 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@7f97bc14
[DEBUG] 29-02-2024 11:55:50.587 [main] BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@22d8f4ed
[DEBUG] 29-02-2024 11:55:50.587 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@3434a4f0
[DEBUG] 29-02-2024 11:55:50.587 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@79afa369
[DEBUG] 29-02-2024 11:55:50.590 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@3b9ac754
[DEBUG] 29-02-2024 11:55:50.594 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@3b9ac754
[DEBUG] 29-02-2024 11:55:50.595 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@5e002356
[DEBUG] 29-02-2024 11:55:50.596 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4f820f42
[DEBUG] 29-02-2024 11:55:50.596 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@4b325930
[DEBUG] 29-02-2024 11:55:50.597 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@4b325930
[DEBUG] 29-02-2024 11:55:50.597 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@267f9765
[DEBUG] 29-02-2024 11:55:50.598 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@267f9765
[DEBUG] 29-02-2024 11:55:50.598 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@79ba0a6f
[DEBUG] 29-02-2024 11:55:50.599 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@79ba0a6f
[DEBUG] 29-02-2024 11:55:50.599 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@79ba0a6f
[DEBUG] 29-02-2024 11:55:50.600 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@261de205
[DEBUG] 29-02-2024 11:55:50.600 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@261de205
[DEBUG] 29-02-2024 11:55:50.600 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@261de205
[DEBUG] 29-02-2024 11:55:50.601 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@7f3fc42f
[DEBUG] 29-02-2024 11:55:50.601 [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@25a1a012
[DEBUG] 29-02-2024 11:55:50.602 [main] BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@ce12fbb
[DEBUG] 29-02-2024 11:55:50.602 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@ce12fbb
[DEBUG] 29-02-2024 11:55:50.603 [main] BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@4525e9e8
[DEBUG] 29-02-2024 11:55:50.603 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@4525e9e8
[DEBUG] 29-02-2024 11:55:50.604 [main] BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@4525e9e8
[DEBUG] 29-02-2024 11:55:50.604 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@443a53df
[DEBUG] 29-02-2024 11:55:50.604 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@6c33da7a
[DEBUG] 29-02-2024 11:55:50.605 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@69aabcb0
[DEBUG] 29-02-2024 11:55:50.605 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@69aabcb0
[DEBUG] 29-02-2024 11:55:50.606 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@32a72c4
[DEBUG] 29-02-2024 11:55:50.606 [main] BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@32a72c4
[DEBUG] 29-02-2024 11:55:50.606 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@32a72c4
[DEBUG] 29-02-2024 11:55:50.607 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@15986dd5
[DEBUG] 29-02-2024 11:55:50.607 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@15986dd5
[DEBUG] 29-02-2024 11:55:50.607 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@678a9516
[DEBUG] 29-02-2024 11:55:50.608 [main] BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@678a9516
[DEBUG] 29-02-2024 11:55:50.608 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@5bf9ea6b
[DEBUG] 29-02-2024 11:55:50.609 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@5bf9ea6b
[DEBUG] 29-02-2024 11:55:50.610 [main] BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@b950f82
[DEBUG] 29-02-2024 11:55:50.627 [main] BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@b950f82
[DEBUG] 29-02-2024 11:55:50.627 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@5d352de0
[DEBUG] 29-02-2024 11:55:50.628 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@5d352de0
[DEBUG] 29-02-2024 11:55:50.628 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@6e243175
[DEBUG] 29-02-2024 11:55:50.643 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@5729b410
[DEBUG] 29-02-2024 11:55:50.643 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@5729b410
[DEBUG] 29-02-2024 11:55:50.646 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@668cc9a2
[DEBUG] 29-02-2024 11:55:50.647 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@5aa62ee7
[DEBUG] 29-02-2024 11:55:50.648 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@1f7cec93
[DEBUG] 29-02-2024 11:55:50.648 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@3c9ef6e9
[DEBUG] 29-02-2024 11:55:50.649 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@3cdff901
[DEBUG] 29-02-2024 11:55:50.649 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@57e5396b
[DEBUG] 29-02-2024 11:55:50.649 [main] BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@2f054f70
[DEBUG] 29-02-2024 11:55:50.650 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@6467ddc7
[DEBUG] 29-02-2024 11:55:50.650 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@27b337bb
[DEBUG] 29-02-2024 11:55:52.336 [main] DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6826b70f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4df7d9ee)
[DEBUG] 29-02-2024 11:55:52.343 [main] JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
[DEBUG] 29-02-2024 11:55:52.347 [main] JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 29-02-2024 11:55:52.369 [main] BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@5a7b6b75
[DEBUG] 29-02-2024 11:55:52.370 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@5a7b6b75
[DEBUG] 29-02-2024 11:55:52.371 [main] BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@5729b410`
[DEBUG] 29-02-2024 11:55:52.380 [main] JdbcTypeRegistry - addDescriptor(3100, NumericTypeDescriptor) replaced previous registration(org.hibernate.dialect.PostgreSQLIntervalSecondJdbcType@47a3d56a)
[DEBUG] 29-02-2024 11:55:52.395 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 29-02-2024 11:55:52.396 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 29-02-2024 11:55:52.396 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 29-02-2024 11:55:52.397 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 29-02-2024 11:55:52.398 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 29-02-2024 11:55:52.398 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 29-02-2024 11:55:52.401 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 29-02-2024 11:55:52.402 [main] BasicTypeRegistry - Adding type registration OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 29-02-2024 11:55:52.402 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 29-02-2024 11:55:52.406 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7c901203] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@1e721583]
[INFO ] 29-02-2024 11:55:53.048 [main] BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
[INFO ] 29-02-2024 11:55:55.770 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 29-02-2024 11:55:55.772 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7c901203] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@314c28dc]
[TRACE] 29-02-2024 11:55:55.779 [main] TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@314c28dc] for TypeConfiguration
[INFO ] 29-02-2024 11:55:57.338 [main] SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
[INFO ] 29-02-2024 11:55:57.339 [main] TestDispatcherServlet - Initializing Servlet ''
[INFO ] 29-02-2024 11:55:57.346 [main] TestDispatcherServlet - Completed initialization in 3 ms
[INFO ] 29-02-2024 11:55:57.642 [main] TestCRUDUserProducts - Started TestCRUDUserProducts in 11.313 seconds (process running for 15.008)
[DEBUG] 29-02-2024 11:55:59.268 [main] SQL - select e1_0.id,e1_0.email,e1_0.login,e1_0.name,e1_0.password,p1_0.id_user,p1_0.id,p1_0.name,p1_0.page_image,p1_0.price,p1_0.raiting,p1_0.year_issue from users e1_0 left join products p1_0 on e1_0.id=p1_0.id_user where e1_0.id=?
[TRACE] 29-02-2024 11:55:59.725 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@314c28dc] for TypeConfiguration
[DEBUG] 29-02-2024 11:55:59.726 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@6515f6ff] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@314c28dc]
[INFO ] 29-02-2024 12:02:26.095 [background-preinit] Version - HV000001: Hibernate Validator 8.0.1.Final
[INFO ] 29-02-2024 12:02:26.213 [main] TestCRUDUserProducts - Starting TestCRUDUserProducts using Java 17.0.10 with PID 1622020 (started by dima in /home/dima/backend_microservice/UserProductsMicroService)
[INFO ] 29-02-2024 12:02:26.229 [main] TestCRUDUserProducts - No active profile set, falling back to 1 default profile: "default"
[INFO ] 29-02-2024 12:02:27.243 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO ] 29-02-2024 12:02:27.712 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 446 ms. Found 1 JPA repository interfaces.
[INFO ] 29-02-2024 12:02:31.738 [main] Version - HHH000412: Hibernate ORM core version 6.2.6.Final
[INFO ] 29-02-2024 12:02:31.749 [main] Environment - HHH000406: Using bytecode reflection optimizer
[DEBUG] 29-02-2024 12:02:32.285 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@455cbf18
[DEBUG] 29-02-2024 12:02:32.287 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@455cbf18
[DEBUG] 29-02-2024 12:02:32.288 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@455cbf18
[DEBUG] 29-02-2024 12:02:32.289 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@24aedcc5
[DEBUG] 29-02-2024 12:02:32.290 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@24aedcc5
[DEBUG] 29-02-2024 12:02:32.291 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@74ebd159
[DEBUG] 29-02-2024 12:02:32.292 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@74ebd159
[DEBUG] 29-02-2024 12:02:32.292 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@1850f2da
[DEBUG] 29-02-2024 12:02:32.293 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@1850f2da
[DEBUG] 29-02-2024 12:02:32.294 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@38d42ab7
[DEBUG] 29-02-2024 12:02:32.295 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@38d42ab7
[DEBUG] 29-02-2024 12:02:32.296 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@38d42ab7
[DEBUG] 29-02-2024 12:02:32.297 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@6ace919c
[DEBUG] 29-02-2024 12:02:32.298 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@6ace919c
[DEBUG] 29-02-2024 12:02:32.299 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@6ace919c
[DEBUG] 29-02-2024 12:02:32.300 [main] BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@4005e485
[DEBUG] 29-02-2024 12:02:32.300 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@4005e485
[DEBUG] 29-02-2024 12:02:32.301 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@5f5c187d
[DEBUG] 29-02-2024 12:02:32.302 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@464400b3
[DEBUG] 29-02-2024 12:02:32.303 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@464400b3
[DEBUG] 29-02-2024 12:02:32.304 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@58182b96
[DEBUG] 29-02-2024 12:02:32.304 [main] BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@37d6dddc
[DEBUG] 29-02-2024 12:02:32.305 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@8f6b4ab
[DEBUG] 29-02-2024 12:02:32.307 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@8f6b4ab
[DEBUG] 29-02-2024 12:02:32.308 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@8f6b4ab
[DEBUG] 29-02-2024 12:02:32.309 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@6e517c9e
[DEBUG] 29-02-2024 12:02:32.310 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@6e517c9e
[DEBUG] 29-02-2024 12:02:32.311 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@6e517c9e
[DEBUG] 29-02-2024 12:02:32.312 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@770cae59
[DEBUG] 29-02-2024 12:02:32.313 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@770cae59
[DEBUG] 29-02-2024 12:02:32.314 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@770cae59
[DEBUG] 29-02-2024 12:02:32.315 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@76b5a559
[DEBUG] 29-02-2024 12:02:32.315 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@76b5a559
[DEBUG] 29-02-2024 12:02:32.316 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@76b5a559
[DEBUG] 29-02-2024 12:02:32.317 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@4bdb04c8
[DEBUG] 29-02-2024 12:02:32.318 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@4bdb04c8
[DEBUG] 29-02-2024 12:02:32.318 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@4bdb04c8
[DEBUG] 29-02-2024 12:02:32.319 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@2e8b24a1
[DEBUG] 29-02-2024 12:02:32.334 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@2e8b24a1
[DEBUG] 29-02-2024 12:02:32.336 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@3ce7394f
[DEBUG] 29-02-2024 12:02:32.336 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@3ce7394f
[DEBUG] 29-02-2024 12:02:32.337 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@6723cce7
[DEBUG] 29-02-2024 12:02:32.355 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@6723cce7
[DEBUG] 29-02-2024 12:02:32.356 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@6723cce7
[DEBUG] 29-02-2024 12:02:32.357 [main] BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@74cd798f
[DEBUG] 29-02-2024 12:02:32.358 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@314f59b
[DEBUG] 29-02-2024 12:02:32.358 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@314f59b
[DEBUG] 29-02-2024 12:02:32.359 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@63c99f7
[DEBUG] 29-02-2024 12:02:32.360 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@7f012923
[DEBUG] 29-02-2024 12:02:32.361 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@7f012923
[DEBUG] 29-02-2024 12:02:32.362 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@7f012923
[DEBUG] 29-02-2024 12:02:32.362 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@601f264d
[DEBUG] 29-02-2024 12:02:32.363 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@4403bff8
[DEBUG] 29-02-2024 12:02:32.364 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@261275ae
[DEBUG] 29-02-2024 12:02:32.364 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@502c087e
[DEBUG] 29-02-2024 12:02:32.365 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@502c087e
[DEBUG] 29-02-2024 12:02:32.376 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@49986178
[DEBUG] 29-02-2024 12:02:32.378 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@49986178
[DEBUG] 29-02-2024 12:02:32.379 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@10bdfbcc
[DEBUG] 29-02-2024 12:02:32.380 [main] BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@25b74370
[DEBUG] 29-02-2024 12:02:32.381 [main] BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@15e8c040
[DEBUG] 29-02-2024 12:02:32.382 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@1f71e024
[DEBUG] 29-02-2024 12:02:32.383 [main] BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@60ed0b9d
[DEBUG] 29-02-2024 12:02:32.383 [main] BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@7f5e6833
[DEBUG] 29-02-2024 12:02:32.396 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@2c674d58
[DEBUG] 29-02-2024 12:02:32.398 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@2c674d58
[DEBUG] 29-02-2024 12:02:32.399 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@3c07e830
[DEBUG] 29-02-2024 12:02:32.400 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@3c07e830
[DEBUG] 29-02-2024 12:02:32.401 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@34beadce
[DEBUG] 29-02-2024 12:02:32.401 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@34beadce
[DEBUG] 29-02-2024 12:02:32.402 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@382d549a
[DEBUG] 29-02-2024 12:02:32.403 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@382d549a
[DEBUG] 29-02-2024 12:02:32.404 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@2eb6d34a
[DEBUG] 29-02-2024 12:02:32.405 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@2eb6d34a
[DEBUG] 29-02-2024 12:02:32.406 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2d73e8c4
[DEBUG] 29-02-2024 12:02:32.406 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@6ce2e079
[DEBUG] 29-02-2024 12:02:32.407 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@3e39e0fb
[DEBUG] 29-02-2024 12:02:32.408 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@3e39e0fb
[DEBUG] 29-02-2024 12:02:32.409 [main] BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@260d48f5
[DEBUG] 29-02-2024 12:02:32.409 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@148ab138
[DEBUG] 29-02-2024 12:02:32.410 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@6f106af8
[DEBUG] 29-02-2024 12:02:32.411 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@1edf71d9
[DEBUG] 29-02-2024 12:02:32.412 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@1edf71d9
[DEBUG] 29-02-2024 12:02:32.412 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@52d9d817
[DEBUG] 29-02-2024 12:02:32.413 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@131ba005
[DEBUG] 29-02-2024 12:02:32.414 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@7f305f34
[DEBUG] 29-02-2024 12:02:32.414 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@7f305f34
[DEBUG] 29-02-2024 12:02:32.415 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@1a84a8b2
[DEBUG] 29-02-2024 12:02:32.416 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@1a84a8b2
[DEBUG] 29-02-2024 12:02:32.417 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@601d295
[DEBUG] 29-02-2024 12:02:32.418 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@601d295
[DEBUG] 29-02-2024 12:02:32.418 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@601d295
[DEBUG] 29-02-2024 12:02:32.422 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@485451d8
[DEBUG] 29-02-2024 12:02:32.429 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@485451d8
[DEBUG] 29-02-2024 12:02:32.430 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@485451d8
[DEBUG] 29-02-2024 12:02:32.436 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@35e07e19
[DEBUG] 29-02-2024 12:02:32.439 [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@a1e912f
[DEBUG] 29-02-2024 12:02:32.439 [main] BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@2036f83
[DEBUG] 29-02-2024 12:02:32.440 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@2036f83
[DEBUG] 29-02-2024 12:02:32.441 [main] BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@68b3248a
[DEBUG] 29-02-2024 12:02:32.441 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@68b3248a
[DEBUG] 29-02-2024 12:02:32.442 [main] BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@68b3248a
[DEBUG] 29-02-2024 12:02:32.443 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@5e158f33
[DEBUG] 29-02-2024 12:02:32.444 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@20fcea37
[DEBUG] 29-02-2024 12:02:32.445 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@399af6dc
[DEBUG] 29-02-2024 12:02:32.446 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@399af6dc
[DEBUG] 29-02-2024 12:02:32.447 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@48fc0211
[DEBUG] 29-02-2024 12:02:32.448 [main] BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@48fc0211
[DEBUG] 29-02-2024 12:02:32.448 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@48fc0211
[DEBUG] 29-02-2024 12:02:32.449 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@3ae2702a
[DEBUG] 29-02-2024 12:02:32.450 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@3ae2702a
[DEBUG] 29-02-2024 12:02:32.451 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@7d088813
[DEBUG] 29-02-2024 12:02:32.451 [main] BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@7d088813
[DEBUG] 29-02-2024 12:02:32.452 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@134abd78
[DEBUG] 29-02-2024 12:02:32.470 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@134abd78
[DEBUG] 29-02-2024 12:02:32.472 [main] BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@3b0ed98a
[DEBUG] 29-02-2024 12:02:32.474 [main] BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@3b0ed98a
[DEBUG] 29-02-2024 12:02:32.480 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@12448de1
[DEBUG] 29-02-2024 12:02:32.481 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@12448de1
[DEBUG] 29-02-2024 12:02:32.482 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@2b35c7aa
[DEBUG] 29-02-2024 12:02:32.511 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@a95cb11
[DEBUG] 29-02-2024 12:02:32.512 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@a95cb11
[DEBUG] 29-02-2024 12:02:32.516 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@6029f2a4
[DEBUG] 29-02-2024 12:02:32.518 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@42576db9
[DEBUG] 29-02-2024 12:02:32.520 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@30358dc7
[DEBUG] 29-02-2024 12:02:32.522 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@7fac18dc
[DEBUG] 29-02-2024 12:02:32.523 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@50bf795f
[DEBUG] 29-02-2024 12:02:32.525 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@29fcfc54
[DEBUG] 29-02-2024 12:02:32.526 [main] BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@353b0719
[DEBUG] 29-02-2024 12:02:32.526 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@2a4e939a
[DEBUG] 29-02-2024 12:02:32.527 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@110620d
[DEBUG] 29-02-2024 12:02:34.480 [main] DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@420b55ed) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@f237ae7)
[DEBUG] 29-02-2024 12:02:34.488 [main] JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
[DEBUG] 29-02-2024 12:02:34.489 [main] JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 29-02-2024 12:02:34.515 [main] BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@3f80d8c
[DEBUG] 29-02-2024 12:02:34.516 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@3f80d8c
[DEBUG] 29-02-2024 12:02:34.516 [main] BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@a95cb11`
[DEBUG] 29-02-2024 12:02:34.522 [main] JdbcTypeRegistry - addDescriptor(3100, NumericTypeDescriptor) replaced previous registration(org.hibernate.dialect.PostgreSQLIntervalSecondJdbcType@2a661215)
[DEBUG] 29-02-2024 12:02:34.544 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 29-02-2024 12:02:34.545 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 29-02-2024 12:02:34.546 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 29-02-2024 12:02:34.546 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 29-02-2024 12:02:34.547 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 29-02-2024 12:02:34.547 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 29-02-2024 12:02:34.550 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 29-02-2024 12:02:34.551 [main] BasicTypeRegistry - Adding type registration OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 29-02-2024 12:02:34.551 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 29-02-2024 12:02:34.562 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@d6d683e] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@42cfd794]
[INFO ] 29-02-2024 12:02:35.441 [main] BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
[INFO ] 29-02-2024 12:02:37.871 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 29-02-2024 12:02:37.874 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@d6d683e] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@5c552f08]
[TRACE] 29-02-2024 12:02:37.884 [main] TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@5c552f08] for TypeConfiguration
[INFO ] 29-02-2024 12:02:39.755 [main] SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
[INFO ] 29-02-2024 12:02:39.757 [main] TestDispatcherServlet - Initializing Servlet ''
[INFO ] 29-02-2024 12:02:39.768 [main] TestDispatcherServlet - Completed initialization in 4 ms
[INFO ] 29-02-2024 12:02:40.156 [main] TestCRUDUserProducts - Started TestCRUDUserProducts in 15.079 seconds (process running for 19.735)
[TRACE] 29-02-2024 12:02:40.780 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@5c552f08] for TypeConfiguration
[DEBUG] 29-02-2024 12:02:40.781 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@7558f447] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@5c552f08]
[INFO ] 29-02-2024 12:03:21.482 [background-preinit] Version - HV000001: Hibernate Validator 8.0.1.Final
[INFO ] 29-02-2024 12:03:21.654 [main] TestCRUDUserProducts - Starting TestCRUDUserProducts using Java 17.0.10 with PID 1622617 (started by dima in /home/dima/backend_microservice/UserProductsMicroService)
[INFO ] 29-02-2024 12:03:21.667 [main] TestCRUDUserProducts - No active profile set, falling back to 1 default profile: "default"
[INFO ] 29-02-2024 12:03:22.865 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO ] 29-02-2024 12:03:23.422 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 535 ms. Found 1 JPA repository interfaces.
[INFO ] 29-02-2024 12:03:28.420 [main] Version - HHH000412: Hibernate ORM core version 6.2.6.Final
[INFO ] 29-02-2024 12:03:28.431 [main] Environment - HHH000406: Using bytecode reflection optimizer
[DEBUG] 29-02-2024 12:03:28.948 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@1850f2da
[DEBUG] 29-02-2024 12:03:28.949 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@1850f2da
[DEBUG] 29-02-2024 12:03:28.950 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@1850f2da
[DEBUG] 29-02-2024 12:03:28.950 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@38d42ab7
[DEBUG] 29-02-2024 12:03:28.951 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@38d42ab7
[DEBUG] 29-02-2024 12:03:28.952 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@6ace919c
[DEBUG] 29-02-2024 12:03:28.953 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@6ace919c
[DEBUG] 29-02-2024 12:03:28.954 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@4005e485
[DEBUG] 29-02-2024 12:03:28.955 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@4005e485
[DEBUG] 29-02-2024 12:03:28.955 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@5f5c187d
[DEBUG] 29-02-2024 12:03:28.956 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@5f5c187d
[DEBUG] 29-02-2024 12:03:28.956 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@5f5c187d
[DEBUG] 29-02-2024 12:03:28.957 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@464400b3
[DEBUG] 29-02-2024 12:03:28.958 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@464400b3
[DEBUG] 29-02-2024 12:03:28.959 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@464400b3
[DEBUG] 29-02-2024 12:03:28.959 [main] BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@58182b96
[DEBUG] 29-02-2024 12:03:28.960 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@58182b96
[DEBUG] 29-02-2024 12:03:28.960 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@37d6dddc
[DEBUG] 29-02-2024 12:03:28.961 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@8f6b4ab
[DEBUG] 29-02-2024 12:03:28.962 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@8f6b4ab
[DEBUG] 29-02-2024 12:03:28.977 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@6e517c9e
[DEBUG] 29-02-2024 12:03:28.978 [main] BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@770cae59
[DEBUG] 29-02-2024 12:03:28.979 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@76b5a559
[DEBUG] 29-02-2024 12:03:28.979 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@76b5a559
[DEBUG] 29-02-2024 12:03:28.980 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@76b5a559
[DEBUG] 29-02-2024 12:03:28.981 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@4bdb04c8
[DEBUG] 29-02-2024 12:03:28.981 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@4bdb04c8
[DEBUG] 29-02-2024 12:03:28.982 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@4bdb04c8
[DEBUG] 29-02-2024 12:03:28.983 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@2e8b24a1
[DEBUG] 29-02-2024 12:03:28.983 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@2e8b24a1
[DEBUG] 29-02-2024 12:03:28.984 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@2e8b24a1
[DEBUG] 29-02-2024 12:03:28.985 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@3ce7394f
[DEBUG] 29-02-2024 12:03:28.986 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@3ce7394f
[DEBUG] 29-02-2024 12:03:28.987 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@3ce7394f
[DEBUG] 29-02-2024 12:03:28.988 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@6723cce7
[DEBUG] 29-02-2024 12:03:28.988 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@6723cce7
[DEBUG] 29-02-2024 12:03:28.989 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@6723cce7
[DEBUG] 29-02-2024 12:03:28.990 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@74cd798f
[DEBUG] 29-02-2024 12:03:28.990 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@74cd798f
[DEBUG] 29-02-2024 12:03:28.991 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@314f59b
[DEBUG] 29-02-2024 12:03:28.992 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@314f59b
[DEBUG] 29-02-2024 12:03:28.992 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@63c99f7
[DEBUG] 29-02-2024 12:03:28.993 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@63c99f7
[DEBUG] 29-02-2024 12:03:28.994 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@63c99f7
[DEBUG] 29-02-2024 12:03:28.994 [main] BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@7f012923
[DEBUG] 29-02-2024 12:03:28.995 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@601f264d
[DEBUG] 29-02-2024 12:03:28.995 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@601f264d
[DEBUG] 29-02-2024 12:03:28.996 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@4403bff8
[DEBUG] 29-02-2024 12:03:28.997 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@261275ae
[DEBUG] 29-02-2024 12:03:28.997 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@261275ae
[DEBUG] 29-02-2024 12:03:28.998 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@261275ae
[DEBUG] 29-02-2024 12:03:28.998 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@502c087e
[DEBUG] 29-02-2024 12:03:28.999 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@49986178
[DEBUG] 29-02-2024 12:03:28.999 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@10bdfbcc
[DEBUG] 29-02-2024 12:03:29.000 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@25b74370
[DEBUG] 29-02-2024 12:03:29.000 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@25b74370
[DEBUG] 29-02-2024 12:03:29.001 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@15e8c040
[DEBUG] 29-02-2024 12:03:29.002 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@15e8c040
[DEBUG] 29-02-2024 12:03:29.002 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@1f71e024
[DEBUG] 29-02-2024 12:03:29.003 [main] BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@60ed0b9d
[DEBUG] 29-02-2024 12:03:29.003 [main] BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@7f5e6833
[DEBUG] 29-02-2024 12:03:29.004 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@2c674d58
[DEBUG] 29-02-2024 12:03:29.004 [main] BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@3c07e830
[DEBUG] 29-02-2024 12:03:29.005 [main] BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@34beadce
[DEBUG] 29-02-2024 12:03:29.006 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@382d549a
[DEBUG] 29-02-2024 12:03:29.006 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@382d549a
[DEBUG] 29-02-2024 12:03:29.006 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@2eb6d34a
[DEBUG] 29-02-2024 12:03:29.007 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@2eb6d34a
[DEBUG] 29-02-2024 12:03:29.008 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@2d73e8c4
[DEBUG] 29-02-2024 12:03:29.008 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@2d73e8c4
[DEBUG] 29-02-2024 12:03:29.009 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@6ce2e079
[DEBUG] 29-02-2024 12:03:29.009 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@6ce2e079
[DEBUG] 29-02-2024 12:03:29.010 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@3e39e0fb
[DEBUG] 29-02-2024 12:03:29.010 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@3e39e0fb
[DEBUG] 29-02-2024 12:03:29.011 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@260d48f5
[DEBUG] 29-02-2024 12:03:29.011 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@148ab138
[DEBUG] 29-02-2024 12:03:29.012 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@6f106af8
[DEBUG] 29-02-2024 12:03:29.012 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@6f106af8
[DEBUG] 29-02-2024 12:03:29.013 [main] BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@1edf71d9
[DEBUG] 29-02-2024 12:03:29.013 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@52d9d817
[DEBUG] 29-02-2024 12:03:29.014 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@131ba005
[DEBUG] 29-02-2024 12:03:29.014 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@7f305f34
[DEBUG] 29-02-2024 12:03:29.015 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@7f305f34
[DEBUG] 29-02-2024 12:03:29.015 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@1a84a8b2
[DEBUG] 29-02-2024 12:03:29.017 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@601d295
[DEBUG] 29-02-2024 12:03:29.029 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@485451d8
[DEBUG] 29-02-2024 12:03:29.030 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@485451d8
[DEBUG] 29-02-2024 12:03:29.030 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@35e07e19
[DEBUG] 29-02-2024 12:03:29.031 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@35e07e19
[DEBUG] 29-02-2024 12:03:29.032 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@a1e912f
[DEBUG] 29-02-2024 12:03:29.032 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@a1e912f
[DEBUG] 29-02-2024 12:03:29.033 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@a1e912f
[DEBUG] 29-02-2024 12:03:29.033 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@2036f83
[DEBUG] 29-02-2024 12:03:29.033 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@2036f83
[DEBUG] 29-02-2024 12:03:29.034 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@2036f83
[DEBUG] 29-02-2024 12:03:29.034 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@68b3248a
[DEBUG] 29-02-2024 12:03:29.035 [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@5e158f33
[DEBUG] 29-02-2024 12:03:29.035 [main] BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@20fcea37
[DEBUG] 29-02-2024 12:03:29.036 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@20fcea37
[DEBUG] 29-02-2024 12:03:29.036 [main] BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@399af6dc
[DEBUG] 29-02-2024 12:03:29.037 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@399af6dc
[DEBUG] 29-02-2024 12:03:29.037 [main] BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@399af6dc
[DEBUG] 29-02-2024 12:03:29.038 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@48fc0211
[DEBUG] 29-02-2024 12:03:29.038 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@3ae2702a
[DEBUG] 29-02-2024 12:03:29.039 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@7d088813
[DEBUG] 29-02-2024 12:03:29.039 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@7d088813
[DEBUG] 29-02-2024 12:03:29.040 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@134abd78
[DEBUG] 29-02-2024 12:03:29.040 [main] BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@134abd78
[DEBUG] 29-02-2024 12:03:29.041 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@134abd78
[DEBUG] 29-02-2024 12:03:29.041 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@3b0ed98a
[DEBUG] 29-02-2024 12:03:29.042 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@3b0ed98a
[DEBUG] 29-02-2024 12:03:29.042 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@12448de1
[DEBUG] 29-02-2024 12:03:29.043 [main] BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@12448de1
[DEBUG] 29-02-2024 12:03:29.043 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@2b35c7aa
[DEBUG] 29-02-2024 12:03:29.044 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@2b35c7aa
[DEBUG] 29-02-2024 12:03:29.044 [main] BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@6dd20ec9
[DEBUG] 29-02-2024 12:03:29.044 [main] BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@6dd20ec9
[DEBUG] 29-02-2024 12:03:29.045 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@20dd5870
[DEBUG] 29-02-2024 12:03:29.045 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@20dd5870
[DEBUG] 29-02-2024 12:03:29.046 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@1640f20f
[DEBUG] 29-02-2024 12:03:29.083 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@6313b441
[DEBUG] 29-02-2024 12:03:29.084 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@6313b441
[DEBUG] 29-02-2024 12:03:29.088 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@7fac18dc
[DEBUG] 29-02-2024 12:03:29.088 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@50bf795f
[DEBUG] 29-02-2024 12:03:29.089 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@29fcfc54
[DEBUG] 29-02-2024 12:03:29.090 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@353b0719
[DEBUG] 29-02-2024 12:03:29.090 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@2a4e939a
[DEBUG] 29-02-2024 12:03:29.090 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@110620d
[DEBUG] 29-02-2024 12:03:29.093 [main] BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@4f402027
[DEBUG] 29-02-2024 12:03:29.094 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@22aee519
[DEBUG] 29-02-2024 12:03:29.094 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@7c226095
[DEBUG] 29-02-2024 12:03:31.003 [main] DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6fe5da76) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@77d95e5a)
[DEBUG] 29-02-2024 12:03:31.010 [main] JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
[DEBUG] 29-02-2024 12:03:31.010 [main] JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 29-02-2024 12:03:31.036 [main] BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@1cb44a2f
[DEBUG] 29-02-2024 12:03:31.036 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@1cb44a2f
[DEBUG] 29-02-2024 12:03:31.037 [main] BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@6313b441`
[DEBUG] 29-02-2024 12:03:31.042 [main] JdbcTypeRegistry - addDescriptor(3100, NumericTypeDescriptor) replaced previous registration(org.hibernate.dialect.PostgreSQLIntervalSecondJdbcType@638d2ce3)
[DEBUG] 29-02-2024 12:03:31.059 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 29-02-2024 12:03:31.059 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 29-02-2024 12:03:31.060 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 29-02-2024 12:03:31.060 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 29-02-2024 12:03:31.060 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 29-02-2024 12:03:31.061 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 29-02-2024 12:03:31.064 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 29-02-2024 12:03:31.064 [main] BasicTypeRegistry - Adding type registration OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 29-02-2024 12:03:31.064 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 29-02-2024 12:03:31.068 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@71beada8] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@17f41739]
[INFO ] 29-02-2024 12:03:31.930 [main] BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
[INFO ] 29-02-2024 12:03:33.981 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 29-02-2024 12:03:33.984 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@71beada8] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@1107c465]
[TRACE] 29-02-2024 12:03:33.993 [main] TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@1107c465] for TypeConfiguration
[INFO ] 29-02-2024 12:03:35.958 [main] SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
[INFO ] 29-02-2024 12:03:35.959 [main] TestDispatcherServlet - Initializing Servlet ''
[INFO ] 29-02-2024 12:03:35.994 [main] TestDispatcherServlet - Completed initialization in 21 ms
[INFO ] 29-02-2024 12:03:36.461 [main] TestCRUDUserProducts - Started TestCRUDUserProducts in 15.919 seconds (process running for 20.223)
[TRACE] 29-02-2024 12:03:37.318 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@1107c465] for TypeConfiguration
[DEBUG] 29-02-2024 12:03:37.319 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@73838af2] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@1107c465]
[INFO ] 29-02-2024 12:35:28.872 [background-preinit] Version - HV000001: Hibernate Validator 8.0.1.Final
[INFO ] 29-02-2024 12:35:29.454 [main] TestSpringBootApplication - Starting TestSpringBootApplication using Java 17.0.10 with PID 1638697 (/home/dima/backend_microservice/UserProductsMicroService/target/classes started by dima in /home/dima/backend_microservice/UserProductsMicroService)
[INFO ] 29-02-2024 12:35:29.497 [main] TestSpringBootApplication - No active profile set, falling back to 1 default profile: "default"
[INFO ] 29-02-2024 12:35:32.345 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO ] 29-02-2024 12:35:32.872 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 504 ms. Found 1 JPA repository interfaces.
[ERROR] 29-02-2024 12:35:34.663 [main] AprLifecycleListener - An incompatible version [1.2.23] of the Apache Tomcat Native library is installed, while Tomcat requires version [1.2.34]
[INFO ] 29-02-2024 12:35:35.481 [main] TomcatWebServer - Tomcat initialized with port(s): 8300 (http)
[INFO ] 29-02-2024 12:35:35.506 [main] Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8300"]
[INFO ] 29-02-2024 12:35:35.512 [main] StandardService - Starting service [Tomcat]
[INFO ] 29-02-2024 12:35:35.513 [main] StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.11]
[INFO ] 29-02-2024 12:35:36.504 [main] TldScanner - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
[INFO ] 29-02-2024 12:35:36.526 [main] [/users_products_api] - Initializing Spring embedded WebApplicationContext
[INFO ] 29-02-2024 12:35:36.531 [main] ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 6402 ms
[INFO ] 29-02-2024 12:35:36.916 [main] Version - HHH000412: Hibernate ORM core version 6.2.6.Final
[INFO ] 29-02-2024 12:35:36.922 [main] Environment - HHH000406: Using bytecode reflection optimizer
[DEBUG] 29-02-2024 12:35:37.297 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@5514579e
[DEBUG] 29-02-2024 12:35:37.298 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@5514579e
[DEBUG] 29-02-2024 12:35:37.300 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@5514579e
[DEBUG] 29-02-2024 12:35:37.300 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@58c42c8c
[DEBUG] 29-02-2024 12:35:37.301 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@58c42c8c
[DEBUG] 29-02-2024 12:35:37.301 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@3af236d0
[DEBUG] 29-02-2024 12:35:37.302 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@3af236d0
[DEBUG] 29-02-2024 12:35:37.302 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@23564dd2
[DEBUG] 29-02-2024 12:35:37.303 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@23564dd2
[DEBUG] 29-02-2024 12:35:37.303 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@54895681
[DEBUG] 29-02-2024 12:35:37.303 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@54895681
[DEBUG] 29-02-2024 12:35:37.304 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@54895681
[DEBUG] 29-02-2024 12:35:37.304 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@2dd0a0d0
[DEBUG] 29-02-2024 12:35:37.305 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@2dd0a0d0
[DEBUG] 29-02-2024 12:35:37.305 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@2dd0a0d0
[DEBUG] 29-02-2024 12:35:37.306 [main] BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@6bf570c
[DEBUG] 29-02-2024 12:35:37.306 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@6bf570c
[DEBUG] 29-02-2024 12:35:37.307 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@1796b2d4
[DEBUG] 29-02-2024 12:35:37.307 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@935d3f9
[DEBUG] 29-02-2024 12:35:37.308 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@935d3f9
[DEBUG] 29-02-2024 12:35:37.308 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@214b342f
[DEBUG] 29-02-2024 12:35:37.308 [main] BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@5db0003d
[DEBUG] 29-02-2024 12:35:37.309 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@7f12094d
[DEBUG] 29-02-2024 12:35:37.309 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@7f12094d
[DEBUG] 29-02-2024 12:35:37.310 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@7f12094d
[DEBUG] 29-02-2024 12:35:37.310 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@589fb74d
[DEBUG] 29-02-2024 12:35:37.310 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@589fb74d
[DEBUG] 29-02-2024 12:35:37.311 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@589fb74d
[DEBUG] 29-02-2024 12:35:37.311 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@200d1a3d
[DEBUG] 29-02-2024 12:35:37.312 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@200d1a3d
[DEBUG] 29-02-2024 12:35:37.312 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@200d1a3d
[DEBUG] 29-02-2024 12:35:37.313 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@7de147e9
[DEBUG] 29-02-2024 12:35:37.313 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@7de147e9
[DEBUG] 29-02-2024 12:35:37.314 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@7de147e9
[DEBUG] 29-02-2024 12:35:37.322 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@12567179
[DEBUG] 29-02-2024 12:35:37.322 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@12567179
[DEBUG] 29-02-2024 12:35:37.323 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@12567179
[DEBUG] 29-02-2024 12:35:37.323 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@37d699a1
[DEBUG] 29-02-2024 12:35:37.323 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@37d699a1
[DEBUG] 29-02-2024 12:35:37.324 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@7f42b194
[DEBUG] 29-02-2024 12:35:37.324 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@7f42b194
[DEBUG] 29-02-2024 12:35:37.324 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@8eb6f9a
[DEBUG] 29-02-2024 12:35:37.325 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@8eb6f9a
[DEBUG] 29-02-2024 12:35:37.325 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@8eb6f9a
[DEBUG] 29-02-2024 12:35:37.325 [main] BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@29170a47
[DEBUG] 29-02-2024 12:35:37.326 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@2a8f8555
[DEBUG] 29-02-2024 12:35:37.326 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@2a8f8555
[DEBUG] 29-02-2024 12:35:37.326 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@402b4f81
[DEBUG] 29-02-2024 12:35:37.327 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@13ef7fa1
[DEBUG] 29-02-2024 12:35:37.327 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@13ef7fa1
[DEBUG] 29-02-2024 12:35:37.327 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@13ef7fa1
[DEBUG] 29-02-2024 12:35:37.328 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@23b1aa9
[DEBUG] 29-02-2024 12:35:37.328 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@54489296
[DEBUG] 29-02-2024 12:35:37.328 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@4e8598d9
[DEBUG] 29-02-2024 12:35:37.329 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@267ff4df
[DEBUG] 29-02-2024 12:35:37.329 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@267ff4df
[DEBUG] 29-02-2024 12:35:37.330 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@7c4b5ceb
[DEBUG] 29-02-2024 12:35:37.330 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@7c4b5ceb
[DEBUG] 29-02-2024 12:35:37.330 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@6c07add6
[DEBUG] 29-02-2024 12:35:37.330 [main] BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@e26a3df
[DEBUG] 29-02-2024 12:35:37.331 [main] BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@57a667c8
[DEBUG] 29-02-2024 12:35:37.331 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@712cd5d3
[DEBUG] 29-02-2024 12:35:37.332 [main] BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@2094bf3d
[DEBUG] 29-02-2024 12:35:37.332 [main] BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@1b17d8ab
[DEBUG] 29-02-2024 12:35:37.332 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@7f6b7426
[DEBUG] 29-02-2024 12:35:37.332 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@7f6b7426
[DEBUG] 29-02-2024 12:35:37.333 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@687eb455
[DEBUG] 29-02-2024 12:35:37.333 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@687eb455
[DEBUG] 29-02-2024 12:35:37.333 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@6d969330
[DEBUG] 29-02-2024 12:35:37.334 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@6d969330
[DEBUG] 29-02-2024 12:35:37.334 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@4861cca9
[DEBUG] 29-02-2024 12:35:37.334 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@4861cca9
[DEBUG] 29-02-2024 12:35:37.335 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@6c8f4bc7
[DEBUG] 29-02-2024 12:35:37.335 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@6c8f4bc7
[DEBUG] 29-02-2024 12:35:37.335 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@714e861f
[DEBUG] 29-02-2024 12:35:37.336 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@28989415
[DEBUG] 29-02-2024 12:35:37.337 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@6eda012b
[DEBUG] 29-02-2024 12:35:37.337 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@6eda012b
[DEBUG] 29-02-2024 12:35:37.337 [main] BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@781dbe44
[DEBUG] 29-02-2024 12:35:37.338 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@7d66a126
[DEBUG] 29-02-2024 12:35:37.338 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@1132baa3
[DEBUG] 29-02-2024 12:35:37.338 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@2fdf22f7
[DEBUG] 29-02-2024 12:35:37.339 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@2fdf22f7
[DEBUG] 29-02-2024 12:35:37.339 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@3a2546d6
[DEBUG] 29-02-2024 12:35:37.339 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@7282af25
[DEBUG] 29-02-2024 12:35:37.339 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@7661e474
[DEBUG] 29-02-2024 12:35:37.340 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@7661e474
[DEBUG] 29-02-2024 12:35:37.340 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@20ffb8d5
[DEBUG] 29-02-2024 12:35:37.340 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@20ffb8d5
[DEBUG] 29-02-2024 12:35:37.341 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@307c59ea
[DEBUG] 29-02-2024 12:35:37.341 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@307c59ea
[DEBUG] 29-02-2024 12:35:37.341 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@307c59ea
[DEBUG] 29-02-2024 12:35:37.342 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@57e03347
[DEBUG] 29-02-2024 12:35:37.342 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@57e03347
[DEBUG] 29-02-2024 12:35:37.342 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@57e03347
[DEBUG] 29-02-2024 12:35:37.343 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@2edb2f8b
[DEBUG] 29-02-2024 12:35:37.343 [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@733f1395
[DEBUG] 29-02-2024 12:35:37.343 [main] BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@21dea711
[DEBUG] 29-02-2024 12:35:37.344 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@21dea711
[DEBUG] 29-02-2024 12:35:37.344 [main] BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@7772d266
[DEBUG] 29-02-2024 12:35:37.344 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@7772d266
[DEBUG] 29-02-2024 12:35:37.344 [main] BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@7772d266
[DEBUG] 29-02-2024 12:35:37.345 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@a21c74
[DEBUG] 29-02-2024 12:35:37.345 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@b8a144e
[DEBUG] 29-02-2024 12:35:37.345 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@5fb8dc01
[DEBUG] 29-02-2024 12:35:37.346 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@5fb8dc01
[DEBUG] 29-02-2024 12:35:37.346 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@3e38c472
[DEBUG] 29-02-2024 12:35:37.346 [main] BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@3e38c472
[DEBUG] 29-02-2024 12:35:37.347 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@3e38c472
[DEBUG] 29-02-2024 12:35:37.347 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@2ee92e7d
[DEBUG] 29-02-2024 12:35:37.347 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@2ee92e7d
[DEBUG] 29-02-2024 12:35:37.348 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@759a678a
[DEBUG] 29-02-2024 12:35:37.348 [main] BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@759a678a
[DEBUG] 29-02-2024 12:35:37.349 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@6cdbe5ec
[DEBUG] 29-02-2024 12:35:37.349 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@6cdbe5ec
[DEBUG] 29-02-2024 12:35:37.349 [main] BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@14b8a751
[DEBUG] 29-02-2024 12:35:37.350 [main] BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@14b8a751
[DEBUG] 29-02-2024 12:35:37.350 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@7345f97d
[DEBUG] 29-02-2024 12:35:37.350 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@7345f97d
[DEBUG] 29-02-2024 12:35:37.351 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@554566a8
[DEBUG] 29-02-2024 12:35:37.364 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@24691c5
[DEBUG] 29-02-2024 12:35:37.365 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@24691c5
[DEBUG] 29-02-2024 12:35:37.368 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@5abf6a99
[DEBUG] 29-02-2024 12:35:37.368 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@dc59ec2
[DEBUG] 29-02-2024 12:35:37.369 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@375084c9
[DEBUG] 29-02-2024 12:35:37.369 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@bd93bc3
[DEBUG] 29-02-2024 12:35:37.370 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@2a136383
[DEBUG] 29-02-2024 12:35:37.370 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@b01cb8d
[DEBUG] 29-02-2024 12:35:37.371 [main] BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@38c460e8
[DEBUG] 29-02-2024 12:35:37.371 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@7a814310
[DEBUG] 29-02-2024 12:35:37.371 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@4bbf38b8
[DEBUG] 29-02-2024 12:35:38.462 [main] DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@53f495f0) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5efe5b25)
[DEBUG] 29-02-2024 12:35:38.472 [main] JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
[DEBUG] 29-02-2024 12:35:38.472 [main] JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 29-02-2024 12:35:38.495 [main] BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@213835b6
[DEBUG] 29-02-2024 12:35:38.495 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@213835b6
[DEBUG] 29-02-2024 12:35:38.496 [main] BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@24691c5`
[DEBUG] 29-02-2024 12:35:38.498 [main] JdbcTypeRegistry - addDescriptor(3100, NumericTypeDescriptor) replaced previous registration(org.hibernate.dialect.PostgreSQLIntervalSecondJdbcType@5871a482)
[DEBUG] 29-02-2024 12:35:38.513 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 29-02-2024 12:35:38.514 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 29-02-2024 12:35:38.514 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 29-02-2024 12:35:38.514 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 29-02-2024 12:35:38.515 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 29-02-2024 12:35:38.515 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 29-02-2024 12:35:38.517 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 29-02-2024 12:35:38.518 [main] BasicTypeRegistry - Adding type registration OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 29-02-2024 12:35:38.518 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 29-02-2024 12:35:38.521 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@504b8705] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@24a8e40d]
[INFO ] 29-02-2024 12:35:39.438 [main] BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
[INFO ] 29-02-2024 12:35:42.600 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 29-02-2024 12:35:42.603 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@504b8705] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@611a91df]
[TRACE] 29-02-2024 12:35:42.612 [main] TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@611a91df] for TypeConfiguration
[WARN ] 29-02-2024 12:35:43.649 [main] JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[INFO ] 29-02-2024 12:35:44.555 [main] Http11NioProtocol - Starting ProtocolHandler ["http-nio-8300"]
[INFO ] 29-02-2024 12:35:44.622 [main] TomcatWebServer - Tomcat started on port(s): 8300 (http) with context path '/users_products_api'
[INFO ] 29-02-2024 12:35:44.651 [main] TestSpringBootApplication - Started TestSpringBootApplication in 16.876 seconds (process running for 20.398)
[INFO ] 29-02-2024 12:39:19.609 [http-nio-8300-exec-1] [/users_products_api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[INFO ] 29-02-2024 12:39:19.611 [http-nio-8300-exec-1] DispatcherServlet - Initializing Servlet 'dispatcherServlet'
[INFO ] 29-02-2024 12:39:19.616 [http-nio-8300-exec-1] DispatcherServlet - Completed initialization in 5 ms
[WARN ] 29-02-2024 12:39:50.231 [http-nio-8300-exec-3] DefaultHandlerExceptionResolver - Resolved [org.springframework.web.HttpMediaTypeNotSupportedException: Content-Type 'application/x-www-form-urlencoded;charset=UTF-8' is not supported]
[WARN ] 29-02-2024 12:40:54.456 [http-nio-8300-exec-5] DefaultHandlerExceptionResolver - Resolved [org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Cannot deserialize value of type `java.time.LocalDateTime` from String "2023-01-03 23:59:29": Failed to deserialize java.time.LocalDateTime: (java.time.format.DateTimeParseException) Text '2023-01-03 23:59:29' could not be parsed at index 10]
[ERROR] 29-02-2024 12:41:21.614 [http-nio-8300-exec-4] [dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [/users_products_api] threw exception [Request processing failed: java.lang.ClassCastException: class org.springframework.orm.jpa.EntityManagerHolder cannot be cast to class org.springframework.orm.hibernate5.SessionHolder (org.springframework.orm.jpa.EntityManagerHolder and org.springframework.orm.hibernate5.SessionHolder are in unnamed module of loader 'app')] with root cause
java.lang.ClassCastException: class org.springframework.orm.jpa.EntityManagerHolder cannot be cast to class org.springframework.orm.hibernate5.SessionHolder (org.springframework.orm.jpa.EntityManagerHolder and org.springframework.orm.hibernate5.SessionHolder are in unnamed module of loader 'app')
	at org.springframework.orm.hibernate5.HibernateTransactionManager.doGetTransaction(HibernateTransactionManager.java:428) ~[spring-orm-6.0.11.jar:6.0.11]
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:347) ~[spring-tx-6.0.11.jar:6.0.11]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.createTransactionIfNecessary(TransactionAspectSupport.java:601) ~[spring-tx-6.0.11.jar:6.0.11]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:385) ~[spring-tx-6.0.11.jar:6.0.11]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.0.11.jar:6.0.11]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.0.11.jar:6.0.11]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:756) ~[spring-aop-6.0.11.jar:6.0.11]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708) ~[spring-aop-6.0.11.jar:6.0.11]
	at DAO.DAOUserProducts$$SpringCGLIB$$0.addedProductForUser(<generated>) ~[classes/:?]
	at controller.CRUDUserProducts.addedProductUser(CRUDUserProducts.java:27) ~[classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:568) ~[?:?]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205) ~[spring-web-6.0.11.jar:6.0.11]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150) ~[spring-web-6.0.11.jar:6.0.11]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.0.11.jar:6.0.11]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884) ~[spring-webmvc-6.0.11.jar:6.0.11]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797) ~[spring-webmvc-6.0.11.jar:6.0.11]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.0.11.jar:6.0.11]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081) ~[spring-webmvc-6.0.11.jar:6.0.11]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974) ~[spring-webmvc-6.0.11.jar:6.0.11]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011) ~[spring-webmvc-6.0.11.jar:6.0.11]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914) ~[spring-webmvc-6.0.11.jar:6.0.11]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590) ~[tomcat-embed-core-10.1.11.jar:6.0]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.0.11.jar:6.0.11]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.11.jar:6.0]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205) ~[tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149) ~[tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.11.jar:10.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174) ~[tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149) ~[tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.0.11.jar:6.0.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.0.11.jar:6.0.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174) ~[tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149) ~[tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.0.11.jar:6.0.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.0.11.jar:6.0.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174) ~[tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149) ~[tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.0.11.jar:6.0.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.0.11.jar:6.0.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174) ~[tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149) ~[tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:166) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at java.lang.Thread.run(Thread.java:840) [?:?]
[TRACE] 29-02-2024 12:43:29.338 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@611a91df] for TypeConfiguration
[DEBUG] 29-02-2024 12:43:29.339 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@5d8337e0] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@611a91df]
[INFO ] 29-02-2024 12:43:40.371 [background-preinit] Version - HV000001: Hibernate Validator 8.0.1.Final
[INFO ] 29-02-2024 12:43:40.485 [main] TestSpringBootApplication - Starting TestSpringBootApplication using Java 17.0.10 with PID 1643055 (/home/dima/backend_microservice/UserProductsMicroService/target/classes started by dima in /home/dima/backend_microservice/UserProductsMicroService)
[INFO ] 29-02-2024 12:43:40.526 [main] TestSpringBootApplication - No active profile set, falling back to 1 default profile: "default"
[INFO ] 29-02-2024 12:43:42.525 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO ] 29-02-2024 12:43:42.997 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 445 ms. Found 1 JPA repository interfaces.
[ERROR] 29-02-2024 12:43:44.654 [main] AprLifecycleListener - An incompatible version [1.2.23] of the Apache Tomcat Native library is installed, while Tomcat requires version [1.2.34]
[INFO ] 29-02-2024 12:43:45.616 [main] TomcatWebServer - Tomcat initialized with port(s): 8300 (http)
[INFO ] 29-02-2024 12:43:45.641 [main] Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8300"]
[INFO ] 29-02-2024 12:43:45.653 [main] StandardService - Starting service [Tomcat]
[INFO ] 29-02-2024 12:43:45.655 [main] StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.11]
[INFO ] 29-02-2024 12:43:47.133 [main] TldScanner - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
[INFO ] 29-02-2024 12:43:47.154 [main] [/users_products_api] - Initializing Spring embedded WebApplicationContext
[INFO ] 29-02-2024 12:43:47.160 [main] ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 6463 ms
[INFO ] 29-02-2024 12:43:47.618 [main] Version - HHH000412: Hibernate ORM core version 6.2.6.Final
[INFO ] 29-02-2024 12:43:47.624 [main] Environment - HHH000406: Using bytecode reflection optimizer
[DEBUG] 29-02-2024 12:43:48.014 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@2dd0a0d0
[DEBUG] 29-02-2024 12:43:48.015 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@2dd0a0d0
[DEBUG] 29-02-2024 12:43:48.016 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@2dd0a0d0
[DEBUG] 29-02-2024 12:43:48.016 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@6bf570c
[DEBUG] 29-02-2024 12:43:48.017 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@6bf570c
[DEBUG] 29-02-2024 12:43:48.017 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@1796b2d4
[DEBUG] 29-02-2024 12:43:48.018 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@1796b2d4
[DEBUG] 29-02-2024 12:43:48.019 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@935d3f9
[DEBUG] 29-02-2024 12:43:48.019 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@935d3f9
[DEBUG] 29-02-2024 12:43:48.020 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@214b342f
[DEBUG] 29-02-2024 12:43:48.020 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@214b342f
[DEBUG] 29-02-2024 12:43:48.020 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@214b342f
[DEBUG] 29-02-2024 12:43:48.021 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@5db0003d
[DEBUG] 29-02-2024 12:43:48.021 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@5db0003d
[DEBUG] 29-02-2024 12:43:48.022 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@5db0003d
[DEBUG] 29-02-2024 12:43:48.022 [main] BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@7f12094d
[DEBUG] 29-02-2024 12:43:48.023 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@7f12094d
[DEBUG] 29-02-2024 12:43:48.023 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@589fb74d
[DEBUG] 29-02-2024 12:43:48.024 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@200d1a3d
[DEBUG] 29-02-2024 12:43:48.024 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@200d1a3d
[DEBUG] 29-02-2024 12:43:48.025 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@7de147e9
[DEBUG] 29-02-2024 12:43:48.025 [main] BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@12567179
[DEBUG] 29-02-2024 12:43:48.026 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@37d699a1
[DEBUG] 29-02-2024 12:43:48.026 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@37d699a1
[DEBUG] 29-02-2024 12:43:48.026 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@37d699a1
[DEBUG] 29-02-2024 12:43:48.027 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@7f42b194
[DEBUG] 29-02-2024 12:43:48.032 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@7f42b194
[DEBUG] 29-02-2024 12:43:48.033 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@7f42b194
[DEBUG] 29-02-2024 12:43:48.034 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@8eb6f9a
[DEBUG] 29-02-2024 12:43:48.034 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@8eb6f9a
[DEBUG] 29-02-2024 12:43:48.034 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@8eb6f9a
[DEBUG] 29-02-2024 12:43:48.035 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@29170a47
[DEBUG] 29-02-2024 12:43:48.035 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@29170a47
[DEBUG] 29-02-2024 12:43:48.036 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@29170a47
[DEBUG] 29-02-2024 12:43:48.037 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@2a8f8555
[DEBUG] 29-02-2024 12:43:48.037 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@2a8f8555
[DEBUG] 29-02-2024 12:43:48.038 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@2a8f8555
[DEBUG] 29-02-2024 12:43:48.039 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@402b4f81
[DEBUG] 29-02-2024 12:43:48.040 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@402b4f81
[DEBUG] 29-02-2024 12:43:48.040 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@13ef7fa1
[DEBUG] 29-02-2024 12:43:48.041 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@13ef7fa1
[DEBUG] 29-02-2024 12:43:48.041 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@23b1aa9
[DEBUG] 29-02-2024 12:43:48.042 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@23b1aa9
[DEBUG] 29-02-2024 12:43:48.042 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@23b1aa9
[DEBUG] 29-02-2024 12:43:48.043 [main] BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@54489296
[DEBUG] 29-02-2024 12:43:48.043 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@4e8598d9
[DEBUG] 29-02-2024 12:43:48.044 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@4e8598d9
[DEBUG] 29-02-2024 12:43:48.044 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@267ff4df
[DEBUG] 29-02-2024 12:43:48.045 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@7c4b5ceb
[DEBUG] 29-02-2024 12:43:48.046 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@7c4b5ceb
[DEBUG] 29-02-2024 12:43:48.046 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@7c4b5ceb
[DEBUG] 29-02-2024 12:43:48.047 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@6c07add6
[DEBUG] 29-02-2024 12:43:48.047 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@e26a3df
[DEBUG] 29-02-2024 12:43:48.048 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@57a667c8
[DEBUG] 29-02-2024 12:43:48.048 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@712cd5d3
[DEBUG] 29-02-2024 12:43:48.048 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@712cd5d3
[DEBUG] 29-02-2024 12:43:48.049 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@2094bf3d
[DEBUG] 29-02-2024 12:43:48.050 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@2094bf3d
[DEBUG] 29-02-2024 12:43:48.050 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@1b17d8ab
[DEBUG] 29-02-2024 12:43:48.051 [main] BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@7f6b7426
[DEBUG] 29-02-2024 12:43:48.051 [main] BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@687eb455
[DEBUG] 29-02-2024 12:43:48.051 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@6d969330
[DEBUG] 29-02-2024 12:43:48.052 [main] BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@4861cca9
[DEBUG] 29-02-2024 12:43:48.052 [main] BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@6c8f4bc7
[DEBUG] 29-02-2024 12:43:48.053 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@714e861f
[DEBUG] 29-02-2024 12:43:48.053 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@714e861f
[DEBUG] 29-02-2024 12:43:48.054 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@28989415
[DEBUG] 29-02-2024 12:43:48.054 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@28989415
[DEBUG] 29-02-2024 12:43:48.055 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@6eda012b
[DEBUG] 29-02-2024 12:43:48.055 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@6eda012b
[DEBUG] 29-02-2024 12:43:48.055 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@781dbe44
[DEBUG] 29-02-2024 12:43:48.056 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@781dbe44
[DEBUG] 29-02-2024 12:43:48.057 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@7d66a126
[DEBUG] 29-02-2024 12:43:48.057 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@7d66a126
[DEBUG] 29-02-2024 12:43:48.057 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@1132baa3
[DEBUG] 29-02-2024 12:43:48.058 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@2fdf22f7
[DEBUG] 29-02-2024 12:43:48.058 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@3a2546d6
[DEBUG] 29-02-2024 12:43:48.058 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@3a2546d6
[DEBUG] 29-02-2024 12:43:48.059 [main] BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@7282af25
[DEBUG] 29-02-2024 12:43:48.059 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@7661e474
[DEBUG] 29-02-2024 12:43:48.060 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@20ffb8d5
[DEBUG] 29-02-2024 12:43:48.060 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@307c59ea
[DEBUG] 29-02-2024 12:43:48.060 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@307c59ea
[DEBUG] 29-02-2024 12:43:48.061 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@57e03347
[DEBUG] 29-02-2024 12:43:48.061 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@2edb2f8b
[DEBUG] 29-02-2024 12:43:48.062 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@733f1395
[DEBUG] 29-02-2024 12:43:48.062 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@733f1395
[DEBUG] 29-02-2024 12:43:48.063 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@21dea711
[DEBUG] 29-02-2024 12:43:48.063 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@21dea711
[DEBUG] 29-02-2024 12:43:48.064 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@7772d266
[DEBUG] 29-02-2024 12:43:48.064 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@7772d266
[DEBUG] 29-02-2024 12:43:48.064 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@7772d266
[DEBUG] 29-02-2024 12:43:48.065 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@a21c74
[DEBUG] 29-02-2024 12:43:48.065 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@a21c74
[DEBUG] 29-02-2024 12:43:48.066 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@a21c74
[DEBUG] 29-02-2024 12:43:48.066 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@b8a144e
[DEBUG] 29-02-2024 12:43:48.066 [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@5fb8dc01
[DEBUG] 29-02-2024 12:43:48.067 [main] BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@3e38c472
[DEBUG] 29-02-2024 12:43:48.067 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@3e38c472
[DEBUG] 29-02-2024 12:43:48.067 [main] BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@2ee92e7d
[DEBUG] 29-02-2024 12:43:48.068 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@2ee92e7d
[DEBUG] 29-02-2024 12:43:48.068 [main] BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@2ee92e7d
[DEBUG] 29-02-2024 12:43:48.068 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@759a678a
[DEBUG] 29-02-2024 12:43:48.068 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@6cdbe5ec
[DEBUG] 29-02-2024 12:43:48.069 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@14b8a751
[DEBUG] 29-02-2024 12:43:48.069 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@14b8a751
[DEBUG] 29-02-2024 12:43:48.070 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@7345f97d
[DEBUG] 29-02-2024 12:43:48.070 [main] BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@7345f97d
[DEBUG] 29-02-2024 12:43:48.070 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@7345f97d
[DEBUG] 29-02-2024 12:43:48.071 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@554566a8
[DEBUG] 29-02-2024 12:43:48.071 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@554566a8
[DEBUG] 29-02-2024 12:43:48.071 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@66020d69
[DEBUG] 29-02-2024 12:43:48.072 [main] BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@66020d69
[DEBUG] 29-02-2024 12:43:48.072 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@3751acd7
[DEBUG] 29-02-2024 12:43:48.073 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@3751acd7
[DEBUG] 29-02-2024 12:43:48.073 [main] BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@6b832551
[DEBUG] 29-02-2024 12:43:48.074 [main] BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@6b832551
[DEBUG] 29-02-2024 12:43:48.074 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@150d6eaf
[DEBUG] 29-02-2024 12:43:48.074 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@150d6eaf
[DEBUG] 29-02-2024 12:43:48.075 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@63124022
[DEBUG] 29-02-2024 12:43:48.089 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@42c54bad
[DEBUG] 29-02-2024 12:43:48.089 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@42c54bad
[DEBUG] 29-02-2024 12:43:48.092 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@b01cb8d
[DEBUG] 29-02-2024 12:43:48.093 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@38c460e8
[DEBUG] 29-02-2024 12:43:48.093 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@7a814310
[DEBUG] 29-02-2024 12:43:48.094 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@4bbf38b8
[DEBUG] 29-02-2024 12:43:48.094 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@4e67cfe1
[DEBUG] 29-02-2024 12:43:48.094 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@55bf35e5
[DEBUG] 29-02-2024 12:43:48.095 [main] BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@25567581
[DEBUG] 29-02-2024 12:43:48.095 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@179ee36b
[DEBUG] 29-02-2024 12:43:48.096 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@67763ebe
[DEBUG] 29-02-2024 12:43:49.469 [main] DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@26463a6) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6c5ae8fd)
[DEBUG] 29-02-2024 12:43:49.474 [main] JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
[DEBUG] 29-02-2024 12:43:49.475 [main] JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 29-02-2024 12:43:49.505 [main] BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@45c90a05
[DEBUG] 29-02-2024 12:43:49.505 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@45c90a05
[DEBUG] 29-02-2024 12:43:49.506 [main] BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@42c54bad`
[DEBUG] 29-02-2024 12:43:49.508 [main] JdbcTypeRegistry - addDescriptor(3100, NumericTypeDescriptor) replaced previous registration(org.hibernate.dialect.PostgreSQLIntervalSecondJdbcType@4fa91d5b)
[DEBUG] 29-02-2024 12:43:49.528 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 29-02-2024 12:43:49.529 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 29-02-2024 12:43:49.530 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 29-02-2024 12:43:49.530 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 29-02-2024 12:43:49.530 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 29-02-2024 12:43:49.531 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 29-02-2024 12:43:49.560 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 29-02-2024 12:43:49.560 [main] BasicTypeRegistry - Adding type registration OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 29-02-2024 12:43:49.561 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 29-02-2024 12:43:49.566 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6df2af02] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@779228dc]
[INFO ] 29-02-2024 12:43:50.466 [main] BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
[INFO ] 29-02-2024 12:43:53.559 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 29-02-2024 12:43:53.560 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6df2af02] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@5c194652]
[TRACE] 29-02-2024 12:43:53.567 [main] TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@5c194652] for TypeConfiguration
[WARN ] 29-02-2024 12:43:54.419 [main] JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[INFO ] 29-02-2024 12:43:55.340 [main] Http11NioProtocol - Starting ProtocolHandler ["http-nio-8300"]
[INFO ] 29-02-2024 12:43:55.511 [main] TomcatWebServer - Tomcat started on port(s): 8300 (http) with context path '/users_products_api'
[INFO ] 29-02-2024 12:43:55.590 [main] TestSpringBootApplication - Started TestSpringBootApplication in 16.197 seconds (process running for 19.075)
[INFO ] 29-02-2024 12:44:08.209 [http-nio-8300-exec-1] [/users_products_api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[INFO ] 29-02-2024 12:44:08.211 [http-nio-8300-exec-1] DispatcherServlet - Initializing Servlet 'dispatcherServlet'
[INFO ] 29-02-2024 12:44:08.214 [http-nio-8300-exec-1] DispatcherServlet - Completed initialization in 3 ms
[DEBUG] 29-02-2024 12:44:08.724 [http-nio-8300-exec-1] SQL - select e1_0.id,e1_0.email,e1_0.login,e1_0.name,e1_0.password,p1_0.id_user,p1_0.id,p1_0.name,p1_0.page_image,p1_0.price,p1_0.raiting,p1_0.year_issue from users e1_0 left join products p1_0 on e1_0.id=p1_0.id_user where e1_0.id=?
[TRACE] 29-02-2024 12:49:35.786 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@5c194652] for TypeConfiguration
[DEBUG] 29-02-2024 12:49:35.787 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@7fbba1a4] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@5c194652]
[INFO ] 29-02-2024 12:49:47.631 [background-preinit] Version - HV000001: Hibernate Validator 8.0.1.Final
[INFO ] 29-02-2024 12:49:47.719 [main] TestSpringBootApplication - Starting TestSpringBootApplication using Java 17.0.10 with PID 1646182 (/home/dima/backend_microservice/UserProductsMicroService/target/classes started by dima in /home/dima/backend_microservice/UserProductsMicroService)
[INFO ] 29-02-2024 12:49:47.752 [main] TestSpringBootApplication - No active profile set, falling back to 1 default profile: "default"
[INFO ] 29-02-2024 12:49:50.027 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO ] 29-02-2024 12:49:50.541 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 473 ms. Found 1 JPA repository interfaces.
[ERROR] 29-02-2024 12:49:52.398 [main] AprLifecycleListener - An incompatible version [1.2.23] of the Apache Tomcat Native library is installed, while Tomcat requires version [1.2.34]
[INFO ] 29-02-2024 12:49:53.249 [main] TomcatWebServer - Tomcat initialized with port(s): 8300 (http)
[INFO ] 29-02-2024 12:49:53.275 [main] Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8300"]
[INFO ] 29-02-2024 12:49:53.283 [main] StandardService - Starting service [Tomcat]
[INFO ] 29-02-2024 12:49:53.285 [main] StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.11]
[INFO ] 29-02-2024 12:49:54.847 [main] TldScanner - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
[INFO ] 29-02-2024 12:49:54.868 [main] [/users_products_api] - Initializing Spring embedded WebApplicationContext
[INFO ] 29-02-2024 12:49:54.873 [main] ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 6930 ms
[INFO ] 29-02-2024 12:49:55.473 [main] Version - HHH000412: Hibernate ORM core version 6.2.6.Final
[INFO ] 29-02-2024 12:49:55.486 [main] Environment - HHH000406: Using bytecode reflection optimizer
[DEBUG] 29-02-2024 12:49:55.918 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@3af236d0
[DEBUG] 29-02-2024 12:49:55.918 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@3af236d0
[DEBUG] 29-02-2024 12:49:55.919 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@3af236d0
[DEBUG] 29-02-2024 12:49:55.919 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@23564dd2
[DEBUG] 29-02-2024 12:49:55.920 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@23564dd2
[DEBUG] 29-02-2024 12:49:55.920 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@54895681
[DEBUG] 29-02-2024 12:49:55.921 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@54895681
[DEBUG] 29-02-2024 12:49:55.921 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@2dd0a0d0
[DEBUG] 29-02-2024 12:49:55.922 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@2dd0a0d0
[DEBUG] 29-02-2024 12:49:55.923 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@6bf570c
[DEBUG] 29-02-2024 12:49:55.923 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@6bf570c
[DEBUG] 29-02-2024 12:49:55.924 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@6bf570c
[DEBUG] 29-02-2024 12:49:55.924 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@1796b2d4
[DEBUG] 29-02-2024 12:49:55.925 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@1796b2d4
[DEBUG] 29-02-2024 12:49:55.925 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@1796b2d4
[DEBUG] 29-02-2024 12:49:55.926 [main] BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@935d3f9
[DEBUG] 29-02-2024 12:49:55.926 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@935d3f9
[DEBUG] 29-02-2024 12:49:55.927 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@214b342f
[DEBUG] 29-02-2024 12:49:55.927 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@5db0003d
[DEBUG] 29-02-2024 12:49:55.927 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@5db0003d
[DEBUG] 29-02-2024 12:49:55.928 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@7f12094d
[DEBUG] 29-02-2024 12:49:55.928 [main] BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@589fb74d
[DEBUG] 29-02-2024 12:49:55.929 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@200d1a3d
[DEBUG] 29-02-2024 12:49:55.929 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@200d1a3d
[DEBUG] 29-02-2024 12:49:55.930 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@200d1a3d
[DEBUG] 29-02-2024 12:49:55.930 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@7de147e9
[DEBUG] 29-02-2024 12:49:55.931 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@7de147e9
[DEBUG] 29-02-2024 12:49:55.931 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@7de147e9
[DEBUG] 29-02-2024 12:49:55.932 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@12567179
[DEBUG] 29-02-2024 12:49:55.932 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@12567179
[DEBUG] 29-02-2024 12:49:55.947 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@12567179
[DEBUG] 29-02-2024 12:49:55.948 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@37d699a1
[DEBUG] 29-02-2024 12:49:55.948 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@37d699a1
[DEBUG] 29-02-2024 12:49:55.949 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@37d699a1
[DEBUG] 29-02-2024 12:49:55.949 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@7f42b194
[DEBUG] 29-02-2024 12:49:55.950 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@7f42b194
[DEBUG] 29-02-2024 12:49:55.950 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@7f42b194
[DEBUG] 29-02-2024 12:49:55.951 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@8eb6f9a
[DEBUG] 29-02-2024 12:49:55.951 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@8eb6f9a
[DEBUG] 29-02-2024 12:49:55.952 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@29170a47
[DEBUG] 29-02-2024 12:49:55.952 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@29170a47
[DEBUG] 29-02-2024 12:49:55.953 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@2a8f8555
[DEBUG] 29-02-2024 12:49:55.953 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@2a8f8555
[DEBUG] 29-02-2024 12:49:55.954 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@2a8f8555
[DEBUG] 29-02-2024 12:49:55.954 [main] BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@402b4f81
[DEBUG] 29-02-2024 12:49:55.954 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@13ef7fa1
[DEBUG] 29-02-2024 12:49:55.955 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@13ef7fa1
[DEBUG] 29-02-2024 12:49:55.955 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@23b1aa9
[DEBUG] 29-02-2024 12:49:55.955 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@54489296
[DEBUG] 29-02-2024 12:49:55.956 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@54489296
[DEBUG] 29-02-2024 12:49:55.956 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@54489296
[DEBUG] 29-02-2024 12:49:55.956 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@4e8598d9
[DEBUG] 29-02-2024 12:49:55.957 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@267ff4df
[DEBUG] 29-02-2024 12:49:55.957 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@7c4b5ceb
[DEBUG] 29-02-2024 12:49:55.957 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@6c07add6
[DEBUG] 29-02-2024 12:49:55.958 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@6c07add6
[DEBUG] 29-02-2024 12:49:55.958 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@e26a3df
[DEBUG] 29-02-2024 12:49:55.959 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@e26a3df
[DEBUG] 29-02-2024 12:49:55.959 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@57a667c8
[DEBUG] 29-02-2024 12:49:55.959 [main] BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@712cd5d3
[DEBUG] 29-02-2024 12:49:55.960 [main] BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@2094bf3d
[DEBUG] 29-02-2024 12:49:55.960 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@1b17d8ab
[DEBUG] 29-02-2024 12:49:55.960 [main] BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@7f6b7426
[DEBUG] 29-02-2024 12:49:55.961 [main] BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@687eb455
[DEBUG] 29-02-2024 12:49:55.961 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@6d969330
[DEBUG] 29-02-2024 12:49:55.962 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@6d969330
[DEBUG] 29-02-2024 12:49:55.962 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@4861cca9
[DEBUG] 29-02-2024 12:49:55.962 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@4861cca9
[DEBUG] 29-02-2024 12:49:55.963 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@6c8f4bc7
[DEBUG] 29-02-2024 12:49:55.963 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@6c8f4bc7
[DEBUG] 29-02-2024 12:49:55.963 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@714e861f
[DEBUG] 29-02-2024 12:49:55.964 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@714e861f
[DEBUG] 29-02-2024 12:49:55.965 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@28989415
[DEBUG] 29-02-2024 12:49:55.965 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@28989415
[DEBUG] 29-02-2024 12:49:55.966 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@6eda012b
[DEBUG] 29-02-2024 12:49:55.966 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@781dbe44
[DEBUG] 29-02-2024 12:49:55.967 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@7d66a126
[DEBUG] 29-02-2024 12:49:55.967 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@7d66a126
[DEBUG] 29-02-2024 12:49:55.967 [main] BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@1132baa3
[DEBUG] 29-02-2024 12:49:55.968 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2fdf22f7
[DEBUG] 29-02-2024 12:49:55.968 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3a2546d6
[DEBUG] 29-02-2024 12:49:55.969 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@7282af25
[DEBUG] 29-02-2024 12:49:55.969 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@7282af25
[DEBUG] 29-02-2024 12:49:55.979 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@7661e474
[DEBUG] 29-02-2024 12:49:55.979 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@20ffb8d5
[DEBUG] 29-02-2024 12:49:55.979 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@307c59ea
[DEBUG] 29-02-2024 12:49:55.979 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@307c59ea
[DEBUG] 29-02-2024 12:49:55.980 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@57e03347
[DEBUG] 29-02-2024 12:49:55.980 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@57e03347
[DEBUG] 29-02-2024 12:49:55.980 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@2edb2f8b
[DEBUG] 29-02-2024 12:49:55.981 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@2edb2f8b
[DEBUG] 29-02-2024 12:49:55.981 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@2edb2f8b
[DEBUG] 29-02-2024 12:49:55.981 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@733f1395
[DEBUG] 29-02-2024 12:49:55.982 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@733f1395
[DEBUG] 29-02-2024 12:49:55.982 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@733f1395
[DEBUG] 29-02-2024 12:49:55.982 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@21dea711
[DEBUG] 29-02-2024 12:49:55.983 [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@7772d266
[DEBUG] 29-02-2024 12:49:55.983 [main] BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@a21c74
[DEBUG] 29-02-2024 12:49:55.983 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@a21c74
[DEBUG] 29-02-2024 12:49:55.984 [main] BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@b8a144e
[DEBUG] 29-02-2024 12:49:55.984 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@b8a144e
[DEBUG] 29-02-2024 12:49:55.985 [main] BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@b8a144e
[DEBUG] 29-02-2024 12:49:55.985 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@5fb8dc01
[DEBUG] 29-02-2024 12:49:55.986 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@3e38c472
[DEBUG] 29-02-2024 12:49:55.986 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@2ee92e7d
[DEBUG] 29-02-2024 12:49:55.987 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@2ee92e7d
[DEBUG] 29-02-2024 12:49:55.987 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@759a678a
[DEBUG] 29-02-2024 12:49:55.987 [main] BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@759a678a
[DEBUG] 29-02-2024 12:49:55.988 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@759a678a
[DEBUG] 29-02-2024 12:49:55.988 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@6cdbe5ec
[DEBUG] 29-02-2024 12:49:55.988 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@6cdbe5ec
[DEBUG] 29-02-2024 12:49:55.989 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@14b8a751
[DEBUG] 29-02-2024 12:49:55.989 [main] BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@14b8a751
[DEBUG] 29-02-2024 12:49:55.989 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@7345f97d
[DEBUG] 29-02-2024 12:49:55.990 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@7345f97d
[DEBUG] 29-02-2024 12:49:55.990 [main] BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@554566a8
[DEBUG] 29-02-2024 12:49:55.990 [main] BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@554566a8
[DEBUG] 29-02-2024 12:49:55.990 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@66020d69
[DEBUG] 29-02-2024 12:49:55.991 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@66020d69
[DEBUG] 29-02-2024 12:49:55.991 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@3751acd7
[DEBUG] 29-02-2024 12:49:56.006 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@6537ac
[DEBUG] 29-02-2024 12:49:56.007 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@6537ac
[DEBUG] 29-02-2024 12:49:56.011 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@375084c9
[DEBUG] 29-02-2024 12:49:56.012 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@bd93bc3
[DEBUG] 29-02-2024 12:49:56.013 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@2a136383
[DEBUG] 29-02-2024 12:49:56.013 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@b01cb8d
[DEBUG] 29-02-2024 12:49:56.014 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@38c460e8
[DEBUG] 29-02-2024 12:49:56.014 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@7a814310
[DEBUG] 29-02-2024 12:49:56.014 [main] BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@4bbf38b8
[DEBUG] 29-02-2024 12:49:56.015 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@4e67cfe1
[DEBUG] 29-02-2024 12:49:56.015 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@55bf35e5
[DEBUG] 29-02-2024 12:49:57.825 [main] DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1f0e2bdc) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@682266d8)
[DEBUG] 29-02-2024 12:49:57.833 [main] JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
[DEBUG] 29-02-2024 12:49:57.834 [main] JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 29-02-2024 12:49:57.863 [main] BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@2bdcfcf
[DEBUG] 29-02-2024 12:49:57.864 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@2bdcfcf
[DEBUG] 29-02-2024 12:49:57.864 [main] BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@6537ac`
[DEBUG] 29-02-2024 12:49:57.867 [main] JdbcTypeRegistry - addDescriptor(3100, NumericTypeDescriptor) replaced previous registration(org.hibernate.dialect.PostgreSQLIntervalSecondJdbcType@df7d1d4)
[DEBUG] 29-02-2024 12:49:57.894 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 29-02-2024 12:49:57.895 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 29-02-2024 12:49:57.896 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 29-02-2024 12:49:57.896 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 29-02-2024 12:49:57.896 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 29-02-2024 12:49:57.897 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 29-02-2024 12:49:57.899 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 29-02-2024 12:49:57.900 [main] BasicTypeRegistry - Adding type registration OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 29-02-2024 12:49:57.900 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 29-02-2024 12:49:57.904 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@69fe7090] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@6501b105]
[INFO ] 29-02-2024 12:49:58.818 [main] BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
[INFO ] 29-02-2024 12:50:02.037 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 29-02-2024 12:50:02.039 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@69fe7090] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@5c194652]
[TRACE] 29-02-2024 12:50:02.047 [main] TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@5c194652] for TypeConfiguration
[WARN ] 29-02-2024 12:50:02.987 [main] JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[INFO ] 29-02-2024 12:50:03.917 [main] Http11NioProtocol - Starting ProtocolHandler ["http-nio-8300"]
[INFO ] 29-02-2024 12:50:03.987 [main] TomcatWebServer - Tomcat started on port(s): 8300 (http) with context path '/users_products_api'
[INFO ] 29-02-2024 12:50:04.019 [main] TestSpringBootApplication - Started TestSpringBootApplication in 17.547 seconds (process running for 20.753)
[INFO ] 29-02-2024 12:50:25.363 [http-nio-8300-exec-1] [/users_products_api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[INFO ] 29-02-2024 12:50:25.364 [http-nio-8300-exec-1] DispatcherServlet - Initializing Servlet 'dispatcherServlet'
[INFO ] 29-02-2024 12:50:25.367 [http-nio-8300-exec-1] DispatcherServlet - Completed initialization in 2 ms
[DEBUG] 29-02-2024 12:50:25.958 [http-nio-8300-exec-1] SQL - select e1_0.id,e1_0.email,e1_0.login,e1_0.name,e1_0.password,p1_0.id_user,p1_0.id,p1_0.name,p1_0.page_image,p1_0.price,p1_0.raiting,p1_0.year_issue from users e1_0 left join products p1_0 on e1_0.id=p1_0.id_user where e1_0.id=?
[DEBUG] 29-02-2024 12:50:26.057 [http-nio-8300-exec-1] SQL - select nextval('generator')
[WARN ] 29-02-2024 12:50:26.075 [http-nio-8300-exec-1] SqlExceptionHelper - SQL Error: 0, SQLState: 42P01
[ERROR] 29-02-2024 12:50:26.076 [http-nio-8300-exec-1] SqlExceptionHelper - ERROR: relation "generator" does not exist
  Позиция: 16
[ERROR] 29-02-2024 12:50:26.106 [http-nio-8300-exec-1] [dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [/users_products_api] threw exception [Request processing failed: org.hibernate.exception.SQLGrammarException: could not extract ResultSet [ERROR: relation "generator" does not exist
  Позиция: 16] [n/a]] with root cause
org.postgresql.util.PSQLException: ERROR: relation "generator" does not exist
  Позиция: 16
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2713) ~[postgresql-42.6.0.jar:42.6.0]
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2401) ~[postgresql-42.6.0.jar:42.6.0]
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:368) ~[postgresql-42.6.0.jar:42.6.0]
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:498) ~[postgresql-42.6.0.jar:42.6.0]
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:415) ~[postgresql-42.6.0.jar:42.6.0]
	at org.postgresql.jdbc.PgPreparedStatement.executeWithFlags(PgPreparedStatement.java:190) ~[postgresql-42.6.0.jar:42.6.0]
	at org.postgresql.jdbc.PgPreparedStatement.executeQuery(PgPreparedStatement.java:134) ~[postgresql-42.6.0.jar:42.6.0]
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.extract(ResultSetReturnImpl.java:57) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.id.enhanced.SequenceStructure$1.getNextValue(SequenceStructure.java:102) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.id.enhanced.PooledOptimizer.generate(PooledOptimizer.java:72) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.id.enhanced.SequenceStyleGenerator.generate(SequenceStyleGenerator.java:542) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.id.IdentifierGenerator.generate(IdentifierGenerator.java:147) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:120) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:175) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.event.internal.DefaultPersistEventListener.persist(DefaultPersistEventListener.java:93) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:77) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:138) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:797) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:745) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.engine.spi.CascadingActions$7.cascade(CascadingActions.java:290) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.engine.spi.CascadingActions$7.cascade(CascadingActions.java:280) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.engine.internal.Cascade.cascadeToOne(Cascade.java:513) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.engine.internal.Cascade.cascadeAssociation(Cascade.java:434) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.engine.internal.Cascade.cascadeProperty(Cascade.java:220) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.engine.internal.Cascade.cascadeCollectionElements(Cascade.java:547) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.engine.internal.Cascade.cascadeCollection(Cascade.java:477) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.engine.internal.Cascade.cascadeAssociation(Cascade.java:437) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.engine.internal.Cascade.cascadeProperty(Cascade.java:220) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.engine.internal.Cascade.cascade(Cascade.java:153) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.event.internal.AbstractSaveEventListener.cascadeAfterSave(AbstractSaveEventListener.java:490) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.event.internal.DefaultPersistEventListener.justCascade(DefaultPersistEventListener.java:161) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.event.internal.DefaultPersistEventListener.entityIsPersistent(DefaultPersistEventListener.java:154) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.event.internal.DefaultPersistEventListener.persist(DefaultPersistEventListener.java:90) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:77) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:54) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:755) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:739) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at DAO.DAOUserProducts.addedProductForUser(DAOUserProducts.java:29) ~[classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:568) ~[?:?]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343) ~[spring-aop-6.0.11.jar:6.0.11]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196) ~[spring-aop-6.0.11.jar:6.0.11]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-6.0.11.jar:6.0.11]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:756) ~[spring-aop-6.0.11.jar:6.0.11]
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123) ~[spring-tx-6.0.11.jar:6.0.11]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:391) ~[spring-tx-6.0.11.jar:6.0.11]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.0.11.jar:6.0.11]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.0.11.jar:6.0.11]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:756) ~[spring-aop-6.0.11.jar:6.0.11]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708) ~[spring-aop-6.0.11.jar:6.0.11]
	at DAO.DAOUserProducts$$SpringCGLIB$$0.addedProductForUser(<generated>) ~[classes/:?]
	at controller.CRUDUserProducts.addedProductUser(CRUDUserProducts.java:27) ~[classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:568) ~[?:?]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205) ~[spring-web-6.0.11.jar:6.0.11]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150) ~[spring-web-6.0.11.jar:6.0.11]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.0.11.jar:6.0.11]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884) ~[spring-webmvc-6.0.11.jar:6.0.11]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797) ~[spring-webmvc-6.0.11.jar:6.0.11]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.0.11.jar:6.0.11]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081) ~[spring-webmvc-6.0.11.jar:6.0.11]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974) ~[spring-webmvc-6.0.11.jar:6.0.11]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011) ~[spring-webmvc-6.0.11.jar:6.0.11]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914) ~[spring-webmvc-6.0.11.jar:6.0.11]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590) ~[tomcat-embed-core-10.1.11.jar:6.0]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.0.11.jar:6.0.11]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.11.jar:6.0]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205) ~[tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149) ~[tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.11.jar:10.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174) ~[tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149) ~[tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.0.11.jar:6.0.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.0.11.jar:6.0.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174) ~[tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149) ~[tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.0.11.jar:6.0.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.0.11.jar:6.0.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174) ~[tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149) ~[tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.0.11.jar:6.0.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.0.11.jar:6.0.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174) ~[tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149) ~[tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:166) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at java.lang.Thread.run(Thread.java:840) [?:?]
[TRACE] 29-02-2024 12:55:48.964 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@5c194652] for TypeConfiguration
[DEBUG] 29-02-2024 12:55:48.977 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@525891c] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@5c194652]
[INFO ] 29-02-2024 12:56:00.674 [background-preinit] Version - HV000001: Hibernate Validator 8.0.1.Final
[INFO ] 29-02-2024 12:56:00.892 [main] TestSpringBootApplication - Starting TestSpringBootApplication using Java 17.0.10 with PID 1649390 (/home/dima/backend_microservice/UserProductsMicroService/target/classes started by dima in /home/dima/backend_microservice/UserProductsMicroService)
[INFO ] 29-02-2024 12:56:00.914 [main] TestSpringBootApplication - No active profile set, falling back to 1 default profile: "default"
[INFO ] 29-02-2024 12:56:03.506 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO ] 29-02-2024 12:56:04.091 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 559 ms. Found 1 JPA repository interfaces.
[ERROR] 29-02-2024 12:56:06.038 [main] AprLifecycleListener - An incompatible version [1.2.23] of the Apache Tomcat Native library is installed, while Tomcat requires version [1.2.34]
[INFO ] 29-02-2024 12:56:06.846 [main] TomcatWebServer - Tomcat initialized with port(s): 8300 (http)
[INFO ] 29-02-2024 12:56:06.878 [main] Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8300"]
[INFO ] 29-02-2024 12:56:06.886 [main] StandardService - Starting service [Tomcat]
[INFO ] 29-02-2024 12:56:06.887 [main] StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.11]
[INFO ] 29-02-2024 12:56:08.038 [main] TldScanner - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
[INFO ] 29-02-2024 12:56:08.065 [main] [/users_products_api] - Initializing Spring embedded WebApplicationContext
[INFO ] 29-02-2024 12:56:08.071 [main] ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 6825 ms
[INFO ] 29-02-2024 12:56:08.468 [main] Version - HHH000412: Hibernate ORM core version 6.2.6.Final
[INFO ] 29-02-2024 12:56:08.476 [main] Environment - HHH000406: Using bytecode reflection optimizer
[DEBUG] 29-02-2024 12:56:08.850 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@5514579e
[DEBUG] 29-02-2024 12:56:08.851 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@5514579e
[DEBUG] 29-02-2024 12:56:08.852 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@5514579e
[DEBUG] 29-02-2024 12:56:08.852 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@58c42c8c
[DEBUG] 29-02-2024 12:56:08.853 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@58c42c8c
[DEBUG] 29-02-2024 12:56:08.853 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@3af236d0
[DEBUG] 29-02-2024 12:56:08.854 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@3af236d0
[DEBUG] 29-02-2024 12:56:08.854 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@23564dd2
[DEBUG] 29-02-2024 12:56:08.855 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@23564dd2
[DEBUG] 29-02-2024 12:56:08.855 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@54895681
[DEBUG] 29-02-2024 12:56:08.855 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@54895681
[DEBUG] 29-02-2024 12:56:08.856 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@54895681
[DEBUG] 29-02-2024 12:56:08.859 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@2dd0a0d0
[DEBUG] 29-02-2024 12:56:08.860 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@2dd0a0d0
[DEBUG] 29-02-2024 12:56:08.860 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@2dd0a0d0
[DEBUG] 29-02-2024 12:56:08.860 [main] BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@6bf570c
[DEBUG] 29-02-2024 12:56:08.861 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@6bf570c
[DEBUG] 29-02-2024 12:56:08.861 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@1796b2d4
[DEBUG] 29-02-2024 12:56:08.866 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@935d3f9
[DEBUG] 29-02-2024 12:56:08.866 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@935d3f9
[DEBUG] 29-02-2024 12:56:08.867 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@214b342f
[DEBUG] 29-02-2024 12:56:08.867 [main] BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@5db0003d
[DEBUG] 29-02-2024 12:56:08.868 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@7f12094d
[DEBUG] 29-02-2024 12:56:08.868 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@7f12094d
[DEBUG] 29-02-2024 12:56:08.869 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@7f12094d
[DEBUG] 29-02-2024 12:56:08.870 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@589fb74d
[DEBUG] 29-02-2024 12:56:08.870 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@589fb74d
[DEBUG] 29-02-2024 12:56:08.870 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@589fb74d
[DEBUG] 29-02-2024 12:56:08.871 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@200d1a3d
[DEBUG] 29-02-2024 12:56:08.871 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@200d1a3d
[DEBUG] 29-02-2024 12:56:08.872 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@200d1a3d
[DEBUG] 29-02-2024 12:56:08.872 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@7de147e9
[DEBUG] 29-02-2024 12:56:08.873 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@7de147e9
[DEBUG] 29-02-2024 12:56:08.873 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@7de147e9
[DEBUG] 29-02-2024 12:56:08.874 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@12567179
[DEBUG] 29-02-2024 12:56:08.874 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@12567179
[DEBUG] 29-02-2024 12:56:08.875 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@12567179
[DEBUG] 29-02-2024 12:56:08.876 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@37d699a1
[DEBUG] 29-02-2024 12:56:08.876 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@37d699a1
[DEBUG] 29-02-2024 12:56:08.876 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@7f42b194
[DEBUG] 29-02-2024 12:56:08.877 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@7f42b194
[DEBUG] 29-02-2024 12:56:08.877 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@8eb6f9a
[DEBUG] 29-02-2024 12:56:08.878 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@8eb6f9a
[DEBUG] 29-02-2024 12:56:08.878 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@8eb6f9a
[DEBUG] 29-02-2024 12:56:08.879 [main] BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@29170a47
[DEBUG] 29-02-2024 12:56:08.879 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@2a8f8555
[DEBUG] 29-02-2024 12:56:08.880 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@2a8f8555
[DEBUG] 29-02-2024 12:56:08.880 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@402b4f81
[DEBUG] 29-02-2024 12:56:08.880 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@13ef7fa1
[DEBUG] 29-02-2024 12:56:08.881 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@13ef7fa1
[DEBUG] 29-02-2024 12:56:08.882 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@13ef7fa1
[DEBUG] 29-02-2024 12:56:08.882 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@23b1aa9
[DEBUG] 29-02-2024 12:56:08.883 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@54489296
[DEBUG] 29-02-2024 12:56:08.885 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@4e8598d9
[DEBUG] 29-02-2024 12:56:08.888 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@267ff4df
[DEBUG] 29-02-2024 12:56:08.888 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@267ff4df
[DEBUG] 29-02-2024 12:56:08.889 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@7c4b5ceb
[DEBUG] 29-02-2024 12:56:08.889 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@7c4b5ceb
[DEBUG] 29-02-2024 12:56:08.890 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@6c07add6
[DEBUG] 29-02-2024 12:56:08.890 [main] BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@e26a3df
[DEBUG] 29-02-2024 12:56:08.891 [main] BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@57a667c8
[DEBUG] 29-02-2024 12:56:08.891 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@712cd5d3
[DEBUG] 29-02-2024 12:56:08.892 [main] BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@2094bf3d
[DEBUG] 29-02-2024 12:56:08.893 [main] BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@1b17d8ab
[DEBUG] 29-02-2024 12:56:08.893 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@7f6b7426
[DEBUG] 29-02-2024 12:56:08.894 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@7f6b7426
[DEBUG] 29-02-2024 12:56:08.894 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@687eb455
[DEBUG] 29-02-2024 12:56:08.895 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@687eb455
[DEBUG] 29-02-2024 12:56:08.895 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@6d969330
[DEBUG] 29-02-2024 12:56:08.895 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@6d969330
[DEBUG] 29-02-2024 12:56:08.896 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@4861cca9
[DEBUG] 29-02-2024 12:56:08.896 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@4861cca9
[DEBUG] 29-02-2024 12:56:08.896 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@6c8f4bc7
[DEBUG] 29-02-2024 12:56:08.897 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@6c8f4bc7
[DEBUG] 29-02-2024 12:56:08.897 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@714e861f
[DEBUG] 29-02-2024 12:56:08.897 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@28989415
[DEBUG] 29-02-2024 12:56:08.898 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@6eda012b
[DEBUG] 29-02-2024 12:56:08.898 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@6eda012b
[DEBUG] 29-02-2024 12:56:08.898 [main] BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@781dbe44
[DEBUG] 29-02-2024 12:56:08.899 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@7d66a126
[DEBUG] 29-02-2024 12:56:08.899 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@1132baa3
[DEBUG] 29-02-2024 12:56:08.899 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@2fdf22f7
[DEBUG] 29-02-2024 12:56:08.900 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@2fdf22f7
[DEBUG] 29-02-2024 12:56:08.900 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@3a2546d6
[DEBUG] 29-02-2024 12:56:08.900 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@7282af25
[DEBUG] 29-02-2024 12:56:08.901 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@7661e474
[DEBUG] 29-02-2024 12:56:08.901 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@7661e474
[DEBUG] 29-02-2024 12:56:08.901 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@20ffb8d5
[DEBUG] 29-02-2024 12:56:08.902 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@20ffb8d5
[DEBUG] 29-02-2024 12:56:08.902 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@307c59ea
[DEBUG] 29-02-2024 12:56:08.902 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@307c59ea
[DEBUG] 29-02-2024 12:56:08.903 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@307c59ea
[DEBUG] 29-02-2024 12:56:08.903 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@57e03347
[DEBUG] 29-02-2024 12:56:08.903 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@57e03347
[DEBUG] 29-02-2024 12:56:08.904 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@57e03347
[DEBUG] 29-02-2024 12:56:08.904 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@2edb2f8b
[DEBUG] 29-02-2024 12:56:08.904 [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@733f1395
[DEBUG] 29-02-2024 12:56:08.905 [main] BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@21dea711
[DEBUG] 29-02-2024 12:56:08.905 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@21dea711
[DEBUG] 29-02-2024 12:56:08.905 [main] BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@7772d266
[DEBUG] 29-02-2024 12:56:08.906 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@7772d266
[DEBUG] 29-02-2024 12:56:08.906 [main] BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@7772d266
[DEBUG] 29-02-2024 12:56:08.906 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@a21c74
[DEBUG] 29-02-2024 12:56:08.906 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@b8a144e
[DEBUG] 29-02-2024 12:56:08.907 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@5fb8dc01
[DEBUG] 29-02-2024 12:56:08.907 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@5fb8dc01
[DEBUG] 29-02-2024 12:56:08.907 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@3e38c472
[DEBUG] 29-02-2024 12:56:08.908 [main] BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@3e38c472
[DEBUG] 29-02-2024 12:56:08.908 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@3e38c472
[DEBUG] 29-02-2024 12:56:08.908 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@2ee92e7d
[DEBUG] 29-02-2024 12:56:08.909 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@2ee92e7d
[DEBUG] 29-02-2024 12:56:08.909 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@759a678a
[DEBUG] 29-02-2024 12:56:08.909 [main] BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@759a678a
[DEBUG] 29-02-2024 12:56:08.910 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@6cdbe5ec
[DEBUG] 29-02-2024 12:56:08.910 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@6cdbe5ec
[DEBUG] 29-02-2024 12:56:08.911 [main] BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@14b8a751
[DEBUG] 29-02-2024 12:56:08.911 [main] BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@14b8a751
[DEBUG] 29-02-2024 12:56:08.911 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@7345f97d
[DEBUG] 29-02-2024 12:56:08.912 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@7345f97d
[DEBUG] 29-02-2024 12:56:08.912 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@554566a8
[DEBUG] 29-02-2024 12:56:08.927 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@24691c5
[DEBUG] 29-02-2024 12:56:08.928 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@24691c5
[DEBUG] 29-02-2024 12:56:08.931 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@5abf6a99
[DEBUG] 29-02-2024 12:56:08.932 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@dc59ec2
[DEBUG] 29-02-2024 12:56:08.932 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@375084c9
[DEBUG] 29-02-2024 12:56:08.932 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@bd93bc3
[DEBUG] 29-02-2024 12:56:08.932 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@2a136383
[DEBUG] 29-02-2024 12:56:08.933 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@b01cb8d
[DEBUG] 29-02-2024 12:56:08.933 [main] BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@38c460e8
[DEBUG] 29-02-2024 12:56:08.933 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@7a814310
[DEBUG] 29-02-2024 12:56:08.934 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@4bbf38b8
[DEBUG] 29-02-2024 12:56:10.416 [main] DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5efe5b25) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@45707f76)
[DEBUG] 29-02-2024 12:56:10.422 [main] JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
[DEBUG] 29-02-2024 12:56:10.422 [main] JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 29-02-2024 12:56:10.442 [main] BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@24a3d414
[DEBUG] 29-02-2024 12:56:10.443 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@24a3d414
[DEBUG] 29-02-2024 12:56:10.443 [main] BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@24691c5`
[DEBUG] 29-02-2024 12:56:10.448 [main] JdbcTypeRegistry - addDescriptor(3100, NumericTypeDescriptor) replaced previous registration(org.hibernate.dialect.PostgreSQLIntervalSecondJdbcType@45c90a05)
[DEBUG] 29-02-2024 12:56:10.464 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 29-02-2024 12:56:10.464 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 29-02-2024 12:56:10.465 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 29-02-2024 12:56:10.465 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 29-02-2024 12:56:10.465 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 29-02-2024 12:56:10.466 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 29-02-2024 12:56:10.468 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 29-02-2024 12:56:10.468 [main] BasicTypeRegistry - Adding type registration OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 29-02-2024 12:56:10.469 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 29-02-2024 12:56:10.472 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@24a8e40d] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@175f859e]
[WARN ] 29-02-2024 12:56:10.943 [main] InFlightMetadataCollectorImpl - HHH000069: Duplicate generator name generator
[INFO ] 29-02-2024 12:56:11.289 [main] BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
[WARN ] 29-02-2024 12:56:12.030 [main] AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'CRUDUserProducts': Unsatisfied dependency expressed through field 'dao': Error creating bean with name 'DAOUserProducts': Unsatisfied dependency expressed through field 'rep': Error creating bean with name 'customizedUserProductsCrudRepository' defined in repository.CustomizedUserProductsCrudRepository defined in @EnableJpaRepositories declared on TestSpringBootApplication: Cannot resolve reference to bean 'jpaSharedEM_entityManagerFactory' while setting bean property 'entityManager'
[INFO ] 29-02-2024 12:56:12.036 [main] StandardService - Stopping service [Tomcat]
[INFO ] 29-02-2024 12:56:12.081 [main] ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
[ERROR] 29-02-2024 12:56:12.137 [main] SpringApplication - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'CRUDUserProducts': Unsatisfied dependency expressed through field 'dao': Error creating bean with name 'DAOUserProducts': Unsatisfied dependency expressed through field 'rep': Error creating bean with name 'customizedUserProductsCrudRepository' defined in repository.CustomizedUserProductsCrudRepository defined in @EnableJpaRepositories declared on TestSpringBootApplication: Cannot resolve reference to bean 'jpaSharedEM_entityManagerFactory' while setting bean property 'entityManager'
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:716) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:696) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:483) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1416) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:597) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:973) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:942) ~[spring-context-6.0.11.jar:6.0.11]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:608) ~[spring-context-6.0.11.jar:6.0.11]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146) ~[spring-boot-3.1.2.jar:3.1.2]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734) [spring-boot-3.1.2.jar:3.1.2]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:436) [spring-boot-3.1.2.jar:3.1.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312) [spring-boot-3.1.2.jar:3.1.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306) [spring-boot-3.1.2.jar:3.1.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295) [spring-boot-3.1.2.jar:3.1.2]
	at App.TestSpringBootApplication.main(TestSpringBootApplication.java:30) [classes/:?]
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'DAOUserProducts': Unsatisfied dependency expressed through field 'rep': Error creating bean with name 'customizedUserProductsCrudRepository' defined in repository.CustomizedUserProductsCrudRepository defined in @EnableJpaRepositories declared on TestSpringBootApplication: Cannot resolve reference to bean 'jpaSharedEM_entityManagerFactory' while setting bean property 'entityManager'
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:716) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:696) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:483) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1416) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:597) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:713) ~[spring-beans-6.0.11.jar:6.0.11]
	... 20 more
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'customizedUserProductsCrudRepository' defined in repository.CustomizedUserProductsCrudRepository defined in @EnableJpaRepositories declared on TestSpringBootApplication: Cannot resolve reference to bean 'jpaSharedEM_entityManagerFactory' while setting bean property 'entityManager'
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:377) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1682) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:597) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:713) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:696) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:483) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1416) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:597) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:713) ~[spring-beans-6.0.11.jar:6.0.11]
	... 20 more
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'jpaSharedEM_entityManagerFactory': Cannot resolve reference to bean 'entityManagerFactory' while setting constructor argument
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:377) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:693) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:517) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1332) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1162) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:560) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1682) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:597) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:713) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:696) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:483) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1416) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:597) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:713) ~[spring-beans-6.0.11.jar:6.0.11]
	... 20 more
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [server/DatabaseConfiguration.class]: Could not instantiate id generator [entity-name=entity.eUsers]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1770) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:693) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:517) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1332) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1162) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:560) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1682) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:597) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:713) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:696) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:483) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1416) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:597) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:713) ~[spring-beans-6.0.11.jar:6.0.11]
	... 20 more
Caused by: org.hibernate.MappingException: Could not instantiate id generator [entity-name=entity.eUsers]
	at org.hibernate.id.factory.internal.StandardIdentifierGeneratorFactory.createIdentifierGenerator(StandardIdentifierGeneratorFactory.java:230) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.id.factory.internal.IdentifierGeneratorUtil.createLegacyIdentifierGenerator(IdentifierGeneratorUtil.java:126) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.mapping.SimpleValue.createGenerator(SimpleValue.java:414) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.internal.SessionFactoryImpl.lambda$createGenerators$1(SessionFactoryImpl.java:413) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179) ~[?:?]
	at java.util.HashMap$ValueSpliterator.forEachRemaining(HashMap.java:1779) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596) ~[?:?]
	at org.hibernate.internal.SessionFactoryImpl.createGenerators(SessionFactoryImpl.java:412) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:249) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:431) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:941) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:960) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:616) ~[spring-orm-6.0.11.jar:6.0.11]
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:600) ~[spring-orm-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1817) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1766) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:693) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:517) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1332) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1162) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:560) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1682) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:597) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:713) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:696) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:483) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1416) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:597) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:713) ~[spring-beans-6.0.11.jar:6.0.11]
	... 20 more
Caused by: org.hibernate.MappingException: The increment size of the [users_id_seq] sequence is set to [50] in the entity mapping while the associated database sequence increment size is [1].
	at org.hibernate.id.enhanced.SequenceStyleGenerator.configure(SequenceStyleGenerator.java:224) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.id.factory.internal.StandardIdentifierGeneratorFactory.createIdentifierGenerator(StandardIdentifierGeneratorFactory.java:224) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.id.factory.internal.IdentifierGeneratorUtil.createLegacyIdentifierGenerator(IdentifierGeneratorUtil.java:126) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.mapping.SimpleValue.createGenerator(SimpleValue.java:414) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.internal.SessionFactoryImpl.lambda$createGenerators$1(SessionFactoryImpl.java:413) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179) ~[?:?]
	at java.util.HashMap$ValueSpliterator.forEachRemaining(HashMap.java:1779) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596) ~[?:?]
	at org.hibernate.internal.SessionFactoryImpl.createGenerators(SessionFactoryImpl.java:412) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:249) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:431) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:941) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:960) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:616) ~[spring-orm-6.0.11.jar:6.0.11]
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:600) ~[spring-orm-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1817) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1766) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:693) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:517) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1332) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1162) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:560) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1682) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:597) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:713) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:696) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:483) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1416) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:597) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:713) ~[spring-beans-6.0.11.jar:6.0.11]
	... 20 more
[INFO ] 29-02-2024 12:57:17.869 [background-preinit] Version - HV000001: Hibernate Validator 8.0.1.Final
[INFO ] 29-02-2024 12:57:18.036 [main] TestSpringBootApplication - Starting TestSpringBootApplication using Java 17.0.10 with PID 1650097 (/home/dima/backend_microservice/UserProductsMicroService/target/classes started by dima in /home/dima/backend_microservice/UserProductsMicroService)
[INFO ] 29-02-2024 12:57:18.053 [main] TestSpringBootApplication - No active profile set, falling back to 1 default profile: "default"
[INFO ] 29-02-2024 12:57:19.978 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO ] 29-02-2024 12:57:20.469 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 462 ms. Found 1 JPA repository interfaces.
[ERROR] 29-02-2024 12:57:22.625 [main] AprLifecycleListener - An incompatible version [1.2.23] of the Apache Tomcat Native library is installed, while Tomcat requires version [1.2.34]
[INFO ] 29-02-2024 12:57:23.595 [main] TomcatWebServer - Tomcat initialized with port(s): 8300 (http)
[INFO ] 29-02-2024 12:57:23.662 [main] Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8300"]
[INFO ] 29-02-2024 12:57:23.669 [main] StandardService - Starting service [Tomcat]
[INFO ] 29-02-2024 12:57:23.671 [main] StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.11]
[INFO ] 29-02-2024 12:57:25.092 [main] TldScanner - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
[INFO ] 29-02-2024 12:57:25.112 [main] [/users_products_api] - Initializing Spring embedded WebApplicationContext
[INFO ] 29-02-2024 12:57:25.134 [main] ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 6834 ms
[INFO ] 29-02-2024 12:57:25.892 [main] Version - HHH000412: Hibernate ORM core version 6.2.6.Final
[INFO ] 29-02-2024 12:57:25.899 [main] Environment - HHH000406: Using bytecode reflection optimizer
[DEBUG] 29-02-2024 12:57:26.314 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@200d1a3d
[DEBUG] 29-02-2024 12:57:26.316 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@200d1a3d
[DEBUG] 29-02-2024 12:57:26.316 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@200d1a3d
[DEBUG] 29-02-2024 12:57:26.317 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@7de147e9
[DEBUG] 29-02-2024 12:57:26.317 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@7de147e9
[DEBUG] 29-02-2024 12:57:26.318 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@12567179
[DEBUG] 29-02-2024 12:57:26.318 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@12567179
[DEBUG] 29-02-2024 12:57:26.319 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@37d699a1
[DEBUG] 29-02-2024 12:57:26.319 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@37d699a1
[DEBUG] 29-02-2024 12:57:26.320 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@7f42b194
[DEBUG] 29-02-2024 12:57:26.320 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@7f42b194
[DEBUG] 29-02-2024 12:57:26.321 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@7f42b194
[DEBUG] 29-02-2024 12:57:26.321 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@8eb6f9a
[DEBUG] 29-02-2024 12:57:26.322 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@8eb6f9a
[DEBUG] 29-02-2024 12:57:26.322 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@8eb6f9a
[DEBUG] 29-02-2024 12:57:26.323 [main] BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@29170a47
[DEBUG] 29-02-2024 12:57:26.323 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@29170a47
[DEBUG] 29-02-2024 12:57:26.323 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@2a8f8555
[DEBUG] 29-02-2024 12:57:26.324 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@402b4f81
[DEBUG] 29-02-2024 12:57:26.325 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@402b4f81
[DEBUG] 29-02-2024 12:57:26.325 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@13ef7fa1
[DEBUG] 29-02-2024 12:57:26.326 [main] BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@23b1aa9
[DEBUG] 29-02-2024 12:57:26.326 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@54489296
[DEBUG] 29-02-2024 12:57:26.327 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@54489296
[DEBUG] 29-02-2024 12:57:26.327 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@54489296
[DEBUG] 29-02-2024 12:57:26.328 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@4e8598d9
[DEBUG] 29-02-2024 12:57:26.328 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@4e8598d9
[DEBUG] 29-02-2024 12:57:26.329 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@4e8598d9
[DEBUG] 29-02-2024 12:57:26.329 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@267ff4df
[DEBUG] 29-02-2024 12:57:26.330 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@267ff4df
[DEBUG] 29-02-2024 12:57:26.330 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@267ff4df
[DEBUG] 29-02-2024 12:57:26.331 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@7c4b5ceb
[DEBUG] 29-02-2024 12:57:26.331 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@7c4b5ceb
[DEBUG] 29-02-2024 12:57:26.331 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@7c4b5ceb
[DEBUG] 29-02-2024 12:57:26.332 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@6c07add6
[DEBUG] 29-02-2024 12:57:26.334 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@6c07add6
[DEBUG] 29-02-2024 12:57:26.334 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@6c07add6
[DEBUG] 29-02-2024 12:57:26.335 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@e26a3df
[DEBUG] 29-02-2024 12:57:26.335 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@e26a3df
[DEBUG] 29-02-2024 12:57:26.336 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@57a667c8
[DEBUG] 29-02-2024 12:57:26.336 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@57a667c8
[DEBUG] 29-02-2024 12:57:26.337 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@712cd5d3
[DEBUG] 29-02-2024 12:57:26.337 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@712cd5d3
[DEBUG] 29-02-2024 12:57:26.337 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@712cd5d3
[DEBUG] 29-02-2024 12:57:26.338 [main] BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@2094bf3d
[DEBUG] 29-02-2024 12:57:26.338 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@1b17d8ab
[DEBUG] 29-02-2024 12:57:26.338 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@1b17d8ab
[DEBUG] 29-02-2024 12:57:26.339 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@7f6b7426
[DEBUG] 29-02-2024 12:57:26.339 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@687eb455
[DEBUG] 29-02-2024 12:57:26.340 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@687eb455
[DEBUG] 29-02-2024 12:57:26.340 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@687eb455
[DEBUG] 29-02-2024 12:57:26.340 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@6d969330
[DEBUG] 29-02-2024 12:57:26.341 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@4861cca9
[DEBUG] 29-02-2024 12:57:26.341 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@6c8f4bc7
[DEBUG] 29-02-2024 12:57:26.342 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@714e861f
[DEBUG] 29-02-2024 12:57:26.342 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@714e861f
[DEBUG] 29-02-2024 12:57:26.342 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@28989415
[DEBUG] 29-02-2024 12:57:26.343 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@28989415
[DEBUG] 29-02-2024 12:57:26.343 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@6eda012b
[DEBUG] 29-02-2024 12:57:26.344 [main] BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@781dbe44
[DEBUG] 29-02-2024 12:57:26.344 [main] BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@7d66a126
[DEBUG] 29-02-2024 12:57:26.344 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@1132baa3
[DEBUG] 29-02-2024 12:57:26.345 [main] BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@2fdf22f7
[DEBUG] 29-02-2024 12:57:26.345 [main] BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@3a2546d6
[DEBUG] 29-02-2024 12:57:26.345 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@7282af25
[DEBUG] 29-02-2024 12:57:26.346 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@7282af25
[DEBUG] 29-02-2024 12:57:26.346 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@7661e474
[DEBUG] 29-02-2024 12:57:26.347 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@7661e474
[DEBUG] 29-02-2024 12:57:26.360 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@20ffb8d5
[DEBUG] 29-02-2024 12:57:26.361 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@20ffb8d5
[DEBUG] 29-02-2024 12:57:26.361 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@307c59ea
[DEBUG] 29-02-2024 12:57:26.361 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@307c59ea
[DEBUG] 29-02-2024 12:57:26.362 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@57e03347
[DEBUG] 29-02-2024 12:57:26.362 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@57e03347
[DEBUG] 29-02-2024 12:57:26.362 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2edb2f8b
[DEBUG] 29-02-2024 12:57:26.363 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@733f1395
[DEBUG] 29-02-2024 12:57:26.363 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@21dea711
[DEBUG] 29-02-2024 12:57:26.363 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@21dea711
[DEBUG] 29-02-2024 12:57:26.365 [main] BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@7772d266
[DEBUG] 29-02-2024 12:57:26.366 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@a21c74
[DEBUG] 29-02-2024 12:57:26.366 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@b8a144e
[DEBUG] 29-02-2024 12:57:26.367 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@5fb8dc01
[DEBUG] 29-02-2024 12:57:26.367 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@5fb8dc01
[DEBUG] 29-02-2024 12:57:26.367 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@3e38c472
[DEBUG] 29-02-2024 12:57:26.368 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@2ee92e7d
[DEBUG] 29-02-2024 12:57:26.368 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@759a678a
[DEBUG] 29-02-2024 12:57:26.368 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@759a678a
[DEBUG] 29-02-2024 12:57:26.368 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@6cdbe5ec
[DEBUG] 29-02-2024 12:57:26.369 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@6cdbe5ec
[DEBUG] 29-02-2024 12:57:26.369 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@14b8a751
[DEBUG] 29-02-2024 12:57:26.369 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@14b8a751
[DEBUG] 29-02-2024 12:57:26.370 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@14b8a751
[DEBUG] 29-02-2024 12:57:26.370 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@7345f97d
[DEBUG] 29-02-2024 12:57:26.370 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@7345f97d
[DEBUG] 29-02-2024 12:57:26.371 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@7345f97d
[DEBUG] 29-02-2024 12:57:26.371 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@554566a8
[DEBUG] 29-02-2024 12:57:26.374 [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@66020d69
[DEBUG] 29-02-2024 12:57:26.375 [main] BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@3751acd7
[DEBUG] 29-02-2024 12:57:26.375 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@3751acd7
[DEBUG] 29-02-2024 12:57:26.375 [main] BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@6b832551
[DEBUG] 29-02-2024 12:57:26.376 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@6b832551
[DEBUG] 29-02-2024 12:57:26.376 [main] BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@6b832551
[DEBUG] 29-02-2024 12:57:26.376 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@150d6eaf
[DEBUG] 29-02-2024 12:57:26.377 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@63124022
[DEBUG] 29-02-2024 12:57:26.377 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@591f6f83
[DEBUG] 29-02-2024 12:57:26.377 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@591f6f83
[DEBUG] 29-02-2024 12:57:26.378 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@2b44605c
[DEBUG] 29-02-2024 12:57:26.378 [main] BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@2b44605c
[DEBUG] 29-02-2024 12:57:26.378 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@2b44605c
[DEBUG] 29-02-2024 12:57:26.379 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@55421b8d
[DEBUG] 29-02-2024 12:57:26.379 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@55421b8d
[DEBUG] 29-02-2024 12:57:26.380 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@24a04257
[DEBUG] 29-02-2024 12:57:26.380 [main] BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@24a04257
[DEBUG] 29-02-2024 12:57:26.381 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@6615237
[DEBUG] 29-02-2024 12:57:26.381 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@6615237
[DEBUG] 29-02-2024 12:57:26.382 [main] BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@eaf8427
[DEBUG] 29-02-2024 12:57:26.382 [main] BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@eaf8427
[DEBUG] 29-02-2024 12:57:26.382 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@4bf4680c
[DEBUG] 29-02-2024 12:57:26.383 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@4bf4680c
[DEBUG] 29-02-2024 12:57:26.383 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@6d6039df
[DEBUG] 29-02-2024 12:57:26.398 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@375084c9
[DEBUG] 29-02-2024 12:57:26.399 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@375084c9
[DEBUG] 29-02-2024 12:57:26.402 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@67763ebe
[DEBUG] 29-02-2024 12:57:26.403 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@4b4a2fa8
[DEBUG] 29-02-2024 12:57:26.403 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@5da6b13d
[DEBUG] 29-02-2024 12:57:26.403 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@3dc39459
[DEBUG] 29-02-2024 12:57:26.404 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@6b16de91
[DEBUG] 29-02-2024 12:57:26.404 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@71bb8b34
[DEBUG] 29-02-2024 12:57:26.404 [main] BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@197ce367
[DEBUG] 29-02-2024 12:57:26.405 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@383cdd4d
[DEBUG] 29-02-2024 12:57:26.405 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@65036e8d
[DEBUG] 29-02-2024 12:57:27.759 [main] DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5dd6a4c8) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@47be41c6)
[DEBUG] 29-02-2024 12:57:27.764 [main] JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
[DEBUG] 29-02-2024 12:57:27.765 [main] JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 29-02-2024 12:57:27.789 [main] BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@54defd69
[DEBUG] 29-02-2024 12:57:27.789 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@54defd69
[DEBUG] 29-02-2024 12:57:27.789 [main] BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@375084c9`
[DEBUG] 29-02-2024 12:57:27.792 [main] JdbcTypeRegistry - addDescriptor(3100, NumericTypeDescriptor) replaced previous registration(org.hibernate.dialect.PostgreSQLIntervalSecondJdbcType@7019d619)
[DEBUG] 29-02-2024 12:57:27.807 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 29-02-2024 12:57:27.807 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 29-02-2024 12:57:27.807 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 29-02-2024 12:57:27.808 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 29-02-2024 12:57:27.808 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 29-02-2024 12:57:27.809 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 29-02-2024 12:57:27.811 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 29-02-2024 12:57:27.811 [main] BasicTypeRegistry - Adding type registration OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 29-02-2024 12:57:27.812 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 29-02-2024 12:57:27.815 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3d798e76] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@763b0996]
[WARN ] 29-02-2024 12:57:28.293 [main] InFlightMetadataCollectorImpl - HHH000069: Duplicate generator name generator
[INFO ] 29-02-2024 12:57:28.461 [main] BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
[INFO ] 29-02-2024 12:57:31.115 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 29-02-2024 12:57:31.117 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3d798e76] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@7962c1d5]
[TRACE] 29-02-2024 12:57:31.129 [main] TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@7962c1d5] for TypeConfiguration
[WARN ] 29-02-2024 12:57:32.314 [main] JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[INFO ] 29-02-2024 12:57:33.600 [main] Http11NioProtocol - Starting ProtocolHandler ["http-nio-8300"]
[INFO ] 29-02-2024 12:57:33.693 [main] TomcatWebServer - Tomcat started on port(s): 8300 (http) with context path '/users_products_api'
[INFO ] 29-02-2024 12:57:33.733 [main] TestSpringBootApplication - Started TestSpringBootApplication in 16.989 seconds (process running for 20.648)
[INFO ] 29-02-2024 12:57:39.764 [http-nio-8300-exec-1] [/users_products_api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[INFO ] 29-02-2024 12:57:39.766 [http-nio-8300-exec-1] DispatcherServlet - Initializing Servlet 'dispatcherServlet'
[INFO ] 29-02-2024 12:57:39.775 [http-nio-8300-exec-1] DispatcherServlet - Completed initialization in 5 ms
[DEBUG] 29-02-2024 12:57:40.428 [http-nio-8300-exec-1] SQL - select e1_0.id,e1_0.email,e1_0.login,e1_0.name,e1_0.password,p1_0.id_user,p1_0.id,p1_0.name,p1_0.page_image,p1_0.price,p1_0.raiting,p1_0.year_issue from users e1_0 left join products p1_0 on e1_0.id=p1_0.id_user where e1_0.id=?
[DEBUG] 29-02-2024 12:57:40.543 [http-nio-8300-exec-1] SQL - select nextval('products_id_seq')
[DEBUG] 29-02-2024 12:57:40.633 [http-nio-8300-exec-1] SQL - insert into products (name,page_image,price,raiting,id_user,year_issue,id) values (?,?,?,?,?,?,?)
[WARN ] 29-02-2024 12:57:40.684 [http-nio-8300-exec-1] SqlExceptionHelper - SQL Error: 0, SQLState: 23502
[ERROR] 29-02-2024 12:57:40.686 [http-nio-8300-exec-1] SqlExceptionHelper - ERROR: null value in column "id_user" violates not-null constraint
  Подробности: Failing row contains (product3, def, 100, 2.9, 2023-01-03 23:59:29, 10, null).
[ERROR] 29-02-2024 12:57:40.729 [http-nio-8300-exec-1] [dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [/users_products_api] threw exception [Request processing failed: org.springframework.orm.jpa.JpaSystemException: could not execute statement [ERROR: null value in column "id_user" violates not-null constraint
  Подробности: Failing row contains (product3, def, 100, 2.9, 2023-01-03 23:59:29, 10, null).] [insert into products (name,page_image,price,raiting,id_user,year_issue,id) values (?,?,?,?,?,?,?)]] with root cause
org.postgresql.util.PSQLException: ERROR: null value in column "id_user" violates not-null constraint
  Подробности: Failing row contains (product3, def, 100, 2.9, 2023-01-03 23:59:29, 10, null).
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2713) ~[postgresql-42.6.0.jar:42.6.0]
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2401) ~[postgresql-42.6.0.jar:42.6.0]
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:368) ~[postgresql-42.6.0.jar:42.6.0]
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:498) ~[postgresql-42.6.0.jar:42.6.0]
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:415) ~[postgresql-42.6.0.jar:42.6.0]
	at org.postgresql.jdbc.PgPreparedStatement.executeWithFlags(PgPreparedStatement.java:190) ~[postgresql-42.6.0.jar:42.6.0]
	at org.postgresql.jdbc.PgPreparedStatement.executeUpdate(PgPreparedStatement.java:152) ~[postgresql-42.6.0.jar:42.6.0]
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:275) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.performNonBatchedMutation(AbstractMutationExecutor.java:108) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.engine.jdbc.mutation.internal.MutationExecutorSingleNonBatched.performNonBatchedOperations(MutationExecutorSingleNonBatched.java:40) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.execute(AbstractMutationExecutor.java:53) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.persister.entity.mutation.InsertCoordinator.doStaticInserts(InsertCoordinator.java:170) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.persister.entity.mutation.InsertCoordinator.coordinateInsert(InsertCoordinator.java:112) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:2761) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.action.internal.EntityInsertAction.execute(EntityInsertAction.java:102) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:633) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:502) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:358) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:39) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1412) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:485) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:2301) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:1966) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:439) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:169) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:267) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:561) ~[spring-orm-6.0.11.jar:6.0.11]
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:743) ~[spring-tx-6.0.11.jar:6.0.11]
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:711) ~[spring-tx-6.0.11.jar:6.0.11]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.commitTransactionAfterReturning(TransactionAspectSupport.java:660) ~[spring-tx-6.0.11.jar:6.0.11]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:410) ~[spring-tx-6.0.11.jar:6.0.11]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.0.11.jar:6.0.11]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.0.11.jar:6.0.11]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:756) ~[spring-aop-6.0.11.jar:6.0.11]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708) ~[spring-aop-6.0.11.jar:6.0.11]
	at DAO.DAOUserProducts$$SpringCGLIB$$0.addedProductForUser(<generated>) ~[classes/:?]
	at controller.CRUDUserProducts.addedProductUser(CRUDUserProducts.java:27) ~[classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:568) ~[?:?]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205) ~[spring-web-6.0.11.jar:6.0.11]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150) ~[spring-web-6.0.11.jar:6.0.11]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.0.11.jar:6.0.11]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884) ~[spring-webmvc-6.0.11.jar:6.0.11]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797) ~[spring-webmvc-6.0.11.jar:6.0.11]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.0.11.jar:6.0.11]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081) ~[spring-webmvc-6.0.11.jar:6.0.11]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974) ~[spring-webmvc-6.0.11.jar:6.0.11]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011) ~[spring-webmvc-6.0.11.jar:6.0.11]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914) ~[spring-webmvc-6.0.11.jar:6.0.11]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590) ~[tomcat-embed-core-10.1.11.jar:6.0]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.0.11.jar:6.0.11]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.11.jar:6.0]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205) ~[tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149) ~[tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.11.jar:10.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174) ~[tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149) ~[tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.0.11.jar:6.0.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.0.11.jar:6.0.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174) ~[tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149) ~[tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.0.11.jar:6.0.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.0.11.jar:6.0.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174) ~[tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149) ~[tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.0.11.jar:6.0.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.0.11.jar:6.0.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174) ~[tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149) ~[tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:166) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at java.lang.Thread.run(Thread.java:840) [?:?]
[TRACE] 29-02-2024 12:58:42.454 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@7962c1d5] for TypeConfiguration
[DEBUG] 29-02-2024 12:58:42.455 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@2ba72ec6] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@7962c1d5]
[INFO ] 29-02-2024 12:58:53.175 [background-preinit] Version - HV000001: Hibernate Validator 8.0.1.Final
[INFO ] 29-02-2024 12:58:53.372 [main] TestSpringBootApplication - Starting TestSpringBootApplication using Java 17.0.10 with PID 1651032 (/home/dima/backend_microservice/UserProductsMicroService/target/classes started by dima in /home/dima/backend_microservice/UserProductsMicroService)
[INFO ] 29-02-2024 12:58:53.392 [main] TestSpringBootApplication - No active profile set, falling back to 1 default profile: "default"
[INFO ] 29-02-2024 12:58:55.088 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO ] 29-02-2024 12:58:56.084 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 970 ms. Found 1 JPA repository interfaces.
[ERROR] 29-02-2024 12:58:57.922 [main] AprLifecycleListener - An incompatible version [1.2.23] of the Apache Tomcat Native library is installed, while Tomcat requires version [1.2.34]
[INFO ] 29-02-2024 12:58:59.312 [main] TomcatWebServer - Tomcat initialized with port(s): 8300 (http)
[INFO ] 29-02-2024 12:58:59.360 [main] Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8300"]
[INFO ] 29-02-2024 12:58:59.368 [main] StandardService - Starting service [Tomcat]
[INFO ] 29-02-2024 12:58:59.370 [main] StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.11]
[INFO ] 29-02-2024 12:59:00.571 [main] TldScanner - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
[INFO ] 29-02-2024 12:59:00.603 [main] [/users_products_api] - Initializing Spring embedded WebApplicationContext
[INFO ] 29-02-2024 12:59:00.609 [main] ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 6977 ms
[INFO ] 29-02-2024 12:59:01.192 [main] Version - HHH000412: Hibernate ORM core version 6.2.6.Final
[INFO ] 29-02-2024 12:59:01.209 [main] Environment - HHH000406: Using bytecode reflection optimizer
[DEBUG] 29-02-2024 12:59:01.737 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@267ff4df
[DEBUG] 29-02-2024 12:59:01.740 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@267ff4df
[DEBUG] 29-02-2024 12:59:01.741 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@267ff4df
[DEBUG] 29-02-2024 12:59:01.742 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@7c4b5ceb
[DEBUG] 29-02-2024 12:59:01.745 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@7c4b5ceb
[DEBUG] 29-02-2024 12:59:01.746 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@6c07add6
[DEBUG] 29-02-2024 12:59:01.746 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@6c07add6
[DEBUG] 29-02-2024 12:59:01.752 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@e26a3df
[DEBUG] 29-02-2024 12:59:01.755 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@e26a3df
[DEBUG] 29-02-2024 12:59:01.758 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@57a667c8
[DEBUG] 29-02-2024 12:59:01.759 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@57a667c8
[DEBUG] 29-02-2024 12:59:01.763 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@57a667c8
[DEBUG] 29-02-2024 12:59:01.764 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@712cd5d3
[DEBUG] 29-02-2024 12:59:01.768 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@712cd5d3
[DEBUG] 29-02-2024 12:59:01.769 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@712cd5d3
[DEBUG] 29-02-2024 12:59:01.771 [main] BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@2094bf3d
[DEBUG] 29-02-2024 12:59:01.773 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@2094bf3d
[DEBUG] 29-02-2024 12:59:01.774 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@1b17d8ab
[DEBUG] 29-02-2024 12:59:01.774 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@7f6b7426
[DEBUG] 29-02-2024 12:59:01.775 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@7f6b7426
[DEBUG] 29-02-2024 12:59:01.775 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@687eb455
[DEBUG] 29-02-2024 12:59:01.776 [main] BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@6d969330
[DEBUG] 29-02-2024 12:59:01.776 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@4861cca9
[DEBUG] 29-02-2024 12:59:01.776 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@4861cca9
[DEBUG] 29-02-2024 12:59:01.777 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@4861cca9
[DEBUG] 29-02-2024 12:59:01.778 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@6c8f4bc7
[DEBUG] 29-02-2024 12:59:01.779 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@6c8f4bc7
[DEBUG] 29-02-2024 12:59:01.780 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@6c8f4bc7
[DEBUG] 29-02-2024 12:59:01.780 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@714e861f
[DEBUG] 29-02-2024 12:59:01.782 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@714e861f
[DEBUG] 29-02-2024 12:59:01.783 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@714e861f
[DEBUG] 29-02-2024 12:59:01.783 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@28989415
[DEBUG] 29-02-2024 12:59:01.784 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@28989415
[DEBUG] 29-02-2024 12:59:01.784 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@28989415
[DEBUG] 29-02-2024 12:59:01.786 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@6eda012b
[DEBUG] 29-02-2024 12:59:01.787 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@6eda012b
[DEBUG] 29-02-2024 12:59:01.791 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@6eda012b
[DEBUG] 29-02-2024 12:59:01.792 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@781dbe44
[DEBUG] 29-02-2024 12:59:01.794 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@781dbe44
[DEBUG] 29-02-2024 12:59:01.795 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@7d66a126
[DEBUG] 29-02-2024 12:59:01.796 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@7d66a126
[DEBUG] 29-02-2024 12:59:01.796 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@1132baa3
[DEBUG] 29-02-2024 12:59:01.797 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@1132baa3
[DEBUG] 29-02-2024 12:59:01.797 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@1132baa3
[DEBUG] 29-02-2024 12:59:01.799 [main] BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@2fdf22f7
[DEBUG] 29-02-2024 12:59:01.799 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@3a2546d6
[DEBUG] 29-02-2024 12:59:01.800 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@3a2546d6
[DEBUG] 29-02-2024 12:59:01.803 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@7282af25
[DEBUG] 29-02-2024 12:59:01.804 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@7661e474
[DEBUG] 29-02-2024 12:59:01.808 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@7661e474
[DEBUG] 29-02-2024 12:59:01.810 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@7661e474
[DEBUG] 29-02-2024 12:59:01.810 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@20ffb8d5
[DEBUG] 29-02-2024 12:59:01.811 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@307c59ea
[DEBUG] 29-02-2024 12:59:01.813 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@57e03347
[DEBUG] 29-02-2024 12:59:01.814 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@2edb2f8b
[DEBUG] 29-02-2024 12:59:01.815 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@2edb2f8b
[DEBUG] 29-02-2024 12:59:01.817 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@733f1395
[DEBUG] 29-02-2024 12:59:01.819 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@733f1395
[DEBUG] 29-02-2024 12:59:01.820 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@21dea711
[DEBUG] 29-02-2024 12:59:01.820 [main] BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@7772d266
[DEBUG] 29-02-2024 12:59:01.822 [main] BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@a21c74
[DEBUG] 29-02-2024 12:59:01.824 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@b8a144e
[DEBUG] 29-02-2024 12:59:01.824 [main] BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@5fb8dc01
[DEBUG] 29-02-2024 12:59:01.824 [main] BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@3e38c472
[DEBUG] 29-02-2024 12:59:01.824 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@2ee92e7d
[DEBUG] 29-02-2024 12:59:01.825 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@2ee92e7d
[DEBUG] 29-02-2024 12:59:01.825 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@759a678a
[DEBUG] 29-02-2024 12:59:01.826 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@759a678a
[DEBUG] 29-02-2024 12:59:01.826 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@6cdbe5ec
[DEBUG] 29-02-2024 12:59:01.826 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@6cdbe5ec
[DEBUG] 29-02-2024 12:59:01.826 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@14b8a751
[DEBUG] 29-02-2024 12:59:01.827 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@14b8a751
[DEBUG] 29-02-2024 12:59:01.827 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@7345f97d
[DEBUG] 29-02-2024 12:59:01.827 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@7345f97d
[DEBUG] 29-02-2024 12:59:01.828 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@554566a8
[DEBUG] 29-02-2024 12:59:01.828 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@66020d69
[DEBUG] 29-02-2024 12:59:01.828 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@3751acd7
[DEBUG] 29-02-2024 12:59:01.828 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@3751acd7
[DEBUG] 29-02-2024 12:59:01.829 [main] BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@6b832551
[DEBUG] 29-02-2024 12:59:01.829 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@150d6eaf
[DEBUG] 29-02-2024 12:59:01.829 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@63124022
[DEBUG] 29-02-2024 12:59:01.830 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@591f6f83
[DEBUG] 29-02-2024 12:59:01.830 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@591f6f83
[DEBUG] 29-02-2024 12:59:01.830 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2b44605c
[DEBUG] 29-02-2024 12:59:01.834 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@55421b8d
[DEBUG] 29-02-2024 12:59:01.835 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@24a04257
[DEBUG] 29-02-2024 12:59:01.835 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@24a04257
[DEBUG] 29-02-2024 12:59:01.836 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@6615237
[DEBUG] 29-02-2024 12:59:01.836 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@6615237
[DEBUG] 29-02-2024 12:59:01.836 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@eaf8427
[DEBUG] 29-02-2024 12:59:01.837 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@eaf8427
[DEBUG] 29-02-2024 12:59:01.838 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@eaf8427
[DEBUG] 29-02-2024 12:59:01.838 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@4bf4680c
[DEBUG] 29-02-2024 12:59:01.838 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@4bf4680c
[DEBUG] 29-02-2024 12:59:01.839 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@4bf4680c
[DEBUG] 29-02-2024 12:59:01.840 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@6d6039df
[DEBUG] 29-02-2024 12:59:01.840 [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@611c3eae
[DEBUG] 29-02-2024 12:59:01.841 [main] BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@13e00016
[DEBUG] 29-02-2024 12:59:01.841 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@13e00016
[DEBUG] 29-02-2024 12:59:01.842 [main] BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@7b3cbe6e
[DEBUG] 29-02-2024 12:59:01.842 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@7b3cbe6e
[DEBUG] 29-02-2024 12:59:01.843 [main] BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@7b3cbe6e
[DEBUG] 29-02-2024 12:59:01.845 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@177ede17
[DEBUG] 29-02-2024 12:59:01.845 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@17176b18
[DEBUG] 29-02-2024 12:59:01.849 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@4e4395c
[DEBUG] 29-02-2024 12:59:01.852 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@4e4395c
[DEBUG] 29-02-2024 12:59:01.852 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@1ab53860
[DEBUG] 29-02-2024 12:59:01.856 [main] BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@1ab53860
[DEBUG] 29-02-2024 12:59:01.858 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@1ab53860
[DEBUG] 29-02-2024 12:59:01.858 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@7b5ac347
[DEBUG] 29-02-2024 12:59:01.859 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@7b5ac347
[DEBUG] 29-02-2024 12:59:01.859 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@57b9389f
[DEBUG] 29-02-2024 12:59:01.859 [main] BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@57b9389f
[DEBUG] 29-02-2024 12:59:01.860 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@72b2c5ed
[DEBUG] 29-02-2024 12:59:01.860 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@72b2c5ed
[DEBUG] 29-02-2024 12:59:01.860 [main] BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@41f785e3
[DEBUG] 29-02-2024 12:59:01.860 [main] BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@41f785e3
[DEBUG] 29-02-2024 12:59:01.861 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@6c9a3661
[DEBUG] 29-02-2024 12:59:01.861 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@6c9a3661
[DEBUG] 29-02-2024 12:59:01.861 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@727986ad
[DEBUG] 29-02-2024 12:59:01.881 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@5da6b13d
[DEBUG] 29-02-2024 12:59:01.884 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@5da6b13d
[DEBUG] 29-02-2024 12:59:01.888 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@3b6c2be6
[DEBUG] 29-02-2024 12:59:01.888 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@25533bba
[DEBUG] 29-02-2024 12:59:01.889 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@26d0ece6
[DEBUG] 29-02-2024 12:59:01.890 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@100bba26
[DEBUG] 29-02-2024 12:59:01.890 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@4ae280da
[DEBUG] 29-02-2024 12:59:01.891 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@76d0ecd7
[DEBUG] 29-02-2024 12:59:01.891 [main] BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@57c69937
[DEBUG] 29-02-2024 12:59:01.894 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@1ad1c363
[DEBUG] 29-02-2024 12:59:01.899 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@446b64b3
[DEBUG] 29-02-2024 12:59:03.244 [main] DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@14e3d439) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@d85b399)
[DEBUG] 29-02-2024 12:59:03.251 [main] JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
[DEBUG] 29-02-2024 12:59:03.252 [main] JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 29-02-2024 12:59:03.278 [main] BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@31006a75
[DEBUG] 29-02-2024 12:59:03.279 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@31006a75
[DEBUG] 29-02-2024 12:59:03.279 [main] BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@5da6b13d`
[DEBUG] 29-02-2024 12:59:03.281 [main] JdbcTypeRegistry - addDescriptor(3100, NumericTypeDescriptor) replaced previous registration(org.hibernate.dialect.PostgreSQLIntervalSecondJdbcType@370225c7)
[DEBUG] 29-02-2024 12:59:03.296 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 29-02-2024 12:59:03.296 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 29-02-2024 12:59:03.297 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 29-02-2024 12:59:03.297 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 29-02-2024 12:59:03.297 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 29-02-2024 12:59:03.298 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 29-02-2024 12:59:03.299 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 29-02-2024 12:59:03.300 [main] BasicTypeRegistry - Adding type registration OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 29-02-2024 12:59:03.300 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 29-02-2024 12:59:03.304 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@75dc1c1c] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@5611bba]
[WARN ] 29-02-2024 12:59:03.881 [main] InFlightMetadataCollectorImpl - HHH000069: Duplicate generator name generator
[INFO ] 29-02-2024 12:59:04.078 [main] BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
[INFO ] 29-02-2024 12:59:06.940 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 29-02-2024 12:59:06.942 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@75dc1c1c] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@c3ca482]
[TRACE] 29-02-2024 12:59:06.948 [main] TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@c3ca482] for TypeConfiguration
[WARN ] 29-02-2024 12:59:08.345 [main] JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[INFO ] 29-02-2024 12:59:09.727 [main] Http11NioProtocol - Starting ProtocolHandler ["http-nio-8300"]
[INFO ] 29-02-2024 12:59:09.797 [main] TomcatWebServer - Tomcat started on port(s): 8300 (http) with context path '/users_products_api'
[INFO ] 29-02-2024 12:59:09.838 [main] TestSpringBootApplication - Started TestSpringBootApplication in 17.614 seconds (process running for 20.509)
[INFO ] 29-02-2024 12:59:17.251 [http-nio-8300-exec-1] [/users_products_api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[INFO ] 29-02-2024 12:59:17.251 [http-nio-8300-exec-1] DispatcherServlet - Initializing Servlet 'dispatcherServlet'
[INFO ] 29-02-2024 12:59:17.256 [http-nio-8300-exec-1] DispatcherServlet - Completed initialization in 4 ms
[DEBUG] 29-02-2024 12:59:17.860 [http-nio-8300-exec-1] SQL - select e1_0.id,e1_0.email,e1_0.login,e1_0.name,e1_0.password,p1_0.id_user,p1_0.id,p1_0.name,p1_0.page_image,p1_0.price,p1_0.raiting,p1_0.year_issue from users e1_0 left join products p1_0 on e1_0.id=p1_0.id_user where e1_0.id=?
[DEBUG] 29-02-2024 12:59:17.950 [http-nio-8300-exec-1] SQL - select nextval('products_id_seq')
[DEBUG] 29-02-2024 12:59:18.014 [http-nio-8300-exec-1] SQL - insert into products (name,page_image,price,raiting,id_user,year_issue,id) values (?,?,?,?,?,?,?)
[WARN ] 29-02-2024 13:23:38.239 [http-nio-8300-exec-2] DefaultHandlerExceptionResolver - Resolved [org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Cannot deserialize value of type `java.time.LocalDateTime` from String "2023-01-03 23:59:29": Failed to deserialize java.time.LocalDateTime: (java.time.format.DateTimeParseException) Text '2023-01-03 23:59:29' could not be parsed at index 10]
[TRACE] 29-02-2024 13:28:46.453 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@c3ca482] for TypeConfiguration
[DEBUG] 29-02-2024 13:28:46.454 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@35aab10b] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@c3ca482]
[INFO ] 29-02-2024 13:28:59.386 [background-preinit] Version - HV000001: Hibernate Validator 8.0.1.Final
[INFO ] 29-02-2024 13:28:59.572 [main] TestSpringBootApplication - Starting TestSpringBootApplication using Java 17.0.10 with PID 1666101 (/home/dima/backend_microservice/UserProductsMicroService/target/classes started by dima in /home/dima/backend_microservice/UserProductsMicroService)
[INFO ] 29-02-2024 13:28:59.582 [main] TestSpringBootApplication - No active profile set, falling back to 1 default profile: "default"
[INFO ] 29-02-2024 13:29:01.801 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO ] 29-02-2024 13:29:02.419 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 591 ms. Found 1 JPA repository interfaces.
[ERROR] 29-02-2024 13:29:04.297 [main] AprLifecycleListener - An incompatible version [1.2.23] of the Apache Tomcat Native library is installed, while Tomcat requires version [1.2.34]
[INFO ] 29-02-2024 13:29:05.495 [main] TomcatWebServer - Tomcat initialized with port(s): 8300 (http)
[INFO ] 29-02-2024 13:29:05.522 [main] Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8300"]
[INFO ] 29-02-2024 13:29:05.536 [main] StandardService - Starting service [Tomcat]
[INFO ] 29-02-2024 13:29:05.538 [main] StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.11]
[INFO ] 29-02-2024 13:29:07.212 [main] TldScanner - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
[INFO ] 29-02-2024 13:29:07.235 [main] [/users_products_api] - Initializing Spring embedded WebApplicationContext
[INFO ] 29-02-2024 13:29:07.242 [main] ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 7509 ms
[INFO ] 29-02-2024 13:29:07.854 [main] Version - HHH000412: Hibernate ORM core version 6.2.6.Final
[INFO ] 29-02-2024 13:29:07.861 [main] Environment - HHH000406: Using bytecode reflection optimizer
[DEBUG] 29-02-2024 13:29:08.429 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@482ba4b1
[DEBUG] 29-02-2024 13:29:08.430 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@482ba4b1
[DEBUG] 29-02-2024 13:29:08.431 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@482ba4b1
[DEBUG] 29-02-2024 13:29:08.431 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@307af381
[DEBUG] 29-02-2024 13:29:08.432 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@307af381
[DEBUG] 29-02-2024 13:29:08.433 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@1510b9a2
[DEBUG] 29-02-2024 13:29:08.433 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@1510b9a2
[DEBUG] 29-02-2024 13:29:08.434 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@76a6f045
[DEBUG] 29-02-2024 13:29:08.434 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@76a6f045
[DEBUG] 29-02-2024 13:29:08.435 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@633ddc0c
[DEBUG] 29-02-2024 13:29:08.435 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@633ddc0c
[DEBUG] 29-02-2024 13:29:08.436 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@633ddc0c
[DEBUG] 29-02-2024 13:29:08.437 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@4bcdd11
[DEBUG] 29-02-2024 13:29:08.437 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@4bcdd11
[DEBUG] 29-02-2024 13:29:08.438 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@4bcdd11
[DEBUG] 29-02-2024 13:29:08.439 [main] BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@1471b98d
[DEBUG] 29-02-2024 13:29:08.440 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@1471b98d
[DEBUG] 29-02-2024 13:29:08.440 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@5514579e
[DEBUG] 29-02-2024 13:29:08.442 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@58c42c8c
[DEBUG] 29-02-2024 13:29:08.448 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@58c42c8c
[DEBUG] 29-02-2024 13:29:08.449 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@3af236d0
[DEBUG] 29-02-2024 13:29:08.450 [main] BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@23564dd2
[DEBUG] 29-02-2024 13:29:08.451 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@54895681
[DEBUG] 29-02-2024 13:29:08.451 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@54895681
[DEBUG] 29-02-2024 13:29:08.452 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@54895681
[DEBUG] 29-02-2024 13:29:08.452 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@2dd0a0d0
[DEBUG] 29-02-2024 13:29:08.453 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@2dd0a0d0
[DEBUG] 29-02-2024 13:29:08.453 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@2dd0a0d0
[DEBUG] 29-02-2024 13:29:08.454 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@6bf570c
[DEBUG] 29-02-2024 13:29:08.454 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@6bf570c
[DEBUG] 29-02-2024 13:29:08.455 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@6bf570c
[DEBUG] 29-02-2024 13:29:08.455 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@1796b2d4
[DEBUG] 29-02-2024 13:29:08.456 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@1796b2d4
[DEBUG] 29-02-2024 13:29:08.456 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@1796b2d4
[DEBUG] 29-02-2024 13:29:08.457 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@935d3f9
[DEBUG] 29-02-2024 13:29:08.458 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@935d3f9
[DEBUG] 29-02-2024 13:29:08.458 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@935d3f9
[DEBUG] 29-02-2024 13:29:08.459 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@214b342f
[DEBUG] 29-02-2024 13:29:08.460 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@214b342f
[DEBUG] 29-02-2024 13:29:08.460 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@5db0003d
[DEBUG] 29-02-2024 13:29:08.461 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@5db0003d
[DEBUG] 29-02-2024 13:29:08.462 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@7f12094d
[DEBUG] 29-02-2024 13:29:08.462 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@7f12094d
[DEBUG] 29-02-2024 13:29:08.463 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@7f12094d
[DEBUG] 29-02-2024 13:29:08.463 [main] BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@589fb74d
[DEBUG] 29-02-2024 13:29:08.464 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@200d1a3d
[DEBUG] 29-02-2024 13:29:08.465 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@200d1a3d
[DEBUG] 29-02-2024 13:29:08.466 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@7de147e9
[DEBUG] 29-02-2024 13:29:08.467 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@12567179
[DEBUG] 29-02-2024 13:29:08.467 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@12567179
[DEBUG] 29-02-2024 13:29:08.468 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@12567179
[DEBUG] 29-02-2024 13:29:08.468 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@37d699a1
[DEBUG] 29-02-2024 13:29:08.469 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@7f42b194
[DEBUG] 29-02-2024 13:29:08.469 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@8eb6f9a
[DEBUG] 29-02-2024 13:29:08.469 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@29170a47
[DEBUG] 29-02-2024 13:29:08.470 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@29170a47
[DEBUG] 29-02-2024 13:29:08.470 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@2a8f8555
[DEBUG] 29-02-2024 13:29:08.471 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@2a8f8555
[DEBUG] 29-02-2024 13:29:08.472 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@402b4f81
[DEBUG] 29-02-2024 13:29:08.472 [main] BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@13ef7fa1
[DEBUG] 29-02-2024 13:29:08.473 [main] BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@23b1aa9
[DEBUG] 29-02-2024 13:29:08.474 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@54489296
[DEBUG] 29-02-2024 13:29:08.474 [main] BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@4e8598d9
[DEBUG] 29-02-2024 13:29:08.476 [main] BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@267ff4df
[DEBUG] 29-02-2024 13:29:08.478 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@7c4b5ceb
[DEBUG] 29-02-2024 13:29:08.479 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@7c4b5ceb
[DEBUG] 29-02-2024 13:29:08.479 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@6c07add6
[DEBUG] 29-02-2024 13:29:08.480 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@6c07add6
[DEBUG] 29-02-2024 13:29:08.480 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@e26a3df
[DEBUG] 29-02-2024 13:29:08.481 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@e26a3df
[DEBUG] 29-02-2024 13:29:08.481 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@57a667c8
[DEBUG] 29-02-2024 13:29:08.500 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@57a667c8
[DEBUG] 29-02-2024 13:29:08.502 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@712cd5d3
[DEBUG] 29-02-2024 13:29:08.503 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@712cd5d3
[DEBUG] 29-02-2024 13:29:08.503 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2094bf3d
[DEBUG] 29-02-2024 13:29:08.504 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@1b17d8ab
[DEBUG] 29-02-2024 13:29:08.504 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@7f6b7426
[DEBUG] 29-02-2024 13:29:08.505 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@7f6b7426
[DEBUG] 29-02-2024 13:29:08.506 [main] BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@687eb455
[DEBUG] 29-02-2024 13:29:08.507 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@6d969330
[DEBUG] 29-02-2024 13:29:08.507 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4861cca9
[DEBUG] 29-02-2024 13:29:08.508 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@6c8f4bc7
[DEBUG] 29-02-2024 13:29:08.508 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@6c8f4bc7
[DEBUG] 29-02-2024 13:29:08.509 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@714e861f
[DEBUG] 29-02-2024 13:29:08.509 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@28989415
[DEBUG] 29-02-2024 13:29:08.510 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@6eda012b
[DEBUG] 29-02-2024 13:29:08.510 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@6eda012b
[DEBUG] 29-02-2024 13:29:08.510 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@781dbe44
[DEBUG] 29-02-2024 13:29:08.511 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@781dbe44
[DEBUG] 29-02-2024 13:29:08.511 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@7d66a126
[DEBUG] 29-02-2024 13:29:08.511 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@7d66a126
[DEBUG] 29-02-2024 13:29:08.512 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@7d66a126
[DEBUG] 29-02-2024 13:29:08.512 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@1132baa3
[DEBUG] 29-02-2024 13:29:08.512 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@1132baa3
[DEBUG] 29-02-2024 13:29:08.513 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@1132baa3
[DEBUG] 29-02-2024 13:29:08.513 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@2fdf22f7
[DEBUG] 29-02-2024 13:29:08.514 [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@3a2546d6
[DEBUG] 29-02-2024 13:29:08.515 [main] BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@7282af25
[DEBUG] 29-02-2024 13:29:08.516 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@7282af25
[DEBUG] 29-02-2024 13:29:08.516 [main] BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@7661e474
[DEBUG] 29-02-2024 13:29:08.516 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@7661e474
[DEBUG] 29-02-2024 13:29:08.517 [main] BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@7661e474
[DEBUG] 29-02-2024 13:29:08.517 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@20ffb8d5
[DEBUG] 29-02-2024 13:29:08.518 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@307c59ea
[DEBUG] 29-02-2024 13:29:08.518 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@57e03347
[DEBUG] 29-02-2024 13:29:08.518 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@57e03347
[DEBUG] 29-02-2024 13:29:08.519 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@2edb2f8b
[DEBUG] 29-02-2024 13:29:08.519 [main] BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@2edb2f8b
[DEBUG] 29-02-2024 13:29:08.519 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@2edb2f8b
[DEBUG] 29-02-2024 13:29:08.520 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@733f1395
[DEBUG] 29-02-2024 13:29:08.520 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@733f1395
[DEBUG] 29-02-2024 13:29:08.520 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@21dea711
[DEBUG] 29-02-2024 13:29:08.521 [main] BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@21dea711
[DEBUG] 29-02-2024 13:29:08.523 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@7772d266
[DEBUG] 29-02-2024 13:29:08.524 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@7772d266
[DEBUG] 29-02-2024 13:29:08.524 [main] BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@a21c74
[DEBUG] 29-02-2024 13:29:08.525 [main] BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@a21c74
[DEBUG] 29-02-2024 13:29:08.525 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@b8a144e
[DEBUG] 29-02-2024 13:29:08.526 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@b8a144e
[DEBUG] 29-02-2024 13:29:08.526 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@5fb8dc01
[DEBUG] 29-02-2024 13:29:08.545 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@6b5c134e
[DEBUG] 29-02-2024 13:29:08.546 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@6b5c134e
[DEBUG] 29-02-2024 13:29:08.549 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@ddffa6c
[DEBUG] 29-02-2024 13:29:08.549 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@42c54bad
[DEBUG] 29-02-2024 13:29:08.550 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@6bb4cc0e
[DEBUG] 29-02-2024 13:29:08.551 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@5cc1bf20
[DEBUG] 29-02-2024 13:29:08.551 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@2e3f324e
[DEBUG] 29-02-2024 13:29:08.551 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@46cf8c07
[DEBUG] 29-02-2024 13:29:08.552 [main] BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@b56ec6c
[DEBUG] 29-02-2024 13:29:08.552 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@5abf6a99
[DEBUG] 29-02-2024 13:29:08.552 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@dc59ec2
[DEBUG] 29-02-2024 13:29:10.560 [main] DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1eb906f3) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@58e02359)
[DEBUG] 29-02-2024 13:29:10.565 [main] JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
[DEBUG] 29-02-2024 13:29:10.566 [main] JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 29-02-2024 13:29:10.610 [main] BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@1fc1c7e
[DEBUG] 29-02-2024 13:29:10.611 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@1fc1c7e
[DEBUG] 29-02-2024 13:29:10.613 [main] BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@6b5c134e`
[DEBUG] 29-02-2024 13:29:10.617 [main] JdbcTypeRegistry - addDescriptor(3100, NumericTypeDescriptor) replaced previous registration(org.hibernate.dialect.PostgreSQLIntervalSecondJdbcType@6b8bdcc6)
[DEBUG] 29-02-2024 13:29:10.637 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 29-02-2024 13:29:10.638 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 29-02-2024 13:29:10.639 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 29-02-2024 13:29:10.639 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 29-02-2024 13:29:10.640 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 29-02-2024 13:29:10.641 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 29-02-2024 13:29:10.645 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 29-02-2024 13:29:10.646 [main] BasicTypeRegistry - Adding type registration OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 29-02-2024 13:29:10.647 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 29-02-2024 13:29:10.652 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@68d8eb4f] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@64757d56]
[WARN ] 29-02-2024 13:29:11.746 [main] InFlightMetadataCollectorImpl - HHH000069: Duplicate generator name generator
[INFO ] 29-02-2024 13:29:12.076 [main] BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
[INFO ] 29-02-2024 13:29:15.893 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 29-02-2024 13:29:15.894 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@68d8eb4f] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@748aa7dc]
[TRACE] 29-02-2024 13:29:15.901 [main] TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@748aa7dc] for TypeConfiguration
[WARN ] 29-02-2024 13:29:17.005 [main] JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[INFO ] 29-02-2024 13:29:17.949 [main] Http11NioProtocol - Starting ProtocolHandler ["http-nio-8300"]
[INFO ] 29-02-2024 13:29:18.014 [main] TomcatWebServer - Tomcat started on port(s): 8300 (http) with context path '/users_products_api'
[INFO ] 29-02-2024 13:29:18.048 [main] TestSpringBootApplication - Started TestSpringBootApplication in 19.707 seconds (process running for 23.438)
[INFO ] 29-02-2024 13:29:26.109 [http-nio-8300-exec-1] [/users_products_api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[INFO ] 29-02-2024 13:29:26.111 [http-nio-8300-exec-1] DispatcherServlet - Initializing Servlet 'dispatcherServlet'
[INFO ] 29-02-2024 13:29:26.115 [http-nio-8300-exec-1] DispatcherServlet - Completed initialization in 4 ms
[DEBUG] 29-02-2024 13:29:26.938 [http-nio-8300-exec-1] SQL - select e1_0.id,e1_0.email,e1_0.login,e1_0.name,e1_0.password,p1_0.id_user,p1_0.id,p1_0.name,p1_0.page_image,p1_0.price,p1_0.raiting,p1_0.year_issue from users e1_0 left join products p1_0 on e1_0.id=p1_0.id_user where e1_0.id=?
[TRACE] 29-02-2024 13:32:51.961 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@748aa7dc] for TypeConfiguration
[DEBUG] 29-02-2024 13:32:51.962 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@38442a7b] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@748aa7dc]
[INFO ] 29-02-2024 13:33:04.866 [background-preinit] Version - HV000001: Hibernate Validator 8.0.1.Final
[INFO ] 29-02-2024 13:33:05.110 [main] TestSpringBootApplication - Starting TestSpringBootApplication using Java 17.0.10 with PID 1668217 (/home/dima/backend_microservice/UserProductsMicroService/target/classes started by dima in /home/dima/backend_microservice/UserProductsMicroService)
[INFO ] 29-02-2024 13:33:05.129 [main] TestSpringBootApplication - No active profile set, falling back to 1 default profile: "default"
[INFO ] 29-02-2024 13:33:07.404 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO ] 29-02-2024 13:33:07.892 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 456 ms. Found 1 JPA repository interfaces.
[ERROR] 29-02-2024 13:33:09.927 [main] AprLifecycleListener - An incompatible version [1.2.23] of the Apache Tomcat Native library is installed, while Tomcat requires version [1.2.34]
[INFO ] 29-02-2024 13:33:11.123 [main] TomcatWebServer - Tomcat initialized with port(s): 8300 (http)
[INFO ] 29-02-2024 13:33:11.146 [main] Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8300"]
[INFO ] 29-02-2024 13:33:11.153 [main] StandardService - Starting service [Tomcat]
[INFO ] 29-02-2024 13:33:11.154 [main] StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.11]
[INFO ] 29-02-2024 13:33:12.356 [main] TldScanner - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
[INFO ] 29-02-2024 13:33:12.379 [main] [/users_products_api] - Initializing Spring embedded WebApplicationContext
[INFO ] 29-02-2024 13:33:12.386 [main] ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 6853 ms
[INFO ] 29-02-2024 13:33:12.926 [main] Version - HHH000412: Hibernate ORM core version 6.2.6.Final
[INFO ] 29-02-2024 13:33:12.933 [main] Environment - HHH000406: Using bytecode reflection optimizer
[DEBUG] 29-02-2024 13:33:13.442 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@1471b98d
[DEBUG] 29-02-2024 13:33:13.444 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@1471b98d
[DEBUG] 29-02-2024 13:33:13.445 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@1471b98d
[DEBUG] 29-02-2024 13:33:13.446 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@5514579e
[DEBUG] 29-02-2024 13:33:13.450 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@5514579e
[DEBUG] 29-02-2024 13:33:13.451 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@58c42c8c
[DEBUG] 29-02-2024 13:33:13.452 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@58c42c8c
[DEBUG] 29-02-2024 13:33:13.455 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@3af236d0
[DEBUG] 29-02-2024 13:33:13.457 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@3af236d0
[DEBUG] 29-02-2024 13:33:13.457 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@23564dd2
[DEBUG] 29-02-2024 13:33:13.459 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@23564dd2
[DEBUG] 29-02-2024 13:33:13.461 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@23564dd2
[DEBUG] 29-02-2024 13:33:13.461 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@54895681
[DEBUG] 29-02-2024 13:33:13.467 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@54895681
[DEBUG] 29-02-2024 13:33:13.467 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@54895681
[DEBUG] 29-02-2024 13:33:13.469 [main] BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@2dd0a0d0
[DEBUG] 29-02-2024 13:33:13.474 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@2dd0a0d0
[DEBUG] 29-02-2024 13:33:13.475 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@6bf570c
[DEBUG] 29-02-2024 13:33:13.476 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@1796b2d4
[DEBUG] 29-02-2024 13:33:13.476 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@1796b2d4
[DEBUG] 29-02-2024 13:33:13.477 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@935d3f9
[DEBUG] 29-02-2024 13:33:13.477 [main] BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@214b342f
[DEBUG] 29-02-2024 13:33:13.478 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@5db0003d
[DEBUG] 29-02-2024 13:33:13.478 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@5db0003d
[DEBUG] 29-02-2024 13:33:13.478 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@5db0003d
[DEBUG] 29-02-2024 13:33:13.480 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@7f12094d
[DEBUG] 29-02-2024 13:33:13.481 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@7f12094d
[DEBUG] 29-02-2024 13:33:13.482 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@7f12094d
[DEBUG] 29-02-2024 13:33:13.482 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@589fb74d
[DEBUG] 29-02-2024 13:33:13.484 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@589fb74d
[DEBUG] 29-02-2024 13:33:13.485 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@589fb74d
[DEBUG] 29-02-2024 13:33:13.485 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@200d1a3d
[DEBUG] 29-02-2024 13:33:13.485 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@200d1a3d
[DEBUG] 29-02-2024 13:33:13.486 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@200d1a3d
[DEBUG] 29-02-2024 13:33:13.488 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@7de147e9
[DEBUG] 29-02-2024 13:33:13.489 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@7de147e9
[DEBUG] 29-02-2024 13:33:13.493 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@7de147e9
[DEBUG] 29-02-2024 13:33:13.494 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@12567179
[DEBUG] 29-02-2024 13:33:13.494 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@12567179
[DEBUG] 29-02-2024 13:33:13.494 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@37d699a1
[DEBUG] 29-02-2024 13:33:13.494 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@37d699a1
[DEBUG] 29-02-2024 13:33:13.495 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@7f42b194
[DEBUG] 29-02-2024 13:33:13.495 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@7f42b194
[DEBUG] 29-02-2024 13:33:13.495 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@7f42b194
[DEBUG] 29-02-2024 13:33:13.496 [main] BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@8eb6f9a
[DEBUG] 29-02-2024 13:33:13.500 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@29170a47
[DEBUG] 29-02-2024 13:33:13.500 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@29170a47
[DEBUG] 29-02-2024 13:33:13.503 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@2a8f8555
[DEBUG] 29-02-2024 13:33:13.504 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@402b4f81
[DEBUG] 29-02-2024 13:33:13.508 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@402b4f81
[DEBUG] 29-02-2024 13:33:13.510 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@402b4f81
[DEBUG] 29-02-2024 13:33:13.511 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@13ef7fa1
[DEBUG] 29-02-2024 13:33:13.512 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@23b1aa9
[DEBUG] 29-02-2024 13:33:13.514 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@54489296
[DEBUG] 29-02-2024 13:33:13.515 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@4e8598d9
[DEBUG] 29-02-2024 13:33:13.517 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@4e8598d9
[DEBUG] 29-02-2024 13:33:13.520 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@267ff4df
[DEBUG] 29-02-2024 13:33:13.522 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@267ff4df
[DEBUG] 29-02-2024 13:33:13.522 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@7c4b5ceb
[DEBUG] 29-02-2024 13:33:13.523 [main] BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@6c07add6
[DEBUG] 29-02-2024 13:33:13.523 [main] BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@e26a3df
[DEBUG] 29-02-2024 13:33:13.525 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@57a667c8
[DEBUG] 29-02-2024 13:33:13.525 [main] BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@712cd5d3
[DEBUG] 29-02-2024 13:33:13.526 [main] BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@2094bf3d
[DEBUG] 29-02-2024 13:33:13.526 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@1b17d8ab
[DEBUG] 29-02-2024 13:33:13.527 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@1b17d8ab
[DEBUG] 29-02-2024 13:33:13.527 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@7f6b7426
[DEBUG] 29-02-2024 13:33:13.528 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@7f6b7426
[DEBUG] 29-02-2024 13:33:13.528 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@687eb455
[DEBUG] 29-02-2024 13:33:13.529 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@687eb455
[DEBUG] 29-02-2024 13:33:13.529 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@6d969330
[DEBUG] 29-02-2024 13:33:13.530 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@6d969330
[DEBUG] 29-02-2024 13:33:13.530 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@4861cca9
[DEBUG] 29-02-2024 13:33:13.531 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@4861cca9
[DEBUG] 29-02-2024 13:33:13.531 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@6c8f4bc7
[DEBUG] 29-02-2024 13:33:13.531 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@714e861f
[DEBUG] 29-02-2024 13:33:13.532 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@28989415
[DEBUG] 29-02-2024 13:33:13.532 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@28989415
[DEBUG] 29-02-2024 13:33:13.533 [main] BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@6eda012b
[DEBUG] 29-02-2024 13:33:13.533 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@781dbe44
[DEBUG] 29-02-2024 13:33:13.534 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@7d66a126
[DEBUG] 29-02-2024 13:33:13.534 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@1132baa3
[DEBUG] 29-02-2024 13:33:13.535 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@1132baa3
[DEBUG] 29-02-2024 13:33:13.535 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2fdf22f7
[DEBUG] 29-02-2024 13:33:13.535 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3a2546d6
[DEBUG] 29-02-2024 13:33:13.536 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@7282af25
[DEBUG] 29-02-2024 13:33:13.536 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@7282af25
[DEBUG] 29-02-2024 13:33:13.536 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@7661e474
[DEBUG] 29-02-2024 13:33:13.537 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@7661e474
[DEBUG] 29-02-2024 13:33:13.537 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@20ffb8d5
[DEBUG] 29-02-2024 13:33:13.538 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@20ffb8d5
[DEBUG] 29-02-2024 13:33:13.539 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@20ffb8d5
[DEBUG] 29-02-2024 13:33:13.539 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@307c59ea
[DEBUG] 29-02-2024 13:33:13.539 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@307c59ea
[DEBUG] 29-02-2024 13:33:13.540 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@307c59ea
[DEBUG] 29-02-2024 13:33:13.540 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@57e03347
[DEBUG] 29-02-2024 13:33:13.541 [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@2edb2f8b
[DEBUG] 29-02-2024 13:33:13.541 [main] BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@733f1395
[DEBUG] 29-02-2024 13:33:13.542 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@733f1395
[DEBUG] 29-02-2024 13:33:13.542 [main] BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@21dea711
[DEBUG] 29-02-2024 13:33:13.542 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@21dea711
[DEBUG] 29-02-2024 13:33:13.543 [main] BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@21dea711
[DEBUG] 29-02-2024 13:33:13.543 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@7772d266
[DEBUG] 29-02-2024 13:33:13.544 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@a21c74
[DEBUG] 29-02-2024 13:33:13.544 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@b8a144e
[DEBUG] 29-02-2024 13:33:13.545 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@b8a144e
[DEBUG] 29-02-2024 13:33:13.546 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@5fb8dc01
[DEBUG] 29-02-2024 13:33:13.546 [main] BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@5fb8dc01
[DEBUG] 29-02-2024 13:33:13.546 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@5fb8dc01
[DEBUG] 29-02-2024 13:33:13.547 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@3e38c472
[DEBUG] 29-02-2024 13:33:13.547 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@3e38c472
[DEBUG] 29-02-2024 13:33:13.548 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@2ee92e7d
[DEBUG] 29-02-2024 13:33:13.548 [main] BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@2ee92e7d
[DEBUG] 29-02-2024 13:33:13.549 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@759a678a
[DEBUG] 29-02-2024 13:33:13.550 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@759a678a
[DEBUG] 29-02-2024 13:33:13.550 [main] BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@6cdbe5ec
[DEBUG] 29-02-2024 13:33:13.550 [main] BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@6cdbe5ec
[DEBUG] 29-02-2024 13:33:13.551 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@14b8a751
[DEBUG] 29-02-2024 13:33:13.551 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@14b8a751
[DEBUG] 29-02-2024 13:33:13.552 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@7345f97d
[DEBUG] 29-02-2024 13:33:13.567 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@615b5480
[DEBUG] 29-02-2024 13:33:13.567 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@615b5480
[DEBUG] 29-02-2024 13:33:13.571 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@b56ec6c
[DEBUG] 29-02-2024 13:33:13.572 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@5abf6a99
[DEBUG] 29-02-2024 13:33:13.573 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@dc59ec2
[DEBUG] 29-02-2024 13:33:13.573 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@375084c9
[DEBUG] 29-02-2024 13:33:13.574 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@bd93bc3
[DEBUG] 29-02-2024 13:33:13.574 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@2a136383
[DEBUG] 29-02-2024 13:33:13.575 [main] BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@b01cb8d
[DEBUG] 29-02-2024 13:33:13.575 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@38c460e8
[DEBUG] 29-02-2024 13:33:13.575 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@7a814310
[DEBUG] 29-02-2024 13:33:14.976 [main] DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@46e388ec) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@53f495f0)
[DEBUG] 29-02-2024 13:33:14.981 [main] JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
[DEBUG] 29-02-2024 13:33:14.982 [main] JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 29-02-2024 13:33:15.006 [main] BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@6b8bdcc6
[DEBUG] 29-02-2024 13:33:15.006 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@6b8bdcc6
[DEBUG] 29-02-2024 13:33:15.006 [main] BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@615b5480`
[DEBUG] 29-02-2024 13:33:15.011 [main] JdbcTypeRegistry - addDescriptor(3100, NumericTypeDescriptor) replaced previous registration(org.hibernate.dialect.PostgreSQLIntervalSecondJdbcType@6248cfab)
[DEBUG] 29-02-2024 13:33:15.026 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 29-02-2024 13:33:15.026 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 29-02-2024 13:33:15.027 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 29-02-2024 13:33:15.027 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 29-02-2024 13:33:15.028 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 29-02-2024 13:33:15.029 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 29-02-2024 13:33:15.031 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 29-02-2024 13:33:15.032 [main] BasicTypeRegistry - Adding type registration OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 29-02-2024 13:33:15.032 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 29-02-2024 13:33:15.036 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@105dc04d] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@504b8705]
[WARN ] 29-02-2024 13:33:15.583 [main] InFlightMetadataCollectorImpl - HHH000069: Duplicate generator name generator
[INFO ] 29-02-2024 13:33:15.765 [main] BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
[INFO ] 29-02-2024 13:33:18.497 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 29-02-2024 13:33:18.498 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@105dc04d] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@638341b0]
[TRACE] 29-02-2024 13:33:18.505 [main] TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@638341b0] for TypeConfiguration
[WARN ] 29-02-2024 13:33:19.494 [main] JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[INFO ] 29-02-2024 13:33:20.393 [main] Http11NioProtocol - Starting ProtocolHandler ["http-nio-8300"]
[INFO ] 29-02-2024 13:33:20.480 [main] TomcatWebServer - Tomcat started on port(s): 8300 (http) with context path '/users_products_api'
[INFO ] 29-02-2024 13:33:20.513 [main] TestSpringBootApplication - Started TestSpringBootApplication in 17.284 seconds (process running for 21.033)
[INFO ] 29-02-2024 13:33:32.289 [http-nio-8300-exec-1] [/users_products_api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[INFO ] 29-02-2024 13:33:32.290 [http-nio-8300-exec-1] DispatcherServlet - Initializing Servlet 'dispatcherServlet'
[INFO ] 29-02-2024 13:33:32.293 [http-nio-8300-exec-1] DispatcherServlet - Completed initialization in 3 ms
[DEBUG] 29-02-2024 13:33:32.863 [http-nio-8300-exec-1] SQL - select e1_0.id,e1_0.email,e1_0.login,e1_0.name,e1_0.password,p1_0.id_user,p1_0.id,p1_0.name,p1_0.page_image,p1_0.price,p1_0.raiting,p1_0.year_issue from users e1_0 left join products p1_0 on e1_0.id=p1_0.id_user where e1_0.id=?
[DEBUG] 29-02-2024 13:33:32.990 [http-nio-8300-exec-1] SQL - select nextval('products_id_seq')
[DEBUG] 29-02-2024 13:33:33.042 [http-nio-8300-exec-1] SQL - insert into products (name,page_image,price,raiting,id_user,year_issue,id) values (?,?,?,?,?,?,?)
[TRACE] 29-02-2024 13:37:23.804 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@638341b0] for TypeConfiguration
[DEBUG] 29-02-2024 13:37:23.804 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@7b40c31e] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@638341b0]
[INFO ] 29-02-2024 13:37:42.318 [background-preinit] Version - HV000001: Hibernate Validator 8.0.1.Final
[INFO ] 29-02-2024 13:37:42.452 [main] TestCRUDUserProducts - Starting TestCRUDUserProducts using Java 17.0.10 with PID 1670670 (started by dima in /home/dima/backend_microservice/UserProductsMicroService)
[INFO ] 29-02-2024 13:37:42.463 [main] TestCRUDUserProducts - No active profile set, falling back to 1 default profile: "default"
[INFO ] 29-02-2024 13:37:43.723 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO ] 29-02-2024 13:37:44.166 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 421 ms. Found 1 JPA repository interfaces.
[INFO ] 29-02-2024 13:37:48.020 [main] Version - HHH000412: Hibernate ORM core version 6.2.6.Final
[INFO ] 29-02-2024 13:37:48.031 [main] Environment - HHH000406: Using bytecode reflection optimizer
[DEBUG] 29-02-2024 13:37:48.532 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@6ace919c
[DEBUG] 29-02-2024 13:37:48.534 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@6ace919c
[DEBUG] 29-02-2024 13:37:48.535 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@6ace919c
[DEBUG] 29-02-2024 13:37:48.536 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@4005e485
[DEBUG] 29-02-2024 13:37:48.537 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@4005e485
[DEBUG] 29-02-2024 13:37:48.538 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@5f5c187d
[DEBUG] 29-02-2024 13:37:48.539 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@5f5c187d
[DEBUG] 29-02-2024 13:37:48.540 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@464400b3
[DEBUG] 29-02-2024 13:37:48.541 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@464400b3
[DEBUG] 29-02-2024 13:37:48.542 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@58182b96
[DEBUG] 29-02-2024 13:37:48.543 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@58182b96
[DEBUG] 29-02-2024 13:37:48.544 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@58182b96
[DEBUG] 29-02-2024 13:37:48.545 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@37d6dddc
[DEBUG] 29-02-2024 13:37:48.546 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@37d6dddc
[DEBUG] 29-02-2024 13:37:48.546 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@37d6dddc
[DEBUG] 29-02-2024 13:37:48.547 [main] BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@8f6b4ab
[DEBUG] 29-02-2024 13:37:48.548 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@8f6b4ab
[DEBUG] 29-02-2024 13:37:48.549 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@6e517c9e
[DEBUG] 29-02-2024 13:37:48.550 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@770cae59
[DEBUG] 29-02-2024 13:37:48.551 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@770cae59
[DEBUG] 29-02-2024 13:37:48.551 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@76b5a559
[DEBUG] 29-02-2024 13:37:48.552 [main] BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@4bdb04c8
[DEBUG] 29-02-2024 13:37:48.553 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@2e8b24a1
[DEBUG] 29-02-2024 13:37:48.554 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@2e8b24a1
[DEBUG] 29-02-2024 13:37:48.555 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@2e8b24a1
[DEBUG] 29-02-2024 13:37:48.555 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@3ce7394f
[DEBUG] 29-02-2024 13:37:48.556 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@3ce7394f
[DEBUG] 29-02-2024 13:37:48.558 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@3ce7394f
[DEBUG] 29-02-2024 13:37:48.559 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@6723cce7
[DEBUG] 29-02-2024 13:37:48.559 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@6723cce7
[DEBUG] 29-02-2024 13:37:48.560 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@6723cce7
[DEBUG] 29-02-2024 13:37:48.561 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@74cd798f
[DEBUG] 29-02-2024 13:37:48.562 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@74cd798f
[DEBUG] 29-02-2024 13:37:48.562 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@74cd798f
[DEBUG] 29-02-2024 13:37:48.563 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@314f59b
[DEBUG] 29-02-2024 13:37:48.564 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@314f59b
[DEBUG] 29-02-2024 13:37:48.565 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@314f59b
[DEBUG] 29-02-2024 13:37:48.566 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@63c99f7
[DEBUG] 29-02-2024 13:37:48.566 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@63c99f7
[DEBUG] 29-02-2024 13:37:48.567 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@7f012923
[DEBUG] 29-02-2024 13:37:48.568 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@7f012923
[DEBUG] 29-02-2024 13:37:48.568 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@601f264d
[DEBUG] 29-02-2024 13:37:48.569 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@601f264d
[DEBUG] 29-02-2024 13:37:48.570 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@601f264d
[DEBUG] 29-02-2024 13:37:48.571 [main] BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@4403bff8
[DEBUG] 29-02-2024 13:37:48.572 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@261275ae
[DEBUG] 29-02-2024 13:37:48.572 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@261275ae
[DEBUG] 29-02-2024 13:37:48.573 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@502c087e
[DEBUG] 29-02-2024 13:37:48.574 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@49986178
[DEBUG] 29-02-2024 13:37:48.574 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@49986178
[DEBUG] 29-02-2024 13:37:48.575 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@49986178
[DEBUG] 29-02-2024 13:37:48.575 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@10bdfbcc
[DEBUG] 29-02-2024 13:37:48.576 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@25b74370
[DEBUG] 29-02-2024 13:37:48.577 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@15e8c040
[DEBUG] 29-02-2024 13:37:48.577 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@1f71e024
[DEBUG] 29-02-2024 13:37:48.578 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@1f71e024
[DEBUG] 29-02-2024 13:37:48.579 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@60ed0b9d
[DEBUG] 29-02-2024 13:37:48.579 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@60ed0b9d
[DEBUG] 29-02-2024 13:37:48.580 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@7f5e6833
[DEBUG] 29-02-2024 13:37:48.581 [main] BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@2c674d58
[DEBUG] 29-02-2024 13:37:48.581 [main] BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@3c07e830
[DEBUG] 29-02-2024 13:37:48.582 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@34beadce
[DEBUG] 29-02-2024 13:37:48.583 [main] BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@382d549a
[DEBUG] 29-02-2024 13:37:48.597 [main] BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@2eb6d34a
[DEBUG] 29-02-2024 13:37:48.598 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@2d73e8c4
[DEBUG] 29-02-2024 13:37:48.600 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@2d73e8c4
[DEBUG] 29-02-2024 13:37:48.602 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@6ce2e079
[DEBUG] 29-02-2024 13:37:48.603 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@6ce2e079
[DEBUG] 29-02-2024 13:37:48.603 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@3e39e0fb
[DEBUG] 29-02-2024 13:37:48.604 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@3e39e0fb
[DEBUG] 29-02-2024 13:37:48.604 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@260d48f5
[DEBUG] 29-02-2024 13:37:48.605 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@260d48f5
[DEBUG] 29-02-2024 13:37:48.606 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@148ab138
[DEBUG] 29-02-2024 13:37:48.610 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@148ab138
[DEBUG] 29-02-2024 13:37:48.611 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@6f106af8
[DEBUG] 29-02-2024 13:37:48.612 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@1edf71d9
[DEBUG] 29-02-2024 13:37:48.626 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@52d9d817
[DEBUG] 29-02-2024 13:37:48.627 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@52d9d817
[DEBUG] 29-02-2024 13:37:48.628 [main] BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@131ba005
[DEBUG] 29-02-2024 13:37:48.628 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@7f305f34
[DEBUG] 29-02-2024 13:37:48.629 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@1a84a8b2
[DEBUG] 29-02-2024 13:37:48.630 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@601d295
[DEBUG] 29-02-2024 13:37:48.631 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@601d295
[DEBUG] 29-02-2024 13:37:48.631 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@485451d8
[DEBUG] 29-02-2024 13:37:48.632 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@35e07e19
[DEBUG] 29-02-2024 13:37:48.632 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@a1e912f
[DEBUG] 29-02-2024 13:37:48.633 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@a1e912f
[DEBUG] 29-02-2024 13:37:48.633 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@2036f83
[DEBUG] 29-02-2024 13:37:48.634 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@2036f83
[DEBUG] 29-02-2024 13:37:48.634 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@68b3248a
[DEBUG] 29-02-2024 13:37:48.635 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@68b3248a
[DEBUG] 29-02-2024 13:37:48.635 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@68b3248a
[DEBUG] 29-02-2024 13:37:48.636 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@5e158f33
[DEBUG] 29-02-2024 13:37:48.637 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@5e158f33
[DEBUG] 29-02-2024 13:37:48.637 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@5e158f33
[DEBUG] 29-02-2024 13:37:48.638 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@20fcea37
[DEBUG] 29-02-2024 13:37:48.639 [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@399af6dc
[DEBUG] 29-02-2024 13:37:48.639 [main] BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@48fc0211
[DEBUG] 29-02-2024 13:37:48.640 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@48fc0211
[DEBUG] 29-02-2024 13:37:48.640 [main] BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@3ae2702a
[DEBUG] 29-02-2024 13:37:48.641 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@3ae2702a
[DEBUG] 29-02-2024 13:37:48.642 [main] BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@3ae2702a
[DEBUG] 29-02-2024 13:37:48.646 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@7d088813
[DEBUG] 29-02-2024 13:37:48.647 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@134abd78
[DEBUG] 29-02-2024 13:37:48.647 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@3b0ed98a
[DEBUG] 29-02-2024 13:37:48.648 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@3b0ed98a
[DEBUG] 29-02-2024 13:37:48.649 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@12448de1
[DEBUG] 29-02-2024 13:37:48.649 [main] BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@12448de1
[DEBUG] 29-02-2024 13:37:48.650 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@12448de1
[DEBUG] 29-02-2024 13:37:48.650 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@2b35c7aa
[DEBUG] 29-02-2024 13:37:48.651 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@2b35c7aa
[DEBUG] 29-02-2024 13:37:48.652 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@6dd20ec9
[DEBUG] 29-02-2024 13:37:48.653 [main] BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@6dd20ec9
[DEBUG] 29-02-2024 13:37:48.653 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@20dd5870
[DEBUG] 29-02-2024 13:37:48.654 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@20dd5870
[DEBUG] 29-02-2024 13:37:48.655 [main] BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@1640f20f
[DEBUG] 29-02-2024 13:37:48.655 [main] BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@1640f20f
[DEBUG] 29-02-2024 13:37:48.656 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@134d7ffa
[DEBUG] 29-02-2024 13:37:48.656 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@134d7ffa
[DEBUG] 29-02-2024 13:37:48.658 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@6e948f1c
[DEBUG] 29-02-2024 13:37:48.676 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@60f662bd
[DEBUG] 29-02-2024 13:37:48.677 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@60f662bd
[DEBUG] 29-02-2024 13:37:48.681 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@29fcfc54
[DEBUG] 29-02-2024 13:37:48.682 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@353b0719
[DEBUG] 29-02-2024 13:37:48.683 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@2a4e939a
[DEBUG] 29-02-2024 13:37:48.683 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@110620d
[DEBUG] 29-02-2024 13:37:48.684 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@4f402027
[DEBUG] 29-02-2024 13:37:48.684 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@22aee519
[DEBUG] 29-02-2024 13:37:48.685 [main] BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@7c226095
[DEBUG] 29-02-2024 13:37:48.686 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@7ea07516
[DEBUG] 29-02-2024 13:37:48.686 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@30af23fd
[DEBUG] 29-02-2024 13:37:50.959 [main] DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6339e604) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4f8900b0)
[DEBUG] 29-02-2024 13:37:50.976 [main] JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
[DEBUG] 29-02-2024 13:37:50.977 [main] JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 29-02-2024 13:37:51.018 [main] BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@2a661215
[DEBUG] 29-02-2024 13:37:51.019 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@2a661215
[DEBUG] 29-02-2024 13:37:51.019 [main] BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@60f662bd`
[DEBUG] 29-02-2024 13:37:51.025 [main] JdbcTypeRegistry - addDescriptor(3100, NumericTypeDescriptor) replaced previous registration(org.hibernate.dialect.PostgreSQLIntervalSecondJdbcType@49cceb19)
[DEBUG] 29-02-2024 13:37:51.044 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 29-02-2024 13:37:51.045 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 29-02-2024 13:37:51.045 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 29-02-2024 13:37:51.046 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 29-02-2024 13:37:51.047 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 29-02-2024 13:37:51.047 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 29-02-2024 13:37:51.050 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 29-02-2024 13:37:51.059 [main] BasicTypeRegistry - Adding type registration OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 29-02-2024 13:37:51.060 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 29-02-2024 13:37:51.065 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2b3b1124] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@54286339]
[WARN ] 29-02-2024 13:37:51.583 [main] InFlightMetadataCollectorImpl - HHH000069: Duplicate generator name generator
[INFO ] 29-02-2024 13:37:51.788 [main] BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
[INFO ] 29-02-2024 13:37:54.871 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 29-02-2024 13:37:54.878 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2b3b1124] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@1885905b]
[TRACE] 29-02-2024 13:37:54.895 [main] TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@1885905b] for TypeConfiguration
[INFO ] 29-02-2024 13:37:59.167 [main] SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
[INFO ] 29-02-2024 13:37:59.168 [main] TestDispatcherServlet - Initializing Servlet ''
[INFO ] 29-02-2024 13:37:59.179 [main] TestDispatcherServlet - Completed initialization in 3 ms
[INFO ] 29-02-2024 13:37:59.967 [main] TestCRUDUserProducts - Started TestCRUDUserProducts in 18.597 seconds (process running for 22.297)
[TRACE] 29-02-2024 13:38:01.093 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@1885905b] for TypeConfiguration
[DEBUG] 29-02-2024 13:38:01.094 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@7a4c0d59] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@1885905b]
[INFO ] 29-02-2024 16:04:11.991 [background-preinit] Version - HV000001: Hibernate Validator 8.0.1.Final
[INFO ] 29-02-2024 16:04:12.082 [main] TestSpringBootApplication - Starting TestSpringBootApplication using Java 17.0.10 with PID 1743719 (/home/dima/backend_microservice/UserProductsMicroService/target/classes started by dima in /home/dima/backend_microservice/UserProductsMicroService)
[INFO ] 29-02-2024 16:04:12.095 [main] TestSpringBootApplication - No active profile set, falling back to 1 default profile: "default"
[INFO ] 29-02-2024 16:04:14.006 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO ] 29-02-2024 16:04:14.439 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 410 ms. Found 1 JPA repository interfaces.
[ERROR] 29-02-2024 16:04:16.063 [main] AprLifecycleListener - An incompatible version [1.2.23] of the Apache Tomcat Native library is installed, while Tomcat requires version [1.2.34]
[INFO ] 29-02-2024 16:04:16.943 [main] TomcatWebServer - Tomcat initialized with port(s): 8300 (http)
[INFO ] 29-02-2024 16:04:16.965 [main] Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8300"]
[INFO ] 29-02-2024 16:04:16.973 [main] StandardService - Starting service [Tomcat]
[INFO ] 29-02-2024 16:04:16.976 [main] StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.11]
[INFO ] 29-02-2024 16:04:18.176 [main] TldScanner - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
[INFO ] 29-02-2024 16:04:18.195 [main] [/users_products_api] - Initializing Spring embedded WebApplicationContext
[INFO ] 29-02-2024 16:04:18.200 [main] ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 5896 ms
[INFO ] 29-02-2024 16:04:18.582 [main] Version - HHH000412: Hibernate ORM core version 6.2.6.Final
[INFO ] 29-02-2024 16:04:18.589 [main] Environment - HHH000406: Using bytecode reflection optimizer
[DEBUG] 29-02-2024 16:04:19.264 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@687eb455
[DEBUG] 29-02-2024 16:04:19.266 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@687eb455
[DEBUG] 29-02-2024 16:04:19.266 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@687eb455
[DEBUG] 29-02-2024 16:04:19.267 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@6d969330
[DEBUG] 29-02-2024 16:04:19.268 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@6d969330
[DEBUG] 29-02-2024 16:04:19.268 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@4861cca9
[DEBUG] 29-02-2024 16:04:19.269 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@4861cca9
[DEBUG] 29-02-2024 16:04:19.269 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@6c8f4bc7
[DEBUG] 29-02-2024 16:04:19.270 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@6c8f4bc7
[DEBUG] 29-02-2024 16:04:19.270 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@714e861f
[DEBUG] 29-02-2024 16:04:19.271 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@714e861f
[DEBUG] 29-02-2024 16:04:19.271 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@714e861f
[DEBUG] 29-02-2024 16:04:19.272 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@28989415
[DEBUG] 29-02-2024 16:04:19.272 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@28989415
[DEBUG] 29-02-2024 16:04:19.273 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@28989415
[DEBUG] 29-02-2024 16:04:19.273 [main] BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@6eda012b
[DEBUG] 29-02-2024 16:04:19.274 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@6eda012b
[DEBUG] 29-02-2024 16:04:19.275 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@781dbe44
[DEBUG] 29-02-2024 16:04:19.276 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@7d66a126
[DEBUG] 29-02-2024 16:04:19.276 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@7d66a126
[DEBUG] 29-02-2024 16:04:19.277 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@1132baa3
[DEBUG] 29-02-2024 16:04:19.277 [main] BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@2fdf22f7
[DEBUG] 29-02-2024 16:04:19.279 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@3a2546d6
[DEBUG] 29-02-2024 16:04:19.280 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@3a2546d6
[DEBUG] 29-02-2024 16:04:19.280 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@3a2546d6
[DEBUG] 29-02-2024 16:04:19.283 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@7282af25
[DEBUG] 29-02-2024 16:04:19.283 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@7282af25
[DEBUG] 29-02-2024 16:04:19.284 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@7282af25
[DEBUG] 29-02-2024 16:04:19.284 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@7661e474
[DEBUG] 29-02-2024 16:04:19.285 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@7661e474
[DEBUG] 29-02-2024 16:04:19.286 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@7661e474
[DEBUG] 29-02-2024 16:04:19.286 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@20ffb8d5
[DEBUG] 29-02-2024 16:04:19.287 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@20ffb8d5
[DEBUG] 29-02-2024 16:04:19.287 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@20ffb8d5
[DEBUG] 29-02-2024 16:04:19.288 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@307c59ea
[DEBUG] 29-02-2024 16:04:19.288 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@307c59ea
[DEBUG] 29-02-2024 16:04:19.289 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@307c59ea
[DEBUG] 29-02-2024 16:04:19.290 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@57e03347
[DEBUG] 29-02-2024 16:04:19.290 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@57e03347
[DEBUG] 29-02-2024 16:04:19.291 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@2edb2f8b
[DEBUG] 29-02-2024 16:04:19.291 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@2edb2f8b
[DEBUG] 29-02-2024 16:04:19.292 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@733f1395
[DEBUG] 29-02-2024 16:04:19.295 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@733f1395
[DEBUG] 29-02-2024 16:04:19.295 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@733f1395
[DEBUG] 29-02-2024 16:04:19.296 [main] BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@21dea711
[DEBUG] 29-02-2024 16:04:19.297 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@7772d266
[DEBUG] 29-02-2024 16:04:19.297 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@7772d266
[DEBUG] 29-02-2024 16:04:19.298 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@a21c74
[DEBUG] 29-02-2024 16:04:19.298 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@b8a144e
[DEBUG] 29-02-2024 16:04:19.299 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@b8a144e
[DEBUG] 29-02-2024 16:04:19.299 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@b8a144e
[DEBUG] 29-02-2024 16:04:19.300 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@5fb8dc01
[DEBUG] 29-02-2024 16:04:19.300 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@3e38c472
[DEBUG] 29-02-2024 16:04:19.300 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@2ee92e7d
[DEBUG] 29-02-2024 16:04:19.301 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@759a678a
[DEBUG] 29-02-2024 16:04:19.302 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@759a678a
[DEBUG] 29-02-2024 16:04:19.302 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@6cdbe5ec
[DEBUG] 29-02-2024 16:04:19.303 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@6cdbe5ec
[DEBUG] 29-02-2024 16:04:19.303 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@14b8a751
[DEBUG] 29-02-2024 16:04:19.303 [main] BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@7345f97d
[DEBUG] 29-02-2024 16:04:19.304 [main] BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@554566a8
[DEBUG] 29-02-2024 16:04:19.304 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@66020d69
[DEBUG] 29-02-2024 16:04:19.305 [main] BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@3751acd7
[DEBUG] 29-02-2024 16:04:19.305 [main] BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@6b832551
[DEBUG] 29-02-2024 16:04:19.306 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@150d6eaf
[DEBUG] 29-02-2024 16:04:19.306 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@150d6eaf
[DEBUG] 29-02-2024 16:04:19.307 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@63124022
[DEBUG] 29-02-2024 16:04:19.308 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@63124022
[DEBUG] 29-02-2024 16:04:19.308 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@591f6f83
[DEBUG] 29-02-2024 16:04:19.309 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@591f6f83
[DEBUG] 29-02-2024 16:04:19.310 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@2b44605c
[DEBUG] 29-02-2024 16:04:19.311 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@2b44605c
[DEBUG] 29-02-2024 16:04:19.311 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@55421b8d
[DEBUG] 29-02-2024 16:04:19.312 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@55421b8d
[DEBUG] 29-02-2024 16:04:19.312 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@24a04257
[DEBUG] 29-02-2024 16:04:19.312 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@6615237
[DEBUG] 29-02-2024 16:04:19.313 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@eaf8427
[DEBUG] 29-02-2024 16:04:19.314 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@eaf8427
[DEBUG] 29-02-2024 16:04:19.314 [main] BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@4bf4680c
[DEBUG] 29-02-2024 16:04:19.315 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@6d6039df
[DEBUG] 29-02-2024 16:04:19.315 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@611c3eae
[DEBUG] 29-02-2024 16:04:19.315 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@13e00016
[DEBUG] 29-02-2024 16:04:19.316 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@13e00016
[DEBUG] 29-02-2024 16:04:19.316 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@7b3cbe6e
[DEBUG] 29-02-2024 16:04:19.317 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@177ede17
[DEBUG] 29-02-2024 16:04:19.317 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@17176b18
[DEBUG] 29-02-2024 16:04:19.318 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@17176b18
[DEBUG] 29-02-2024 16:04:19.318 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@4e4395c
[DEBUG] 29-02-2024 16:04:19.319 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@4e4395c
[DEBUG] 29-02-2024 16:04:19.319 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@1ab53860
[DEBUG] 29-02-2024 16:04:19.319 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@1ab53860
[DEBUG] 29-02-2024 16:04:19.320 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@1ab53860
[DEBUG] 29-02-2024 16:04:19.320 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@7b5ac347
[DEBUG] 29-02-2024 16:04:19.321 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@7b5ac347
[DEBUG] 29-02-2024 16:04:19.321 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@7b5ac347
[DEBUG] 29-02-2024 16:04:19.321 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@57b9389f
[DEBUG] 29-02-2024 16:04:19.322 [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@72b2c5ed
[DEBUG] 29-02-2024 16:04:19.322 [main] BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@41f785e3
[DEBUG] 29-02-2024 16:04:19.323 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@41f785e3
[DEBUG] 29-02-2024 16:04:19.323 [main] BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@6c9a3661
[DEBUG] 29-02-2024 16:04:19.324 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@6c9a3661
[DEBUG] 29-02-2024 16:04:19.324 [main] BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@6c9a3661
[DEBUG] 29-02-2024 16:04:19.324 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@727986ad
[DEBUG] 29-02-2024 16:04:19.325 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@1600a8a2
[DEBUG] 29-02-2024 16:04:19.326 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@6b25ef1c
[DEBUG] 29-02-2024 16:04:19.326 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@6b25ef1c
[DEBUG] 29-02-2024 16:04:19.327 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@56b1e527
[DEBUG] 29-02-2024 16:04:19.327 [main] BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@56b1e527
[DEBUG] 29-02-2024 16:04:19.328 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@56b1e527
[DEBUG] 29-02-2024 16:04:19.328 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@68c34db2
[DEBUG] 29-02-2024 16:04:19.330 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@68c34db2
[DEBUG] 29-02-2024 16:04:19.330 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@7b95bdb0
[DEBUG] 29-02-2024 16:04:19.331 [main] BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@7b95bdb0
[DEBUG] 29-02-2024 16:04:19.331 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@3f0ce0d1
[DEBUG] 29-02-2024 16:04:19.332 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@3f0ce0d1
[DEBUG] 29-02-2024 16:04:19.332 [main] BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@664db2ca
[DEBUG] 29-02-2024 16:04:19.333 [main] BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@664db2ca
[DEBUG] 29-02-2024 16:04:19.333 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@1491cd6c
[DEBUG] 29-02-2024 16:04:19.334 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@1491cd6c
[DEBUG] 29-02-2024 16:04:19.334 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@423f8a73
[DEBUG] 29-02-2024 16:04:19.351 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@685d7ba5
[DEBUG] 29-02-2024 16:04:19.352 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@685d7ba5
[DEBUG] 29-02-2024 16:04:19.355 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@35ac9ebd
[DEBUG] 29-02-2024 16:04:19.356 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@56c0a61e
[DEBUG] 29-02-2024 16:04:19.356 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@421ead7e
[DEBUG] 29-02-2024 16:04:19.357 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@5dcf0772
[DEBUG] 29-02-2024 16:04:19.357 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@c472300
[DEBUG] 29-02-2024 16:04:19.357 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@5f6494c0
[DEBUG] 29-02-2024 16:04:19.358 [main] BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@6826b70f
[DEBUG] 29-02-2024 16:04:19.358 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@4df7d9ee
[DEBUG] 29-02-2024 16:04:19.359 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@781dac73
[DEBUG] 29-02-2024 16:04:20.949 [main] DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7d6c4079) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@606b53a3)
[DEBUG] 29-02-2024 16:04:20.955 [main] JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
[DEBUG] 29-02-2024 16:04:20.955 [main] JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 29-02-2024 16:04:20.975 [main] BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@1e29a81a
[DEBUG] 29-02-2024 16:04:20.976 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@1e29a81a
[DEBUG] 29-02-2024 16:04:20.977 [main] BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@685d7ba5`
[DEBUG] 29-02-2024 16:04:20.980 [main] JdbcTypeRegistry - addDescriptor(3100, NumericTypeDescriptor) replaced previous registration(org.hibernate.dialect.PostgreSQLIntervalSecondJdbcType@1b94c789)
[DEBUG] 29-02-2024 16:04:20.996 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 29-02-2024 16:04:20.996 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 29-02-2024 16:04:20.997 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 29-02-2024 16:04:20.997 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 29-02-2024 16:04:20.998 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 29-02-2024 16:04:20.999 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 29-02-2024 16:04:21.001 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 29-02-2024 16:04:21.002 [main] BasicTypeRegistry - Adding type registration OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 29-02-2024 16:04:21.002 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 29-02-2024 16:04:21.011 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@29d2fa84] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@4540c7]
[WARN ] 29-02-2024 16:04:21.549 [main] InFlightMetadataCollectorImpl - HHH000069: Duplicate generator name generator
[INFO ] 29-02-2024 16:04:21.714 [main] BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
[INFO ] 29-02-2024 16:04:24.360 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 29-02-2024 16:04:24.362 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@29d2fa84] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@1755aee6]
[TRACE] 29-02-2024 16:04:24.369 [main] TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@1755aee6] for TypeConfiguration
[WARN ] 29-02-2024 16:04:25.327 [main] JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[INFO ] 29-02-2024 16:04:26.372 [main] Http11NioProtocol - Starting ProtocolHandler ["http-nio-8300"]
[INFO ] 29-02-2024 16:04:26.447 [main] TomcatWebServer - Tomcat started on port(s): 8300 (http) with context path '/users_products_api'
[INFO ] 29-02-2024 16:04:26.479 [main] TestSpringBootApplication - Started TestSpringBootApplication in 15.519 seconds (process running for 19.24)
[INFO ] 29-02-2024 16:07:27.523 [http-nio-8300-exec-1] [/users_products_api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[INFO ] 29-02-2024 16:07:27.524 [http-nio-8300-exec-1] DispatcherServlet - Initializing Servlet 'dispatcherServlet'
[INFO ] 29-02-2024 16:07:27.528 [http-nio-8300-exec-1] DispatcherServlet - Completed initialization in 4 ms
[DEBUG] 29-02-2024 16:07:27.942 [http-nio-8300-exec-1] SQL - select e1_0.id,e1_0.email,e1_0.login,e1_0.name,e1_0.password,p1_0.id_user,p1_0.id,p1_0.name,p1_0.page_image,p1_0.price,p1_0.raiting,p1_0.year_issue from users e1_0 left join products p1_0 on e1_0.id=p1_0.id_user where e1_0.id=?
[DEBUG] 29-02-2024 16:07:35.526 [http-nio-8300-exec-3] SQL - select e1_0.id,e1_0.email,e1_0.login,e1_0.name,e1_0.password,p1_0.id_user,p1_0.id,p1_0.name,p1_0.page_image,p1_0.price,p1_0.raiting,p1_0.year_issue from users e1_0 left join products p1_0 on e1_0.id=p1_0.id_user where e1_0.id=?
[DEBUG] 29-02-2024 16:07:44.460 [http-nio-8300-exec-5] SQL - select e1_0.id,e1_0.email,e1_0.login,e1_0.name,e1_0.password,p1_0.id_user,p1_0.id,p1_0.name,p1_0.page_image,p1_0.price,p1_0.raiting,p1_0.year_issue from users e1_0 left join products p1_0 on e1_0.id=p1_0.id_user where e1_0.id=?
[DEBUG] 29-02-2024 16:07:55.941 [http-nio-8300-exec-6] SQL - select e1_0.id,e1_0.email,e1_0.login,e1_0.name,e1_0.password,p1_0.id_user,p1_0.id,p1_0.name,p1_0.page_image,p1_0.price,p1_0.raiting,p1_0.year_issue from users e1_0 left join products p1_0 on e1_0.id=p1_0.id_user where e1_0.id=?
[DEBUG] 29-02-2024 16:08:03.002 [http-nio-8300-exec-7] SQL - select e1_0.id,e1_0.email,e1_0.login,e1_0.name,e1_0.password,p1_0.id_user,p1_0.id,p1_0.name,p1_0.page_image,p1_0.price,p1_0.raiting,p1_0.year_issue from users e1_0 left join products p1_0 on e1_0.id=p1_0.id_user where e1_0.id=?
[DEBUG] 29-02-2024 16:08:22.663 [http-nio-8300-exec-9] SQL - select e1_0.id,e1_0.email,e1_0.login,e1_0.name,e1_0.password,p1_0.id_user,p1_0.id,p1_0.name,p1_0.page_image,p1_0.price,p1_0.raiting,p1_0.year_issue from users e1_0 left join products p1_0 on e1_0.id=p1_0.id_user where e1_0.id=?
[DEBUG] 29-02-2024 16:08:38.661 [http-nio-8300-exec-1] SQL - select e1_0.id,e1_0.email,e1_0.login,e1_0.name,e1_0.password,p1_0.id_user,p1_0.id,p1_0.name,p1_0.page_image,p1_0.price,p1_0.raiting,p1_0.year_issue from users e1_0 left join products p1_0 on e1_0.id=p1_0.id_user where e1_0.id=?
[DEBUG] 29-02-2024 16:08:48.583 [http-nio-8300-exec-3] SQL - select e1_0.id,e1_0.email,e1_0.login,e1_0.name,e1_0.password,p1_0.id_user,p1_0.id,p1_0.name,p1_0.page_image,p1_0.price,p1_0.raiting,p1_0.year_issue from users e1_0 left join products p1_0 on e1_0.id=p1_0.id_user where e1_0.id=?
[DEBUG] 29-02-2024 16:08:54.063 [http-nio-8300-exec-4] SQL - select e1_0.id,e1_0.email,e1_0.login,e1_0.name,e1_0.password,p1_0.id_user,p1_0.id,p1_0.name,p1_0.page_image,p1_0.price,p1_0.raiting,p1_0.year_issue from users e1_0 left join products p1_0 on e1_0.id=p1_0.id_user where e1_0.id=?
[DEBUG] 29-02-2024 16:09:05.008 [http-nio-8300-exec-6] SQL - select e1_0.id,e1_0.email,e1_0.login,e1_0.name,e1_0.password,p1_0.id_user,p1_0.id,p1_0.name,p1_0.page_image,p1_0.price,p1_0.raiting,p1_0.year_issue from users e1_0 left join products p1_0 on e1_0.id=p1_0.id_user where e1_0.id=?
[TRACE] 29-02-2024 16:17:05.712 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@1755aee6] for TypeConfiguration
[DEBUG] 29-02-2024 16:17:05.713 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@3da166b3] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@1755aee6]
[INFO ] 29-02-2024 16:17:15.969 [background-preinit] Version - HV000001: Hibernate Validator 8.0.1.Final
[INFO ] 29-02-2024 16:17:16.078 [main] TestSpringBootApplication - Starting TestSpringBootApplication using Java 17.0.10 with PID 1750531 (/home/dima/backend_microservice/UserProductsMicroService/target/classes started by dima in /home/dima/backend_microservice/UserProductsMicroService)
[INFO ] 29-02-2024 16:17:16.091 [main] TestSpringBootApplication - No active profile set, falling back to 1 default profile: "default"
[INFO ] 29-02-2024 16:17:18.423 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO ] 29-02-2024 16:17:18.867 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 420 ms. Found 1 JPA repository interfaces.
[ERROR] 29-02-2024 16:17:20.718 [main] AprLifecycleListener - An incompatible version [1.2.23] of the Apache Tomcat Native library is installed, while Tomcat requires version [1.2.34]
[INFO ] 29-02-2024 16:17:21.610 [main] TomcatWebServer - Tomcat initialized with port(s): 8300 (http)
[INFO ] 29-02-2024 16:17:21.640 [main] Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8300"]
[INFO ] 29-02-2024 16:17:21.659 [main] StandardService - Starting service [Tomcat]
[INFO ] 29-02-2024 16:17:21.660 [main] StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.11]
[INFO ] 29-02-2024 16:17:23.218 [main] TldScanner - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
[INFO ] 29-02-2024 16:17:23.243 [main] [/users_products_api] - Initializing Spring embedded WebApplicationContext
[INFO ] 29-02-2024 16:17:23.252 [main] ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 6974 ms
[INFO ] 29-02-2024 16:17:23.799 [main] Version - HHH000412: Hibernate ORM core version 6.2.6.Final
[INFO ] 29-02-2024 16:17:23.806 [main] Environment - HHH000406: Using bytecode reflection optimizer
[DEBUG] 29-02-2024 16:17:24.286 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@23b1aa9
[DEBUG] 29-02-2024 16:17:24.287 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@23b1aa9
[DEBUG] 29-02-2024 16:17:24.288 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@23b1aa9
[DEBUG] 29-02-2024 16:17:24.288 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@54489296
[DEBUG] 29-02-2024 16:17:24.289 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@54489296
[DEBUG] 29-02-2024 16:17:24.290 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@4e8598d9
[DEBUG] 29-02-2024 16:17:24.290 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@4e8598d9
[DEBUG] 29-02-2024 16:17:24.291 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@267ff4df
[DEBUG] 29-02-2024 16:17:24.291 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@267ff4df
[DEBUG] 29-02-2024 16:17:24.292 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@7c4b5ceb
[DEBUG] 29-02-2024 16:17:24.292 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@7c4b5ceb
[DEBUG] 29-02-2024 16:17:24.293 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@7c4b5ceb
[DEBUG] 29-02-2024 16:17:24.293 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@6c07add6
[DEBUG] 29-02-2024 16:17:24.294 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@6c07add6
[DEBUG] 29-02-2024 16:17:24.294 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@6c07add6
[DEBUG] 29-02-2024 16:17:24.295 [main] BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@e26a3df
[DEBUG] 29-02-2024 16:17:24.295 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@e26a3df
[DEBUG] 29-02-2024 16:17:24.295 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@57a667c8
[DEBUG] 29-02-2024 16:17:24.296 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@712cd5d3
[DEBUG] 29-02-2024 16:17:24.301 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@712cd5d3
[DEBUG] 29-02-2024 16:17:24.302 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@2094bf3d
[DEBUG] 29-02-2024 16:17:24.302 [main] BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@1b17d8ab
[DEBUG] 29-02-2024 16:17:24.303 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@7f6b7426
[DEBUG] 29-02-2024 16:17:24.303 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@7f6b7426
[DEBUG] 29-02-2024 16:17:24.304 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@7f6b7426
[DEBUG] 29-02-2024 16:17:24.304 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@687eb455
[DEBUG] 29-02-2024 16:17:24.305 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@687eb455
[DEBUG] 29-02-2024 16:17:24.306 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@687eb455
[DEBUG] 29-02-2024 16:17:24.306 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@6d969330
[DEBUG] 29-02-2024 16:17:24.307 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@6d969330
[DEBUG] 29-02-2024 16:17:24.308 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@6d969330
[DEBUG] 29-02-2024 16:17:24.308 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@4861cca9
[DEBUG] 29-02-2024 16:17:24.309 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@4861cca9
[DEBUG] 29-02-2024 16:17:24.309 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@4861cca9
[DEBUG] 29-02-2024 16:17:24.310 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@6c8f4bc7
[DEBUG] 29-02-2024 16:17:24.311 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@6c8f4bc7
[DEBUG] 29-02-2024 16:17:24.311 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@6c8f4bc7
[DEBUG] 29-02-2024 16:17:24.312 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@714e861f
[DEBUG] 29-02-2024 16:17:24.312 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@714e861f
[DEBUG] 29-02-2024 16:17:24.313 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@28989415
[DEBUG] 29-02-2024 16:17:24.313 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@28989415
[DEBUG] 29-02-2024 16:17:24.314 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@6eda012b
[DEBUG] 29-02-2024 16:17:24.315 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@6eda012b
[DEBUG] 29-02-2024 16:17:24.315 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@6eda012b
[DEBUG] 29-02-2024 16:17:24.316 [main] BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@781dbe44
[DEBUG] 29-02-2024 16:17:24.316 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@7d66a126
[DEBUG] 29-02-2024 16:17:24.317 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@7d66a126
[DEBUG] 29-02-2024 16:17:24.317 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@1132baa3
[DEBUG] 29-02-2024 16:17:24.318 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@2fdf22f7
[DEBUG] 29-02-2024 16:17:24.318 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@2fdf22f7
[DEBUG] 29-02-2024 16:17:24.320 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@2fdf22f7
[DEBUG] 29-02-2024 16:17:24.320 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@3a2546d6
[DEBUG] 29-02-2024 16:17:24.321 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@7282af25
[DEBUG] 29-02-2024 16:17:24.321 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@7661e474
[DEBUG] 29-02-2024 16:17:24.322 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@20ffb8d5
[DEBUG] 29-02-2024 16:17:24.322 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@20ffb8d5
[DEBUG] 29-02-2024 16:17:24.323 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@307c59ea
[DEBUG] 29-02-2024 16:17:24.323 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@307c59ea
[DEBUG] 29-02-2024 16:17:24.324 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@57e03347
[DEBUG] 29-02-2024 16:17:24.333 [main] BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@2edb2f8b
[DEBUG] 29-02-2024 16:17:24.334 [main] BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@733f1395
[DEBUG] 29-02-2024 16:17:24.334 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@21dea711
[DEBUG] 29-02-2024 16:17:24.335 [main] BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@7772d266
[DEBUG] 29-02-2024 16:17:24.335 [main] BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@a21c74
[DEBUG] 29-02-2024 16:17:24.338 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@b8a144e
[DEBUG] 29-02-2024 16:17:24.339 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@b8a144e
[DEBUG] 29-02-2024 16:17:24.341 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@5fb8dc01
[DEBUG] 29-02-2024 16:17:24.343 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@5fb8dc01
[DEBUG] 29-02-2024 16:17:24.343 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@3e38c472
[DEBUG] 29-02-2024 16:17:24.345 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@3e38c472
[DEBUG] 29-02-2024 16:17:24.345 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@2ee92e7d
[DEBUG] 29-02-2024 16:17:24.346 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@2ee92e7d
[DEBUG] 29-02-2024 16:17:24.346 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@759a678a
[DEBUG] 29-02-2024 16:17:24.347 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@759a678a
[DEBUG] 29-02-2024 16:17:24.347 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@6cdbe5ec
[DEBUG] 29-02-2024 16:17:24.348 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@14b8a751
[DEBUG] 29-02-2024 16:17:24.348 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@7345f97d
[DEBUG] 29-02-2024 16:17:24.349 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@7345f97d
[DEBUG] 29-02-2024 16:17:24.349 [main] BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@554566a8
[DEBUG] 29-02-2024 16:17:24.350 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@66020d69
[DEBUG] 29-02-2024 16:17:24.350 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3751acd7
[DEBUG] 29-02-2024 16:17:24.351 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@6b832551
[DEBUG] 29-02-2024 16:17:24.351 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@6b832551
[DEBUG] 29-02-2024 16:17:24.351 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@150d6eaf
[DEBUG] 29-02-2024 16:17:24.352 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@63124022
[DEBUG] 29-02-2024 16:17:24.352 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@591f6f83
[DEBUG] 29-02-2024 16:17:24.352 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@591f6f83
[DEBUG] 29-02-2024 16:17:24.353 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@2b44605c
[DEBUG] 29-02-2024 16:17:24.354 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@2b44605c
[DEBUG] 29-02-2024 16:17:24.354 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@55421b8d
[DEBUG] 29-02-2024 16:17:24.354 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@55421b8d
[DEBUG] 29-02-2024 16:17:24.355 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@55421b8d
[DEBUG] 29-02-2024 16:17:24.355 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@24a04257
[DEBUG] 29-02-2024 16:17:24.356 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@24a04257
[DEBUG] 29-02-2024 16:17:24.356 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@24a04257
[DEBUG] 29-02-2024 16:17:24.357 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@6615237
[DEBUG] 29-02-2024 16:17:24.357 [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@eaf8427
[DEBUG] 29-02-2024 16:17:24.358 [main] BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@4bf4680c
[DEBUG] 29-02-2024 16:17:24.358 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@4bf4680c
[DEBUG] 29-02-2024 16:17:24.359 [main] BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@6d6039df
[DEBUG] 29-02-2024 16:17:24.359 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@6d6039df
[DEBUG] 29-02-2024 16:17:24.360 [main] BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@6d6039df
[DEBUG] 29-02-2024 16:17:24.360 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@611c3eae
[DEBUG] 29-02-2024 16:17:24.360 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@13e00016
[DEBUG] 29-02-2024 16:17:24.361 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@7b3cbe6e
[DEBUG] 29-02-2024 16:17:24.361 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@7b3cbe6e
[DEBUG] 29-02-2024 16:17:24.362 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@177ede17
[DEBUG] 29-02-2024 16:17:24.362 [main] BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@177ede17
[DEBUG] 29-02-2024 16:17:24.363 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@177ede17
[DEBUG] 29-02-2024 16:17:24.363 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@17176b18
[DEBUG] 29-02-2024 16:17:24.364 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@17176b18
[DEBUG] 29-02-2024 16:17:24.364 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@4e4395c
[DEBUG] 29-02-2024 16:17:24.364 [main] BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@4e4395c
[DEBUG] 29-02-2024 16:17:24.365 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@1ab53860
[DEBUG] 29-02-2024 16:17:24.366 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@1ab53860
[DEBUG] 29-02-2024 16:17:24.366 [main] BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@7b5ac347
[DEBUG] 29-02-2024 16:17:24.367 [main] BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@7b5ac347
[DEBUG] 29-02-2024 16:17:24.367 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@57b9389f
[DEBUG] 29-02-2024 16:17:24.367 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@57b9389f
[DEBUG] 29-02-2024 16:17:24.368 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@72b2c5ed
[DEBUG] 29-02-2024 16:17:24.383 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@179ee36b
[DEBUG] 29-02-2024 16:17:24.383 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@179ee36b
[DEBUG] 29-02-2024 16:17:24.387 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@36551e97
[DEBUG] 29-02-2024 16:17:24.388 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@685d7ba5
[DEBUG] 29-02-2024 16:17:24.389 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@16d41725
[DEBUG] 29-02-2024 16:17:24.390 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@3b6c2be6
[DEBUG] 29-02-2024 16:17:24.390 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@25533bba
[DEBUG] 29-02-2024 16:17:24.390 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@26d0ece6
[DEBUG] 29-02-2024 16:17:24.391 [main] BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@100bba26
[DEBUG] 29-02-2024 16:17:24.391 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@4ae280da
[DEBUG] 29-02-2024 16:17:24.392 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@76d0ecd7
[DEBUG] 29-02-2024 16:17:25.754 [main] DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6caeba36) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@8ac512e)
[DEBUG] 29-02-2024 16:17:25.759 [main] JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
[DEBUG] 29-02-2024 16:17:25.759 [main] JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 29-02-2024 16:17:25.781 [main] BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@31f7eb8
[DEBUG] 29-02-2024 16:17:25.782 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@31f7eb8
[DEBUG] 29-02-2024 16:17:25.782 [main] BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@179ee36b`
[DEBUG] 29-02-2024 16:17:25.784 [main] JdbcTypeRegistry - addDescriptor(3100, NumericTypeDescriptor) replaced previous registration(org.hibernate.dialect.PostgreSQLIntervalSecondJdbcType@e97f115)
[DEBUG] 29-02-2024 16:17:25.801 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 29-02-2024 16:17:25.801 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 29-02-2024 16:17:25.801 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 29-02-2024 16:17:25.802 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 29-02-2024 16:17:25.802 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 29-02-2024 16:17:25.802 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 29-02-2024 16:17:25.804 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 29-02-2024 16:17:25.805 [main] BasicTypeRegistry - Adding type registration OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 29-02-2024 16:17:25.805 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 29-02-2024 16:17:25.808 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@8af1c49] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@70d5d96b]
[WARN ] 29-02-2024 16:17:26.288 [main] InFlightMetadataCollectorImpl - HHH000069: Duplicate generator name generator
[INFO ] 29-02-2024 16:17:26.456 [main] BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
[INFO ] 29-02-2024 16:17:29.296 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 29-02-2024 16:17:29.298 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@8af1c49] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@44580de0]
[TRACE] 29-02-2024 16:17:29.304 [main] TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@44580de0] for TypeConfiguration
[WARN ] 29-02-2024 16:17:30.112 [main] JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[INFO ] 29-02-2024 16:17:30.967 [main] Http11NioProtocol - Starting ProtocolHandler ["http-nio-8300"]
[INFO ] 29-02-2024 16:17:31.021 [main] TomcatWebServer - Tomcat started on port(s): 8300 (http) with context path '/users_products_api'
[INFO ] 29-02-2024 16:17:31.052 [main] TestSpringBootApplication - Started TestSpringBootApplication in 16.203 seconds (process running for 19.256)
[INFO ] 29-02-2024 16:17:40.955 [http-nio-8300-exec-1] [/users_products_api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[INFO ] 29-02-2024 16:17:40.956 [http-nio-8300-exec-1] DispatcherServlet - Initializing Servlet 'dispatcherServlet'
[INFO ] 29-02-2024 16:17:40.960 [http-nio-8300-exec-1] DispatcherServlet - Completed initialization in 4 ms
[DEBUG] 29-02-2024 16:17:41.353 [http-nio-8300-exec-1] SQL - select e1_0.id,e1_0.email,e1_0.login,e1_0.name,e1_0.password,p1_0.id_user,p1_0.id,p1_0.name,p1_0.page_image,p1_0.price,p1_0.raiting,p1_0.year_issue from users e1_0 left join products p1_0 on e1_0.id=p1_0.id_user where e1_0.id=?
[DEBUG] 29-02-2024 16:17:57.018 [http-nio-8300-exec-2] SQL - select e1_0.id,e1_0.email,e1_0.login,e1_0.name,e1_0.password,p1_0.id_user,p1_0.id,p1_0.name,p1_0.page_image,p1_0.price,p1_0.raiting,p1_0.year_issue from users e1_0 left join products p1_0 on e1_0.id=p1_0.id_user where e1_0.id=?
[DEBUG] 29-02-2024 16:18:04.207 [http-nio-8300-exec-4] SQL - select e1_0.id,e1_0.email,e1_0.login,e1_0.name,e1_0.password,p1_0.id_user,p1_0.id,p1_0.name,p1_0.page_image,p1_0.price,p1_0.raiting,p1_0.year_issue from users e1_0 left join products p1_0 on e1_0.id=p1_0.id_user where e1_0.id=?
[DEBUG] 29-02-2024 16:19:10.248 [http-nio-8300-exec-6] SQL - select e1_0.id,e1_0.email,e1_0.login,e1_0.name,e1_0.password,p1_0.id_user,p1_0.id,p1_0.name,p1_0.page_image,p1_0.price,p1_0.raiting,p1_0.year_issue from users e1_0 left join products p1_0 on e1_0.id=p1_0.id_user where e1_0.id=?
[DEBUG] 29-02-2024 16:19:14.791 [http-nio-8300-exec-9] SQL - select e1_0.id,e1_0.email,e1_0.login,e1_0.name,e1_0.password,p1_0.id_user,p1_0.id,p1_0.name,p1_0.page_image,p1_0.price,p1_0.raiting,p1_0.year_issue from users e1_0 left join products p1_0 on e1_0.id=p1_0.id_user where e1_0.id=?
[DEBUG] 29-02-2024 16:19:25.043 [http-nio-8300-exec-10] SQL - select e1_0.id,e1_0.email,e1_0.login,e1_0.name,e1_0.password,p1_0.id_user,p1_0.id,p1_0.name,p1_0.page_image,p1_0.price,p1_0.raiting,p1_0.year_issue from users e1_0 left join products p1_0 on e1_0.id=p1_0.id_user where e1_0.id=?
[TRACE] 29-02-2024 16:52:33.732 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@44580de0] for TypeConfiguration
[DEBUG] 29-02-2024 16:52:33.732 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@1e5ac5ce] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@44580de0]
[INFO ] 29-02-2024 16:53:01.991 [background-preinit] Version - HV000001: Hibernate Validator 8.0.1.Final
[INFO ] 29-02-2024 16:53:02.123 [main] TestCRUDUserProducts - Starting TestCRUDUserProducts using Java 17.0.10 with PID 1768435 (started by dima in /home/dima/backend_microservice/UserProductsMicroService)
[INFO ] 29-02-2024 16:53:02.135 [main] TestCRUDUserProducts - No active profile set, falling back to 1 default profile: "default"
[INFO ] 29-02-2024 16:53:04.207 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO ] 29-02-2024 16:53:04.682 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 431 ms. Found 1 JPA repository interfaces.
[INFO ] 29-02-2024 16:53:08.838 [main] Version - HHH000412: Hibernate ORM core version 6.2.6.Final
[INFO ] 29-02-2024 16:53:08.849 [main] Environment - HHH000406: Using bytecode reflection optimizer
[DEBUG] 29-02-2024 16:53:09.458 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@1edf71d9
[DEBUG] 29-02-2024 16:53:09.460 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@1edf71d9
[DEBUG] 29-02-2024 16:53:09.461 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@1edf71d9
[DEBUG] 29-02-2024 16:53:09.462 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@52d9d817
[DEBUG] 29-02-2024 16:53:09.464 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@52d9d817
[DEBUG] 29-02-2024 16:53:09.466 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@131ba005
[DEBUG] 29-02-2024 16:53:09.467 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@131ba005
[DEBUG] 29-02-2024 16:53:09.468 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@7f305f34
[DEBUG] 29-02-2024 16:53:09.469 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@7f305f34
[DEBUG] 29-02-2024 16:53:09.470 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@1a84a8b2
[DEBUG] 29-02-2024 16:53:09.471 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@1a84a8b2
[DEBUG] 29-02-2024 16:53:09.471 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@1a84a8b2
[DEBUG] 29-02-2024 16:53:09.472 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@601d295
[DEBUG] 29-02-2024 16:53:09.473 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@601d295
[DEBUG] 29-02-2024 16:53:09.474 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@601d295
[DEBUG] 29-02-2024 16:53:09.474 [main] BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@485451d8
[DEBUG] 29-02-2024 16:53:09.476 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@485451d8
[DEBUG] 29-02-2024 16:53:09.477 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@35e07e19
[DEBUG] 29-02-2024 16:53:09.478 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@a1e912f
[DEBUG] 29-02-2024 16:53:09.479 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@a1e912f
[DEBUG] 29-02-2024 16:53:09.480 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@2036f83
[DEBUG] 29-02-2024 16:53:09.481 [main] BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@68b3248a
[DEBUG] 29-02-2024 16:53:09.482 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@5e158f33
[DEBUG] 29-02-2024 16:53:09.483 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@5e158f33
[DEBUG] 29-02-2024 16:53:09.484 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@5e158f33
[DEBUG] 29-02-2024 16:53:09.485 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@20fcea37
[DEBUG] 29-02-2024 16:53:09.486 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@20fcea37
[DEBUG] 29-02-2024 16:53:09.487 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@20fcea37
[DEBUG] 29-02-2024 16:53:09.491 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@399af6dc
[DEBUG] 29-02-2024 16:53:09.492 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@399af6dc
[DEBUG] 29-02-2024 16:53:09.493 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@399af6dc
[DEBUG] 29-02-2024 16:53:09.494 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@48fc0211
[DEBUG] 29-02-2024 16:53:09.495 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@48fc0211
[DEBUG] 29-02-2024 16:53:09.495 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@48fc0211
[DEBUG] 29-02-2024 16:53:09.496 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@3ae2702a
[DEBUG] 29-02-2024 16:53:09.497 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@3ae2702a
[DEBUG] 29-02-2024 16:53:09.498 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@3ae2702a
[DEBUG] 29-02-2024 16:53:09.499 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@7d088813
[DEBUG] 29-02-2024 16:53:09.500 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@7d088813
[DEBUG] 29-02-2024 16:53:09.500 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@134abd78
[DEBUG] 29-02-2024 16:53:09.501 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@134abd78
[DEBUG] 29-02-2024 16:53:09.502 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@3b0ed98a
[DEBUG] 29-02-2024 16:53:09.503 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@3b0ed98a
[DEBUG] 29-02-2024 16:53:09.504 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@3b0ed98a
[DEBUG] 29-02-2024 16:53:09.505 [main] BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@12448de1
[DEBUG] 29-02-2024 16:53:09.506 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@2b35c7aa
[DEBUG] 29-02-2024 16:53:09.507 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@2b35c7aa
[DEBUG] 29-02-2024 16:53:09.508 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@6dd20ec9
[DEBUG] 29-02-2024 16:53:09.509 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@20dd5870
[DEBUG] 29-02-2024 16:53:09.510 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@20dd5870
[DEBUG] 29-02-2024 16:53:09.519 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@20dd5870
[DEBUG] 29-02-2024 16:53:09.520 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@1640f20f
[DEBUG] 29-02-2024 16:53:09.523 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@134d7ffa
[DEBUG] 29-02-2024 16:53:09.524 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@6e948f1c
[DEBUG] 29-02-2024 16:53:09.525 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@24405466
[DEBUG] 29-02-2024 16:53:09.526 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@24405466
[DEBUG] 29-02-2024 16:53:09.528 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@35010a6b
[DEBUG] 29-02-2024 16:53:09.533 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@35010a6b
[DEBUG] 29-02-2024 16:53:09.535 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@4d4b019e
[DEBUG] 29-02-2024 16:53:09.537 [main] BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@7ed8b44
[DEBUG] 29-02-2024 16:53:09.538 [main] BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@21280cbb
[DEBUG] 29-02-2024 16:53:09.539 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@1cc708a7
[DEBUG] 29-02-2024 16:53:09.542 [main] BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@995ad50
[DEBUG] 29-02-2024 16:53:09.543 [main] BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@6249a08d
[DEBUG] 29-02-2024 16:53:09.544 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@36525ab
[DEBUG] 29-02-2024 16:53:09.545 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@36525ab
[DEBUG] 29-02-2024 16:53:09.546 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@27438750
[DEBUG] 29-02-2024 16:53:09.547 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@27438750
[DEBUG] 29-02-2024 16:53:09.548 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@39851c5
[DEBUG] 29-02-2024 16:53:09.549 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@39851c5
[DEBUG] 29-02-2024 16:53:09.555 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@2c7ad4f3
[DEBUG] 29-02-2024 16:53:09.557 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@2c7ad4f3
[DEBUG] 29-02-2024 16:53:09.558 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@698f4aa
[DEBUG] 29-02-2024 16:53:09.559 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@698f4aa
[DEBUG] 29-02-2024 16:53:09.560 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@3dda8a2e
[DEBUG] 29-02-2024 16:53:09.565 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@7c0de229
[DEBUG] 29-02-2024 16:53:09.569 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@6aa6c17
[DEBUG] 29-02-2024 16:53:09.571 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@6aa6c17
[DEBUG] 29-02-2024 16:53:09.573 [main] BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@4756e5cc
[DEBUG] 29-02-2024 16:53:09.575 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2e349cf2
[DEBUG] 29-02-2024 16:53:09.578 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3dbb3fb7
[DEBUG] 29-02-2024 16:53:09.579 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@68a426c3
[DEBUG] 29-02-2024 16:53:09.581 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@68a426c3
[DEBUG] 29-02-2024 16:53:09.582 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@182cc69e
[DEBUG] 29-02-2024 16:53:09.582 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@12f51a65
[DEBUG] 29-02-2024 16:53:09.586 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@7657d90b
[DEBUG] 29-02-2024 16:53:09.586 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@7657d90b
[DEBUG] 29-02-2024 16:53:09.593 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@3f0c6b3c
[DEBUG] 29-02-2024 16:53:09.594 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@3f0c6b3c
[DEBUG] 29-02-2024 16:53:09.595 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@416a4275
[DEBUG] 29-02-2024 16:53:09.596 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@416a4275
[DEBUG] 29-02-2024 16:53:09.597 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@416a4275
[DEBUG] 29-02-2024 16:53:09.597 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@7bf65e0f
[DEBUG] 29-02-2024 16:53:09.598 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@7bf65e0f
[DEBUG] 29-02-2024 16:53:09.599 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@7bf65e0f
[DEBUG] 29-02-2024 16:53:09.599 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@33215ffb
[DEBUG] 29-02-2024 16:53:09.600 [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@6f289728
[DEBUG] 29-02-2024 16:53:09.601 [main] BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@7c421952
[DEBUG] 29-02-2024 16:53:09.602 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@7c421952
[DEBUG] 29-02-2024 16:53:09.602 [main] BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@350d26f3
[DEBUG] 29-02-2024 16:53:09.603 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@350d26f3
[DEBUG] 29-02-2024 16:53:09.604 [main] BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@350d26f3
[DEBUG] 29-02-2024 16:53:09.604 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@c6a692e
[DEBUG] 29-02-2024 16:53:09.605 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@27502e5c
[DEBUG] 29-02-2024 16:53:09.606 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@4b343b6d
[DEBUG] 29-02-2024 16:53:09.606 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@4b343b6d
[DEBUG] 29-02-2024 16:53:09.607 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@17d2b646
[DEBUG] 29-02-2024 16:53:09.608 [main] BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@17d2b646
[DEBUG] 29-02-2024 16:53:09.609 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@17d2b646
[DEBUG] 29-02-2024 16:53:09.610 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@48ae9e8b
[DEBUG] 29-02-2024 16:53:09.611 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@48ae9e8b
[DEBUG] 29-02-2024 16:53:09.612 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@6eaa6b0c
[DEBUG] 29-02-2024 16:53:09.613 [main] BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@6eaa6b0c
[DEBUG] 29-02-2024 16:53:09.614 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@4afcae7
[DEBUG] 29-02-2024 16:53:09.618 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@4afcae7
[DEBUG] 29-02-2024 16:53:09.623 [main] BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@6cd2cb2
[DEBUG] 29-02-2024 16:53:09.624 [main] BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@6cd2cb2
[DEBUG] 29-02-2024 16:53:09.625 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@3a2bb026
[DEBUG] 29-02-2024 16:53:09.626 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@3a2bb026
[DEBUG] 29-02-2024 16:53:09.629 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@7645e64
[DEBUG] 29-02-2024 16:53:09.664 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@13e1e816
[DEBUG] 29-02-2024 16:53:09.665 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@13e1e816
[DEBUG] 29-02-2024 16:53:09.672 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@525b8922
[DEBUG] 29-02-2024 16:53:09.674 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@145a821d
[DEBUG] 29-02-2024 16:53:09.678 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@6caa4dc5
[DEBUG] 29-02-2024 16:53:09.692 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@6ed51944
[DEBUG] 29-02-2024 16:53:09.692 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@60c98f25
[DEBUG] 29-02-2024 16:53:09.693 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@20c3b34b
[DEBUG] 29-02-2024 16:53:09.694 [main] BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@1eb906f3
[DEBUG] 29-02-2024 16:53:09.695 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@58e02359
[DEBUG] 29-02-2024 16:53:09.695 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@74fc3fc7
[DEBUG] 29-02-2024 16:53:11.277 [main] DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@28dacf31) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@47e60b71)
[DEBUG] 29-02-2024 16:53:11.285 [main] JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
[DEBUG] 29-02-2024 16:53:11.286 [main] JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 29-02-2024 16:53:11.331 [main] BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@6a04d2a4
[DEBUG] 29-02-2024 16:53:11.332 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@6a04d2a4
[DEBUG] 29-02-2024 16:53:11.332 [main] BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@13e1e816`
[DEBUG] 29-02-2024 16:53:11.338 [main] JdbcTypeRegistry - addDescriptor(3100, NumericTypeDescriptor) replaced previous registration(org.hibernate.dialect.PostgreSQLIntervalSecondJdbcType@1b632442)
[DEBUG] 29-02-2024 16:53:11.354 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 29-02-2024 16:53:11.355 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 29-02-2024 16:53:11.356 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 29-02-2024 16:53:11.356 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 29-02-2024 16:53:11.357 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 29-02-2024 16:53:11.357 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 29-02-2024 16:53:11.359 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 29-02-2024 16:53:11.360 [main] BasicTypeRegistry - Adding type registration OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 29-02-2024 16:53:11.360 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 29-02-2024 16:53:11.365 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7791ff50] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@46de118b]
[WARN ] 29-02-2024 16:53:11.825 [main] InFlightMetadataCollectorImpl - HHH000069: Duplicate generator name generator
[INFO ] 29-02-2024 16:53:12.027 [main] BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
[INFO ] 29-02-2024 16:53:14.407 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 29-02-2024 16:53:14.411 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7791ff50] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@589d831e]
[TRACE] 29-02-2024 16:53:14.421 [main] TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@589d831e] for TypeConfiguration
[INFO ] 29-02-2024 16:53:16.472 [main] SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
[INFO ] 29-02-2024 16:53:16.473 [main] TestDispatcherServlet - Initializing Servlet ''
[INFO ] 29-02-2024 16:53:16.482 [main] TestDispatcherServlet - Completed initialization in 2 ms
[INFO ] 29-02-2024 16:53:16.846 [main] TestCRUDUserProducts - Started TestCRUDUserProducts in 15.971 seconds (process running for 20.119)
[TRACE] 29-02-2024 16:53:17.202 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@589d831e] for TypeConfiguration
[DEBUG] 29-02-2024 16:53:17.202 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@702e859] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@589d831e]
[INFO ] 29-02-2024 16:54:33.633 [background-preinit] Version - HV000001: Hibernate Validator 8.0.1.Final
[INFO ] 29-02-2024 16:54:33.753 [main] TestCRUDUserProducts - Starting TestCRUDUserProducts using Java 17.0.10 with PID 1769344 (started by dima in /home/dima/backend_microservice/UserProductsMicroService)
[INFO ] 29-02-2024 16:54:33.764 [main] TestCRUDUserProducts - No active profile set, falling back to 1 default profile: "default"
[INFO ] 29-02-2024 16:54:34.639 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO ] 29-02-2024 16:54:35.086 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 427 ms. Found 1 JPA repository interfaces.
[INFO ] 29-02-2024 16:54:39.227 [main] Version - HHH000412: Hibernate ORM core version 6.2.6.Final
[INFO ] 29-02-2024 16:54:39.237 [main] Environment - HHH000406: Using bytecode reflection optimizer
[DEBUG] 29-02-2024 16:54:39.665 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@485451d8
[DEBUG] 29-02-2024 16:54:39.667 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@485451d8
[DEBUG] 29-02-2024 16:54:39.668 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@485451d8
[DEBUG] 29-02-2024 16:54:39.669 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@35e07e19
[DEBUG] 29-02-2024 16:54:39.670 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@35e07e19
[DEBUG] 29-02-2024 16:54:39.671 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@a1e912f
[DEBUG] 29-02-2024 16:54:39.672 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@a1e912f
[DEBUG] 29-02-2024 16:54:39.673 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@2036f83
[DEBUG] 29-02-2024 16:54:39.673 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@2036f83
[DEBUG] 29-02-2024 16:54:39.674 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@68b3248a
[DEBUG] 29-02-2024 16:54:39.675 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@68b3248a
[DEBUG] 29-02-2024 16:54:39.675 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@68b3248a
[DEBUG] 29-02-2024 16:54:39.676 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@5e158f33
[DEBUG] 29-02-2024 16:54:39.676 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@5e158f33
[DEBUG] 29-02-2024 16:54:39.677 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@5e158f33
[DEBUG] 29-02-2024 16:54:39.678 [main] BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@20fcea37
[DEBUG] 29-02-2024 16:54:39.678 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@20fcea37
[DEBUG] 29-02-2024 16:54:39.679 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@399af6dc
[DEBUG] 29-02-2024 16:54:39.679 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@48fc0211
[DEBUG] 29-02-2024 16:54:39.680 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@48fc0211
[DEBUG] 29-02-2024 16:54:39.681 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@3ae2702a
[DEBUG] 29-02-2024 16:54:39.681 [main] BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@7d088813
[DEBUG] 29-02-2024 16:54:39.682 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@134abd78
[DEBUG] 29-02-2024 16:54:39.683 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@134abd78
[DEBUG] 29-02-2024 16:54:39.683 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@134abd78
[DEBUG] 29-02-2024 16:54:39.684 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@3b0ed98a
[DEBUG] 29-02-2024 16:54:39.684 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@3b0ed98a
[DEBUG] 29-02-2024 16:54:39.685 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@3b0ed98a
[DEBUG] 29-02-2024 16:54:39.686 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@12448de1
[DEBUG] 29-02-2024 16:54:39.687 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@12448de1
[DEBUG] 29-02-2024 16:54:39.687 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@12448de1
[DEBUG] 29-02-2024 16:54:39.688 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@2b35c7aa
[DEBUG] 29-02-2024 16:54:39.688 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@2b35c7aa
[DEBUG] 29-02-2024 16:54:39.689 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@2b35c7aa
[DEBUG] 29-02-2024 16:54:39.690 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@6dd20ec9
[DEBUG] 29-02-2024 16:54:39.690 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@6dd20ec9
[DEBUG] 29-02-2024 16:54:39.691 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@6dd20ec9
[DEBUG] 29-02-2024 16:54:39.692 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@20dd5870
[DEBUG] 29-02-2024 16:54:39.693 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@20dd5870
[DEBUG] 29-02-2024 16:54:39.693 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@1640f20f
[DEBUG] 29-02-2024 16:54:39.694 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@1640f20f
[DEBUG] 29-02-2024 16:54:39.695 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@134d7ffa
[DEBUG] 29-02-2024 16:54:39.695 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@134d7ffa
[DEBUG] 29-02-2024 16:54:39.696 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@134d7ffa
[DEBUG] 29-02-2024 16:54:39.696 [main] BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@6e948f1c
[DEBUG] 29-02-2024 16:54:39.697 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@24405466
[DEBUG] 29-02-2024 16:54:39.698 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@24405466
[DEBUG] 29-02-2024 16:54:39.698 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@35010a6b
[DEBUG] 29-02-2024 16:54:39.699 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@4d4b019e
[DEBUG] 29-02-2024 16:54:39.699 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@4d4b019e
[DEBUG] 29-02-2024 16:54:39.700 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@4d4b019e
[DEBUG] 29-02-2024 16:54:39.701 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@7ed8b44
[DEBUG] 29-02-2024 16:54:39.701 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@21280cbb
[DEBUG] 29-02-2024 16:54:39.702 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@1cc708a7
[DEBUG] 29-02-2024 16:54:39.703 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@995ad50
[DEBUG] 29-02-2024 16:54:39.704 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@995ad50
[DEBUG] 29-02-2024 16:54:39.704 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@6249a08d
[DEBUG] 29-02-2024 16:54:39.705 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@6249a08d
[DEBUG] 29-02-2024 16:54:39.705 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@36525ab
[DEBUG] 29-02-2024 16:54:39.706 [main] BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@27438750
[DEBUG] 29-02-2024 16:54:39.706 [main] BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@39851c5
[DEBUG] 29-02-2024 16:54:39.707 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@2c7ad4f3
[DEBUG] 29-02-2024 16:54:39.707 [main] BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@698f4aa
[DEBUG] 29-02-2024 16:54:39.708 [main] BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@3dda8a2e
[DEBUG] 29-02-2024 16:54:39.708 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@7c0de229
[DEBUG] 29-02-2024 16:54:39.709 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@7c0de229
[DEBUG] 29-02-2024 16:54:39.709 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@6aa6c17
[DEBUG] 29-02-2024 16:54:39.710 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@6aa6c17
[DEBUG] 29-02-2024 16:54:39.711 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@4756e5cc
[DEBUG] 29-02-2024 16:54:39.711 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@4756e5cc
[DEBUG] 29-02-2024 16:54:39.711 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@2e349cf2
[DEBUG] 29-02-2024 16:54:39.712 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@2e349cf2
[DEBUG] 29-02-2024 16:54:39.712 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@3dbb3fb7
[DEBUG] 29-02-2024 16:54:39.713 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@3dbb3fb7
[DEBUG] 29-02-2024 16:54:39.713 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@68a426c3
[DEBUG] 29-02-2024 16:54:39.714 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@182cc69e
[DEBUG] 29-02-2024 16:54:39.715 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@12f51a65
[DEBUG] 29-02-2024 16:54:39.715 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@12f51a65
[DEBUG] 29-02-2024 16:54:39.716 [main] BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@7657d90b
[DEBUG] 29-02-2024 16:54:39.717 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@3f0c6b3c
[DEBUG] 29-02-2024 16:54:39.717 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@416a4275
[DEBUG] 29-02-2024 16:54:39.718 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@7bf65e0f
[DEBUG] 29-02-2024 16:54:39.721 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@7bf65e0f
[DEBUG] 29-02-2024 16:54:39.723 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@33215ffb
[DEBUG] 29-02-2024 16:54:39.723 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@6f289728
[DEBUG] 29-02-2024 16:54:39.724 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@7c421952
[DEBUG] 29-02-2024 16:54:39.725 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@7c421952
[DEBUG] 29-02-2024 16:54:39.726 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@350d26f3
[DEBUG] 29-02-2024 16:54:39.726 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@350d26f3
[DEBUG] 29-02-2024 16:54:39.727 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@c6a692e
[DEBUG] 29-02-2024 16:54:39.728 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@c6a692e
[DEBUG] 29-02-2024 16:54:39.728 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@c6a692e
[DEBUG] 29-02-2024 16:54:39.729 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@27502e5c
[DEBUG] 29-02-2024 16:54:39.729 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@27502e5c
[DEBUG] 29-02-2024 16:54:39.730 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@27502e5c
[DEBUG] 29-02-2024 16:54:39.730 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@4b343b6d
[DEBUG] 29-02-2024 16:54:39.731 [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@17d2b646
[DEBUG] 29-02-2024 16:54:39.731 [main] BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@48ae9e8b
[DEBUG] 29-02-2024 16:54:39.732 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@48ae9e8b
[DEBUG] 29-02-2024 16:54:39.732 [main] BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@6eaa6b0c
[DEBUG] 29-02-2024 16:54:39.733 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@6eaa6b0c
[DEBUG] 29-02-2024 16:54:39.733 [main] BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@6eaa6b0c
[DEBUG] 29-02-2024 16:54:39.734 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@4afcae7
[DEBUG] 29-02-2024 16:54:39.734 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@6cd2cb2
[DEBUG] 29-02-2024 16:54:39.734 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@3a2bb026
[DEBUG] 29-02-2024 16:54:39.735 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@3a2bb026
[DEBUG] 29-02-2024 16:54:39.735 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@7645e64
[DEBUG] 29-02-2024 16:54:39.736 [main] BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@7645e64
[DEBUG] 29-02-2024 16:54:39.736 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@7645e64
[DEBUG] 29-02-2024 16:54:39.736 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@7de6549d
[DEBUG] 29-02-2024 16:54:39.737 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@7de6549d
[DEBUG] 29-02-2024 16:54:39.737 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@12214f2f
[DEBUG] 29-02-2024 16:54:39.738 [main] BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@12214f2f
[DEBUG] 29-02-2024 16:54:39.738 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@756c67cd
[DEBUG] 29-02-2024 16:54:39.739 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@756c67cd
[DEBUG] 29-02-2024 16:54:39.739 [main] BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@50de907a
[DEBUG] 29-02-2024 16:54:39.739 [main] BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@50de907a
[DEBUG] 29-02-2024 16:54:39.740 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@1fd37440
[DEBUG] 29-02-2024 16:54:39.740 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@1fd37440
[DEBUG] 29-02-2024 16:54:39.740 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@79308a2
[DEBUG] 29-02-2024 16:54:39.756 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@733fae8
[DEBUG] 29-02-2024 16:54:39.757 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@733fae8
[DEBUG] 29-02-2024 16:54:39.760 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@1eb906f3
[DEBUG] 29-02-2024 16:54:39.761 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@58e02359
[DEBUG] 29-02-2024 16:54:39.762 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@74fc3fc7
[DEBUG] 29-02-2024 16:54:39.762 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@491893f8
[DEBUG] 29-02-2024 16:54:39.763 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@1f408ab6
[DEBUG] 29-02-2024 16:54:39.763 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@46e388ec
[DEBUG] 29-02-2024 16:54:39.763 [main] BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@53f495f0
[DEBUG] 29-02-2024 16:54:39.763 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@5efe5b25
[DEBUG] 29-02-2024 16:54:39.764 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@45707f76
[DEBUG] 29-02-2024 16:54:41.293 [main] DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@51869ad6) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@27a90ce5)
[DEBUG] 29-02-2024 16:54:41.299 [main] JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
[DEBUG] 29-02-2024 16:54:41.300 [main] JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 29-02-2024 16:54:41.322 [main] BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@2f75a9b1
[DEBUG] 29-02-2024 16:54:41.323 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@2f75a9b1
[DEBUG] 29-02-2024 16:54:41.323 [main] BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@733fae8`
[DEBUG] 29-02-2024 16:54:41.327 [main] JdbcTypeRegistry - addDescriptor(3100, NumericTypeDescriptor) replaced previous registration(org.hibernate.dialect.PostgreSQLIntervalSecondJdbcType@19e801b5)
[DEBUG] 29-02-2024 16:54:41.352 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 29-02-2024 16:54:41.352 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 29-02-2024 16:54:41.352 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 29-02-2024 16:54:41.353 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 29-02-2024 16:54:41.353 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 29-02-2024 16:54:41.353 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 29-02-2024 16:54:41.355 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 29-02-2024 16:54:41.356 [main] BasicTypeRegistry - Adding type registration OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 29-02-2024 16:54:41.356 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 29-02-2024 16:54:41.359 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3f4964f2] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@3bf01a01]
[WARN ] 29-02-2024 16:54:41.778 [main] InFlightMetadataCollectorImpl - HHH000069: Duplicate generator name generator
[INFO ] 29-02-2024 16:54:41.955 [main] BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
[INFO ] 29-02-2024 16:54:43.944 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 29-02-2024 16:54:43.948 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3f4964f2] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@2b30b627]
[TRACE] 29-02-2024 16:54:43.956 [main] TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@2b30b627] for TypeConfiguration
[INFO ] 29-02-2024 16:54:45.530 [main] SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
[INFO ] 29-02-2024 16:54:45.531 [main] TestDispatcherServlet - Initializing Servlet ''
[INFO ] 29-02-2024 16:54:45.540 [main] TestDispatcherServlet - Completed initialization in 2 ms
[INFO ] 29-02-2024 16:54:46.149 [main] TestCRUDUserProducts - Started TestCRUDUserProducts in 13.262 seconds (process running for 16.762)
[TRACE] 29-02-2024 16:54:47.209 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@2b30b627] for TypeConfiguration
[DEBUG] 29-02-2024 16:54:47.216 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@38c3dc0c] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@2b30b627]
[INFO ] 29-02-2024 16:56:34.664 [background-preinit] Version - HV000001: Hibernate Validator 8.0.1.Final
[INFO ] 29-02-2024 16:56:34.774 [main] TestCRUDUserProducts - Starting TestCRUDUserProducts using Java 17.0.10 with PID 1770452 (started by dima in /home/dima/backend_microservice/UserProductsMicroService)
[INFO ] 29-02-2024 16:56:34.786 [main] TestCRUDUserProducts - No active profile set, falling back to 1 default profile: "default"
[INFO ] 29-02-2024 16:56:35.752 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO ] 29-02-2024 16:56:36.173 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 397 ms. Found 1 JPA repository interfaces.
[INFO ] 29-02-2024 16:56:40.302 [main] Version - HHH000412: Hibernate ORM core version 6.2.6.Final
[INFO ] 29-02-2024 16:56:40.320 [main] Environment - HHH000406: Using bytecode reflection optimizer
[DEBUG] 29-02-2024 16:56:40.920 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@1f71e024
[DEBUG] 29-02-2024 16:56:40.921 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@1f71e024
[DEBUG] 29-02-2024 16:56:40.922 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@1f71e024
[DEBUG] 29-02-2024 16:56:40.923 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@60ed0b9d
[DEBUG] 29-02-2024 16:56:40.923 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@60ed0b9d
[DEBUG] 29-02-2024 16:56:40.924 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@7f5e6833
[DEBUG] 29-02-2024 16:56:40.925 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@7f5e6833
[DEBUG] 29-02-2024 16:56:40.925 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@2c674d58
[DEBUG] 29-02-2024 16:56:40.926 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@2c674d58
[DEBUG] 29-02-2024 16:56:40.927 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@3c07e830
[DEBUG] 29-02-2024 16:56:40.930 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@3c07e830
[DEBUG] 29-02-2024 16:56:40.931 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@3c07e830
[DEBUG] 29-02-2024 16:56:40.932 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@34beadce
[DEBUG] 29-02-2024 16:56:40.933 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@34beadce
[DEBUG] 29-02-2024 16:56:40.933 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@34beadce
[DEBUG] 29-02-2024 16:56:40.934 [main] BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@382d549a
[DEBUG] 29-02-2024 16:56:40.935 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@382d549a
[DEBUG] 29-02-2024 16:56:40.935 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@2eb6d34a
[DEBUG] 29-02-2024 16:56:40.936 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@2d73e8c4
[DEBUG] 29-02-2024 16:56:40.936 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@2d73e8c4
[DEBUG] 29-02-2024 16:56:40.937 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@6ce2e079
[DEBUG] 29-02-2024 16:56:40.938 [main] BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@3e39e0fb
[DEBUG] 29-02-2024 16:56:40.938 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@260d48f5
[DEBUG] 29-02-2024 16:56:40.939 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@260d48f5
[DEBUG] 29-02-2024 16:56:40.939 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@260d48f5
[DEBUG] 29-02-2024 16:56:40.940 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@148ab138
[DEBUG] 29-02-2024 16:56:40.941 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@148ab138
[DEBUG] 29-02-2024 16:56:40.941 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@148ab138
[DEBUG] 29-02-2024 16:56:40.942 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@6f106af8
[DEBUG] 29-02-2024 16:56:40.942 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@6f106af8
[DEBUG] 29-02-2024 16:56:40.943 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@6f106af8
[DEBUG] 29-02-2024 16:56:40.944 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@1edf71d9
[DEBUG] 29-02-2024 16:56:40.944 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@1edf71d9
[DEBUG] 29-02-2024 16:56:40.945 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@1edf71d9
[DEBUG] 29-02-2024 16:56:40.946 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@52d9d817
[DEBUG] 29-02-2024 16:56:40.946 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@52d9d817
[DEBUG] 29-02-2024 16:56:40.947 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@52d9d817
[DEBUG] 29-02-2024 16:56:40.948 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@131ba005
[DEBUG] 29-02-2024 16:56:40.948 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@131ba005
[DEBUG] 29-02-2024 16:56:40.949 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@7f305f34
[DEBUG] 29-02-2024 16:56:40.949 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@7f305f34
[DEBUG] 29-02-2024 16:56:40.951 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@1a84a8b2
[DEBUG] 29-02-2024 16:56:40.952 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@1a84a8b2
[DEBUG] 29-02-2024 16:56:40.952 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@1a84a8b2
[DEBUG] 29-02-2024 16:56:40.953 [main] BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@601d295
[DEBUG] 29-02-2024 16:56:40.954 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@485451d8
[DEBUG] 29-02-2024 16:56:40.956 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@485451d8
[DEBUG] 29-02-2024 16:56:40.956 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@35e07e19
[DEBUG] 29-02-2024 16:56:40.957 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@a1e912f
[DEBUG] 29-02-2024 16:56:40.958 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@a1e912f
[DEBUG] 29-02-2024 16:56:40.958 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@a1e912f
[DEBUG] 29-02-2024 16:56:40.959 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@2036f83
[DEBUG] 29-02-2024 16:56:40.960 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@68b3248a
[DEBUG] 29-02-2024 16:56:40.960 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@5e158f33
[DEBUG] 29-02-2024 16:56:40.961 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@20fcea37
[DEBUG] 29-02-2024 16:56:40.961 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@20fcea37
[DEBUG] 29-02-2024 16:56:40.962 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@399af6dc
[DEBUG] 29-02-2024 16:56:40.962 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@399af6dc
[DEBUG] 29-02-2024 16:56:40.963 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@48fc0211
[DEBUG] 29-02-2024 16:56:40.963 [main] BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@3ae2702a
[DEBUG] 29-02-2024 16:56:40.964 [main] BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@7d088813
[DEBUG] 29-02-2024 16:56:40.965 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@134abd78
[DEBUG] 29-02-2024 16:56:40.965 [main] BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@3b0ed98a
[DEBUG] 29-02-2024 16:56:40.972 [main] BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@12448de1
[DEBUG] 29-02-2024 16:56:40.973 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@2b35c7aa
[DEBUG] 29-02-2024 16:56:40.974 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@2b35c7aa
[DEBUG] 29-02-2024 16:56:40.975 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@6dd20ec9
[DEBUG] 29-02-2024 16:56:40.977 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@6dd20ec9
[DEBUG] 29-02-2024 16:56:40.978 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@20dd5870
[DEBUG] 29-02-2024 16:56:40.978 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@20dd5870
[DEBUG] 29-02-2024 16:56:40.979 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@1640f20f
[DEBUG] 29-02-2024 16:56:40.979 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@1640f20f
[DEBUG] 29-02-2024 16:56:40.980 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@134d7ffa
[DEBUG] 29-02-2024 16:56:40.980 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@134d7ffa
[DEBUG] 29-02-2024 16:56:40.981 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@6e948f1c
[DEBUG] 29-02-2024 16:56:40.981 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@24405466
[DEBUG] 29-02-2024 16:56:40.982 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@35010a6b
[DEBUG] 29-02-2024 16:56:40.983 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@35010a6b
[DEBUG] 29-02-2024 16:56:40.983 [main] BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@4d4b019e
[DEBUG] 29-02-2024 16:56:40.984 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@7ed8b44
[DEBUG] 29-02-2024 16:56:40.985 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@21280cbb
[DEBUG] 29-02-2024 16:56:40.985 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@1cc708a7
[DEBUG] 29-02-2024 16:56:40.986 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@1cc708a7
[DEBUG] 29-02-2024 16:56:40.986 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@995ad50
[DEBUG] 29-02-2024 16:56:40.987 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@6249a08d
[DEBUG] 29-02-2024 16:56:40.987 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@36525ab
[DEBUG] 29-02-2024 16:56:40.988 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@36525ab
[DEBUG] 29-02-2024 16:56:40.988 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@27438750
[DEBUG] 29-02-2024 16:56:40.989 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@27438750
[DEBUG] 29-02-2024 16:56:40.989 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@39851c5
[DEBUG] 29-02-2024 16:56:40.990 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@39851c5
[DEBUG] 29-02-2024 16:56:40.990 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@39851c5
[DEBUG] 29-02-2024 16:56:40.991 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@2c7ad4f3
[DEBUG] 29-02-2024 16:56:40.991 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@2c7ad4f3
[DEBUG] 29-02-2024 16:56:40.992 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@2c7ad4f3
[DEBUG] 29-02-2024 16:56:40.992 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@698f4aa
[DEBUG] 29-02-2024 16:56:40.993 [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@3dda8a2e
[DEBUG] 29-02-2024 16:56:40.993 [main] BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@7c0de229
[DEBUG] 29-02-2024 16:56:40.994 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@7c0de229
[DEBUG] 29-02-2024 16:56:40.994 [main] BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@6aa6c17
[DEBUG] 29-02-2024 16:56:40.994 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@6aa6c17
[DEBUG] 29-02-2024 16:56:40.995 [main] BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@6aa6c17
[DEBUG] 29-02-2024 16:56:40.995 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@4756e5cc
[DEBUG] 29-02-2024 16:56:40.996 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@2e349cf2
[DEBUG] 29-02-2024 16:56:40.996 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@3dbb3fb7
[DEBUG] 29-02-2024 16:56:40.996 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@3dbb3fb7
[DEBUG] 29-02-2024 16:56:40.997 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@68a426c3
[DEBUG] 29-02-2024 16:56:40.997 [main] BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@68a426c3
[DEBUG] 29-02-2024 16:56:40.998 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@68a426c3
[DEBUG] 29-02-2024 16:56:40.998 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@182cc69e
[DEBUG] 29-02-2024 16:56:40.998 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@182cc69e
[DEBUG] 29-02-2024 16:56:40.999 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@12f51a65
[DEBUG] 29-02-2024 16:56:40.999 [main] BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@12f51a65
[DEBUG] 29-02-2024 16:56:41.000 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@7657d90b
[DEBUG] 29-02-2024 16:56:41.000 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@7657d90b
[DEBUG] 29-02-2024 16:56:41.001 [main] BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@3f0c6b3c
[DEBUG] 29-02-2024 16:56:41.001 [main] BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@3f0c6b3c
[DEBUG] 29-02-2024 16:56:41.002 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@416a4275
[DEBUG] 29-02-2024 16:56:41.002 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@416a4275
[DEBUG] 29-02-2024 16:56:41.002 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@7bf65e0f
[DEBUG] 29-02-2024 16:56:41.020 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@6cf047cf
[DEBUG] 29-02-2024 16:56:41.021 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@6cf047cf
[DEBUG] 29-02-2024 16:56:41.025 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@2d4f67e
[DEBUG] 29-02-2024 16:56:41.026 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@1282f784
[DEBUG] 29-02-2024 16:56:41.026 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@41167ded
[DEBUG] 29-02-2024 16:56:41.027 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@13e1e816
[DEBUG] 29-02-2024 16:56:41.027 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@36238b12
[DEBUG] 29-02-2024 16:56:41.027 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@33187485
[DEBUG] 29-02-2024 16:56:41.028 [main] BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@41938e1e
[DEBUG] 29-02-2024 16:56:41.045 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@5d2e6f62
[DEBUG] 29-02-2024 16:56:41.046 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@77ff14ce
[DEBUG] 29-02-2024 16:56:42.694 [main] DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@51d88c38) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3ea2f72e)
[DEBUG] 29-02-2024 16:56:42.700 [main] JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
[DEBUG] 29-02-2024 16:56:42.700 [main] JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 29-02-2024 16:56:42.727 [main] BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@1ae9d0e4
[DEBUG] 29-02-2024 16:56:42.728 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@1ae9d0e4
[DEBUG] 29-02-2024 16:56:42.728 [main] BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@6cf047cf`
[DEBUG] 29-02-2024 16:56:42.732 [main] JdbcTypeRegistry - addDescriptor(3100, NumericTypeDescriptor) replaced previous registration(org.hibernate.dialect.PostgreSQLIntervalSecondJdbcType@67e4928c)
[DEBUG] 29-02-2024 16:56:42.773 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 29-02-2024 16:56:42.773 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 29-02-2024 16:56:42.774 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 29-02-2024 16:56:42.774 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 29-02-2024 16:56:42.774 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 29-02-2024 16:56:42.775 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 29-02-2024 16:56:42.777 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 29-02-2024 16:56:42.777 [main] BasicTypeRegistry - Adding type registration OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 29-02-2024 16:56:42.778 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 29-02-2024 16:56:42.782 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@126254ec] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@275902e1]
[WARN ] 29-02-2024 16:56:43.276 [main] InFlightMetadataCollectorImpl - HHH000069: Duplicate generator name generator
[INFO ] 29-02-2024 16:56:43.462 [main] BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
[INFO ] 29-02-2024 16:56:45.414 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 29-02-2024 16:56:45.416 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@126254ec] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@e2498a3]
[TRACE] 29-02-2024 16:56:45.425 [main] TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@e2498a3] for TypeConfiguration
[INFO ] 29-02-2024 16:56:47.043 [main] SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
[INFO ] 29-02-2024 16:56:47.043 [main] TestDispatcherServlet - Initializing Servlet ''
[INFO ] 29-02-2024 16:56:47.052 [main] TestDispatcherServlet - Completed initialization in 3 ms
[INFO ] 29-02-2024 16:56:47.375 [main] TestCRUDUserProducts - Started TestCRUDUserProducts in 13.419 seconds (process running for 17.333)
[TRACE] 29-02-2024 16:56:48.244 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@e2498a3] for TypeConfiguration
[DEBUG] 29-02-2024 16:56:48.245 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@8189139] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@e2498a3]
[INFO ] 29-02-2024 16:58:08.755 [background-preinit] Version - HV000001: Hibernate Validator 8.0.1.Final
[INFO ] 29-02-2024 16:58:08.862 [main] TestSpringBootApplication - Starting TestSpringBootApplication using Java 17.0.10 with PID 1771338 (/home/dima/backend_microservice/UserProductsMicroService/target/classes started by dima in /home/dima/backend_microservice/UserProductsMicroService)
[INFO ] 29-02-2024 16:58:08.881 [main] TestSpringBootApplication - No active profile set, falling back to 1 default profile: "default"
[INFO ] 29-02-2024 16:58:10.749 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO ] 29-02-2024 16:58:11.146 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 374 ms. Found 1 JPA repository interfaces.
[ERROR] 29-02-2024 16:58:13.302 [main] AprLifecycleListener - An incompatible version [1.2.23] of the Apache Tomcat Native library is installed, while Tomcat requires version [1.2.34]
[INFO ] 29-02-2024 16:58:14.501 [main] TomcatWebServer - Tomcat initialized with port(s): 8300 (http)
[INFO ] 29-02-2024 16:58:14.524 [main] Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8300"]
[INFO ] 29-02-2024 16:58:14.534 [main] StandardService - Starting service [Tomcat]
[INFO ] 29-02-2024 16:58:14.535 [main] StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.11]
[INFO ] 29-02-2024 16:58:16.056 [main] TldScanner - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
[INFO ] 29-02-2024 16:58:16.075 [main] [/users_products_api] - Initializing Spring embedded WebApplicationContext
[INFO ] 29-02-2024 16:58:16.082 [main] ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 7035 ms
[INFO ] 29-02-2024 16:58:16.555 [main] Version - HHH000412: Hibernate ORM core version 6.2.6.Final
[INFO ] 29-02-2024 16:58:16.562 [main] Environment - HHH000406: Using bytecode reflection optimizer
[DEBUG] 29-02-2024 16:58:16.945 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@7f42b194
[DEBUG] 29-02-2024 16:58:16.946 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@7f42b194
[DEBUG] 29-02-2024 16:58:16.947 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@7f42b194
[DEBUG] 29-02-2024 16:58:16.948 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@8eb6f9a
[DEBUG] 29-02-2024 16:58:16.948 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@8eb6f9a
[DEBUG] 29-02-2024 16:58:16.949 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@29170a47
[DEBUG] 29-02-2024 16:58:16.949 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@29170a47
[DEBUG] 29-02-2024 16:58:16.950 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@2a8f8555
[DEBUG] 29-02-2024 16:58:16.950 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@2a8f8555
[DEBUG] 29-02-2024 16:58:16.951 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@402b4f81
[DEBUG] 29-02-2024 16:58:16.951 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@402b4f81
[DEBUG] 29-02-2024 16:58:16.951 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@402b4f81
[DEBUG] 29-02-2024 16:58:16.952 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@13ef7fa1
[DEBUG] 29-02-2024 16:58:16.952 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@13ef7fa1
[DEBUG] 29-02-2024 16:58:16.953 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@13ef7fa1
[DEBUG] 29-02-2024 16:58:16.953 [main] BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@23b1aa9
[DEBUG] 29-02-2024 16:58:16.954 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@23b1aa9
[DEBUG] 29-02-2024 16:58:16.954 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@54489296
[DEBUG] 29-02-2024 16:58:16.955 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@4e8598d9
[DEBUG] 29-02-2024 16:58:16.955 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@4e8598d9
[DEBUG] 29-02-2024 16:58:16.955 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@267ff4df
[DEBUG] 29-02-2024 16:58:16.956 [main] BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@7c4b5ceb
[DEBUG] 29-02-2024 16:58:16.956 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@6c07add6
[DEBUG] 29-02-2024 16:58:16.957 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@6c07add6
[DEBUG] 29-02-2024 16:58:16.958 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@6c07add6
[DEBUG] 29-02-2024 16:58:16.958 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@e26a3df
[DEBUG] 29-02-2024 16:58:16.959 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@e26a3df
[DEBUG] 29-02-2024 16:58:16.959 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@e26a3df
[DEBUG] 29-02-2024 16:58:16.960 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@57a667c8
[DEBUG] 29-02-2024 16:58:16.960 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@57a667c8
[DEBUG] 29-02-2024 16:58:16.961 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@57a667c8
[DEBUG] 29-02-2024 16:58:16.961 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@712cd5d3
[DEBUG] 29-02-2024 16:58:16.962 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@712cd5d3
[DEBUG] 29-02-2024 16:58:16.962 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@712cd5d3
[DEBUG] 29-02-2024 16:58:16.963 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@2094bf3d
[DEBUG] 29-02-2024 16:58:16.963 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@2094bf3d
[DEBUG] 29-02-2024 16:58:16.964 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@2094bf3d
[DEBUG] 29-02-2024 16:58:16.964 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@1b17d8ab
[DEBUG] 29-02-2024 16:58:16.965 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@1b17d8ab
[DEBUG] 29-02-2024 16:58:16.965 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@7f6b7426
[DEBUG] 29-02-2024 16:58:16.965 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@7f6b7426
[DEBUG] 29-02-2024 16:58:16.966 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@687eb455
[DEBUG] 29-02-2024 16:58:16.966 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@687eb455
[DEBUG] 29-02-2024 16:58:16.967 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@687eb455
[DEBUG] 29-02-2024 16:58:16.967 [main] BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@6d969330
[DEBUG] 29-02-2024 16:58:16.967 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@4861cca9
[DEBUG] 29-02-2024 16:58:16.968 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@4861cca9
[DEBUG] 29-02-2024 16:58:16.969 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@6c8f4bc7
[DEBUG] 29-02-2024 16:58:16.969 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@714e861f
[DEBUG] 29-02-2024 16:58:16.970 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@714e861f
[DEBUG] 29-02-2024 16:58:16.970 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@714e861f
[DEBUG] 29-02-2024 16:58:16.971 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@28989415
[DEBUG] 29-02-2024 16:58:16.971 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@6eda012b
[DEBUG] 29-02-2024 16:58:16.971 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@781dbe44
[DEBUG] 29-02-2024 16:58:16.971 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@7d66a126
[DEBUG] 29-02-2024 16:58:16.972 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@7d66a126
[DEBUG] 29-02-2024 16:58:16.972 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@1132baa3
[DEBUG] 29-02-2024 16:58:16.973 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@1132baa3
[DEBUG] 29-02-2024 16:58:16.973 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@2fdf22f7
[DEBUG] 29-02-2024 16:58:16.973 [main] BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@3a2546d6
[DEBUG] 29-02-2024 16:58:16.975 [main] BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@7282af25
[DEBUG] 29-02-2024 16:58:16.976 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@7661e474
[DEBUG] 29-02-2024 16:58:16.976 [main] BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@20ffb8d5
[DEBUG] 29-02-2024 16:58:16.976 [main] BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@307c59ea
[DEBUG] 29-02-2024 16:58:16.977 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@57e03347
[DEBUG] 29-02-2024 16:58:16.977 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@57e03347
[DEBUG] 29-02-2024 16:58:16.977 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@2edb2f8b
[DEBUG] 29-02-2024 16:58:16.978 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@2edb2f8b
[DEBUG] 29-02-2024 16:58:16.978 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@733f1395
[DEBUG] 29-02-2024 16:58:16.978 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@733f1395
[DEBUG] 29-02-2024 16:58:16.979 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@21dea711
[DEBUG] 29-02-2024 16:58:16.979 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@21dea711
[DEBUG] 29-02-2024 16:58:16.979 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@7772d266
[DEBUG] 29-02-2024 16:58:16.980 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@7772d266
[DEBUG] 29-02-2024 16:58:16.980 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@a21c74
[DEBUG] 29-02-2024 16:58:16.980 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@b8a144e
[DEBUG] 29-02-2024 16:58:16.981 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@5fb8dc01
[DEBUG] 29-02-2024 16:58:16.981 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@5fb8dc01
[DEBUG] 29-02-2024 16:58:16.982 [main] BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@3e38c472
[DEBUG] 29-02-2024 16:58:16.982 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2ee92e7d
[DEBUG] 29-02-2024 16:58:16.982 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@759a678a
[DEBUG] 29-02-2024 16:58:16.983 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@6cdbe5ec
[DEBUG] 29-02-2024 16:58:16.984 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@6cdbe5ec
[DEBUG] 29-02-2024 16:58:16.984 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@14b8a751
[DEBUG] 29-02-2024 16:58:16.984 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@7345f97d
[DEBUG] 29-02-2024 16:58:16.985 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@554566a8
[DEBUG] 29-02-2024 16:58:16.985 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@554566a8
[DEBUG] 29-02-2024 16:58:16.986 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@66020d69
[DEBUG] 29-02-2024 16:58:16.986 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@66020d69
[DEBUG] 29-02-2024 16:58:16.986 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@3751acd7
[DEBUG] 29-02-2024 16:58:16.986 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@3751acd7
[DEBUG] 29-02-2024 16:58:16.987 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@3751acd7
[DEBUG] 29-02-2024 16:58:16.987 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@6b832551
[DEBUG] 29-02-2024 16:58:16.987 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@6b832551
[DEBUG] 29-02-2024 16:58:16.988 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@6b832551
[DEBUG] 29-02-2024 16:58:16.988 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@150d6eaf
[DEBUG] 29-02-2024 16:58:16.989 [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@63124022
[DEBUG] 29-02-2024 16:58:16.989 [main] BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@591f6f83
[DEBUG] 29-02-2024 16:58:16.990 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@591f6f83
[DEBUG] 29-02-2024 16:58:16.990 [main] BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@2b44605c
[DEBUG] 29-02-2024 16:58:16.990 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@2b44605c
[DEBUG] 29-02-2024 16:58:16.990 [main] BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@2b44605c
[DEBUG] 29-02-2024 16:58:16.991 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@55421b8d
[DEBUG] 29-02-2024 16:58:16.991 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@24a04257
[DEBUG] 29-02-2024 16:58:16.992 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@6615237
[DEBUG] 29-02-2024 16:58:16.992 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@6615237
[DEBUG] 29-02-2024 16:58:16.993 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@eaf8427
[DEBUG] 29-02-2024 16:58:16.993 [main] BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@eaf8427
[DEBUG] 29-02-2024 16:58:16.993 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@eaf8427
[DEBUG] 29-02-2024 16:58:16.994 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@4bf4680c
[DEBUG] 29-02-2024 16:58:16.994 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@4bf4680c
[DEBUG] 29-02-2024 16:58:16.994 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@6d6039df
[DEBUG] 29-02-2024 16:58:16.995 [main] BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@6d6039df
[DEBUG] 29-02-2024 16:58:16.995 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@611c3eae
[DEBUG] 29-02-2024 16:58:16.996 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@611c3eae
[DEBUG] 29-02-2024 16:58:16.996 [main] BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@13e00016
[DEBUG] 29-02-2024 16:58:16.996 [main] BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@13e00016
[DEBUG] 29-02-2024 16:58:16.997 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@7b3cbe6e
[DEBUG] 29-02-2024 16:58:16.997 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@7b3cbe6e
[DEBUG] 29-02-2024 16:58:16.997 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@177ede17
[DEBUG] 29-02-2024 16:58:17.012 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@38c460e8
[DEBUG] 29-02-2024 16:58:17.013 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@38c460e8
[DEBUG] 29-02-2024 16:58:17.016 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@6b16de91
[DEBUG] 29-02-2024 16:58:17.016 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@71bb8b34
[DEBUG] 29-02-2024 16:58:17.017 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@197ce367
[DEBUG] 29-02-2024 16:58:17.017 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@383cdd4d
[DEBUG] 29-02-2024 16:58:17.018 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@65036e8d
[DEBUG] 29-02-2024 16:58:17.018 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@48ccbb32
[DEBUG] 29-02-2024 16:58:17.018 [main] BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@36551e97
[DEBUG] 29-02-2024 16:58:17.019 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@685d7ba5
[DEBUG] 29-02-2024 16:58:17.019 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@16d41725
[DEBUG] 29-02-2024 16:58:18.327 [main] DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7b3a6e95) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4ebfb045)
[DEBUG] 29-02-2024 16:58:18.333 [main] JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
[DEBUG] 29-02-2024 16:58:18.333 [main] JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 29-02-2024 16:58:18.355 [main] BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@70884875
[DEBUG] 29-02-2024 16:58:18.356 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@70884875
[DEBUG] 29-02-2024 16:58:18.356 [main] BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@38c460e8`
[DEBUG] 29-02-2024 16:58:18.359 [main] JdbcTypeRegistry - addDescriptor(3100, NumericTypeDescriptor) replaced previous registration(org.hibernate.dialect.PostgreSQLIntervalSecondJdbcType@31f7eb8)
[DEBUG] 29-02-2024 16:58:18.374 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 29-02-2024 16:58:18.374 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 29-02-2024 16:58:18.374 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 29-02-2024 16:58:18.375 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 29-02-2024 16:58:18.375 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 29-02-2024 16:58:18.375 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 29-02-2024 16:58:18.377 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 29-02-2024 16:58:18.378 [main] BasicTypeRegistry - Adding type registration OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 29-02-2024 16:58:18.378 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 29-02-2024 16:58:18.381 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@10745a02] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@3e2d8623]
[WARN ] 29-02-2024 16:58:18.842 [main] InFlightMetadataCollectorImpl - HHH000069: Duplicate generator name generator
[INFO ] 29-02-2024 16:58:18.996 [main] BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
[INFO ] 29-02-2024 16:58:21.759 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 29-02-2024 16:58:21.761 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@10745a02] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@40fd1a78]
[TRACE] 29-02-2024 16:58:21.805 [main] TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@40fd1a78] for TypeConfiguration
[WARN ] 29-02-2024 16:58:22.906 [main] JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[INFO ] 29-02-2024 16:58:23.935 [main] Http11NioProtocol - Starting ProtocolHandler ["http-nio-8300"]
[INFO ] 29-02-2024 16:58:24.052 [main] TomcatWebServer - Tomcat started on port(s): 8300 (http) with context path '/users_products_api'
[INFO ] 29-02-2024 16:58:24.112 [main] TestSpringBootApplication - Started TestSpringBootApplication in 16.332 seconds (process running for 19.361)
[INFO ] 29-02-2024 16:58:29.828 [http-nio-8300-exec-1] [/users_products_api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[INFO ] 29-02-2024 16:58:29.829 [http-nio-8300-exec-1] DispatcherServlet - Initializing Servlet 'dispatcherServlet'
[INFO ] 29-02-2024 16:58:29.832 [http-nio-8300-exec-1] DispatcherServlet - Completed initialization in 3 ms
[DEBUG] 29-02-2024 16:58:30.188 [http-nio-8300-exec-1] SQL - select e1_0.id,e1_0.email,e1_0.login,e1_0.name,e1_0.password,p1_0.id_user,p1_0.id,p1_0.name,p1_0.page_image,p1_0.price,p1_0.raiting,p1_0.year_issue from users e1_0 left join products p1_0 on e1_0.id=p1_0.id_user where e1_0.id=?
[DEBUG] 29-02-2024 16:58:30.513 [http-nio-8300-exec-1] SQL - select nextval('products_id_seq')
[DEBUG] 29-02-2024 16:58:30.570 [http-nio-8300-exec-1] SQL - insert into products (name,page_image,price,raiting,id_user,year_issue,id) values (?,?,?,?,?,?,?)
[DEBUG] 29-02-2024 16:58:38.978 [http-nio-8300-exec-3] SQL - select e1_0.id,e1_0.email,e1_0.login,e1_0.name,e1_0.password,p1_0.id_user,p1_0.id,p1_0.name,p1_0.page_image,p1_0.price,p1_0.raiting,p1_0.year_issue from users e1_0 left join products p1_0 on e1_0.id=p1_0.id_user where e1_0.id=?
[DEBUG] 29-02-2024 16:58:39.002 [http-nio-8300-exec-3] SQL - select nextval('products_id_seq')
[DEBUG] 29-02-2024 16:58:39.007 [http-nio-8300-exec-3] SQL - insert into products (name,page_image,price,raiting,id_user,year_issue,id) values (?,?,?,?,?,?,?)
[TRACE] 29-02-2024 16:58:44.193 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@40fd1a78] for TypeConfiguration
[DEBUG] 29-02-2024 16:58:44.194 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@2926589b] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@40fd1a78]
[INFO ] 29-02-2024 17:13:06.468 [background-preinit] Version - HV000001: Hibernate Validator 8.0.1.Final
[INFO ] 29-02-2024 17:13:06.598 [main] TestCRUDUserProducts - Starting TestCRUDUserProducts using Java 17.0.10 with PID 1778922 (started by dima in /home/dima/backend_microservice/UserProductsMicroService)
[INFO ] 29-02-2024 17:13:06.609 [main] TestCRUDUserProducts - No active profile set, falling back to 1 default profile: "default"
[INFO ] 29-02-2024 17:13:07.606 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO ] 29-02-2024 17:13:08.051 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 424 ms. Found 1 JPA repository interfaces.
[INFO ] 29-02-2024 17:13:12.037 [main] Version - HHH000412: Hibernate ORM core version 6.2.6.Final
[INFO ] 29-02-2024 17:13:12.047 [main] Environment - HHH000406: Using bytecode reflection optimizer
[DEBUG] 29-02-2024 17:13:12.528 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@4d4b019e
[DEBUG] 29-02-2024 17:13:12.529 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@4d4b019e
[DEBUG] 29-02-2024 17:13:12.530 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@4d4b019e
[DEBUG] 29-02-2024 17:13:12.531 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@7ed8b44
[DEBUG] 29-02-2024 17:13:12.532 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@7ed8b44
[DEBUG] 29-02-2024 17:13:12.532 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@21280cbb
[DEBUG] 29-02-2024 17:13:12.533 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@21280cbb
[DEBUG] 29-02-2024 17:13:12.534 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@1cc708a7
[DEBUG] 29-02-2024 17:13:12.534 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@1cc708a7
[DEBUG] 29-02-2024 17:13:12.535 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@995ad50
[DEBUG] 29-02-2024 17:13:12.536 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@995ad50
[DEBUG] 29-02-2024 17:13:12.536 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@995ad50
[DEBUG] 29-02-2024 17:13:12.537 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@6249a08d
[DEBUG] 29-02-2024 17:13:12.537 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@6249a08d
[DEBUG] 29-02-2024 17:13:12.538 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@6249a08d
[DEBUG] 29-02-2024 17:13:12.539 [main] BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@36525ab
[DEBUG] 29-02-2024 17:13:12.539 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@36525ab
[DEBUG] 29-02-2024 17:13:12.540 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@27438750
[DEBUG] 29-02-2024 17:13:12.541 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@39851c5
[DEBUG] 29-02-2024 17:13:12.541 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@39851c5
[DEBUG] 29-02-2024 17:13:12.542 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@2c7ad4f3
[DEBUG] 29-02-2024 17:13:12.542 [main] BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@698f4aa
[DEBUG] 29-02-2024 17:13:12.543 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@3dda8a2e
[DEBUG] 29-02-2024 17:13:12.544 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@3dda8a2e
[DEBUG] 29-02-2024 17:13:12.545 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@3dda8a2e
[DEBUG] 29-02-2024 17:13:12.545 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@7c0de229
[DEBUG] 29-02-2024 17:13:12.546 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@7c0de229
[DEBUG] 29-02-2024 17:13:12.547 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@7c0de229
[DEBUG] 29-02-2024 17:13:12.547 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@6aa6c17
[DEBUG] 29-02-2024 17:13:12.548 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@6aa6c17
[DEBUG] 29-02-2024 17:13:12.549 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@6aa6c17
[DEBUG] 29-02-2024 17:13:12.549 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@4756e5cc
[DEBUG] 29-02-2024 17:13:12.550 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@4756e5cc
[DEBUG] 29-02-2024 17:13:12.550 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@4756e5cc
[DEBUG] 29-02-2024 17:13:12.551 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@2e349cf2
[DEBUG] 29-02-2024 17:13:12.552 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@2e349cf2
[DEBUG] 29-02-2024 17:13:12.552 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@2e349cf2
[DEBUG] 29-02-2024 17:13:12.553 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@3dbb3fb7
[DEBUG] 29-02-2024 17:13:12.553 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@3dbb3fb7
[DEBUG] 29-02-2024 17:13:12.554 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@68a426c3
[DEBUG] 29-02-2024 17:13:12.554 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@68a426c3
[DEBUG] 29-02-2024 17:13:12.555 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@182cc69e
[DEBUG] 29-02-2024 17:13:12.556 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@182cc69e
[DEBUG] 29-02-2024 17:13:12.556 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@182cc69e
[DEBUG] 29-02-2024 17:13:12.556 [main] BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@12f51a65
[DEBUG] 29-02-2024 17:13:12.557 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@7657d90b
[DEBUG] 29-02-2024 17:13:12.557 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@7657d90b
[DEBUG] 29-02-2024 17:13:12.558 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@3f0c6b3c
[DEBUG] 29-02-2024 17:13:12.558 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@416a4275
[DEBUG] 29-02-2024 17:13:12.559 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@416a4275
[DEBUG] 29-02-2024 17:13:12.559 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@416a4275
[DEBUG] 29-02-2024 17:13:12.560 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@7bf65e0f
[DEBUG] 29-02-2024 17:13:12.560 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@33215ffb
[DEBUG] 29-02-2024 17:13:12.561 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@6f289728
[DEBUG] 29-02-2024 17:13:12.561 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@7c421952
[DEBUG] 29-02-2024 17:13:12.562 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@7c421952
[DEBUG] 29-02-2024 17:13:12.562 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@350d26f3
[DEBUG] 29-02-2024 17:13:12.564 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@350d26f3
[DEBUG] 29-02-2024 17:13:12.564 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@c6a692e
[DEBUG] 29-02-2024 17:13:12.565 [main] BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@27502e5c
[DEBUG] 29-02-2024 17:13:12.565 [main] BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@4b343b6d
[DEBUG] 29-02-2024 17:13:12.566 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@17d2b646
[DEBUG] 29-02-2024 17:13:12.566 [main] BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@48ae9e8b
[DEBUG] 29-02-2024 17:13:12.567 [main] BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@6eaa6b0c
[DEBUG] 29-02-2024 17:13:12.567 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@4afcae7
[DEBUG] 29-02-2024 17:13:12.568 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@4afcae7
[DEBUG] 29-02-2024 17:13:12.568 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@6cd2cb2
[DEBUG] 29-02-2024 17:13:12.569 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@6cd2cb2
[DEBUG] 29-02-2024 17:13:12.569 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@3a2bb026
[DEBUG] 29-02-2024 17:13:12.570 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@3a2bb026
[DEBUG] 29-02-2024 17:13:12.570 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@7645e64
[DEBUG] 29-02-2024 17:13:12.571 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@7645e64
[DEBUG] 29-02-2024 17:13:12.571 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@7de6549d
[DEBUG] 29-02-2024 17:13:12.572 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@7de6549d
[DEBUG] 29-02-2024 17:13:12.572 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@12214f2f
[DEBUG] 29-02-2024 17:13:12.573 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@756c67cd
[DEBUG] 29-02-2024 17:13:12.574 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@50de907a
[DEBUG] 29-02-2024 17:13:12.574 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@50de907a
[DEBUG] 29-02-2024 17:13:12.574 [main] BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@1fd37440
[DEBUG] 29-02-2024 17:13:12.575 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@79308a2
[DEBUG] 29-02-2024 17:13:12.575 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@11574592
[DEBUG] 29-02-2024 17:13:12.576 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@352e5a82
[DEBUG] 29-02-2024 17:13:12.576 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@352e5a82
[DEBUG] 29-02-2024 17:13:12.577 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@315b5913
[DEBUG] 29-02-2024 17:13:12.577 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@2e929182
[DEBUG] 29-02-2024 17:13:12.578 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@5423a17
[DEBUG] 29-02-2024 17:13:12.578 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@5423a17
[DEBUG] 29-02-2024 17:13:12.579 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@42ff9a77
[DEBUG] 29-02-2024 17:13:12.579 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@42ff9a77
[DEBUG] 29-02-2024 17:13:12.580 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@2987d0fa
[DEBUG] 29-02-2024 17:13:12.580 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@2987d0fa
[DEBUG] 29-02-2024 17:13:12.581 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@2987d0fa
[DEBUG] 29-02-2024 17:13:12.581 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@13234ac9
[DEBUG] 29-02-2024 17:13:12.582 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@13234ac9
[DEBUG] 29-02-2024 17:13:12.582 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@13234ac9
[DEBUG] 29-02-2024 17:13:12.583 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@7254838
[DEBUG] 29-02-2024 17:13:12.583 [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@39374689
[DEBUG] 29-02-2024 17:13:12.583 [main] BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@2e204155
[DEBUG] 29-02-2024 17:13:12.584 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@2e204155
[DEBUG] 29-02-2024 17:13:12.584 [main] BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@27dc335a
[DEBUG] 29-02-2024 17:13:12.584 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@27dc335a
[DEBUG] 29-02-2024 17:13:12.585 [main] BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@27dc335a
[DEBUG] 29-02-2024 17:13:12.585 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@a95cb11
[DEBUG] 29-02-2024 17:13:12.586 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@915d7c4
[DEBUG] 29-02-2024 17:13:12.586 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@2513155a
[DEBUG] 29-02-2024 17:13:12.587 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@2513155a
[DEBUG] 29-02-2024 17:13:12.587 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@6313b441
[DEBUG] 29-02-2024 17:13:12.587 [main] BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@6313b441
[DEBUG] 29-02-2024 17:13:12.588 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@6313b441
[DEBUG] 29-02-2024 17:13:12.588 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@47fa3671
[DEBUG] 29-02-2024 17:13:12.588 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@47fa3671
[DEBUG] 29-02-2024 17:13:12.589 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@60f662bd
[DEBUG] 29-02-2024 17:13:12.589 [main] BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@60f662bd
[DEBUG] 29-02-2024 17:13:12.590 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@5df2023c
[DEBUG] 29-02-2024 17:13:12.590 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@5df2023c
[DEBUG] 29-02-2024 17:13:12.590 [main] BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@23bd047f
[DEBUG] 29-02-2024 17:13:12.591 [main] BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@23bd047f
[DEBUG] 29-02-2024 17:13:12.591 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@3562e7c7
[DEBUG] 29-02-2024 17:13:12.591 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@3562e7c7
[DEBUG] 29-02-2024 17:13:12.592 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@66d2885c
[DEBUG] 29-02-2024 17:13:12.608 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@44a93f8a
[DEBUG] 29-02-2024 17:13:12.609 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@44a93f8a
[DEBUG] 29-02-2024 17:13:12.612 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@608b35fa
[DEBUG] 29-02-2024 17:13:12.613 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@13a268cd
[DEBUG] 29-02-2024 17:13:12.613 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@7b3a6e95
[DEBUG] 29-02-2024 17:13:12.614 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@4ebfb045
[DEBUG] 29-02-2024 17:13:12.614 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@77a2688d
[DEBUG] 29-02-2024 17:13:12.615 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@77c692b4
[DEBUG] 29-02-2024 17:13:12.615 [main] BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@5fa0141f
[DEBUG] 29-02-2024 17:13:12.616 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@6caeba36
[DEBUG] 29-02-2024 17:13:12.616 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@8ac512e
[DEBUG] 29-02-2024 17:13:14.260 [main] DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@61d011e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3b56947a)
[DEBUG] 29-02-2024 17:13:14.266 [main] JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
[DEBUG] 29-02-2024 17:13:14.267 [main] JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 29-02-2024 17:13:14.291 [main] BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@54f373d4
[DEBUG] 29-02-2024 17:13:14.292 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@54f373d4
[DEBUG] 29-02-2024 17:13:14.292 [main] BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@44a93f8a`
[DEBUG] 29-02-2024 17:13:14.297 [main] JdbcTypeRegistry - addDescriptor(3100, NumericTypeDescriptor) replaced previous registration(org.hibernate.dialect.PostgreSQLIntervalSecondJdbcType@43778371)
[DEBUG] 29-02-2024 17:13:14.323 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 29-02-2024 17:13:14.324 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 29-02-2024 17:13:14.324 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 29-02-2024 17:13:14.325 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 29-02-2024 17:13:14.326 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 29-02-2024 17:13:14.327 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 29-02-2024 17:13:14.330 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 29-02-2024 17:13:14.331 [main] BasicTypeRegistry - Adding type registration OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 29-02-2024 17:13:14.331 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 29-02-2024 17:13:14.336 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@19924f15] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@621392ea]
[WARN ] 29-02-2024 17:13:14.888 [main] InFlightMetadataCollectorImpl - HHH000069: Duplicate generator name generator
[INFO ] 29-02-2024 17:13:15.227 [main] BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
[INFO ] 29-02-2024 17:13:17.302 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 29-02-2024 17:13:17.304 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@19924f15] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@84eafc2]
[TRACE] 29-02-2024 17:13:17.312 [main] TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@84eafc2] for TypeConfiguration
[INFO ] 29-02-2024 17:13:19.138 [main] SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
[INFO ] 29-02-2024 17:13:19.138 [main] TestDispatcherServlet - Initializing Servlet ''
[INFO ] 29-02-2024 17:13:19.146 [main] TestDispatcherServlet - Completed initialization in 3 ms
[INFO ] 29-02-2024 17:13:19.471 [main] TestCRUDUserProducts - Started TestCRUDUserProducts in 13.768 seconds (process running for 18.043)
[TRACE] 29-02-2024 17:13:20.453 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@84eafc2] for TypeConfiguration
[DEBUG] 29-02-2024 17:13:20.454 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@3e6da30d] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@84eafc2]
[INFO ] 29-02-2024 17:15:46.665 [background-preinit] Version - HV000001: Hibernate Validator 8.0.1.Final
[INFO ] 29-02-2024 17:15:46.800 [main] TestCRUDUserProducts - Starting TestCRUDUserProducts using Java 17.0.10 with PID 1780399 (started by dima in /home/dima/backend_microservice/UserProductsMicroService)
[INFO ] 29-02-2024 17:15:46.858 [main] TestCRUDUserProducts - No active profile set, falling back to 1 default profile: "default"
[INFO ] 29-02-2024 17:15:47.996 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO ] 29-02-2024 17:15:48.461 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 444 ms. Found 1 JPA repository interfaces.
[INFO ] 29-02-2024 17:15:52.473 [main] Version - HHH000412: Hibernate ORM core version 6.2.6.Final
[INFO ] 29-02-2024 17:15:52.483 [main] Environment - HHH000406: Using bytecode reflection optimizer
[DEBUG] 29-02-2024 17:15:52.967 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@27dc335a
[DEBUG] 29-02-2024 17:15:52.968 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@27dc335a
[DEBUG] 29-02-2024 17:15:52.969 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@27dc335a
[DEBUG] 29-02-2024 17:15:52.970 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@a95cb11
[DEBUG] 29-02-2024 17:15:52.970 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@a95cb11
[DEBUG] 29-02-2024 17:15:52.971 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@915d7c4
[DEBUG] 29-02-2024 17:15:52.972 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@915d7c4
[DEBUG] 29-02-2024 17:15:52.973 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@2513155a
[DEBUG] 29-02-2024 17:15:52.973 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@2513155a
[DEBUG] 29-02-2024 17:15:52.974 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@6313b441
[DEBUG] 29-02-2024 17:15:52.975 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@6313b441
[DEBUG] 29-02-2024 17:15:52.975 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@6313b441
[DEBUG] 29-02-2024 17:15:52.976 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@47fa3671
[DEBUG] 29-02-2024 17:15:52.977 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@47fa3671
[DEBUG] 29-02-2024 17:15:52.978 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@47fa3671
[DEBUG] 29-02-2024 17:15:52.978 [main] BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@60f662bd
[DEBUG] 29-02-2024 17:15:52.979 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@60f662bd
[DEBUG] 29-02-2024 17:15:52.980 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@5df2023c
[DEBUG] 29-02-2024 17:15:52.980 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@23bd047f
[DEBUG] 29-02-2024 17:15:52.981 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@23bd047f
[DEBUG] 29-02-2024 17:15:52.982 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@3562e7c7
[DEBUG] 29-02-2024 17:15:52.982 [main] BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@66d2885c
[DEBUG] 29-02-2024 17:15:52.983 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@2bfc8558
[DEBUG] 29-02-2024 17:15:52.983 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@2bfc8558
[DEBUG] 29-02-2024 17:15:52.984 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@2bfc8558
[DEBUG] 29-02-2024 17:15:52.985 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@6029f2a4
[DEBUG] 29-02-2024 17:15:52.986 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@6029f2a4
[DEBUG] 29-02-2024 17:15:52.987 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@6029f2a4
[DEBUG] 29-02-2024 17:15:52.987 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@42576db9
[DEBUG] 29-02-2024 17:15:52.988 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@42576db9
[DEBUG] 29-02-2024 17:15:52.988 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@42576db9
[DEBUG] 29-02-2024 17:15:52.989 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@30358dc7
[DEBUG] 29-02-2024 17:15:52.990 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@30358dc7
[DEBUG] 29-02-2024 17:15:52.990 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@30358dc7
[DEBUG] 29-02-2024 17:15:52.991 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@7fac18dc
[DEBUG] 29-02-2024 17:15:52.991 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@7fac18dc
[DEBUG] 29-02-2024 17:15:52.992 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@7fac18dc
[DEBUG] 29-02-2024 17:15:52.993 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@50bf795f
[DEBUG] 29-02-2024 17:15:52.993 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@50bf795f
[DEBUG] 29-02-2024 17:15:52.994 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@29fcfc54
[DEBUG] 29-02-2024 17:15:52.995 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@29fcfc54
[DEBUG] 29-02-2024 17:15:52.995 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@353b0719
[DEBUG] 29-02-2024 17:15:52.996 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@353b0719
[DEBUG] 29-02-2024 17:15:52.997 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@353b0719
[DEBUG] 29-02-2024 17:15:52.997 [main] BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@2a4e939a
[DEBUG] 29-02-2024 17:15:52.998 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@110620d
[DEBUG] 29-02-2024 17:15:52.999 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@110620d
[DEBUG] 29-02-2024 17:15:52.999 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@4f402027
[DEBUG] 29-02-2024 17:15:53.017 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@22aee519
[DEBUG] 29-02-2024 17:15:53.018 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@22aee519
[DEBUG] 29-02-2024 17:15:53.019 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@22aee519
[DEBUG] 29-02-2024 17:15:53.019 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@7c226095
[DEBUG] 29-02-2024 17:15:53.023 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@7ea07516
[DEBUG] 29-02-2024 17:15:53.023 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@30af23fd
[DEBUG] 29-02-2024 17:15:53.024 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@65fc8edc
[DEBUG] 29-02-2024 17:15:53.024 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@65fc8edc
[DEBUG] 29-02-2024 17:15:53.025 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@a357c3e
[DEBUG] 29-02-2024 17:15:53.026 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@a357c3e
[DEBUG] 29-02-2024 17:15:53.027 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@7740b0ab
[DEBUG] 29-02-2024 17:15:53.028 [main] BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@3eb9c575
[DEBUG] 29-02-2024 17:15:53.029 [main] BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@3f322610
[DEBUG] 29-02-2024 17:15:53.030 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@1e477944
[DEBUG] 29-02-2024 17:15:53.031 [main] BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@6cf047cf
[DEBUG] 29-02-2024 17:15:53.032 [main] BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@1c92a549
[DEBUG] 29-02-2024 17:15:53.050 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@323e026d
[DEBUG] 29-02-2024 17:15:53.050 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@323e026d
[DEBUG] 29-02-2024 17:15:53.051 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@1716c037
[DEBUG] 29-02-2024 17:15:53.052 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@1716c037
[DEBUG] 29-02-2024 17:15:53.052 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@79b63325
[DEBUG] 29-02-2024 17:15:53.053 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@79b63325
[DEBUG] 29-02-2024 17:15:53.054 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@708769b7
[DEBUG] 29-02-2024 17:15:53.054 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@708769b7
[DEBUG] 29-02-2024 17:15:53.055 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@32e830a0
[DEBUG] 29-02-2024 17:15:53.056 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@32e830a0
[DEBUG] 29-02-2024 17:15:53.056 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@135e49b2
[DEBUG] 29-02-2024 17:15:53.057 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@5bb97fe7
[DEBUG] 29-02-2024 17:15:53.058 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@10b87ff6
[DEBUG] 29-02-2024 17:15:53.058 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@10b87ff6
[DEBUG] 29-02-2024 17:15:53.059 [main] BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@63262071
[DEBUG] 29-02-2024 17:15:53.060 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2d4f67e
[DEBUG] 29-02-2024 17:15:53.060 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@1282f784
[DEBUG] 29-02-2024 17:15:53.067 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@41167ded
[DEBUG] 29-02-2024 17:15:53.069 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@41167ded
[DEBUG] 29-02-2024 17:15:53.069 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@13e1e816
[DEBUG] 29-02-2024 17:15:53.070 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@36238b12
[DEBUG] 29-02-2024 17:15:53.071 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@33187485
[DEBUG] 29-02-2024 17:15:53.071 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@33187485
[DEBUG] 29-02-2024 17:15:53.072 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@41938e1e
[DEBUG] 29-02-2024 17:15:53.073 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@41938e1e
[DEBUG] 29-02-2024 17:15:53.074 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@5d2e6f62
[DEBUG] 29-02-2024 17:15:53.075 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@5d2e6f62
[DEBUG] 29-02-2024 17:15:53.076 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@5d2e6f62
[DEBUG] 29-02-2024 17:15:53.077 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@77ff14ce
[DEBUG] 29-02-2024 17:15:53.077 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@77ff14ce
[DEBUG] 29-02-2024 17:15:53.078 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@77ff14ce
[DEBUG] 29-02-2024 17:15:53.079 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@733fae8
[DEBUG] 29-02-2024 17:15:53.080 [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@5a8d676e
[DEBUG] 29-02-2024 17:15:53.080 [main] BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@74764622
[DEBUG] 29-02-2024 17:15:53.081 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@74764622
[DEBUG] 29-02-2024 17:15:53.082 [main] BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@7ba06506
[DEBUG] 29-02-2024 17:15:53.083 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@7ba06506
[DEBUG] 29-02-2024 17:15:53.084 [main] BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@7ba06506
[DEBUG] 29-02-2024 17:15:53.084 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@63dc3420
[DEBUG] 29-02-2024 17:15:53.085 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@525b8922
[DEBUG] 29-02-2024 17:15:53.085 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@145a821d
[DEBUG] 29-02-2024 17:15:53.086 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@145a821d
[DEBUG] 29-02-2024 17:15:53.086 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@6caa4dc5
[DEBUG] 29-02-2024 17:15:53.087 [main] BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@6caa4dc5
[DEBUG] 29-02-2024 17:15:53.087 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@6caa4dc5
[DEBUG] 29-02-2024 17:15:53.088 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@6ed51944
[DEBUG] 29-02-2024 17:15:53.088 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@6ed51944
[DEBUG] 29-02-2024 17:15:53.090 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@60c98f25
[DEBUG] 29-02-2024 17:15:53.090 [main] BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@60c98f25
[DEBUG] 29-02-2024 17:15:53.091 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@20c3b34b
[DEBUG] 29-02-2024 17:15:53.092 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@20c3b34b
[DEBUG] 29-02-2024 17:15:53.092 [main] BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@1eb906f3
[DEBUG] 29-02-2024 17:15:53.093 [main] BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@1eb906f3
[DEBUG] 29-02-2024 17:15:53.094 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@58e02359
[DEBUG] 29-02-2024 17:15:53.094 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@58e02359
[DEBUG] 29-02-2024 17:15:53.117 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@74fc3fc7
[DEBUG] 29-02-2024 17:15:53.144 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@29d3d0fb
[DEBUG] 29-02-2024 17:15:53.146 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@29d3d0fb
[DEBUG] 29-02-2024 17:15:53.150 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@278de2b2
[DEBUG] 29-02-2024 17:15:53.151 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@1fc1c7e
[DEBUG] 29-02-2024 17:15:53.151 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@75cacb3e
[DEBUG] 29-02-2024 17:15:53.152 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@61957d9c
[DEBUG] 29-02-2024 17:15:53.152 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@29c59b6e
[DEBUG] 29-02-2024 17:15:53.152 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@483b7dc4
[DEBUG] 29-02-2024 17:15:53.153 [main] BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@6b8bdcc6
[DEBUG] 29-02-2024 17:15:53.154 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@213835b6
[DEBUG] 29-02-2024 17:15:53.154 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@24a3d414
[DEBUG] 29-02-2024 17:15:54.756 [main] DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1b632442) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7227926b)
[DEBUG] 29-02-2024 17:15:54.762 [main] JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
[DEBUG] 29-02-2024 17:15:54.763 [main] JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 29-02-2024 17:15:54.788 [main] BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@3f4964f2
[DEBUG] 29-02-2024 17:15:54.789 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@3f4964f2
[DEBUG] 29-02-2024 17:15:54.789 [main] BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@29d3d0fb`
[DEBUG] 29-02-2024 17:15:54.794 [main] JdbcTypeRegistry - addDescriptor(3100, NumericTypeDescriptor) replaced previous registration(org.hibernate.dialect.PostgreSQLIntervalSecondJdbcType@2374452a)
[DEBUG] 29-02-2024 17:15:54.812 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 29-02-2024 17:15:54.813 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 29-02-2024 17:15:54.814 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 29-02-2024 17:15:54.814 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 29-02-2024 17:15:54.815 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 29-02-2024 17:15:54.815 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 29-02-2024 17:15:54.817 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 29-02-2024 17:15:54.818 [main] BasicTypeRegistry - Adding type registration OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 29-02-2024 17:15:54.818 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 29-02-2024 17:15:54.823 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3e2772a9] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@4449b273]
[WARN ] 29-02-2024 17:15:55.324 [main] InFlightMetadataCollectorImpl - HHH000069: Duplicate generator name generator
[INFO ] 29-02-2024 17:15:55.530 [main] BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
[INFO ] 29-02-2024 17:15:57.652 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 29-02-2024 17:15:57.654 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3e2772a9] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@1cf4d454]
[TRACE] 29-02-2024 17:15:57.663 [main] TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@1cf4d454] for TypeConfiguration
[INFO ] 29-02-2024 17:15:59.692 [main] SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
[INFO ] 29-02-2024 17:15:59.693 [main] TestDispatcherServlet - Initializing Servlet ''
[INFO ] 29-02-2024 17:15:59.701 [main] TestDispatcherServlet - Completed initialization in 3 ms
[INFO ] 29-02-2024 17:16:00.154 [main] TestCRUDUserProducts - Started TestCRUDUserProducts in 14.217 seconds (process running for 18.084)
[TRACE] 29-02-2024 17:16:01.165 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@1cf4d454] for TypeConfiguration
[DEBUG] 29-02-2024 17:16:01.169 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@1d895532] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@1cf4d454]
[INFO ] 29-02-2024 17:37:39.944 [background-preinit] Version - HV000001: Hibernate Validator 8.0.1.Final
[INFO ] 29-02-2024 17:37:40.029 [main] TestSpringBootApplication - Starting TestSpringBootApplication using Java 17.0.10 with PID 1791470 (/home/dima/backend_microservice/UserProductsMicroService/target/classes started by dima in /home/dima/backend_microservice/UserProductsMicroService)
[INFO ] 29-02-2024 17:37:40.047 [main] TestSpringBootApplication - No active profile set, falling back to 1 default profile: "default"
[INFO ] 29-02-2024 17:37:42.007 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO ] 29-02-2024 17:37:42.452 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 422 ms. Found 1 JPA repository interfaces.
[ERROR] 29-02-2024 17:37:44.743 [main] AprLifecycleListener - An incompatible version [1.2.23] of the Apache Tomcat Native library is installed, while Tomcat requires version [1.2.34]
[INFO ] 29-02-2024 17:37:45.831 [main] TomcatWebServer - Tomcat initialized with port(s): 8300 (http)
[INFO ] 29-02-2024 17:37:45.856 [main] Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8300"]
[INFO ] 29-02-2024 17:37:45.863 [main] StandardService - Starting service [Tomcat]
[INFO ] 29-02-2024 17:37:45.866 [main] StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.11]
[INFO ] 29-02-2024 17:37:47.030 [main] TldScanner - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
[INFO ] 29-02-2024 17:37:47.053 [main] [/users_products_api] - Initializing Spring embedded WebApplicationContext
[INFO ] 29-02-2024 17:37:47.072 [main] ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 6825 ms
[INFO ] 29-02-2024 17:37:47.556 [main] Version - HHH000412: Hibernate ORM core version 6.2.6.Final
[INFO ] 29-02-2024 17:37:47.563 [main] Environment - HHH000406: Using bytecode reflection optimizer
[DEBUG] 29-02-2024 17:37:47.924 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@23b1aa9
[DEBUG] 29-02-2024 17:37:47.925 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@23b1aa9
[DEBUG] 29-02-2024 17:37:47.926 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@23b1aa9
[DEBUG] 29-02-2024 17:37:47.927 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@54489296
[DEBUG] 29-02-2024 17:37:47.927 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@54489296
[DEBUG] 29-02-2024 17:37:47.928 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@4e8598d9
[DEBUG] 29-02-2024 17:37:47.929 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@4e8598d9
[DEBUG] 29-02-2024 17:37:47.930 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@267ff4df
[DEBUG] 29-02-2024 17:37:47.930 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@267ff4df
[DEBUG] 29-02-2024 17:37:47.931 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@7c4b5ceb
[DEBUG] 29-02-2024 17:37:47.931 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@7c4b5ceb
[DEBUG] 29-02-2024 17:37:47.932 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@7c4b5ceb
[DEBUG] 29-02-2024 17:37:47.932 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@6c07add6
[DEBUG] 29-02-2024 17:37:47.933 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@6c07add6
[DEBUG] 29-02-2024 17:37:47.933 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@6c07add6
[DEBUG] 29-02-2024 17:37:47.934 [main] BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@e26a3df
[DEBUG] 29-02-2024 17:37:47.934 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@e26a3df
[DEBUG] 29-02-2024 17:37:47.935 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@57a667c8
[DEBUG] 29-02-2024 17:37:47.936 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@712cd5d3
[DEBUG] 29-02-2024 17:37:47.936 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@712cd5d3
[DEBUG] 29-02-2024 17:37:47.937 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@2094bf3d
[DEBUG] 29-02-2024 17:37:47.937 [main] BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@1b17d8ab
[DEBUG] 29-02-2024 17:37:47.938 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@7f6b7426
[DEBUG] 29-02-2024 17:37:47.938 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@7f6b7426
[DEBUG] 29-02-2024 17:37:47.939 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@7f6b7426
[DEBUG] 29-02-2024 17:37:47.939 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@687eb455
[DEBUG] 29-02-2024 17:37:47.940 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@687eb455
[DEBUG] 29-02-2024 17:37:47.941 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@687eb455
[DEBUG] 29-02-2024 17:37:47.942 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@6d969330
[DEBUG] 29-02-2024 17:37:47.942 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@6d969330
[DEBUG] 29-02-2024 17:37:47.943 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@6d969330
[DEBUG] 29-02-2024 17:37:47.943 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@4861cca9
[DEBUG] 29-02-2024 17:37:47.944 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@4861cca9
[DEBUG] 29-02-2024 17:37:47.944 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@4861cca9
[DEBUG] 29-02-2024 17:37:47.945 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@6c8f4bc7
[DEBUG] 29-02-2024 17:37:47.945 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@6c8f4bc7
[DEBUG] 29-02-2024 17:37:47.946 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@6c8f4bc7
[DEBUG] 29-02-2024 17:37:47.946 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@714e861f
[DEBUG] 29-02-2024 17:37:47.947 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@714e861f
[DEBUG] 29-02-2024 17:37:47.947 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@28989415
[DEBUG] 29-02-2024 17:37:47.948 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@28989415
[DEBUG] 29-02-2024 17:37:47.948 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@6eda012b
[DEBUG] 29-02-2024 17:37:47.949 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@6eda012b
[DEBUG] 29-02-2024 17:37:47.949 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@6eda012b
[DEBUG] 29-02-2024 17:37:47.950 [main] BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@781dbe44
[DEBUG] 29-02-2024 17:37:47.950 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@7d66a126
[DEBUG] 29-02-2024 17:37:47.951 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@7d66a126
[DEBUG] 29-02-2024 17:37:47.951 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@1132baa3
[DEBUG] 29-02-2024 17:37:47.952 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@2fdf22f7
[DEBUG] 29-02-2024 17:37:47.953 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@2fdf22f7
[DEBUG] 29-02-2024 17:37:47.953 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@2fdf22f7
[DEBUG] 29-02-2024 17:37:47.954 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@3a2546d6
[DEBUG] 29-02-2024 17:37:47.954 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@7282af25
[DEBUG] 29-02-2024 17:37:47.955 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@7661e474
[DEBUG] 29-02-2024 17:37:47.955 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@20ffb8d5
[DEBUG] 29-02-2024 17:37:47.956 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@20ffb8d5
[DEBUG] 29-02-2024 17:37:47.956 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@307c59ea
[DEBUG] 29-02-2024 17:37:47.957 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@307c59ea
[DEBUG] 29-02-2024 17:37:47.957 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@57e03347
[DEBUG] 29-02-2024 17:37:47.958 [main] BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@2edb2f8b
[DEBUG] 29-02-2024 17:37:47.958 [main] BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@733f1395
[DEBUG] 29-02-2024 17:37:47.959 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@21dea711
[DEBUG] 29-02-2024 17:37:47.959 [main] BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@7772d266
[DEBUG] 29-02-2024 17:37:47.960 [main] BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@a21c74
[DEBUG] 29-02-2024 17:37:47.960 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@b8a144e
[DEBUG] 29-02-2024 17:37:47.961 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@b8a144e
[DEBUG] 29-02-2024 17:37:47.962 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@5fb8dc01
[DEBUG] 29-02-2024 17:37:47.962 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@5fb8dc01
[DEBUG] 29-02-2024 17:37:47.963 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@3e38c472
[DEBUG] 29-02-2024 17:37:47.963 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@3e38c472
[DEBUG] 29-02-2024 17:37:47.963 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@2ee92e7d
[DEBUG] 29-02-2024 17:37:47.964 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@2ee92e7d
[DEBUG] 29-02-2024 17:37:47.965 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@759a678a
[DEBUG] 29-02-2024 17:37:47.965 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@759a678a
[DEBUG] 29-02-2024 17:37:47.966 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@6cdbe5ec
[DEBUG] 29-02-2024 17:37:47.966 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@14b8a751
[DEBUG] 29-02-2024 17:37:47.967 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@7345f97d
[DEBUG] 29-02-2024 17:37:47.967 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@7345f97d
[DEBUG] 29-02-2024 17:37:47.968 [main] BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@554566a8
[DEBUG] 29-02-2024 17:37:47.969 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@66020d69
[DEBUG] 29-02-2024 17:37:47.969 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3751acd7
[DEBUG] 29-02-2024 17:37:47.970 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@6b832551
[DEBUG] 29-02-2024 17:37:47.971 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@6b832551
[DEBUG] 29-02-2024 17:37:47.971 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@150d6eaf
[DEBUG] 29-02-2024 17:37:47.972 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@63124022
[DEBUG] 29-02-2024 17:37:47.972 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@591f6f83
[DEBUG] 29-02-2024 17:37:47.973 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@591f6f83
[DEBUG] 29-02-2024 17:37:47.973 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@2b44605c
[DEBUG] 29-02-2024 17:37:47.974 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@2b44605c
[DEBUG] 29-02-2024 17:37:47.974 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@55421b8d
[DEBUG] 29-02-2024 17:37:47.975 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@55421b8d
[DEBUG] 29-02-2024 17:37:47.975 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@55421b8d
[DEBUG] 29-02-2024 17:37:47.976 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@24a04257
[DEBUG] 29-02-2024 17:37:47.976 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@24a04257
[DEBUG] 29-02-2024 17:37:47.977 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@24a04257
[DEBUG] 29-02-2024 17:37:47.977 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@6615237
[DEBUG] 29-02-2024 17:37:47.978 [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@eaf8427
[DEBUG] 29-02-2024 17:37:47.978 [main] BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@4bf4680c
[DEBUG] 29-02-2024 17:37:47.979 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@4bf4680c
[DEBUG] 29-02-2024 17:37:47.979 [main] BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@6d6039df
[DEBUG] 29-02-2024 17:37:47.980 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@6d6039df
[DEBUG] 29-02-2024 17:37:47.982 [main] BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@6d6039df
[DEBUG] 29-02-2024 17:37:47.982 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@611c3eae
[DEBUG] 29-02-2024 17:37:47.983 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@13e00016
[DEBUG] 29-02-2024 17:37:47.983 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@7b3cbe6e
[DEBUG] 29-02-2024 17:37:47.984 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@7b3cbe6e
[DEBUG] 29-02-2024 17:37:47.984 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@177ede17
[DEBUG] 29-02-2024 17:37:47.985 [main] BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@177ede17
[DEBUG] 29-02-2024 17:37:47.985 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@177ede17
[DEBUG] 29-02-2024 17:37:47.986 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@17176b18
[DEBUG] 29-02-2024 17:37:47.986 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@17176b18
[DEBUG] 29-02-2024 17:37:47.987 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@4e4395c
[DEBUG] 29-02-2024 17:37:47.990 [main] BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@4e4395c
[DEBUG] 29-02-2024 17:37:47.993 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@1ab53860
[DEBUG] 29-02-2024 17:37:47.994 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@1ab53860
[DEBUG] 29-02-2024 17:37:47.995 [main] BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@7b5ac347
[DEBUG] 29-02-2024 17:37:47.995 [main] BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@7b5ac347
[DEBUG] 29-02-2024 17:37:47.995 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@57b9389f
[DEBUG] 29-02-2024 17:37:47.996 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@57b9389f
[DEBUG] 29-02-2024 17:37:47.996 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@72b2c5ed
[DEBUG] 29-02-2024 17:37:48.011 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@179ee36b
[DEBUG] 29-02-2024 17:37:48.012 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@179ee36b
[DEBUG] 29-02-2024 17:37:48.015 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@36551e97
[DEBUG] 29-02-2024 17:37:48.016 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@685d7ba5
[DEBUG] 29-02-2024 17:37:48.017 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@16d41725
[DEBUG] 29-02-2024 17:37:48.017 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@3b6c2be6
[DEBUG] 29-02-2024 17:37:48.018 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@25533bba
[DEBUG] 29-02-2024 17:37:48.018 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@26d0ece6
[DEBUG] 29-02-2024 17:37:48.019 [main] BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@100bba26
[DEBUG] 29-02-2024 17:37:48.020 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@4ae280da
[DEBUG] 29-02-2024 17:37:48.020 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@76d0ecd7
[DEBUG] 29-02-2024 17:37:49.421 [main] DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@8ac512e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4bbc21bd)
[DEBUG] 29-02-2024 17:37:49.426 [main] JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
[DEBUG] 29-02-2024 17:37:49.427 [main] JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 29-02-2024 17:37:49.485 [main] BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@4ad1a276
[DEBUG] 29-02-2024 17:37:49.485 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@4ad1a276
[DEBUG] 29-02-2024 17:37:49.486 [main] BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@179ee36b`
[DEBUG] 29-02-2024 17:37:49.488 [main] JdbcTypeRegistry - addDescriptor(3100, NumericTypeDescriptor) replaced previous registration(org.hibernate.dialect.PostgreSQLIntervalSecondJdbcType@5d6b42cf)
[DEBUG] 29-02-2024 17:37:49.508 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 29-02-2024 17:37:49.508 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 29-02-2024 17:37:49.510 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 29-02-2024 17:37:49.510 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 29-02-2024 17:37:49.510 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 29-02-2024 17:37:49.511 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 29-02-2024 17:37:49.513 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 29-02-2024 17:37:49.514 [main] BasicTypeRegistry - Adding type registration OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 29-02-2024 17:37:49.515 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 29-02-2024 17:37:49.519 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@70d5d96b] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@23469199]
[WARN ] 29-02-2024 17:37:49.975 [main] InFlightMetadataCollectorImpl - HHH000069: Duplicate generator name generator
[INFO ] 29-02-2024 17:37:50.151 [main] BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
[INFO ] 29-02-2024 17:37:52.840 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 29-02-2024 17:37:52.841 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@70d5d96b] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@7b4c793b]
[TRACE] 29-02-2024 17:37:52.849 [main] TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@7b4c793b] for TypeConfiguration
[WARN ] 29-02-2024 17:37:54.244 [main] JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[INFO ] 29-02-2024 17:37:55.090 [main] Http11NioProtocol - Starting ProtocolHandler ["http-nio-8300"]
[INFO ] 29-02-2024 17:37:55.214 [main] TomcatWebServer - Tomcat started on port(s): 8300 (http) with context path '/users_products_api'
[INFO ] 29-02-2024 17:37:55.255 [main] TestSpringBootApplication - Started TestSpringBootApplication in 16.419 seconds (process running for 19.461)
[INFO ] 29-02-2024 17:38:06.040 [http-nio-8300-exec-2] [/users_products_api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[INFO ] 29-02-2024 17:38:06.041 [http-nio-8300-exec-2] DispatcherServlet - Initializing Servlet 'dispatcherServlet'
[INFO ] 29-02-2024 17:38:06.044 [http-nio-8300-exec-2] DispatcherServlet - Completed initialization in 2 ms
[DEBUG] 29-02-2024 17:38:06.453 [http-nio-8300-exec-2] SQL - select e1_0.id,e1_0.email,e1_0.login,e1_0.name,e1_0.password,p1_0.id_user,p1_0.id,p1_0.name,p1_0.page_image,p1_0.price,p1_0.raiting,p1_0.year_issue from users e1_0 left join products p1_0 on e1_0.id=p1_0.id_user where e1_0.id=?
[TRACE] 01-03-2024 15:03:32.245 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@7b4c793b] for TypeConfiguration
[DEBUG] 01-03-2024 15:03:32.250 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@506f890] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@7b4c793b]
[INFO ] 01-03-2024 15:03:50.603 [background-preinit] Version - HV000001: Hibernate Validator 8.0.1.Final
[INFO ] 01-03-2024 15:03:50.768 [main] TestSpringBootApplication - Starting TestSpringBootApplication using Java 17.0.10 with PID 1995740 (/home/dima/backend_microservice/UserProductsMicroService/target/classes started by dima in /home/dima/backend_microservice/UserProductsMicroService)
[INFO ] 01-03-2024 15:03:50.787 [main] TestSpringBootApplication - No active profile set, falling back to 1 default profile: "default"
[INFO ] 01-03-2024 15:03:52.845 [main] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
[INFO ] 01-03-2024 15:03:52.846 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[ERROR] 01-03-2024 15:03:53.503 [main] SpringApplication - Application run failed
org.springframework.dao.InvalidDataAccessApiUsageException: Reactive Repositories are not supported by JPA; Offending repository is repository.CustomizedUserProductsCrudRepository
	at org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.useRepositoryConfiguration(RepositoryConfigurationExtensionSupport.java:339) ~[spring-data-commons-3.1.2.jar:3.1.2]
	at org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.getRepositoryConfigurations(RepositoryConfigurationExtensionSupport.java:96) ~[spring-data-commons-3.1.2.jar:3.1.2]
	at org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:163) ~[spring-data-commons-3.1.2.jar:3.1.2]
	at org.springframework.data.repository.config.RepositoryBeanDefinitionRegistrarSupport.registerBeanDefinitions(RepositoryBeanDefinitionRegistrarSupport.java:94) ~[spring-data-commons-3.1.2.jar:3.1.2]
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.lambda$loadBeanDefinitionsFromRegistrars$1(ConfigurationClassBeanDefinitionReader.java:373) ~[spring-context-6.0.11.jar:6.0.11]
	at java.util.LinkedHashMap.forEach(LinkedHashMap.java:721) ~[?:?]
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsFromRegistrars(ConfigurationClassBeanDefinitionReader.java:372) ~[spring-context-6.0.11.jar:6.0.11]
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsForConfigurationClass(ConfigurationClassBeanDefinitionReader.java:148) ~[spring-context-6.0.11.jar:6.0.11]
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitions(ConfigurationClassBeanDefinitionReader.java:120) ~[spring-context-6.0.11.jar:6.0.11]
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.processConfigBeanDefinitions(ConfigurationClassPostProcessor.java:427) ~[spring-context-6.0.11.jar:6.0.11]
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.postProcessBeanDefinitionRegistry(ConfigurationClassPostProcessor.java:287) ~[spring-context-6.0.11.jar:6.0.11]
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanDefinitionRegistryPostProcessors(PostProcessorRegistrationDelegate.java:344) ~[spring-context-6.0.11.jar:6.0.11]
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:115) ~[spring-context-6.0.11.jar:6.0.11]
	at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:771) ~[spring-context-6.0.11.jar:6.0.11]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:589) ~[spring-context-6.0.11.jar:6.0.11]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146) ~[spring-boot-3.1.2.jar:3.1.2]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734) [spring-boot-3.1.2.jar:3.1.2]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:436) [spring-boot-3.1.2.jar:3.1.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312) [spring-boot-3.1.2.jar:3.1.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306) [spring-boot-3.1.2.jar:3.1.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295) [spring-boot-3.1.2.jar:3.1.2]
	at App.TestSpringBootApplication.main(TestSpringBootApplication.java:30) [classes/:?]
[INFO ] 01-03-2024 15:08:44.918 [background-preinit] Version - HV000001: Hibernate Validator 8.0.1.Final
[INFO ] 01-03-2024 15:08:45.216 [main] TestSpringBootApplication - Starting TestSpringBootApplication using Java 17.0.10 with PID 1998305 (/home/dima/backend_microservice/UserProductsMicroService/target/classes started by dima in /home/dima/backend_microservice/UserProductsMicroService)
[INFO ] 01-03-2024 15:08:45.228 [main] TestSpringBootApplication - No active profile set, falling back to 1 default profile: "default"
[INFO ] 01-03-2024 15:08:47.385 [main] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
[INFO ] 01-03-2024 15:08:47.386 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[ERROR] 01-03-2024 15:08:47.892 [main] SpringApplication - Application run failed
org.springframework.dao.InvalidDataAccessApiUsageException: Reactive Repositories are not supported by JPA; Offending repository is repository.CustomizedUserProductsCrudRepository
	at org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.useRepositoryConfiguration(RepositoryConfigurationExtensionSupport.java:339) ~[spring-data-commons-3.1.2.jar:3.1.2]
	at org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.getRepositoryConfigurations(RepositoryConfigurationExtensionSupport.java:96) ~[spring-data-commons-3.1.2.jar:3.1.2]
	at org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:163) ~[spring-data-commons-3.1.2.jar:3.1.2]
	at org.springframework.data.repository.config.RepositoryBeanDefinitionRegistrarSupport.registerBeanDefinitions(RepositoryBeanDefinitionRegistrarSupport.java:94) ~[spring-data-commons-3.1.2.jar:3.1.2]
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.lambda$loadBeanDefinitionsFromRegistrars$1(ConfigurationClassBeanDefinitionReader.java:373) ~[spring-context-6.0.11.jar:6.0.11]
	at java.util.LinkedHashMap.forEach(LinkedHashMap.java:721) ~[?:?]
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsFromRegistrars(ConfigurationClassBeanDefinitionReader.java:372) ~[spring-context-6.0.11.jar:6.0.11]
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsForConfigurationClass(ConfigurationClassBeanDefinitionReader.java:148) ~[spring-context-6.0.11.jar:6.0.11]
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitions(ConfigurationClassBeanDefinitionReader.java:120) ~[spring-context-6.0.11.jar:6.0.11]
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.processConfigBeanDefinitions(ConfigurationClassPostProcessor.java:427) ~[spring-context-6.0.11.jar:6.0.11]
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.postProcessBeanDefinitionRegistry(ConfigurationClassPostProcessor.java:287) ~[spring-context-6.0.11.jar:6.0.11]
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanDefinitionRegistryPostProcessors(PostProcessorRegistrationDelegate.java:344) ~[spring-context-6.0.11.jar:6.0.11]
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:115) ~[spring-context-6.0.11.jar:6.0.11]
	at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:771) ~[spring-context-6.0.11.jar:6.0.11]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:589) ~[spring-context-6.0.11.jar:6.0.11]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146) ~[spring-boot-3.1.2.jar:3.1.2]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734) [spring-boot-3.1.2.jar:3.1.2]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:436) [spring-boot-3.1.2.jar:3.1.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312) [spring-boot-3.1.2.jar:3.1.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306) [spring-boot-3.1.2.jar:3.1.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295) [spring-boot-3.1.2.jar:3.1.2]
	at App.TestSpringBootApplication.main(TestSpringBootApplication.java:30) [classes/:?]
[INFO ] 01-03-2024 15:29:52.915 [background-preinit] Version - HV000001: Hibernate Validator 8.0.1.Final
[INFO ] 01-03-2024 15:29:52.973 [main] TestSpringBootApplication - Starting TestSpringBootApplication using Java 17.0.10 with PID 2009028 (/home/dima/backend_microservice/UserProductsMicroService/target/classes started by dima in /home/dima/backend_microservice/UserProductsMicroService)
[INFO ] 01-03-2024 15:29:52.984 [main] TestSpringBootApplication - No active profile set, falling back to 1 default profile: "default"
[INFO ] 01-03-2024 15:29:55.253 [main] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
[INFO ] 01-03-2024 15:29:55.254 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[ERROR] 01-03-2024 15:29:55.808 [main] SpringApplication - Application run failed
org.springframework.dao.InvalidDataAccessApiUsageException: Reactive Repositories are not supported by JPA; Offending repository is repository.CustomizedUserProductsCrudRepository
	at org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.useRepositoryConfiguration(RepositoryConfigurationExtensionSupport.java:339) ~[spring-data-commons-3.1.2.jar:3.1.2]
	at org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.getRepositoryConfigurations(RepositoryConfigurationExtensionSupport.java:96) ~[spring-data-commons-3.1.2.jar:3.1.2]
	at org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:163) ~[spring-data-commons-3.1.2.jar:3.1.2]
	at org.springframework.data.repository.config.RepositoryBeanDefinitionRegistrarSupport.registerBeanDefinitions(RepositoryBeanDefinitionRegistrarSupport.java:94) ~[spring-data-commons-3.1.2.jar:3.1.2]
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.lambda$loadBeanDefinitionsFromRegistrars$1(ConfigurationClassBeanDefinitionReader.java:373) ~[spring-context-6.0.11.jar:6.0.11]
	at java.util.LinkedHashMap.forEach(LinkedHashMap.java:721) ~[?:?]
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsFromRegistrars(ConfigurationClassBeanDefinitionReader.java:372) ~[spring-context-6.0.11.jar:6.0.11]
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsForConfigurationClass(ConfigurationClassBeanDefinitionReader.java:148) ~[spring-context-6.0.11.jar:6.0.11]
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitions(ConfigurationClassBeanDefinitionReader.java:120) ~[spring-context-6.0.11.jar:6.0.11]
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.processConfigBeanDefinitions(ConfigurationClassPostProcessor.java:427) ~[spring-context-6.0.11.jar:6.0.11]
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.postProcessBeanDefinitionRegistry(ConfigurationClassPostProcessor.java:287) ~[spring-context-6.0.11.jar:6.0.11]
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanDefinitionRegistryPostProcessors(PostProcessorRegistrationDelegate.java:344) ~[spring-context-6.0.11.jar:6.0.11]
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:115) ~[spring-context-6.0.11.jar:6.0.11]
	at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:771) ~[spring-context-6.0.11.jar:6.0.11]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:589) ~[spring-context-6.0.11.jar:6.0.11]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146) ~[spring-boot-3.1.2.jar:3.1.2]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734) [spring-boot-3.1.2.jar:3.1.2]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:436) [spring-boot-3.1.2.jar:3.1.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312) [spring-boot-3.1.2.jar:3.1.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306) [spring-boot-3.1.2.jar:3.1.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295) [spring-boot-3.1.2.jar:3.1.2]
	at App.TestSpringBootApplication.main(TestSpringBootApplication.java:30) [classes/:?]
[INFO ] 01-03-2024 15:31:57.199 [background-preinit] Version - HV000001: Hibernate Validator 8.0.1.Final
[INFO ] 01-03-2024 15:31:57.287 [main] TestSpringBootApplication - Starting TestSpringBootApplication using Java 17.0.10 with PID 2010185 (/home/dima/backend_microservice/UserProductsMicroService/target/classes started by dima in /home/dima/backend_microservice/UserProductsMicroService)
[INFO ] 01-03-2024 15:31:57.303 [main] TestSpringBootApplication - No active profile set, falling back to 1 default profile: "default"
[INFO ] 01-03-2024 15:31:59.472 [main] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
[INFO ] 01-03-2024 15:31:59.472 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[ERROR] 01-03-2024 15:32:00.491 [main] SpringApplication - Application run failed
org.springframework.dao.InvalidDataAccessApiUsageException: Reactive Repositories are not supported by JPA; Offending repository is repository.CustomizedUserProductsCrudRepository
	at org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.useRepositoryConfiguration(RepositoryConfigurationExtensionSupport.java:339) ~[spring-data-commons-3.1.2.jar:3.1.2]
	at org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.getRepositoryConfigurations(RepositoryConfigurationExtensionSupport.java:96) ~[spring-data-commons-3.1.2.jar:3.1.2]
	at org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:163) ~[spring-data-commons-3.1.2.jar:3.1.2]
	at org.springframework.data.repository.config.RepositoryBeanDefinitionRegistrarSupport.registerBeanDefinitions(RepositoryBeanDefinitionRegistrarSupport.java:94) ~[spring-data-commons-3.1.2.jar:3.1.2]
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.lambda$loadBeanDefinitionsFromRegistrars$1(ConfigurationClassBeanDefinitionReader.java:373) ~[spring-context-6.0.11.jar:6.0.11]
	at java.util.LinkedHashMap.forEach(LinkedHashMap.java:721) ~[?:?]
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsFromRegistrars(ConfigurationClassBeanDefinitionReader.java:372) ~[spring-context-6.0.11.jar:6.0.11]
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsForConfigurationClass(ConfigurationClassBeanDefinitionReader.java:148) ~[spring-context-6.0.11.jar:6.0.11]
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitions(ConfigurationClassBeanDefinitionReader.java:120) ~[spring-context-6.0.11.jar:6.0.11]
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.processConfigBeanDefinitions(ConfigurationClassPostProcessor.java:427) ~[spring-context-6.0.11.jar:6.0.11]
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.postProcessBeanDefinitionRegistry(ConfigurationClassPostProcessor.java:287) ~[spring-context-6.0.11.jar:6.0.11]
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanDefinitionRegistryPostProcessors(PostProcessorRegistrationDelegate.java:344) ~[spring-context-6.0.11.jar:6.0.11]
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:115) ~[spring-context-6.0.11.jar:6.0.11]
	at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:771) ~[spring-context-6.0.11.jar:6.0.11]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:589) ~[spring-context-6.0.11.jar:6.0.11]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146) ~[spring-boot-3.1.2.jar:3.1.2]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734) [spring-boot-3.1.2.jar:3.1.2]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:436) [spring-boot-3.1.2.jar:3.1.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312) [spring-boot-3.1.2.jar:3.1.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306) [spring-boot-3.1.2.jar:3.1.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295) [spring-boot-3.1.2.jar:3.1.2]
	at App.TestSpringBootApplication.main(TestSpringBootApplication.java:30) [classes/:?]
[INFO ] 01-03-2024 15:34:04.677 [background-preinit] Version - HV000001: Hibernate Validator 8.0.1.Final
[INFO ] 01-03-2024 15:34:04.793 [main] TestSpringBootApplication - Starting TestSpringBootApplication using Java 17.0.10 with PID 2011414 (/home/dima/backend_microservice/UserProductsMicroService/target/classes started by dima in /home/dima/backend_microservice/UserProductsMicroService)
[INFO ] 01-03-2024 15:34:04.803 [main] TestSpringBootApplication - No active profile set, falling back to 1 default profile: "default"
[INFO ] 01-03-2024 15:34:06.733 [main] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
[INFO ] 01-03-2024 15:34:06.734 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[ERROR] 01-03-2024 15:34:07.432 [main] SpringApplication - Application run failed
org.springframework.dao.InvalidDataAccessApiUsageException: Reactive Repositories are not supported by JPA; Offending repository is repository.CustomizedUserProductsCrudRepository
	at org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.useRepositoryConfiguration(RepositoryConfigurationExtensionSupport.java:339) ~[spring-data-commons-3.1.2.jar:3.1.2]
	at org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.getRepositoryConfigurations(RepositoryConfigurationExtensionSupport.java:96) ~[spring-data-commons-3.1.2.jar:3.1.2]
	at org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:163) ~[spring-data-commons-3.1.2.jar:3.1.2]
	at org.springframework.data.repository.config.RepositoryBeanDefinitionRegistrarSupport.registerBeanDefinitions(RepositoryBeanDefinitionRegistrarSupport.java:94) ~[spring-data-commons-3.1.2.jar:3.1.2]
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.lambda$loadBeanDefinitionsFromRegistrars$1(ConfigurationClassBeanDefinitionReader.java:373) ~[spring-context-6.0.11.jar:6.0.11]
	at java.util.LinkedHashMap.forEach(LinkedHashMap.java:721) ~[?:?]
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsFromRegistrars(ConfigurationClassBeanDefinitionReader.java:372) ~[spring-context-6.0.11.jar:6.0.11]
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsForConfigurationClass(ConfigurationClassBeanDefinitionReader.java:148) ~[spring-context-6.0.11.jar:6.0.11]
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitions(ConfigurationClassBeanDefinitionReader.java:120) ~[spring-context-6.0.11.jar:6.0.11]
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.processConfigBeanDefinitions(ConfigurationClassPostProcessor.java:427) ~[spring-context-6.0.11.jar:6.0.11]
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.postProcessBeanDefinitionRegistry(ConfigurationClassPostProcessor.java:287) ~[spring-context-6.0.11.jar:6.0.11]
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanDefinitionRegistryPostProcessors(PostProcessorRegistrationDelegate.java:344) ~[spring-context-6.0.11.jar:6.0.11]
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:115) ~[spring-context-6.0.11.jar:6.0.11]
	at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:771) ~[spring-context-6.0.11.jar:6.0.11]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:589) ~[spring-context-6.0.11.jar:6.0.11]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146) ~[spring-boot-3.1.2.jar:3.1.2]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734) [spring-boot-3.1.2.jar:3.1.2]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:436) [spring-boot-3.1.2.jar:3.1.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312) [spring-boot-3.1.2.jar:3.1.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306) [spring-boot-3.1.2.jar:3.1.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295) [spring-boot-3.1.2.jar:3.1.2]
	at App.TestSpringBootApplication.main(TestSpringBootApplication.java:30) [classes/:?]
[INFO ] 01-03-2024 15:37:40.985 [background-preinit] Version - HV000001: Hibernate Validator 8.0.1.Final
[INFO ] 01-03-2024 15:37:41.183 [main] TestSpringBootApplication - Starting TestSpringBootApplication using Java 17.0.10 with PID 2013431 (/home/dima/backend_microservice/UserProductsMicroService/target/classes started by dima in /home/dima/backend_microservice/UserProductsMicroService)
[INFO ] 01-03-2024 15:37:41.195 [main] TestSpringBootApplication - No active profile set, falling back to 1 default profile: "default"
[INFO ] 01-03-2024 15:37:43.076 [main] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
[INFO ] 01-03-2024 15:37:43.077 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[ERROR] 01-03-2024 15:37:43.605 [main] SpringApplication - Application run failed
org.springframework.dao.InvalidDataAccessApiUsageException: Reactive Repositories are not supported by JPA; Offending repository is repository.CustomizedUserProductsCrudRepository
	at org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.useRepositoryConfiguration(RepositoryConfigurationExtensionSupport.java:339) ~[spring-data-commons-3.1.2.jar:3.1.2]
	at org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.getRepositoryConfigurations(RepositoryConfigurationExtensionSupport.java:96) ~[spring-data-commons-3.1.2.jar:3.1.2]
	at org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:163) ~[spring-data-commons-3.1.2.jar:3.1.2]
	at org.springframework.data.repository.config.RepositoryBeanDefinitionRegistrarSupport.registerBeanDefinitions(RepositoryBeanDefinitionRegistrarSupport.java:94) ~[spring-data-commons-3.1.2.jar:3.1.2]
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.lambda$loadBeanDefinitionsFromRegistrars$1(ConfigurationClassBeanDefinitionReader.java:373) ~[spring-context-6.0.11.jar:6.0.11]
	at java.util.LinkedHashMap.forEach(LinkedHashMap.java:721) ~[?:?]
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsFromRegistrars(ConfigurationClassBeanDefinitionReader.java:372) ~[spring-context-6.0.11.jar:6.0.11]
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsForConfigurationClass(ConfigurationClassBeanDefinitionReader.java:148) ~[spring-context-6.0.11.jar:6.0.11]
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitions(ConfigurationClassBeanDefinitionReader.java:120) ~[spring-context-6.0.11.jar:6.0.11]
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.processConfigBeanDefinitions(ConfigurationClassPostProcessor.java:427) ~[spring-context-6.0.11.jar:6.0.11]
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.postProcessBeanDefinitionRegistry(ConfigurationClassPostProcessor.java:287) ~[spring-context-6.0.11.jar:6.0.11]
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanDefinitionRegistryPostProcessors(PostProcessorRegistrationDelegate.java:344) ~[spring-context-6.0.11.jar:6.0.11]
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:115) ~[spring-context-6.0.11.jar:6.0.11]
	at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:771) ~[spring-context-6.0.11.jar:6.0.11]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:589) ~[spring-context-6.0.11.jar:6.0.11]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146) ~[spring-boot-3.1.2.jar:3.1.2]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734) [spring-boot-3.1.2.jar:3.1.2]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:436) [spring-boot-3.1.2.jar:3.1.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312) [spring-boot-3.1.2.jar:3.1.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306) [spring-boot-3.1.2.jar:3.1.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295) [spring-boot-3.1.2.jar:3.1.2]
	at App.TestSpringBootApplication.main(TestSpringBootApplication.java:30) [classes/:?]
[INFO ] 01-03-2024 15:45:23.792 [background-preinit] Version - HV000001: Hibernate Validator 8.0.1.Final
[INFO ] 01-03-2024 15:45:23.844 [main] TestSpringBootApplication - Starting TestSpringBootApplication using Java 17.0.10 with PID 2017363 (/home/dima/backend_microservice/UserProductsMicroService/target/classes started by dima in /home/dima/backend_microservice/UserProductsMicroService)
[INFO ] 01-03-2024 15:45:23.863 [main] TestSpringBootApplication - No active profile set, falling back to 1 default profile: "default"
[INFO ] 01-03-2024 15:45:26.143 [main] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
[INFO ] 01-03-2024 15:45:26.144 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[ERROR] 01-03-2024 15:45:26.743 [main] SpringApplication - Application run failed
org.springframework.dao.InvalidDataAccessApiUsageException: Reactive Repositories are not supported by JPA; Offending repository is repository.CustomizedUserProductsCrudRepository
	at org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.useRepositoryConfiguration(RepositoryConfigurationExtensionSupport.java:339) ~[spring-data-commons-3.1.2.jar:3.1.2]
	at org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.getRepositoryConfigurations(RepositoryConfigurationExtensionSupport.java:96) ~[spring-data-commons-3.1.2.jar:3.1.2]
	at org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:163) ~[spring-data-commons-3.1.2.jar:3.1.2]
	at org.springframework.data.repository.config.RepositoryBeanDefinitionRegistrarSupport.registerBeanDefinitions(RepositoryBeanDefinitionRegistrarSupport.java:94) ~[spring-data-commons-3.1.2.jar:3.1.2]
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.lambda$loadBeanDefinitionsFromRegistrars$1(ConfigurationClassBeanDefinitionReader.java:373) ~[spring-context-6.0.11.jar:6.0.11]
	at java.util.LinkedHashMap.forEach(LinkedHashMap.java:721) ~[?:?]
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsFromRegistrars(ConfigurationClassBeanDefinitionReader.java:372) ~[spring-context-6.0.11.jar:6.0.11]
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsForConfigurationClass(ConfigurationClassBeanDefinitionReader.java:148) ~[spring-context-6.0.11.jar:6.0.11]
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitions(ConfigurationClassBeanDefinitionReader.java:120) ~[spring-context-6.0.11.jar:6.0.11]
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.processConfigBeanDefinitions(ConfigurationClassPostProcessor.java:427) ~[spring-context-6.0.11.jar:6.0.11]
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.postProcessBeanDefinitionRegistry(ConfigurationClassPostProcessor.java:287) ~[spring-context-6.0.11.jar:6.0.11]
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanDefinitionRegistryPostProcessors(PostProcessorRegistrationDelegate.java:344) ~[spring-context-6.0.11.jar:6.0.11]
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:115) ~[spring-context-6.0.11.jar:6.0.11]
	at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:771) ~[spring-context-6.0.11.jar:6.0.11]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:589) ~[spring-context-6.0.11.jar:6.0.11]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146) ~[spring-boot-3.1.2.jar:3.1.2]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734) [spring-boot-3.1.2.jar:3.1.2]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:436) [spring-boot-3.1.2.jar:3.1.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312) [spring-boot-3.1.2.jar:3.1.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306) [spring-boot-3.1.2.jar:3.1.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295) [spring-boot-3.1.2.jar:3.1.2]
	at App.TestSpringBootApplication.main(TestSpringBootApplication.java:30) [classes/:?]
[INFO ] 01-03-2024 15:48:58.390 [background-preinit] Version - HV000001: Hibernate Validator 8.0.1.Final
[INFO ] 01-03-2024 15:48:58.466 [main] TestSpringBootApplication - Starting TestSpringBootApplication using Java 17.0.10 with PID 2019240 (/home/dima/backend_microservice/UserProductsMicroService/target/classes started by dima in /home/dima/backend_microservice/UserProductsMicroService)
[INFO ] 01-03-2024 15:48:58.483 [main] TestSpringBootApplication - No active profile set, falling back to 1 default profile: "default"
[INFO ] 01-03-2024 15:49:01.002 [main] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
[INFO ] 01-03-2024 15:49:01.004 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data R2DBC repositories in DEFAULT mode.
[INFO ] 01-03-2024 15:49:01.077 [main] RepositoryConfigurationExtensionSupport - Spring Data R2DBC - Could not safely identify store assignment for repository candidate interface repository.CustomizedUserProductsCrudRepository; If you want this repository to be a R2DBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table (preferred), or consider extending one of the following types with your repository: org.springframework.data.r2dbc.repository.R2dbcRepository
[INFO ] 01-03-2024 15:49:01.079 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 64 ms. Found 0 R2DBC repository interfaces.
[INFO ] 01-03-2024 15:49:01.957 [main] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
[INFO ] 01-03-2024 15:49:01.961 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO ] 01-03-2024 15:49:02.003 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 27 ms. Found 0 JPA repository interfaces.
[INFO ] 01-03-2024 15:49:02.045 [main] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
[INFO ] 01-03-2024 15:49:02.046 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data R2DBC repositories in DEFAULT mode.
[INFO ] 01-03-2024 15:49:02.051 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 3 ms. Found 0 R2DBC repository interfaces.
[ERROR] 01-03-2024 15:49:03.662 [main] AprLifecycleListener - An incompatible version [1.2.23] of the Apache Tomcat Native library is installed, while Tomcat requires version [1.2.34]
[INFO ] 01-03-2024 15:49:04.483 [main] TomcatWebServer - Tomcat initialized with port(s): 8300 (http)
[INFO ] 01-03-2024 15:49:04.503 [main] Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8300"]
[INFO ] 01-03-2024 15:49:04.510 [main] StandardService - Starting service [Tomcat]
[INFO ] 01-03-2024 15:49:04.512 [main] StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.11]
[INFO ] 01-03-2024 15:49:05.655 [main] TldScanner - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
[INFO ] 01-03-2024 15:49:05.679 [main] [/users_products_api] - Initializing Spring embedded WebApplicationContext
[INFO ] 01-03-2024 15:49:05.684 [main] ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 7026 ms
[WARN ] 01-03-2024 15:49:05.851 [main] AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'CRUDUserProducts': Unsatisfied dependency expressed through field 'dao': Error creating bean with name 'DAOUserProducts': Unsatisfied dependency expressed through field 'rep': No qualifying bean of type 'repository.CustomizedUserProductsCrudRepository' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
[INFO ] 01-03-2024 15:49:05.860 [main] StandardService - Stopping service [Tomcat]
[INFO ] 01-03-2024 15:49:05.932 [main] ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
[ERROR] 01-03-2024 15:49:06.007 [main] LoggingFailureAnalysisReporter - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Field rep in DAO.DAOUserProducts required a bean of type 'repository.CustomizedUserProductsCrudRepository' that could not be found.

The injection point has the following annotations:
	- @org.springframework.beans.factory.annotation.Autowired(required=true)


Action:

Consider defining a bean of type 'repository.CustomizedUserProductsCrudRepository' in your configuration.

[INFO ] 01-03-2024 15:53:45.839 [background-preinit] Version - HV000001: Hibernate Validator 8.0.1.Final
[INFO ] 01-03-2024 15:53:45.926 [main] TestSpringBootApplication - Starting TestSpringBootApplication using Java 17.0.10 with PID 2021751 (/home/dima/backend_microservice/UserProductsMicroService/target/classes started by dima in /home/dima/backend_microservice/UserProductsMicroService)
[INFO ] 01-03-2024 15:53:45.945 [main] TestSpringBootApplication - No active profile set, falling back to 1 default profile: "default"
[INFO ] 01-03-2024 15:53:48.386 [main] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
[INFO ] 01-03-2024 15:53:48.388 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data R2DBC repositories in DEFAULT mode.
[INFO ] 01-03-2024 15:53:48.879 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 473 ms. Found 1 R2DBC repository interfaces.
[INFO ] 01-03-2024 15:53:49.829 [main] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
[INFO ] 01-03-2024 15:53:49.832 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO ] 01-03-2024 15:53:49.874 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 24 ms. Found 0 JPA repository interfaces.
[ERROR] 01-03-2024 15:53:51.012 [main] AprLifecycleListener - An incompatible version [1.2.23] of the Apache Tomcat Native library is installed, while Tomcat requires version [1.2.34]
[INFO ] 01-03-2024 15:53:51.887 [main] TomcatWebServer - Tomcat initialized with port(s): 8300 (http)
[INFO ] 01-03-2024 15:53:51.962 [main] Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8300"]
[INFO ] 01-03-2024 15:53:51.972 [main] StandardService - Starting service [Tomcat]
[INFO ] 01-03-2024 15:53:51.973 [main] StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.11]
[INFO ] 01-03-2024 15:53:53.140 [main] TldScanner - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
[INFO ] 01-03-2024 15:53:53.157 [main] [/users_products_api] - Initializing Spring embedded WebApplicationContext
[INFO ] 01-03-2024 15:53:53.161 [main] ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 7013 ms
[WARN ] 01-03-2024 15:53:53.376 [main] AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'CRUDUserProducts': Unsatisfied dependency expressed through field 'dao': Error creating bean with name 'DAOUserProducts': Unsatisfied dependency expressed through field 'rep': Error creating bean with name 'customizedUserProductsCrudRepository' defined in repository.CustomizedUserProductsCrudRepository defined in @EnableR2dbcRepositories declared on TestSpringBootApplication: Cannot resolve reference to bean 'r2dbcEntityTemplate' while setting bean property 'entityOperations'
[INFO ] 01-03-2024 15:53:53.383 [main] StandardService - Stopping service [Tomcat]
[INFO ] 01-03-2024 15:53:53.442 [main] ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
[ERROR] 01-03-2024 15:53:53.490 [main] SpringApplication - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'CRUDUserProducts': Unsatisfied dependency expressed through field 'dao': Error creating bean with name 'DAOUserProducts': Unsatisfied dependency expressed through field 'rep': Error creating bean with name 'customizedUserProductsCrudRepository' defined in repository.CustomizedUserProductsCrudRepository defined in @EnableR2dbcRepositories declared on TestSpringBootApplication: Cannot resolve reference to bean 'r2dbcEntityTemplate' while setting bean property 'entityOperations'
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:716) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:696) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:483) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1416) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:597) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:973) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:942) ~[spring-context-6.0.11.jar:6.0.11]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:608) ~[spring-context-6.0.11.jar:6.0.11]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146) ~[spring-boot-3.1.2.jar:3.1.2]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734) [spring-boot-3.1.2.jar:3.1.2]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:436) [spring-boot-3.1.2.jar:3.1.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312) [spring-boot-3.1.2.jar:3.1.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306) [spring-boot-3.1.2.jar:3.1.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295) [spring-boot-3.1.2.jar:3.1.2]
	at App.TestSpringBootApplication.main(TestSpringBootApplication.java:31) [classes/:?]
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'DAOUserProducts': Unsatisfied dependency expressed through field 'rep': Error creating bean with name 'customizedUserProductsCrudRepository' defined in repository.CustomizedUserProductsCrudRepository defined in @EnableR2dbcRepositories declared on TestSpringBootApplication: Cannot resolve reference to bean 'r2dbcEntityTemplate' while setting bean property 'entityOperations'
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:716) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:696) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:483) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1416) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:597) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:713) ~[spring-beans-6.0.11.jar:6.0.11]
	... 20 more
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'customizedUserProductsCrudRepository' defined in repository.CustomizedUserProductsCrudRepository defined in @EnableR2dbcRepositories declared on TestSpringBootApplication: Cannot resolve reference to bean 'r2dbcEntityTemplate' while setting bean property 'entityOperations'
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:377) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1682) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:597) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:713) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:696) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:483) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1416) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:597) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:713) ~[spring-beans-6.0.11.jar:6.0.11]
	... 20 more
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'r2dbcEntityTemplate' defined in class path resource [server/DatabaseConfiguration.class]: Unsatisfied dependency expressed through method 'r2dbcEntityTemplate' parameter 0: Error creating bean with name 'r2dbcDatabaseClient' defined in class path resource [server/DatabaseConfiguration.class]: Failed to instantiate [org.springframework.r2dbc.core.DatabaseClient]: Factory method 'databaseClient' threw exception with message: Error creating bean with name 'connectionFactory' defined in class path resource [org/springframework/boot/autoconfigure/r2dbc/ConnectionFactoryConfigurations$PoolConfiguration$PooledConnectionFactoryConfiguration.class]: Failed to instantiate [io.r2dbc.pool.ConnectionPool]: Factory method 'connectionFactory' threw exception with message: Invalid URL: r2dbc:postgresql:/127.0.0.1:5432/users_products
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:550) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1332) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1162) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:560) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1682) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:597) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:713) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:696) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:483) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1416) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:597) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:713) ~[spring-beans-6.0.11.jar:6.0.11]
	... 20 more
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'r2dbcDatabaseClient' defined in class path resource [server/DatabaseConfiguration.class]: Failed to instantiate [org.springframework.r2dbc.core.DatabaseClient]: Factory method 'databaseClient' threw exception with message: Error creating bean with name 'connectionFactory' defined in class path resource [org/springframework/boot/autoconfigure/r2dbc/ConnectionFactoryConfigurations$PoolConfiguration$PooledConnectionFactoryConfiguration.class]: Failed to instantiate [io.r2dbc.pool.ConnectionPool]: Factory method 'connectionFactory' threw exception with message: Invalid URL: r2dbc:postgresql:/127.0.0.1:5432/users_products
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:659) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:493) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1332) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1162) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:560) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:888) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:550) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1332) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1162) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:560) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1682) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:597) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:713) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:696) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:483) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1416) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:597) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:713) ~[spring-beans-6.0.11.jar:6.0.11]
	... 20 more
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.r2dbc.core.DatabaseClient]: Factory method 'databaseClient' threw exception with message: Error creating bean with name 'connectionFactory' defined in class path resource [org/springframework/boot/autoconfigure/r2dbc/ConnectionFactoryConfigurations$PoolConfiguration$PooledConnectionFactoryConfiguration.class]: Failed to instantiate [io.r2dbc.pool.ConnectionPool]: Factory method 'connectionFactory' threw exception with message: Invalid URL: r2dbc:postgresql:/127.0.0.1:5432/users_products
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:171) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:655) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:493) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1332) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1162) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:560) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:888) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:550) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1332) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1162) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:560) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1682) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:597) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:713) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:696) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:483) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1416) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:597) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:713) ~[spring-beans-6.0.11.jar:6.0.11]
	... 20 more
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'connectionFactory' defined in class path resource [org/springframework/boot/autoconfigure/r2dbc/ConnectionFactoryConfigurations$PoolConfiguration$PooledConnectionFactoryConfiguration.class]: Failed to instantiate [io.r2dbc.pool.ConnectionPool]: Factory method 'connectionFactory' threw exception with message: Invalid URL: r2dbc:postgresql:/127.0.0.1:5432/users_products
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:659) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:647) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1332) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1162) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:560) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:205) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1161) ~[spring-context-6.0.11.jar:6.0.11]
	at org.springframework.data.r2dbc.config.AbstractR2dbcConfiguration.lookupConnectionFactory(AbstractR2dbcConfiguration.java:274) ~[spring-data-r2dbc-3.1.2.jar:3.1.2]
	at org.springframework.data.r2dbc.config.AbstractR2dbcConfiguration.databaseClient(AbstractR2dbcConfiguration.java:137) ~[spring-data-r2dbc-3.1.2.jar:3.1.2]
	at server.DatabaseConfiguration$$SpringCGLIB$$0.CGLIB$databaseClient$5(<generated>) ~[classes/:?]
	at server.DatabaseConfiguration$$SpringCGLIB$$2.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:258) ~[spring-core-6.0.11.jar:6.0.11]
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:331) ~[spring-context-6.0.11.jar:6.0.11]
	at server.DatabaseConfiguration$$SpringCGLIB$$0.databaseClient(<generated>) ~[classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:568) ~[?:?]
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:139) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:655) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:493) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1332) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1162) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:560) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:888) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:550) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1332) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1162) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:560) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1682) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:597) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:713) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:696) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:483) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1416) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:597) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:713) ~[spring-beans-6.0.11.jar:6.0.11]
	... 20 more
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [io.r2dbc.pool.ConnectionPool]: Factory method 'connectionFactory' threw exception with message: Invalid URL: r2dbc:postgresql:/127.0.0.1:5432/users_products
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:171) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:655) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:647) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1332) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1162) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:560) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:205) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1161) ~[spring-context-6.0.11.jar:6.0.11]
	at org.springframework.data.r2dbc.config.AbstractR2dbcConfiguration.lookupConnectionFactory(AbstractR2dbcConfiguration.java:274) ~[spring-data-r2dbc-3.1.2.jar:3.1.2]
	at org.springframework.data.r2dbc.config.AbstractR2dbcConfiguration.databaseClient(AbstractR2dbcConfiguration.java:137) ~[spring-data-r2dbc-3.1.2.jar:3.1.2]
	at server.DatabaseConfiguration$$SpringCGLIB$$0.CGLIB$databaseClient$5(<generated>) ~[classes/:?]
	at server.DatabaseConfiguration$$SpringCGLIB$$2.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:258) ~[spring-core-6.0.11.jar:6.0.11]
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:331) ~[spring-context-6.0.11.jar:6.0.11]
	at server.DatabaseConfiguration$$SpringCGLIB$$0.databaseClient(<generated>) ~[classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:568) ~[?:?]
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:139) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:655) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:493) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1332) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1162) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:560) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:888) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:550) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1332) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1162) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:560) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1682) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:597) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:713) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:696) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:483) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1416) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:597) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:713) ~[spring-beans-6.0.11.jar:6.0.11]
	... 20 more
Caused by: java.lang.IllegalArgumentException: Invalid URL: r2dbc:postgresql:/127.0.0.1:5432/users_products
	at io.r2dbc.spi.ConnectionUrlParser.validate(ConnectionUrlParser.java:67) ~[r2dbc-spi-1.0.0.RELEASE.jar:?]
	at io.r2dbc.spi.ConnectionUrlParser.parseQuery(ConnectionUrlParser.java:81) ~[r2dbc-spi-1.0.0.RELEASE.jar:?]
	at io.r2dbc.spi.ConnectionFactoryOptions.parse(ConnectionFactoryOptions.java:138) ~[r2dbc-spi-1.0.0.RELEASE.jar:?]
	at org.springframework.boot.autoconfigure.r2dbc.R2dbcAutoConfiguration$PropertiesR2dbcConnectionDetails.getConnectionFactoryOptions(R2dbcAutoConfiguration.java:75) ~[spring-boot-autoconfigure-3.1.2.jar:3.1.2]
	at org.springframework.boot.autoconfigure.r2dbc.ConnectionFactoryOptionsInitializer.initialize(ConnectionFactoryOptionsInitializer.java:51) ~[spring-boot-autoconfigure-3.1.2.jar:3.1.2]
	at org.springframework.boot.autoconfigure.r2dbc.ConnectionFactoryConfigurations.createConnectionFactory(ConnectionFactoryConfigurations.java:65) ~[spring-boot-autoconfigure-3.1.2.jar:3.1.2]
	at org.springframework.boot.autoconfigure.r2dbc.ConnectionFactoryConfigurations$PoolConfiguration$PooledConnectionFactoryConfiguration.connectionFactory(ConnectionFactoryConfigurations.java:97) ~[spring-boot-autoconfigure-3.1.2.jar:3.1.2]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:568) ~[?:?]
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:139) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:655) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:647) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1332) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1162) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:560) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:205) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1161) ~[spring-context-6.0.11.jar:6.0.11]
	at org.springframework.data.r2dbc.config.AbstractR2dbcConfiguration.lookupConnectionFactory(AbstractR2dbcConfiguration.java:274) ~[spring-data-r2dbc-3.1.2.jar:3.1.2]
	at org.springframework.data.r2dbc.config.AbstractR2dbcConfiguration.databaseClient(AbstractR2dbcConfiguration.java:137) ~[spring-data-r2dbc-3.1.2.jar:3.1.2]
	at server.DatabaseConfiguration$$SpringCGLIB$$0.CGLIB$databaseClient$5(<generated>) ~[classes/:?]
	at server.DatabaseConfiguration$$SpringCGLIB$$2.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:258) ~[spring-core-6.0.11.jar:6.0.11]
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:331) ~[spring-context-6.0.11.jar:6.0.11]
	at server.DatabaseConfiguration$$SpringCGLIB$$0.databaseClient(<generated>) ~[classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:568) ~[?:?]
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:139) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:655) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:493) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1332) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1162) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:560) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:888) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:550) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1332) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1162) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:560) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1682) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:597) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:713) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:696) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:483) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1416) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:597) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:713) ~[spring-beans-6.0.11.jar:6.0.11]
	... 20 more
[INFO ] 01-03-2024 15:59:47.104 [background-preinit] Version - HV000001: Hibernate Validator 8.0.1.Final
[INFO ] 01-03-2024 15:59:47.177 [main] TestSpringBootApplication - Starting TestSpringBootApplication using Java 17.0.10 with PID 2024820 (/home/dima/backend_microservice/UserProductsMicroService/target/classes started by dima in /home/dima/backend_microservice/UserProductsMicroService)
[INFO ] 01-03-2024 15:59:47.188 [main] TestSpringBootApplication - No active profile set, falling back to 1 default profile: "default"
[ERROR] 01-03-2024 15:59:49.260 [main] SpringApplication - Application run failed
java.lang.IllegalStateException: Cannot register alias 'databaseClient' for name 'r2dbcDatabaseClient': Alias would override bean definition 'databaseClient'
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.checkForAliasCircle(DefaultListableBeanFactory.java:1168) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.core.SimpleAliasRegistry.registerAlias(SimpleAliasRegistry.java:80) ~[spring-core-6.0.11.jar:6.0.11]
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsForBeanMethod(ConfigurationClassBeanDefinitionReader.java:200) ~[spring-context-6.0.11.jar:6.0.11]
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsForConfigurationClass(ConfigurationClassBeanDefinitionReader.java:144) ~[spring-context-6.0.11.jar:6.0.11]
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitions(ConfigurationClassBeanDefinitionReader.java:120) ~[spring-context-6.0.11.jar:6.0.11]
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.processConfigBeanDefinitions(ConfigurationClassPostProcessor.java:427) ~[spring-context-6.0.11.jar:6.0.11]
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.postProcessBeanDefinitionRegistry(ConfigurationClassPostProcessor.java:287) ~[spring-context-6.0.11.jar:6.0.11]
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanDefinitionRegistryPostProcessors(PostProcessorRegistrationDelegate.java:344) ~[spring-context-6.0.11.jar:6.0.11]
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:115) ~[spring-context-6.0.11.jar:6.0.11]
	at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:771) ~[spring-context-6.0.11.jar:6.0.11]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:589) ~[spring-context-6.0.11.jar:6.0.11]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146) ~[spring-boot-3.1.2.jar:3.1.2]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734) [spring-boot-3.1.2.jar:3.1.2]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:436) [spring-boot-3.1.2.jar:3.1.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312) [spring-boot-3.1.2.jar:3.1.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306) [spring-boot-3.1.2.jar:3.1.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295) [spring-boot-3.1.2.jar:3.1.2]
	at App.TestSpringBootApplication.main(TestSpringBootApplication.java:31) [classes/:?]
[INFO ] 01-03-2024 16:15:16.241 [background-preinit] Version - HV000001: Hibernate Validator 8.0.1.Final
[INFO ] 01-03-2024 16:15:16.519 [main] TestSpringBootApplication - Starting TestSpringBootApplication using Java 17.0.10 with PID 2032670 (/home/dima/backend_microservice/UserProductsMicroService/target/classes started by dima in /home/dima/backend_microservice/UserProductsMicroService)
[INFO ] 01-03-2024 16:15:16.532 [main] TestSpringBootApplication - No active profile set, falling back to 1 default profile: "default"
[INFO ] 01-03-2024 16:15:19.288 [main] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
[INFO ] 01-03-2024 16:15:19.292 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data R2DBC repositories in DEFAULT mode.
[INFO ] 01-03-2024 16:15:19.891 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 583 ms. Found 1 R2DBC repository interfaces.
[WARN ] 01-03-2024 16:15:20.260 [main] AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.support.BeanDefinitionOverrideException: Invalid bean definition with name 'requestMappingHandlerAdapter' defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]: Cannot register bean definition [Root bean: class [null]; scope=; abstract=false; lazyInit=null; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration; factoryMethodName=requestMappingHandlerAdapter; initMethodNames=null; destroyMethodNames=[(inferred)]; defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]] for bean 'requestMappingHandlerAdapter' since there is already [Root bean: class [null]; scope=; abstract=false; lazyInit=null; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.web.reactive.config.DelegatingWebFluxConfiguration; factoryMethodName=requestMappingHandlerAdapter; initMethodNames=null; destroyMethodNames=[(inferred)]; defined in org.springframework.web.reactive.config.DelegatingWebFluxConfiguration] bound.
[INFO ] 01-03-2024 16:15:20.326 [main] ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
[ERROR] 01-03-2024 16:15:20.393 [main] LoggingFailureAnalysisReporter - 

***************************
APPLICATION FAILED TO START
***************************

Description:

The bean 'requestMappingHandlerAdapter', defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class], could not be registered. A bean with that name has already been defined in org.springframework.web.reactive.config.DelegatingWebFluxConfiguration and overriding is disabled.

Action:

Consider renaming one of the beans or enabling overriding by setting spring.main.allow-bean-definition-overriding=true

[INFO ] 01-03-2024 16:15:57.552 [background-preinit] Version - HV000001: Hibernate Validator 8.0.1.Final
[INFO ] 01-03-2024 16:15:57.680 [main] TestSpringBootApplication - Starting TestSpringBootApplication using Java 17.0.10 with PID 2033099 (/home/dima/backend_microservice/UserProductsMicroService/target/classes started by dima in /home/dima/backend_microservice/UserProductsMicroService)
[INFO ] 01-03-2024 16:15:57.706 [main] TestSpringBootApplication - No active profile set, falling back to 1 default profile: "default"
[INFO ] 01-03-2024 16:15:59.386 [main] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
[INFO ] 01-03-2024 16:15:59.390 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data R2DBC repositories in DEFAULT mode.
[INFO ] 01-03-2024 16:16:00.008 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 603 ms. Found 1 R2DBC repository interfaces.
[INFO ] 01-03-2024 16:16:00.934 [main] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
[INFO ] 01-03-2024 16:16:00.936 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO ] 01-03-2024 16:16:00.969 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 23 ms. Found 0 JPA repository interfaces.
[ERROR] 01-03-2024 16:16:02.113 [main] AprLifecycleListener - An incompatible version [1.2.23] of the Apache Tomcat Native library is installed, while Tomcat requires version [1.2.34]
[INFO ] 01-03-2024 16:16:02.974 [main] TomcatWebServer - Tomcat initialized with port(s): 8300 (http)
[INFO ] 01-03-2024 16:16:02.997 [main] Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8300"]
[INFO ] 01-03-2024 16:16:03.007 [main] StandardService - Starting service [Tomcat]
[INFO ] 01-03-2024 16:16:03.008 [main] StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.11]
[INFO ] 01-03-2024 16:16:04.050 [main] TldScanner - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
[INFO ] 01-03-2024 16:16:04.069 [main] [/users_products_api] - Initializing Spring embedded WebApplicationContext
[INFO ] 01-03-2024 16:16:04.074 [main] ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 6208 ms
[WARN ] 01-03-2024 16:16:04.279 [main] AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'CRUDUserProducts': Unsatisfied dependency expressed through field 'dao': Error creating bean with name 'DAOUserProducts': Unsatisfied dependency expressed through field 'rep': Error creating bean with name 'customizedUserProductsCrudRepository' defined in repository.CustomizedUserProductsCrudRepository defined in @EnableR2dbcRepositories declared on TestSpringBootApplication: Cannot resolve reference to bean 'r2dbcEntityTemplate' while setting bean property 'entityOperations'
[INFO ] 01-03-2024 16:16:04.288 [main] StandardService - Stopping service [Tomcat]
[INFO ] 01-03-2024 16:16:04.355 [main] ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
[ERROR] 01-03-2024 16:16:04.405 [main] SpringApplication - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'CRUDUserProducts': Unsatisfied dependency expressed through field 'dao': Error creating bean with name 'DAOUserProducts': Unsatisfied dependency expressed through field 'rep': Error creating bean with name 'customizedUserProductsCrudRepository' defined in repository.CustomizedUserProductsCrudRepository defined in @EnableR2dbcRepositories declared on TestSpringBootApplication: Cannot resolve reference to bean 'r2dbcEntityTemplate' while setting bean property 'entityOperations'
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:716) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:696) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:483) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1416) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:597) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:973) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:942) ~[spring-context-6.0.11.jar:6.0.11]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:608) ~[spring-context-6.0.11.jar:6.0.11]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146) ~[spring-boot-3.1.2.jar:3.1.2]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734) [spring-boot-3.1.2.jar:3.1.2]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:436) [spring-boot-3.1.2.jar:3.1.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312) [spring-boot-3.1.2.jar:3.1.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306) [spring-boot-3.1.2.jar:3.1.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295) [spring-boot-3.1.2.jar:3.1.2]
	at App.TestSpringBootApplication.main(TestSpringBootApplication.java:32) [classes/:?]
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'DAOUserProducts': Unsatisfied dependency expressed through field 'rep': Error creating bean with name 'customizedUserProductsCrudRepository' defined in repository.CustomizedUserProductsCrudRepository defined in @EnableR2dbcRepositories declared on TestSpringBootApplication: Cannot resolve reference to bean 'r2dbcEntityTemplate' while setting bean property 'entityOperations'
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:716) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:696) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:483) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1416) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:597) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:713) ~[spring-beans-6.0.11.jar:6.0.11]
	... 20 more
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'customizedUserProductsCrudRepository' defined in repository.CustomizedUserProductsCrudRepository defined in @EnableR2dbcRepositories declared on TestSpringBootApplication: Cannot resolve reference to bean 'r2dbcEntityTemplate' while setting bean property 'entityOperations'
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:377) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1682) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:597) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:713) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:696) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:483) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1416) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:597) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:713) ~[spring-beans-6.0.11.jar:6.0.11]
	... 20 more
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'r2dbcEntityTemplate' defined in class path resource [server/DatabaseConfiguration.class]: Unsatisfied dependency expressed through method 'r2dbcEntityTemplate' parameter 0: Error creating bean with name 'r2dbcDatabaseClient' defined in class path resource [server/DatabaseConfiguration.class]: Failed to instantiate [org.springframework.r2dbc.core.DatabaseClient]: Factory method 'databaseClient' threw exception with message: Error creating bean with name 'connectionFactory' defined in class path resource [server/DatabaseConfiguration.class]: Failed to instantiate [io.r2dbc.spi.ConnectionFactory]: Factory method 'connectionFactory' threw exception with message: Invalid URL: r2dbc:postgresql:/127.0.0.1:5432/users_products
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:550) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1332) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1162) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:560) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1682) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:597) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:713) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:696) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:483) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1416) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:597) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:713) ~[spring-beans-6.0.11.jar:6.0.11]
	... 20 more
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'r2dbcDatabaseClient' defined in class path resource [server/DatabaseConfiguration.class]: Failed to instantiate [org.springframework.r2dbc.core.DatabaseClient]: Factory method 'databaseClient' threw exception with message: Error creating bean with name 'connectionFactory' defined in class path resource [server/DatabaseConfiguration.class]: Failed to instantiate [io.r2dbc.spi.ConnectionFactory]: Factory method 'connectionFactory' threw exception with message: Invalid URL: r2dbc:postgresql:/127.0.0.1:5432/users_products
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:659) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:493) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1332) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1162) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:560) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:888) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:550) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1332) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1162) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:560) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1682) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:597) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:713) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:696) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:483) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1416) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:597) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:713) ~[spring-beans-6.0.11.jar:6.0.11]
	... 20 more
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.r2dbc.core.DatabaseClient]: Factory method 'databaseClient' threw exception with message: Error creating bean with name 'connectionFactory' defined in class path resource [server/DatabaseConfiguration.class]: Failed to instantiate [io.r2dbc.spi.ConnectionFactory]: Factory method 'connectionFactory' threw exception with message: Invalid URL: r2dbc:postgresql:/127.0.0.1:5432/users_products
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:171) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:655) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:493) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1332) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1162) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:560) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:888) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:550) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1332) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1162) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:560) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1682) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:597) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:713) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:696) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:483) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1416) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:597) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:713) ~[spring-beans-6.0.11.jar:6.0.11]
	... 20 more
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'connectionFactory' defined in class path resource [server/DatabaseConfiguration.class]: Failed to instantiate [io.r2dbc.spi.ConnectionFactory]: Factory method 'connectionFactory' threw exception with message: Invalid URL: r2dbc:postgresql:/127.0.0.1:5432/users_products
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:659) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:493) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1332) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1162) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:560) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:205) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1161) ~[spring-context-6.0.11.jar:6.0.11]
	at org.springframework.data.r2dbc.config.AbstractR2dbcConfiguration.lookupConnectionFactory(AbstractR2dbcConfiguration.java:274) ~[spring-data-r2dbc-3.1.2.jar:3.1.2]
	at org.springframework.data.r2dbc.config.AbstractR2dbcConfiguration.databaseClient(AbstractR2dbcConfiguration.java:137) ~[spring-data-r2dbc-3.1.2.jar:3.1.2]
	at server.DatabaseConfiguration$$SpringCGLIB$$0.CGLIB$databaseClient$5(<generated>) ~[classes/:?]
	at server.DatabaseConfiguration$$SpringCGLIB$$2.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:258) ~[spring-core-6.0.11.jar:6.0.11]
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:331) ~[spring-context-6.0.11.jar:6.0.11]
	at server.DatabaseConfiguration$$SpringCGLIB$$0.databaseClient(<generated>) ~[classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:568) ~[?:?]
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:139) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:655) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:493) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1332) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1162) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:560) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:888) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:550) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1332) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1162) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:560) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1682) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:597) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:713) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:696) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:483) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1416) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:597) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:713) ~[spring-beans-6.0.11.jar:6.0.11]
	... 20 more
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [io.r2dbc.spi.ConnectionFactory]: Factory method 'connectionFactory' threw exception with message: Invalid URL: r2dbc:postgresql:/127.0.0.1:5432/users_products
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:171) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:655) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:493) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1332) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1162) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:560) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:205) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1161) ~[spring-context-6.0.11.jar:6.0.11]
	at org.springframework.data.r2dbc.config.AbstractR2dbcConfiguration.lookupConnectionFactory(AbstractR2dbcConfiguration.java:274) ~[spring-data-r2dbc-3.1.2.jar:3.1.2]
	at org.springframework.data.r2dbc.config.AbstractR2dbcConfiguration.databaseClient(AbstractR2dbcConfiguration.java:137) ~[spring-data-r2dbc-3.1.2.jar:3.1.2]
	at server.DatabaseConfiguration$$SpringCGLIB$$0.CGLIB$databaseClient$5(<generated>) ~[classes/:?]
	at server.DatabaseConfiguration$$SpringCGLIB$$2.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:258) ~[spring-core-6.0.11.jar:6.0.11]
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:331) ~[spring-context-6.0.11.jar:6.0.11]
	at server.DatabaseConfiguration$$SpringCGLIB$$0.databaseClient(<generated>) ~[classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:568) ~[?:?]
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:139) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:655) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:493) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1332) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1162) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:560) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:888) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:550) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1332) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1162) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:560) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1682) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:597) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:713) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:696) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:483) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1416) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:597) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:713) ~[spring-beans-6.0.11.jar:6.0.11]
	... 20 more
Caused by: java.lang.IllegalArgumentException: Invalid URL: r2dbc:postgresql:/127.0.0.1:5432/users_products
	at io.r2dbc.spi.ConnectionUrlParser.validate(ConnectionUrlParser.java:67) ~[r2dbc-spi-1.0.0.RELEASE.jar:?]
	at io.r2dbc.spi.ConnectionUrlParser.parseQuery(ConnectionUrlParser.java:81) ~[r2dbc-spi-1.0.0.RELEASE.jar:?]
	at io.r2dbc.spi.ConnectionFactoryOptions.parse(ConnectionFactoryOptions.java:138) ~[r2dbc-spi-1.0.0.RELEASE.jar:?]
	at server.DatabaseConfiguration.connectionFactory(DatabaseConfiguration.java:74) ~[classes/:?]
	at server.DatabaseConfiguration$$SpringCGLIB$$0.CGLIB$connectionFactory$1(<generated>) ~[classes/:?]
	at server.DatabaseConfiguration$$SpringCGLIB$$2.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:258) ~[spring-core-6.0.11.jar:6.0.11]
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:331) ~[spring-context-6.0.11.jar:6.0.11]
	at server.DatabaseConfiguration$$SpringCGLIB$$0.connectionFactory(<generated>) ~[classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:568) ~[?:?]
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:139) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:655) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:493) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1332) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1162) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:560) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:205) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1161) ~[spring-context-6.0.11.jar:6.0.11]
	at org.springframework.data.r2dbc.config.AbstractR2dbcConfiguration.lookupConnectionFactory(AbstractR2dbcConfiguration.java:274) ~[spring-data-r2dbc-3.1.2.jar:3.1.2]
	at org.springframework.data.r2dbc.config.AbstractR2dbcConfiguration.databaseClient(AbstractR2dbcConfiguration.java:137) ~[spring-data-r2dbc-3.1.2.jar:3.1.2]
	at server.DatabaseConfiguration$$SpringCGLIB$$0.CGLIB$databaseClient$5(<generated>) ~[classes/:?]
	at server.DatabaseConfiguration$$SpringCGLIB$$2.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:258) ~[spring-core-6.0.11.jar:6.0.11]
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:331) ~[spring-context-6.0.11.jar:6.0.11]
	at server.DatabaseConfiguration$$SpringCGLIB$$0.databaseClient(<generated>) ~[classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:568) ~[?:?]
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:139) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:655) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:493) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1332) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1162) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:560) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:888) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:550) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1332) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1162) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:560) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1682) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:597) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:713) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:696) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:483) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1416) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:597) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:713) ~[spring-beans-6.0.11.jar:6.0.11]
	... 20 more
[INFO ] 01-03-2024 16:16:41.037 [background-preinit] Version - HV000001: Hibernate Validator 8.0.1.Final
[INFO ] 01-03-2024 16:16:41.141 [main] TestSpringBootApplication - Starting TestSpringBootApplication using Java 17.0.10 with PID 2033567 (/home/dima/backend_microservice/UserProductsMicroService/target/classes started by dima in /home/dima/backend_microservice/UserProductsMicroService)
[INFO ] 01-03-2024 16:16:41.158 [main] TestSpringBootApplication - No active profile set, falling back to 1 default profile: "default"
[INFO ] 01-03-2024 16:16:43.212 [main] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
[INFO ] 01-03-2024 16:16:43.214 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data R2DBC repositories in DEFAULT mode.
[INFO ] 01-03-2024 16:16:43.628 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 396 ms. Found 1 R2DBC repository interfaces.
[INFO ] 01-03-2024 16:16:44.616 [main] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
[INFO ] 01-03-2024 16:16:44.619 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO ] 01-03-2024 16:16:44.679 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 32 ms. Found 0 JPA repository interfaces.
[ERROR] 01-03-2024 16:16:45.846 [main] AprLifecycleListener - An incompatible version [1.2.23] of the Apache Tomcat Native library is installed, while Tomcat requires version [1.2.34]
[INFO ] 01-03-2024 16:16:46.593 [main] TomcatWebServer - Tomcat initialized with port(s): 8300 (http)
[INFO ] 01-03-2024 16:16:46.614 [main] Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8300"]
[INFO ] 01-03-2024 16:16:46.620 [main] StandardService - Starting service [Tomcat]
[INFO ] 01-03-2024 16:16:46.621 [main] StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.11]
[INFO ] 01-03-2024 16:16:47.868 [main] TldScanner - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
[INFO ] 01-03-2024 16:16:47.885 [main] [/users_products_api] - Initializing Spring embedded WebApplicationContext
[INFO ] 01-03-2024 16:16:47.890 [main] ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 6534 ms
[INFO ] 01-03-2024 16:16:49.227 [main] Version - HHH000412: Hibernate ORM core version 6.2.6.Final
[INFO ] 01-03-2024 16:16:49.237 [main] Environment - HHH000406: Using bytecode reflection optimizer
[DEBUG] 01-03-2024 16:16:49.756 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@7e50eeb9
[DEBUG] 01-03-2024 16:16:49.756 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@7e50eeb9
[DEBUG] 01-03-2024 16:16:49.757 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@7e50eeb9
[DEBUG] 01-03-2024 16:16:49.757 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@34cb0e49
[DEBUG] 01-03-2024 16:16:49.758 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@34cb0e49
[DEBUG] 01-03-2024 16:16:49.758 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@48b2dbc4
[DEBUG] 01-03-2024 16:16:49.758 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@48b2dbc4
[DEBUG] 01-03-2024 16:16:49.759 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@2a667f44
[DEBUG] 01-03-2024 16:16:49.759 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@2a667f44
[DEBUG] 01-03-2024 16:16:49.760 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@53ba7997
[DEBUG] 01-03-2024 16:16:49.761 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@53ba7997
[DEBUG] 01-03-2024 16:16:49.761 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@53ba7997
[DEBUG] 01-03-2024 16:16:49.762 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@3f6f9cef
[DEBUG] 01-03-2024 16:16:49.762 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@3f6f9cef
[DEBUG] 01-03-2024 16:16:49.762 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@3f6f9cef
[DEBUG] 01-03-2024 16:16:49.763 [main] BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@61dd1c3d
[DEBUG] 01-03-2024 16:16:49.763 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@61dd1c3d
[DEBUG] 01-03-2024 16:16:49.764 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@7858d31d
[DEBUG] 01-03-2024 16:16:49.764 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@782e6b40
[DEBUG] 01-03-2024 16:16:49.765 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@782e6b40
[DEBUG] 01-03-2024 16:16:49.765 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@3b65084e
[DEBUG] 01-03-2024 16:16:49.766 [main] BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@32d0d7eb
[DEBUG] 01-03-2024 16:16:49.766 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@cae2a97
[DEBUG] 01-03-2024 16:16:49.767 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@cae2a97
[DEBUG] 01-03-2024 16:16:49.767 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@cae2a97
[DEBUG] 01-03-2024 16:16:49.768 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@7d12429
[DEBUG] 01-03-2024 16:16:49.768 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@7d12429
[DEBUG] 01-03-2024 16:16:49.768 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@7d12429
[DEBUG] 01-03-2024 16:16:49.769 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@14656be5
[DEBUG] 01-03-2024 16:16:49.769 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@14656be5
[DEBUG] 01-03-2024 16:16:49.770 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@14656be5
[DEBUG] 01-03-2024 16:16:49.770 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@20be890d
[DEBUG] 01-03-2024 16:16:49.771 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@20be890d
[DEBUG] 01-03-2024 16:16:49.771 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@20be890d
[DEBUG] 01-03-2024 16:16:49.771 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@5db9f51f
[DEBUG] 01-03-2024 16:16:49.772 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@5db9f51f
[DEBUG] 01-03-2024 16:16:49.772 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@5db9f51f
[DEBUG] 01-03-2024 16:16:49.772 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@534762ed
[DEBUG] 01-03-2024 16:16:49.773 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@534762ed
[DEBUG] 01-03-2024 16:16:49.773 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@6c421123
[DEBUG] 01-03-2024 16:16:49.774 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@6c421123
[DEBUG] 01-03-2024 16:16:49.774 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@38e00b47
[DEBUG] 01-03-2024 16:16:49.774 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@38e00b47
[DEBUG] 01-03-2024 16:16:49.791 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@38e00b47
[DEBUG] 01-03-2024 16:16:49.792 [main] BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@2a631049
[DEBUG] 01-03-2024 16:16:49.792 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@425b5fe2
[DEBUG] 01-03-2024 16:16:49.792 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@425b5fe2
[DEBUG] 01-03-2024 16:16:49.793 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@3eec8583
[DEBUG] 01-03-2024 16:16:49.793 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@66e1b2a
[DEBUG] 01-03-2024 16:16:49.793 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@66e1b2a
[DEBUG] 01-03-2024 16:16:49.794 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@66e1b2a
[DEBUG] 01-03-2024 16:16:49.794 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@343db2f6
[DEBUG] 01-03-2024 16:16:49.794 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@2c815fdc
[DEBUG] 01-03-2024 16:16:49.795 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@769b0752
[DEBUG] 01-03-2024 16:16:49.795 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@dae5e0
[DEBUG] 01-03-2024 16:16:49.796 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@dae5e0
[DEBUG] 01-03-2024 16:16:49.796 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@59a94d0f
[DEBUG] 01-03-2024 16:16:49.796 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@59a94d0f
[DEBUG] 01-03-2024 16:16:49.797 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@7ff09659
[DEBUG] 01-03-2024 16:16:49.797 [main] BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@517fbf62
[DEBUG] 01-03-2024 16:16:49.797 [main] BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@65db548
[DEBUG] 01-03-2024 16:16:49.798 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@150f41b9
[DEBUG] 01-03-2024 16:16:49.798 [main] BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@6e364f1f
[DEBUG] 01-03-2024 16:16:49.798 [main] BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@429e7914
[DEBUG] 01-03-2024 16:16:49.799 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@298263fa
[DEBUG] 01-03-2024 16:16:49.799 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@298263fa
[DEBUG] 01-03-2024 16:16:49.799 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@466fedfa
[DEBUG] 01-03-2024 16:16:49.800 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@466fedfa
[DEBUG] 01-03-2024 16:16:49.800 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@1a7d0c9f
[DEBUG] 01-03-2024 16:16:49.800 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@1a7d0c9f
[DEBUG] 01-03-2024 16:16:49.801 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@2b1a901d
[DEBUG] 01-03-2024 16:16:49.801 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@2b1a901d
[DEBUG] 01-03-2024 16:16:49.801 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@11bdab37
[DEBUG] 01-03-2024 16:16:49.802 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@11bdab37
[DEBUG] 01-03-2024 16:16:49.802 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@280484c7
[DEBUG] 01-03-2024 16:16:49.802 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@5a6f6cac
[DEBUG] 01-03-2024 16:16:49.803 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@258a8584
[DEBUG] 01-03-2024 16:16:49.811 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@258a8584
[DEBUG] 01-03-2024 16:16:49.812 [main] BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@59127611
[DEBUG] 01-03-2024 16:16:49.812 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@553ce348
[DEBUG] 01-03-2024 16:16:49.812 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@7417ef4f
[DEBUG] 01-03-2024 16:16:49.813 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@5c0e2ec
[DEBUG] 01-03-2024 16:16:49.813 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@5c0e2ec
[DEBUG] 01-03-2024 16:16:49.813 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@4fa8bebb
[DEBUG] 01-03-2024 16:16:49.814 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@7d3c22a5
[DEBUG] 01-03-2024 16:16:49.814 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@369ad7da
[DEBUG] 01-03-2024 16:16:49.814 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@369ad7da
[DEBUG] 01-03-2024 16:16:49.815 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@344f9467
[DEBUG] 01-03-2024 16:16:49.815 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@344f9467
[DEBUG] 01-03-2024 16:16:49.815 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@3e98b933
[DEBUG] 01-03-2024 16:16:49.815 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@3e98b933
[DEBUG] 01-03-2024 16:16:49.816 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@3e98b933
[DEBUG] 01-03-2024 16:16:49.816 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@222d9d4f
[DEBUG] 01-03-2024 16:16:49.817 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@222d9d4f
[DEBUG] 01-03-2024 16:16:49.817 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@222d9d4f
[DEBUG] 01-03-2024 16:16:49.817 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@4269aad7
[DEBUG] 01-03-2024 16:16:49.818 [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@a4df251
[DEBUG] 01-03-2024 16:16:49.818 [main] BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@71e7830a
[DEBUG] 01-03-2024 16:16:49.818 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@71e7830a
[DEBUG] 01-03-2024 16:16:49.819 [main] BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@3feebf9c
[DEBUG] 01-03-2024 16:16:49.819 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@3feebf9c
[DEBUG] 01-03-2024 16:16:49.819 [main] BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@3feebf9c
[DEBUG] 01-03-2024 16:16:49.819 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@305e95a4
[DEBUG] 01-03-2024 16:16:49.820 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@55e42684
[DEBUG] 01-03-2024 16:16:49.820 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@18d610e1
[DEBUG] 01-03-2024 16:16:49.828 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@18d610e1
[DEBUG] 01-03-2024 16:16:49.828 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@528e5e38
[DEBUG] 01-03-2024 16:16:49.828 [main] BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@528e5e38
[DEBUG] 01-03-2024 16:16:49.829 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@528e5e38
[DEBUG] 01-03-2024 16:16:49.829 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@16391278
[DEBUG] 01-03-2024 16:16:49.829 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@16391278
[DEBUG] 01-03-2024 16:16:49.830 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@621dc63d
[DEBUG] 01-03-2024 16:16:49.830 [main] BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@621dc63d
[DEBUG] 01-03-2024 16:16:49.830 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@4ae49387
[DEBUG] 01-03-2024 16:16:49.831 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@4ae49387
[DEBUG] 01-03-2024 16:16:49.831 [main] BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@6abb7b7d
[DEBUG] 01-03-2024 16:16:49.831 [main] BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@6abb7b7d
[DEBUG] 01-03-2024 16:16:49.832 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@34cf0e80
[DEBUG] 01-03-2024 16:16:49.832 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@34cf0e80
[DEBUG] 01-03-2024 16:16:49.832 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@38ef1a0a
[DEBUG] 01-03-2024 16:16:49.849 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@41be8db9
[DEBUG] 01-03-2024 16:16:49.849 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@41be8db9
[DEBUG] 01-03-2024 16:16:49.852 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@6210666c
[DEBUG] 01-03-2024 16:16:49.853 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@1dca62c2
[DEBUG] 01-03-2024 16:16:49.853 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@52657d5f
[DEBUG] 01-03-2024 16:16:49.854 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@43d3995f
[DEBUG] 01-03-2024 16:16:49.854 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@2211b44f
[DEBUG] 01-03-2024 16:16:49.854 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@6c830ebd
[DEBUG] 01-03-2024 16:16:49.854 [main] BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@15f519f7
[DEBUG] 01-03-2024 16:16:49.855 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@4a336377
[DEBUG] 01-03-2024 16:16:49.855 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@65af05b2
[DEBUG] 01-03-2024 16:16:51.262 [main] DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@36cf16a6) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3dd750ba)
[DEBUG] 01-03-2024 16:16:51.269 [main] JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
[DEBUG] 01-03-2024 16:16:51.270 [main] JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 01-03-2024 16:16:51.297 [main] BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@4583b617
[DEBUG] 01-03-2024 16:16:51.298 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@4583b617
[DEBUG] 01-03-2024 16:16:51.298 [main] BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@41be8db9`
[DEBUG] 01-03-2024 16:16:51.301 [main] JdbcTypeRegistry - addDescriptor(3100, NumericTypeDescriptor) replaced previous registration(org.hibernate.dialect.PostgreSQLIntervalSecondJdbcType@65ad2b42)
[DEBUG] 01-03-2024 16:16:51.318 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 01-03-2024 16:16:51.319 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 01-03-2024 16:16:51.320 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 01-03-2024 16:16:51.320 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 01-03-2024 16:16:51.320 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 01-03-2024 16:16:51.321 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 01-03-2024 16:16:51.322 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 01-03-2024 16:16:51.323 [main] BasicTypeRegistry - Adding type registration OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 01-03-2024 16:16:51.323 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 01-03-2024 16:16:51.327 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@87220f1] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@77998ea7]
[WARN ] 01-03-2024 16:16:51.861 [main] InFlightMetadataCollectorImpl - HHH000069: Duplicate generator name generator
[INFO ] 01-03-2024 16:16:52.129 [main] BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
[INFO ] 01-03-2024 16:16:55.783 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 01-03-2024 16:16:55.784 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@87220f1] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@227c0cf7]
[TRACE] 01-03-2024 16:16:55.791 [main] TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@227c0cf7] for TypeConfiguration
[WARN ] 01-03-2024 16:16:56.246 [main] JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[INFO ] 01-03-2024 16:16:57.261 [main] Http11NioProtocol - Starting ProtocolHandler ["http-nio-8300"]
[INFO ] 01-03-2024 16:16:57.334 [main] TomcatWebServer - Tomcat started on port(s): 8300 (http) with context path '/users_products_api'
[INFO ] 01-03-2024 16:16:57.365 [main] TestSpringBootApplication - Started TestSpringBootApplication in 17.262 seconds (process running for 19.937)
[INFO ] 01-03-2024 16:18:07.950 [http-nio-8300-exec-1] [/users_products_api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[INFO ] 01-03-2024 16:18:07.952 [http-nio-8300-exec-1] DispatcherServlet - Initializing Servlet 'dispatcherServlet'
[INFO ] 01-03-2024 16:18:07.956 [http-nio-8300-exec-1] DispatcherServlet - Completed initialization in 3 ms
[WARN ] 01-03-2024 16:18:09.654 [reactor-tcp-epoll-1] ReactorNettyClient - Error: SEVERITY_LOCALIZED=ERROR, SEVERITY_NON_LOCALIZED=ERROR, CODE=42P01, MESSAGE=relation "e_users" does not exist, POSITION=104, FILE=parse_relation.c, LINE=1191, ROUTINE=parserOpenTable
[TRACE] 01-03-2024 16:21:28.808 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@227c0cf7] for TypeConfiguration
[DEBUG] 01-03-2024 16:21:28.809 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@717c447d] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@227c0cf7]
[INFO ] 01-03-2024 16:21:39.796 [background-preinit] Version - HV000001: Hibernate Validator 8.0.1.Final
[INFO ] 01-03-2024 16:21:39.917 [main] TestSpringBootApplication - Starting TestSpringBootApplication using Java 17.0.10 with PID 2036128 (/home/dima/backend_microservice/UserProductsMicroService/target/classes started by dima in /home/dima/backend_microservice/UserProductsMicroService)
[INFO ] 01-03-2024 16:21:39.972 [main] TestSpringBootApplication - No active profile set, falling back to 1 default profile: "default"
[INFO ] 01-03-2024 16:21:43.176 [main] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
[INFO ] 01-03-2024 16:21:43.180 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data R2DBC repositories in DEFAULT mode.
[INFO ] 01-03-2024 16:21:43.716 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 518 ms. Found 1 R2DBC repository interfaces.
[INFO ] 01-03-2024 16:21:44.652 [main] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
[INFO ] 01-03-2024 16:21:44.654 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO ] 01-03-2024 16:21:44.689 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 24 ms. Found 0 JPA repository interfaces.
[ERROR] 01-03-2024 16:21:45.893 [main] AprLifecycleListener - An incompatible version [1.2.23] of the Apache Tomcat Native library is installed, while Tomcat requires version [1.2.34]
[INFO ] 01-03-2024 16:21:46.849 [main] TomcatWebServer - Tomcat initialized with port(s): 8300 (http)
[INFO ] 01-03-2024 16:21:46.891 [main] Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8300"]
[INFO ] 01-03-2024 16:21:46.899 [main] StandardService - Starting service [Tomcat]
[INFO ] 01-03-2024 16:21:46.900 [main] StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.11]
[INFO ] 01-03-2024 16:21:48.479 [main] TldScanner - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
[INFO ] 01-03-2024 16:21:48.500 [main] [/users_products_api] - Initializing Spring embedded WebApplicationContext
[INFO ] 01-03-2024 16:21:48.505 [main] ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 8206 ms
[INFO ] 01-03-2024 16:21:49.956 [main] Version - HHH000412: Hibernate ORM core version 6.2.6.Final
[INFO ] 01-03-2024 16:21:49.966 [main] Environment - HHH000406: Using bytecode reflection optimizer
[DEBUG] 01-03-2024 16:21:50.468 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@da22aa
[DEBUG] 01-03-2024 16:21:50.468 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@da22aa
[DEBUG] 01-03-2024 16:21:50.469 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@da22aa
[DEBUG] 01-03-2024 16:21:50.469 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@75452aea
[DEBUG] 01-03-2024 16:21:50.470 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@75452aea
[DEBUG] 01-03-2024 16:21:50.470 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@6c24f61d
[DEBUG] 01-03-2024 16:21:50.471 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@6c24f61d
[DEBUG] 01-03-2024 16:21:50.471 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@4537880f
[DEBUG] 01-03-2024 16:21:50.472 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@4537880f
[DEBUG] 01-03-2024 16:21:50.473 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@14292d71
[DEBUG] 01-03-2024 16:21:50.474 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@14292d71
[DEBUG] 01-03-2024 16:21:50.474 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@14292d71
[DEBUG] 01-03-2024 16:21:50.477 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@48e74764
[DEBUG] 01-03-2024 16:21:50.477 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@48e74764
[DEBUG] 01-03-2024 16:21:50.478 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@48e74764
[DEBUG] 01-03-2024 16:21:50.478 [main] BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@338d47b
[DEBUG] 01-03-2024 16:21:50.479 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@338d47b
[DEBUG] 01-03-2024 16:21:50.479 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@7a3643e3
[DEBUG] 01-03-2024 16:21:50.480 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@2729bb71
[DEBUG] 01-03-2024 16:21:50.480 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@2729bb71
[DEBUG] 01-03-2024 16:21:50.480 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@55071497
[DEBUG] 01-03-2024 16:21:50.481 [main] BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@10d98940
[DEBUG] 01-03-2024 16:21:50.481 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@58b8f9e3
[DEBUG] 01-03-2024 16:21:50.482 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@58b8f9e3
[DEBUG] 01-03-2024 16:21:50.482 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@58b8f9e3
[DEBUG] 01-03-2024 16:21:50.482 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@32a033b6
[DEBUG] 01-03-2024 16:21:50.483 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@32a033b6
[DEBUG] 01-03-2024 16:21:50.484 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@32a033b6
[DEBUG] 01-03-2024 16:21:50.485 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@5f6e2ad9
[DEBUG] 01-03-2024 16:21:50.485 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@5f6e2ad9
[DEBUG] 01-03-2024 16:21:50.486 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@5f6e2ad9
[DEBUG] 01-03-2024 16:21:50.486 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@3212bfd
[DEBUG] 01-03-2024 16:21:50.486 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@3212bfd
[DEBUG] 01-03-2024 16:21:50.487 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@3212bfd
[DEBUG] 01-03-2024 16:21:50.488 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@1cc9bd9b
[DEBUG] 01-03-2024 16:21:50.489 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@1cc9bd9b
[DEBUG] 01-03-2024 16:21:50.489 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@1cc9bd9b
[DEBUG] 01-03-2024 16:21:50.490 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@2f471037
[DEBUG] 01-03-2024 16:21:50.490 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@2f471037
[DEBUG] 01-03-2024 16:21:50.491 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@1d1cfe4
[DEBUG] 01-03-2024 16:21:50.492 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@1d1cfe4
[DEBUG] 01-03-2024 16:21:50.492 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@ba562e0
[DEBUG] 01-03-2024 16:21:50.493 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@ba562e0
[DEBUG] 01-03-2024 16:21:50.493 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@ba562e0
[DEBUG] 01-03-2024 16:21:50.494 [main] BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@5a51336a
[DEBUG] 01-03-2024 16:21:50.495 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@4d8056bf
[DEBUG] 01-03-2024 16:21:50.496 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@4d8056bf
[DEBUG] 01-03-2024 16:21:50.496 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@42211e04
[DEBUG] 01-03-2024 16:21:50.496 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@6233c6c2
[DEBUG] 01-03-2024 16:21:50.497 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@6233c6c2
[DEBUG] 01-03-2024 16:21:50.497 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@6233c6c2
[DEBUG] 01-03-2024 16:21:50.497 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@312a738d
[DEBUG] 01-03-2024 16:21:50.497 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@7e50eeb9
[DEBUG] 01-03-2024 16:21:50.498 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@34cb0e49
[DEBUG] 01-03-2024 16:21:50.498 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@48b2dbc4
[DEBUG] 01-03-2024 16:21:50.498 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@48b2dbc4
[DEBUG] 01-03-2024 16:21:50.499 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@2a667f44
[DEBUG] 01-03-2024 16:21:50.499 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@2a667f44
[DEBUG] 01-03-2024 16:21:50.500 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@53ba7997
[DEBUG] 01-03-2024 16:21:50.500 [main] BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@3f6f9cef
[DEBUG] 01-03-2024 16:21:50.500 [main] BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@61dd1c3d
[DEBUG] 01-03-2024 16:21:50.500 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@7858d31d
[DEBUG] 01-03-2024 16:21:50.501 [main] BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@782e6b40
[DEBUG] 01-03-2024 16:21:50.501 [main] BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@3b65084e
[DEBUG] 01-03-2024 16:21:50.501 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@32d0d7eb
[DEBUG] 01-03-2024 16:21:50.502 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@32d0d7eb
[DEBUG] 01-03-2024 16:21:50.502 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@cae2a97
[DEBUG] 01-03-2024 16:21:50.502 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@cae2a97
[DEBUG] 01-03-2024 16:21:50.503 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@7d12429
[DEBUG] 01-03-2024 16:21:50.503 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@7d12429
[DEBUG] 01-03-2024 16:21:50.504 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@14656be5
[DEBUG] 01-03-2024 16:21:50.504 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@14656be5
[DEBUG] 01-03-2024 16:21:50.504 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@20be890d
[DEBUG] 01-03-2024 16:21:50.505 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@20be890d
[DEBUG] 01-03-2024 16:21:50.505 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@5db9f51f
[DEBUG] 01-03-2024 16:21:50.505 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@534762ed
[DEBUG] 01-03-2024 16:21:50.506 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@6c421123
[DEBUG] 01-03-2024 16:21:50.506 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@6c421123
[DEBUG] 01-03-2024 16:21:50.506 [main] BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@38e00b47
[DEBUG] 01-03-2024 16:21:50.507 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2a631049
[DEBUG] 01-03-2024 16:21:50.507 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@425b5fe2
[DEBUG] 01-03-2024 16:21:50.507 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@3eec8583
[DEBUG] 01-03-2024 16:21:50.507 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@3eec8583
[DEBUG] 01-03-2024 16:21:50.508 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@66e1b2a
[DEBUG] 01-03-2024 16:21:50.508 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@343db2f6
[DEBUG] 01-03-2024 16:21:50.508 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@2c815fdc
[DEBUG] 01-03-2024 16:21:50.509 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@2c815fdc
[DEBUG] 01-03-2024 16:21:50.509 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@769b0752
[DEBUG] 01-03-2024 16:21:50.509 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@769b0752
[DEBUG] 01-03-2024 16:21:50.510 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@dae5e0
[DEBUG] 01-03-2024 16:21:50.510 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@dae5e0
[DEBUG] 01-03-2024 16:21:50.510 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@dae5e0
[DEBUG] 01-03-2024 16:21:50.511 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@59a94d0f
[DEBUG] 01-03-2024 16:21:50.511 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@59a94d0f
[DEBUG] 01-03-2024 16:21:50.511 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@59a94d0f
[DEBUG] 01-03-2024 16:21:50.512 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@7ff09659
[DEBUG] 01-03-2024 16:21:50.512 [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@517fbf62
[DEBUG] 01-03-2024 16:21:50.512 [main] BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@65db548
[DEBUG] 01-03-2024 16:21:50.513 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@65db548
[DEBUG] 01-03-2024 16:21:50.513 [main] BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@150f41b9
[DEBUG] 01-03-2024 16:21:50.513 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@150f41b9
[DEBUG] 01-03-2024 16:21:50.514 [main] BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@150f41b9
[DEBUG] 01-03-2024 16:21:50.514 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@6e364f1f
[DEBUG] 01-03-2024 16:21:50.514 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@429e7914
[DEBUG] 01-03-2024 16:21:50.515 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@298263fa
[DEBUG] 01-03-2024 16:21:50.515 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@298263fa
[DEBUG] 01-03-2024 16:21:50.516 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@466fedfa
[DEBUG] 01-03-2024 16:21:50.516 [main] BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@466fedfa
[DEBUG] 01-03-2024 16:21:50.516 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@466fedfa
[DEBUG] 01-03-2024 16:21:50.517 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@1a7d0c9f
[DEBUG] 01-03-2024 16:21:50.517 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@1a7d0c9f
[DEBUG] 01-03-2024 16:21:50.517 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@2b1a901d
[DEBUG] 01-03-2024 16:21:50.518 [main] BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@2b1a901d
[DEBUG] 01-03-2024 16:21:50.518 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@11bdab37
[DEBUG] 01-03-2024 16:21:50.519 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@11bdab37
[DEBUG] 01-03-2024 16:21:50.519 [main] BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@280484c7
[DEBUG] 01-03-2024 16:21:50.520 [main] BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@280484c7
[DEBUG] 01-03-2024 16:21:50.520 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@5a6f6cac
[DEBUG] 01-03-2024 16:21:50.520 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@5a6f6cac
[DEBUG] 01-03-2024 16:21:50.521 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@258a8584
[DEBUG] 01-03-2024 16:21:50.552 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@5922cff3
[DEBUG] 01-03-2024 16:21:50.555 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@5922cff3
[DEBUG] 01-03-2024 16:21:50.558 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@6b9a1205
[DEBUG] 01-03-2024 16:21:50.560 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@3c6bd624
[DEBUG] 01-03-2024 16:21:50.565 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@3d8d52be
[DEBUG] 01-03-2024 16:21:50.566 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@645ba24a
[DEBUG] 01-03-2024 16:21:50.567 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@5f6a8efe
[DEBUG] 01-03-2024 16:21:50.568 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@3dd2b9c1
[DEBUG] 01-03-2024 16:21:50.568 [main] BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@6a1d1467
[DEBUG] 01-03-2024 16:21:50.569 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@536da29c
[DEBUG] 01-03-2024 16:21:50.569 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@58fbcb71
[DEBUG] 01-03-2024 16:21:52.552 [main] DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2b1d1a5) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@41e7a544)
[DEBUG] 01-03-2024 16:21:52.559 [main] JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
[DEBUG] 01-03-2024 16:21:52.560 [main] JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 01-03-2024 16:21:52.587 [main] BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@f42336c
[DEBUG] 01-03-2024 16:21:52.588 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@f42336c
[DEBUG] 01-03-2024 16:21:52.588 [main] BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@5922cff3`
[DEBUG] 01-03-2024 16:21:52.592 [main] JdbcTypeRegistry - addDescriptor(3100, NumericTypeDescriptor) replaced previous registration(org.hibernate.dialect.PostgreSQLIntervalSecondJdbcType@71f29d91)
[DEBUG] 01-03-2024 16:21:52.610 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 01-03-2024 16:21:52.611 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 01-03-2024 16:21:52.611 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 01-03-2024 16:21:52.612 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 01-03-2024 16:21:52.612 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 01-03-2024 16:21:52.613 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 01-03-2024 16:21:52.614 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 01-03-2024 16:21:52.615 [main] BasicTypeRegistry - Adding type registration OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 01-03-2024 16:21:52.616 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 01-03-2024 16:21:52.619 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7fd2a67a] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@163df259]
[WARN ] 01-03-2024 16:21:53.102 [main] InFlightMetadataCollectorImpl - HHH000069: Duplicate generator name generator
[INFO ] 01-03-2024 16:21:53.336 [main] BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
[INFO ] 01-03-2024 16:21:56.527 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 01-03-2024 16:21:56.528 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7fd2a67a] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@40b678b3]
[TRACE] 01-03-2024 16:21:56.538 [main] TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@40b678b3] for TypeConfiguration
[WARN ] 01-03-2024 16:21:56.880 [main] JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[INFO ] 01-03-2024 16:21:58.090 [main] Http11NioProtocol - Starting ProtocolHandler ["http-nio-8300"]
[INFO ] 01-03-2024 16:21:58.249 [main] TomcatWebServer - Tomcat started on port(s): 8300 (http) with context path '/users_products_api'
[INFO ] 01-03-2024 16:21:58.338 [main] TestSpringBootApplication - Started TestSpringBootApplication in 20.003 seconds (process running for 23.766)
[INFO ] 01-03-2024 16:22:04.381 [http-nio-8300-exec-1] [/users_products_api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[INFO ] 01-03-2024 16:22:04.382 [http-nio-8300-exec-1] DispatcherServlet - Initializing Servlet 'dispatcherServlet'
[INFO ] 01-03-2024 16:22:04.385 [http-nio-8300-exec-1] DispatcherServlet - Completed initialization in 3 ms
[TRACE] 01-03-2024 16:24:24.405 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@40b678b3] for TypeConfiguration
[DEBUG] 01-03-2024 16:24:24.405 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@43393f5b] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@40b678b3]
[INFO ] 01-03-2024 16:24:35.086 [background-preinit] Version - HV000001: Hibernate Validator 8.0.1.Final
[INFO ] 01-03-2024 16:24:35.383 [main] TestSpringBootApplication - Starting TestSpringBootApplication using Java 17.0.10 with PID 2037691 (/home/dima/backend_microservice/UserProductsMicroService/target/classes started by dima in /home/dima/backend_microservice/UserProductsMicroService)
[INFO ] 01-03-2024 16:24:35.428 [main] TestSpringBootApplication - No active profile set, falling back to 1 default profile: "default"
[INFO ] 01-03-2024 16:24:37.441 [main] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
[INFO ] 01-03-2024 16:24:37.444 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data R2DBC repositories in DEFAULT mode.
[INFO ] 01-03-2024 16:24:37.528 [main] RepositoryConfigurationExtensionSupport - Spring Data R2DBC - Could not safely identify store assignment for repository candidate interface repository.CustomizedUserProductsCrudRepository; If you want this repository to be a R2DBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table (preferred), or consider extending one of the following types with your repository: org.springframework.data.r2dbc.repository.R2dbcRepository
[INFO ] 01-03-2024 16:24:37.530 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 74 ms. Found 0 R2DBC repository interfaces.
[INFO ] 01-03-2024 16:24:38.305 [main] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
[INFO ] 01-03-2024 16:24:38.308 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO ] 01-03-2024 16:24:38.375 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 55 ms. Found 0 JPA repository interfaces.
[INFO ] 01-03-2024 16:24:38.501 [main] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
[INFO ] 01-03-2024 16:24:38.509 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data R2DBC repositories in DEFAULT mode.
[INFO ] 01-03-2024 16:24:38.520 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 9 ms. Found 0 R2DBC repository interfaces.
[ERROR] 01-03-2024 16:24:40.314 [main] AprLifecycleListener - An incompatible version [1.2.23] of the Apache Tomcat Native library is installed, while Tomcat requires version [1.2.34]
[INFO ] 01-03-2024 16:24:41.453 [main] TomcatWebServer - Tomcat initialized with port(s): 8300 (http)
[INFO ] 01-03-2024 16:24:41.479 [main] Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8300"]
[INFO ] 01-03-2024 16:24:41.486 [main] StandardService - Starting service [Tomcat]
[INFO ] 01-03-2024 16:24:41.488 [main] StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.11]
[INFO ] 01-03-2024 16:24:42.695 [main] TldScanner - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
[INFO ] 01-03-2024 16:24:42.716 [main] [/users_products_api] - Initializing Spring embedded WebApplicationContext
[INFO ] 01-03-2024 16:24:42.722 [main] ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 6993 ms
[WARN ] 01-03-2024 16:24:42.892 [main] AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'CRUDUserProducts': Unsatisfied dependency expressed through field 'dao': Error creating bean with name 'DAOUserProducts': Unsatisfied dependency expressed through field 'rep': No qualifying bean of type 'repository.CustomizedUserProductsCrudRepository' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
[INFO ] 01-03-2024 16:24:42.903 [main] StandardService - Stopping service [Tomcat]
[INFO ] 01-03-2024 16:24:43.016 [main] ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
[ERROR] 01-03-2024 16:24:43.112 [main] LoggingFailureAnalysisReporter - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Field rep in DAO.DAOUserProducts required a bean of type 'repository.CustomizedUserProductsCrudRepository' that could not be found.

The injection point has the following annotations:
	- @org.springframework.beans.factory.annotation.Autowired(required=true)


Action:

Consider defining a bean of type 'repository.CustomizedUserProductsCrudRepository' in your configuration.

[INFO ] 01-03-2024 16:30:49.617 [background-preinit] Version - HV000001: Hibernate Validator 8.0.1.Final
[INFO ] 01-03-2024 16:30:49.715 [main] TestSpringBootApplication - Starting TestSpringBootApplication using Java 17.0.10 with PID 2040888 (/home/dima/backend_microservice/UserProductsMicroService/target/classes started by dima in /home/dima/backend_microservice/UserProductsMicroService)
[INFO ] 01-03-2024 16:30:49.744 [main] TestSpringBootApplication - No active profile set, falling back to 1 default profile: "default"
[INFO ] 01-03-2024 16:30:52.562 [main] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
[INFO ] 01-03-2024 16:30:52.564 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data R2DBC repositories in DEFAULT mode.
[INFO ] 01-03-2024 16:30:53.635 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 1036 ms. Found 1 R2DBC repository interfaces.
[INFO ] 01-03-2024 16:30:55.098 [main] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
[INFO ] 01-03-2024 16:30:55.102 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO ] 01-03-2024 16:30:55.181 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 51 ms. Found 0 JPA repository interfaces.
[ERROR] 01-03-2024 16:30:57.228 [main] AprLifecycleListener - An incompatible version [1.2.23] of the Apache Tomcat Native library is installed, while Tomcat requires version [1.2.34]
[INFO ] 01-03-2024 16:30:58.283 [main] TomcatWebServer - Tomcat initialized with port(s): 8300 (http)
[INFO ] 01-03-2024 16:30:58.318 [main] Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8300"]
[INFO ] 01-03-2024 16:30:58.327 [main] StandardService - Starting service [Tomcat]
[INFO ] 01-03-2024 16:30:58.330 [main] StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.11]
[INFO ] 01-03-2024 16:30:59.813 [main] TldScanner - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
[INFO ] 01-03-2024 16:30:59.835 [main] [/users_products_api] - Initializing Spring embedded WebApplicationContext
[INFO ] 01-03-2024 16:30:59.841 [main] ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 9841 ms
[INFO ] 01-03-2024 16:31:01.133 [main] Version - HHH000412: Hibernate ORM core version 6.2.6.Final
[INFO ] 01-03-2024 16:31:01.140 [main] Environment - HHH000406: Using bytecode reflection optimizer
[DEBUG] 01-03-2024 16:31:02.284 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@312a738d
[DEBUG] 01-03-2024 16:31:02.285 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@312a738d
[DEBUG] 01-03-2024 16:31:02.285 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@312a738d
[DEBUG] 01-03-2024 16:31:02.286 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@7e50eeb9
[DEBUG] 01-03-2024 16:31:02.287 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@7e50eeb9
[DEBUG] 01-03-2024 16:31:02.294 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@34cb0e49
[DEBUG] 01-03-2024 16:31:02.295 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@34cb0e49
[DEBUG] 01-03-2024 16:31:02.297 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@48b2dbc4
[DEBUG] 01-03-2024 16:31:02.300 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@48b2dbc4
[DEBUG] 01-03-2024 16:31:02.302 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@2a667f44
[DEBUG] 01-03-2024 16:31:02.303 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@2a667f44
[DEBUG] 01-03-2024 16:31:02.303 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@2a667f44
[DEBUG] 01-03-2024 16:31:02.304 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@53ba7997
[DEBUG] 01-03-2024 16:31:02.304 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@53ba7997
[DEBUG] 01-03-2024 16:31:02.305 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@53ba7997
[DEBUG] 01-03-2024 16:31:02.305 [main] BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@3f6f9cef
[DEBUG] 01-03-2024 16:31:02.306 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@3f6f9cef
[DEBUG] 01-03-2024 16:31:02.306 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@61dd1c3d
[DEBUG] 01-03-2024 16:31:02.307 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@7858d31d
[DEBUG] 01-03-2024 16:31:02.307 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@7858d31d
[DEBUG] 01-03-2024 16:31:02.308 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@782e6b40
[DEBUG] 01-03-2024 16:31:02.308 [main] BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@3b65084e
[DEBUG] 01-03-2024 16:31:02.309 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@32d0d7eb
[DEBUG] 01-03-2024 16:31:02.309 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@32d0d7eb
[DEBUG] 01-03-2024 16:31:02.309 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@32d0d7eb
[DEBUG] 01-03-2024 16:31:02.310 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@cae2a97
[DEBUG] 01-03-2024 16:31:02.310 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@cae2a97
[DEBUG] 01-03-2024 16:31:02.311 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@cae2a97
[DEBUG] 01-03-2024 16:31:02.311 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@7d12429
[DEBUG] 01-03-2024 16:31:02.312 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@7d12429
[DEBUG] 01-03-2024 16:31:02.312 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@7d12429
[DEBUG] 01-03-2024 16:31:02.312 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@14656be5
[DEBUG] 01-03-2024 16:31:02.313 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@14656be5
[DEBUG] 01-03-2024 16:31:02.313 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@14656be5
[DEBUG] 01-03-2024 16:31:02.314 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@20be890d
[DEBUG] 01-03-2024 16:31:02.314 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@20be890d
[DEBUG] 01-03-2024 16:31:02.314 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@20be890d
[DEBUG] 01-03-2024 16:31:02.315 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@5db9f51f
[DEBUG] 01-03-2024 16:31:02.315 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@5db9f51f
[DEBUG] 01-03-2024 16:31:02.316 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@534762ed
[DEBUG] 01-03-2024 16:31:02.316 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@534762ed
[DEBUG] 01-03-2024 16:31:02.317 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@6c421123
[DEBUG] 01-03-2024 16:31:02.318 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@6c421123
[DEBUG] 01-03-2024 16:31:02.318 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@6c421123
[DEBUG] 01-03-2024 16:31:02.319 [main] BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@38e00b47
[DEBUG] 01-03-2024 16:31:02.319 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@2a631049
[DEBUG] 01-03-2024 16:31:02.320 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@2a631049
[DEBUG] 01-03-2024 16:31:02.320 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@425b5fe2
[DEBUG] 01-03-2024 16:31:02.321 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@3eec8583
[DEBUG] 01-03-2024 16:31:02.321 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@3eec8583
[DEBUG] 01-03-2024 16:31:02.321 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@3eec8583
[DEBUG] 01-03-2024 16:31:02.322 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@66e1b2a
[DEBUG] 01-03-2024 16:31:02.322 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@343db2f6
[DEBUG] 01-03-2024 16:31:02.323 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@2c815fdc
[DEBUG] 01-03-2024 16:31:02.323 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@769b0752
[DEBUG] 01-03-2024 16:31:02.324 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@769b0752
[DEBUG] 01-03-2024 16:31:02.324 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@dae5e0
[DEBUG] 01-03-2024 16:31:02.324 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@dae5e0
[DEBUG] 01-03-2024 16:31:02.325 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@59a94d0f
[DEBUG] 01-03-2024 16:31:02.325 [main] BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@7ff09659
[DEBUG] 01-03-2024 16:31:02.325 [main] BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@517fbf62
[DEBUG] 01-03-2024 16:31:02.326 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@65db548
[DEBUG] 01-03-2024 16:31:02.326 [main] BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@150f41b9
[DEBUG] 01-03-2024 16:31:02.326 [main] BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@6e364f1f
[DEBUG] 01-03-2024 16:31:02.327 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@429e7914
[DEBUG] 01-03-2024 16:31:02.327 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@429e7914
[DEBUG] 01-03-2024 16:31:02.327 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@298263fa
[DEBUG] 01-03-2024 16:31:02.328 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@298263fa
[DEBUG] 01-03-2024 16:31:02.328 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@466fedfa
[DEBUG] 01-03-2024 16:31:02.329 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@466fedfa
[DEBUG] 01-03-2024 16:31:02.329 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@1a7d0c9f
[DEBUG] 01-03-2024 16:31:02.330 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@1a7d0c9f
[DEBUG] 01-03-2024 16:31:02.330 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@2b1a901d
[DEBUG] 01-03-2024 16:31:02.330 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@2b1a901d
[DEBUG] 01-03-2024 16:31:02.331 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@11bdab37
[DEBUG] 01-03-2024 16:31:02.331 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@280484c7
[DEBUG] 01-03-2024 16:31:02.331 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@5a6f6cac
[DEBUG] 01-03-2024 16:31:02.332 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@5a6f6cac
[DEBUG] 01-03-2024 16:31:02.332 [main] BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@258a8584
[DEBUG] 01-03-2024 16:31:02.332 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@59127611
[DEBUG] 01-03-2024 16:31:02.333 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@553ce348
[DEBUG] 01-03-2024 16:31:02.333 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@7417ef4f
[DEBUG] 01-03-2024 16:31:02.334 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@7417ef4f
[DEBUG] 01-03-2024 16:31:02.334 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@5c0e2ec
[DEBUG] 01-03-2024 16:31:02.334 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4fa8bebb
[DEBUG] 01-03-2024 16:31:02.335 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@7d3c22a5
[DEBUG] 01-03-2024 16:31:02.335 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@7d3c22a5
[DEBUG] 01-03-2024 16:31:02.335 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@369ad7da
[DEBUG] 01-03-2024 16:31:02.336 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@369ad7da
[DEBUG] 01-03-2024 16:31:02.336 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@344f9467
[DEBUG] 01-03-2024 16:31:02.336 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@344f9467
[DEBUG] 01-03-2024 16:31:02.337 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@344f9467
[DEBUG] 01-03-2024 16:31:02.337 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@3e98b933
[DEBUG] 01-03-2024 16:31:02.337 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@3e98b933
[DEBUG] 01-03-2024 16:31:02.338 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@3e98b933
[DEBUG] 01-03-2024 16:31:02.338 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@222d9d4f
[DEBUG] 01-03-2024 16:31:02.338 [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@4269aad7
[DEBUG] 01-03-2024 16:31:02.339 [main] BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@a4df251
[DEBUG] 01-03-2024 16:31:02.339 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@a4df251
[DEBUG] 01-03-2024 16:31:02.339 [main] BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@71e7830a
[DEBUG] 01-03-2024 16:31:02.340 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@71e7830a
[DEBUG] 01-03-2024 16:31:02.340 [main] BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@71e7830a
[DEBUG] 01-03-2024 16:31:02.340 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@3feebf9c
[DEBUG] 01-03-2024 16:31:02.341 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@305e95a4
[DEBUG] 01-03-2024 16:31:02.341 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@55e42684
[DEBUG] 01-03-2024 16:31:02.341 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@55e42684
[DEBUG] 01-03-2024 16:31:02.342 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@18d610e1
[DEBUG] 01-03-2024 16:31:02.343 [main] BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@18d610e1
[DEBUG] 01-03-2024 16:31:02.347 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@18d610e1
[DEBUG] 01-03-2024 16:31:02.348 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@528e5e38
[DEBUG] 01-03-2024 16:31:02.348 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@528e5e38
[DEBUG] 01-03-2024 16:31:02.349 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@16391278
[DEBUG] 01-03-2024 16:31:02.349 [main] BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@16391278
[DEBUG] 01-03-2024 16:31:02.350 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@621dc63d
[DEBUG] 01-03-2024 16:31:02.350 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@621dc63d
[DEBUG] 01-03-2024 16:31:02.350 [main] BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@4ae49387
[DEBUG] 01-03-2024 16:31:02.351 [main] BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@4ae49387
[DEBUG] 01-03-2024 16:31:02.351 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@6abb7b7d
[DEBUG] 01-03-2024 16:31:02.351 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@6abb7b7d
[DEBUG] 01-03-2024 16:31:02.352 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@34cf0e80
[DEBUG] 01-03-2024 16:31:02.366 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@4a122e68
[DEBUG] 01-03-2024 16:31:02.367 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@4a122e68
[DEBUG] 01-03-2024 16:31:02.370 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@4aab7195
[DEBUG] 01-03-2024 16:31:02.371 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@6210666c
[DEBUG] 01-03-2024 16:31:02.372 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@1dca62c2
[DEBUG] 01-03-2024 16:31:02.372 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@52657d5f
[DEBUG] 01-03-2024 16:31:02.372 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@43d3995f
[DEBUG] 01-03-2024 16:31:02.373 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@2211b44f
[DEBUG] 01-03-2024 16:31:02.373 [main] BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@6c830ebd
[DEBUG] 01-03-2024 16:31:02.373 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@15f519f7
[DEBUG] 01-03-2024 16:31:02.374 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@4a336377
[DEBUG] 01-03-2024 16:31:04.056 [main] DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@27b490de) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@36cf16a6)
[DEBUG] 01-03-2024 16:31:04.063 [main] JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
[DEBUG] 01-03-2024 16:31:04.063 [main] JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 01-03-2024 16:31:04.103 [main] BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@32e7b78d
[DEBUG] 01-03-2024 16:31:04.104 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@32e7b78d
[DEBUG] 01-03-2024 16:31:04.105 [main] BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@4a122e68`
[DEBUG] 01-03-2024 16:31:04.112 [main] JdbcTypeRegistry - addDescriptor(3100, NumericTypeDescriptor) replaced previous registration(org.hibernate.dialect.PostgreSQLIntervalSecondJdbcType@76220ef1)
[DEBUG] 01-03-2024 16:31:04.128 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 01-03-2024 16:31:04.128 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 01-03-2024 16:31:04.129 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 01-03-2024 16:31:04.129 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 01-03-2024 16:31:04.129 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 01-03-2024 16:31:04.130 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 01-03-2024 16:31:04.135 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 01-03-2024 16:31:04.137 [main] BasicTypeRegistry - Adding type registration OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 01-03-2024 16:31:04.138 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 01-03-2024 16:31:04.142 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@86377d5] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@87220f1]
[WARN ] 01-03-2024 16:31:04.556 [main] InFlightMetadataCollectorImpl - HHH000069: Duplicate generator name generator
[INFO ] 01-03-2024 16:31:04.737 [main] BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
[INFO ] 01-03-2024 16:31:07.573 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 01-03-2024 16:31:07.574 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@86377d5] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@71842e18]
[TRACE] 01-03-2024 16:31:07.583 [main] TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@71842e18] for TypeConfiguration
[WARN ] 01-03-2024 16:31:08.516 [main] JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[INFO ] 01-03-2024 16:31:09.482 [main] Http11NioProtocol - Starting ProtocolHandler ["http-nio-8300"]
[INFO ] 01-03-2024 16:31:09.542 [main] TomcatWebServer - Tomcat started on port(s): 8300 (http) with context path '/users_products_api'
[INFO ] 01-03-2024 16:31:09.575 [main] TestSpringBootApplication - Started TestSpringBootApplication in 21.307 seconds (process running for 24.284)
[INFO ] 01-03-2024 16:31:12.438 [http-nio-8300-exec-1] [/users_products_api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[INFO ] 01-03-2024 16:31:12.439 [http-nio-8300-exec-1] DispatcherServlet - Initializing Servlet 'dispatcherServlet'
[INFO ] 01-03-2024 16:31:12.443 [http-nio-8300-exec-1] DispatcherServlet - Completed initialization in 4 ms
[WARN ] 01-03-2024 16:31:14.297 [reactor-tcp-epoll-1] ReactorNettyClient - Error: SEVERITY_LOCALIZED=ERROR, SEVERITY_NON_LOCALIZED=ERROR, CODE=42P01, MESSAGE=relation "e_users" does not exist, POSITION=104, FILE=parse_relation.c, LINE=1191, ROUTINE=parserOpenTable
[TRACE] 01-03-2024 16:38:38.281 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@71842e18] for TypeConfiguration
[DEBUG] 01-03-2024 16:38:38.289 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@626f47fb] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@71842e18]
[INFO ] 01-03-2024 16:38:49.056 [background-preinit] Version - HV000001: Hibernate Validator 8.0.1.Final
[INFO ] 01-03-2024 16:38:49.195 [main] TestSpringBootApplication - Starting TestSpringBootApplication using Java 17.0.10 with PID 2044963 (/home/dima/backend_microservice/UserProductsMicroService/target/classes started by dima in /home/dima/backend_microservice/UserProductsMicroService)
[INFO ] 01-03-2024 16:38:49.209 [main] TestSpringBootApplication - No active profile set, falling back to 1 default profile: "default"
[ERROR] 01-03-2024 16:38:51.477 [main] SpringApplication - Application run failed
java.lang.IllegalStateException: Cannot register alias 'databaseClient' for name 'r2dbcDatabaseClient': Alias would override bean definition 'databaseClient'
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.checkForAliasCircle(DefaultListableBeanFactory.java:1168) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.core.SimpleAliasRegistry.registerAlias(SimpleAliasRegistry.java:80) ~[spring-core-6.0.11.jar:6.0.11]
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsForBeanMethod(ConfigurationClassBeanDefinitionReader.java:200) ~[spring-context-6.0.11.jar:6.0.11]
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsForConfigurationClass(ConfigurationClassBeanDefinitionReader.java:144) ~[spring-context-6.0.11.jar:6.0.11]
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitions(ConfigurationClassBeanDefinitionReader.java:120) ~[spring-context-6.0.11.jar:6.0.11]
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.processConfigBeanDefinitions(ConfigurationClassPostProcessor.java:427) ~[spring-context-6.0.11.jar:6.0.11]
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.postProcessBeanDefinitionRegistry(ConfigurationClassPostProcessor.java:287) ~[spring-context-6.0.11.jar:6.0.11]
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanDefinitionRegistryPostProcessors(PostProcessorRegistrationDelegate.java:344) ~[spring-context-6.0.11.jar:6.0.11]
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:115) ~[spring-context-6.0.11.jar:6.0.11]
	at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:771) ~[spring-context-6.0.11.jar:6.0.11]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:589) ~[spring-context-6.0.11.jar:6.0.11]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146) ~[spring-boot-3.1.2.jar:3.1.2]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734) [spring-boot-3.1.2.jar:3.1.2]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:436) [spring-boot-3.1.2.jar:3.1.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312) [spring-boot-3.1.2.jar:3.1.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306) [spring-boot-3.1.2.jar:3.1.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295) [spring-boot-3.1.2.jar:3.1.2]
	at App.TestSpringBootApplication.main(TestSpringBootApplication.java:32) [classes/:?]
[INFO ] 01-03-2024 16:41:31.952 [background-preinit] Version - HV000001: Hibernate Validator 8.0.1.Final
[INFO ] 01-03-2024 16:41:32.073 [main] TestSpringBootApplication - Starting TestSpringBootApplication using Java 17.0.10 with PID 2046494 (/home/dima/backend_microservice/UserProductsMicroService/target/classes started by dima in /home/dima/backend_microservice/UserProductsMicroService)
[INFO ] 01-03-2024 16:41:32.179 [main] TestSpringBootApplication - No active profile set, falling back to 1 default profile: "default"
[INFO ] 01-03-2024 16:41:35.354 [main] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
[INFO ] 01-03-2024 16:41:35.356 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data R2DBC repositories in DEFAULT mode.
[INFO ] 01-03-2024 16:41:35.841 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 474 ms. Found 1 R2DBC repository interfaces.
[INFO ] 01-03-2024 16:41:36.548 [main] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
[INFO ] 01-03-2024 16:41:36.551 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO ] 01-03-2024 16:41:36.618 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 54 ms. Found 0 JPA repository interfaces.
[ERROR] 01-03-2024 16:41:37.953 [main] AprLifecycleListener - An incompatible version [1.2.23] of the Apache Tomcat Native library is installed, while Tomcat requires version [1.2.34]
[INFO ] 01-03-2024 16:41:38.821 [main] TomcatWebServer - Tomcat initialized with port(s): 8300 (http)
[INFO ] 01-03-2024 16:41:38.841 [main] Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8300"]
[INFO ] 01-03-2024 16:41:38.849 [main] StandardService - Starting service [Tomcat]
[INFO ] 01-03-2024 16:41:38.850 [main] StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.11]
[INFO ] 01-03-2024 16:41:39.865 [main] TldScanner - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
[INFO ] 01-03-2024 16:41:39.882 [main] [/users_products_api] - Initializing Spring embedded WebApplicationContext
[INFO ] 01-03-2024 16:41:39.887 [main] ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 7347 ms
[INFO ] 01-03-2024 16:41:41.144 [main] Version - HHH000412: Hibernate ORM core version 6.2.6.Final
[INFO ] 01-03-2024 16:41:41.150 [main] Environment - HHH000406: Using bytecode reflection optimizer
[DEBUG] 01-03-2024 16:41:41.530 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@517fbf62
[DEBUG] 01-03-2024 16:41:41.531 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@517fbf62
[DEBUG] 01-03-2024 16:41:41.532 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@517fbf62
[DEBUG] 01-03-2024 16:41:41.532 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@65db548
[DEBUG] 01-03-2024 16:41:41.533 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@65db548
[DEBUG] 01-03-2024 16:41:41.533 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@150f41b9
[DEBUG] 01-03-2024 16:41:41.533 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@150f41b9
[DEBUG] 01-03-2024 16:41:41.534 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@6e364f1f
[DEBUG] 01-03-2024 16:41:41.534 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@6e364f1f
[DEBUG] 01-03-2024 16:41:41.535 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@429e7914
[DEBUG] 01-03-2024 16:41:41.535 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@429e7914
[DEBUG] 01-03-2024 16:41:41.536 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@429e7914
[DEBUG] 01-03-2024 16:41:41.536 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@298263fa
[DEBUG] 01-03-2024 16:41:41.537 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@298263fa
[DEBUG] 01-03-2024 16:41:41.537 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@298263fa
[DEBUG] 01-03-2024 16:41:41.538 [main] BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@466fedfa
[DEBUG] 01-03-2024 16:41:41.538 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@466fedfa
[DEBUG] 01-03-2024 16:41:41.539 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@1a7d0c9f
[DEBUG] 01-03-2024 16:41:41.539 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@2b1a901d
[DEBUG] 01-03-2024 16:41:41.540 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@2b1a901d
[DEBUG] 01-03-2024 16:41:41.540 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@11bdab37
[DEBUG] 01-03-2024 16:41:41.540 [main] BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@280484c7
[DEBUG] 01-03-2024 16:41:41.541 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@5a6f6cac
[DEBUG] 01-03-2024 16:41:41.541 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@5a6f6cac
[DEBUG] 01-03-2024 16:41:41.542 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@5a6f6cac
[DEBUG] 01-03-2024 16:41:41.542 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@258a8584
[DEBUG] 01-03-2024 16:41:41.543 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@258a8584
[DEBUG] 01-03-2024 16:41:41.543 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@258a8584
[DEBUG] 01-03-2024 16:41:41.544 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@59127611
[DEBUG] 01-03-2024 16:41:41.544 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@59127611
[DEBUG] 01-03-2024 16:41:41.545 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@59127611
[DEBUG] 01-03-2024 16:41:41.545 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@553ce348
[DEBUG] 01-03-2024 16:41:41.545 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@553ce348
[DEBUG] 01-03-2024 16:41:41.546 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@553ce348
[DEBUG] 01-03-2024 16:41:41.547 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@7417ef4f
[DEBUG] 01-03-2024 16:41:41.547 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@7417ef4f
[DEBUG] 01-03-2024 16:41:41.547 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@7417ef4f
[DEBUG] 01-03-2024 16:41:41.548 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@5c0e2ec
[DEBUG] 01-03-2024 16:41:41.548 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@5c0e2ec
[DEBUG] 01-03-2024 16:41:41.549 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@4fa8bebb
[DEBUG] 01-03-2024 16:41:41.549 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@4fa8bebb
[DEBUG] 01-03-2024 16:41:41.550 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@7d3c22a5
[DEBUG] 01-03-2024 16:41:41.550 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@7d3c22a5
[DEBUG] 01-03-2024 16:41:41.550 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@7d3c22a5
[DEBUG] 01-03-2024 16:41:41.551 [main] BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@369ad7da
[DEBUG] 01-03-2024 16:41:41.551 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@344f9467
[DEBUG] 01-03-2024 16:41:41.552 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@344f9467
[DEBUG] 01-03-2024 16:41:41.552 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@3e98b933
[DEBUG] 01-03-2024 16:41:41.553 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@222d9d4f
[DEBUG] 01-03-2024 16:41:41.553 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@222d9d4f
[DEBUG] 01-03-2024 16:41:41.553 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@222d9d4f
[DEBUG] 01-03-2024 16:41:41.554 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@4269aad7
[DEBUG] 01-03-2024 16:41:41.554 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@a4df251
[DEBUG] 01-03-2024 16:41:41.555 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@71e7830a
[DEBUG] 01-03-2024 16:41:41.555 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@3feebf9c
[DEBUG] 01-03-2024 16:41:41.556 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@3feebf9c
[DEBUG] 01-03-2024 16:41:41.556 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@305e95a4
[DEBUG] 01-03-2024 16:41:41.556 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@305e95a4
[DEBUG] 01-03-2024 16:41:41.557 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@55e42684
[DEBUG] 01-03-2024 16:41:41.557 [main] BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@18d610e1
[DEBUG] 01-03-2024 16:41:41.557 [main] BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@528e5e38
[DEBUG] 01-03-2024 16:41:41.558 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@16391278
[DEBUG] 01-03-2024 16:41:41.558 [main] BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@621dc63d
[DEBUG] 01-03-2024 16:41:41.558 [main] BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@4ae49387
[DEBUG] 01-03-2024 16:41:41.558 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@6abb7b7d
[DEBUG] 01-03-2024 16:41:41.559 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@6abb7b7d
[DEBUG] 01-03-2024 16:41:41.559 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@34cf0e80
[DEBUG] 01-03-2024 16:41:41.560 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@34cf0e80
[DEBUG] 01-03-2024 16:41:41.561 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@38ef1a0a
[DEBUG] 01-03-2024 16:41:41.561 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@38ef1a0a
[DEBUG] 01-03-2024 16:41:41.561 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@56f9de3b
[DEBUG] 01-03-2024 16:41:41.562 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@56f9de3b
[DEBUG] 01-03-2024 16:41:41.562 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@6728370a
[DEBUG] 01-03-2024 16:41:41.562 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@6728370a
[DEBUG] 01-03-2024 16:41:41.563 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2b5f8e61
[DEBUG] 01-03-2024 16:41:41.563 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@6ba0ee4a
[DEBUG] 01-03-2024 16:41:41.564 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@73b0ed03
[DEBUG] 01-03-2024 16:41:41.564 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@73b0ed03
[DEBUG] 01-03-2024 16:41:41.564 [main] BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@55061418
[DEBUG] 01-03-2024 16:41:41.565 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@27db45f
[DEBUG] 01-03-2024 16:41:41.565 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@6ec3d8e4
[DEBUG] 01-03-2024 16:41:41.566 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@1aeff8ca
[DEBUG] 01-03-2024 16:41:41.566 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@1aeff8ca
[DEBUG] 01-03-2024 16:41:41.566 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@7f2c995b
[DEBUG] 01-03-2024 16:41:41.567 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@101c15ad
[DEBUG] 01-03-2024 16:41:41.567 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@6068ebb2
[DEBUG] 01-03-2024 16:41:41.567 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@6068ebb2
[DEBUG] 01-03-2024 16:41:41.568 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@5a466dd
[DEBUG] 01-03-2024 16:41:41.568 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@5a466dd
[DEBUG] 01-03-2024 16:41:41.568 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@1ed9d173
[DEBUG] 01-03-2024 16:41:41.568 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@1ed9d173
[DEBUG] 01-03-2024 16:41:41.569 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@1ed9d173
[DEBUG] 01-03-2024 16:41:41.569 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@6e981e78
[DEBUG] 01-03-2024 16:41:41.569 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@6e981e78
[DEBUG] 01-03-2024 16:41:41.570 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@6e981e78
[DEBUG] 01-03-2024 16:41:41.570 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@498a4d62
[DEBUG] 01-03-2024 16:41:41.570 [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@6fbe4800
[DEBUG] 01-03-2024 16:41:41.571 [main] BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@3f3c5ecd
[DEBUG] 01-03-2024 16:41:41.571 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@3f3c5ecd
[DEBUG] 01-03-2024 16:41:41.572 [main] BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@1179fc8c
[DEBUG] 01-03-2024 16:41:41.572 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@1179fc8c
[DEBUG] 01-03-2024 16:41:41.572 [main] BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@1179fc8c
[DEBUG] 01-03-2024 16:41:41.573 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@a03529c
[DEBUG] 01-03-2024 16:41:41.573 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@1760e594
[DEBUG] 01-03-2024 16:41:41.573 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@4af70b83
[DEBUG] 01-03-2024 16:41:41.574 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@4af70b83
[DEBUG] 01-03-2024 16:41:41.574 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@143413cd
[DEBUG] 01-03-2024 16:41:41.575 [main] BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@143413cd
[DEBUG] 01-03-2024 16:41:41.575 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@143413cd
[DEBUG] 01-03-2024 16:41:41.576 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@4b32465
[DEBUG] 01-03-2024 16:41:41.576 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@4b32465
[DEBUG] 01-03-2024 16:41:41.576 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@146f3d22
[DEBUG] 01-03-2024 16:41:41.577 [main] BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@146f3d22
[DEBUG] 01-03-2024 16:41:41.577 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@66b6873f
[DEBUG] 01-03-2024 16:41:41.577 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@66b6873f
[DEBUG] 01-03-2024 16:41:41.578 [main] BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@52285a5f
[DEBUG] 01-03-2024 16:41:41.578 [main] BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@52285a5f
[DEBUG] 01-03-2024 16:41:41.578 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@4fa5cc73
[DEBUG] 01-03-2024 16:41:41.579 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@4fa5cc73
[DEBUG] 01-03-2024 16:41:41.579 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@224e6e88
[DEBUG] 01-03-2024 16:41:41.604 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@628962e5
[DEBUG] 01-03-2024 16:41:41.604 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@628962e5
[DEBUG] 01-03-2024 16:41:41.607 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@50b4364
[DEBUG] 01-03-2024 16:41:41.608 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@5e541ef9
[DEBUG] 01-03-2024 16:41:41.608 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@38054d01
[DEBUG] 01-03-2024 16:41:41.609 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@28ce75ec
[DEBUG] 01-03-2024 16:41:41.609 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@778113f2
[DEBUG] 01-03-2024 16:41:41.609 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@9dc782d
[DEBUG] 01-03-2024 16:41:41.610 [main] BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@1ba35152
[DEBUG] 01-03-2024 16:41:41.611 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@401926df
[DEBUG] 01-03-2024 16:41:41.611 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@3ff8a3ad
[DEBUG] 01-03-2024 16:41:42.978 [main] DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2cce10bc) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@73234691)
[DEBUG] 01-03-2024 16:41:42.986 [main] JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
[DEBUG] 01-03-2024 16:41:42.987 [main] JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 01-03-2024 16:41:43.020 [main] BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@6b0ba697
[DEBUG] 01-03-2024 16:41:43.020 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@6b0ba697
[DEBUG] 01-03-2024 16:41:43.021 [main] BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@628962e5`
[DEBUG] 01-03-2024 16:41:43.024 [main] JdbcTypeRegistry - addDescriptor(3100, NumericTypeDescriptor) replaced previous registration(org.hibernate.dialect.PostgreSQLIntervalSecondJdbcType@1e7cfd49)
[DEBUG] 01-03-2024 16:41:43.039 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 01-03-2024 16:41:43.040 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 01-03-2024 16:41:43.040 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 01-03-2024 16:41:43.040 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 01-03-2024 16:41:43.041 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 01-03-2024 16:41:43.041 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 01-03-2024 16:41:43.044 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 01-03-2024 16:41:43.045 [main] BasicTypeRegistry - Adding type registration OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 01-03-2024 16:41:43.045 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 01-03-2024 16:41:43.049 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1214c98b] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@6ab50d1c]
[WARN ] 01-03-2024 16:41:43.540 [main] InFlightMetadataCollectorImpl - HHH000069: Duplicate generator name generator
[INFO ] 01-03-2024 16:41:43.877 [main] BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
[INFO ] 01-03-2024 16:41:47.109 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 01-03-2024 16:41:47.111 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1214c98b] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@53c21c05]
[TRACE] 01-03-2024 16:41:47.119 [main] TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@53c21c05] for TypeConfiguration
[WARN ] 01-03-2024 16:41:47.609 [main] JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[INFO ] 01-03-2024 16:41:49.231 [main] Http11NioProtocol - Starting ProtocolHandler ["http-nio-8300"]
[INFO ] 01-03-2024 16:41:49.310 [main] TomcatWebServer - Tomcat started on port(s): 8300 (http) with context path '/users_products_api'
[INFO ] 01-03-2024 16:41:49.358 [main] TestSpringBootApplication - Started TestSpringBootApplication in 18.505 seconds (process running for 21.839)
[TRACE] 01-03-2024 16:43:59.442 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@53c21c05] for TypeConfiguration
[DEBUG] 01-03-2024 16:43:59.442 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@20de167d] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@53c21c05]
[INFO ] 01-03-2024 16:44:11.624 [background-preinit] Version - HV000001: Hibernate Validator 8.0.1.Final
[INFO ] 01-03-2024 16:44:11.697 [main] TestSpringBootApplication - Starting TestSpringBootApplication using Java 17.0.10 with PID 2047847 (/home/dima/backend_microservice/UserProductsMicroService/target/classes started by dima in /home/dima/backend_microservice/UserProductsMicroService)
[INFO ] 01-03-2024 16:44:11.734 [main] TestSpringBootApplication - No active profile set, falling back to 1 default profile: "default"
[ERROR] 01-03-2024 16:44:14.066 [main] SpringApplication - Application run failed
java.lang.IllegalStateException: Cannot register alias 'databaseClient' for name 'r2dbcDatabaseClient': Alias would override bean definition 'databaseClient'
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.checkForAliasCircle(DefaultListableBeanFactory.java:1168) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.core.SimpleAliasRegistry.registerAlias(SimpleAliasRegistry.java:80) ~[spring-core-6.0.11.jar:6.0.11]
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsForBeanMethod(ConfigurationClassBeanDefinitionReader.java:200) ~[spring-context-6.0.11.jar:6.0.11]
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsForConfigurationClass(ConfigurationClassBeanDefinitionReader.java:144) ~[spring-context-6.0.11.jar:6.0.11]
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitions(ConfigurationClassBeanDefinitionReader.java:120) ~[spring-context-6.0.11.jar:6.0.11]
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.processConfigBeanDefinitions(ConfigurationClassPostProcessor.java:427) ~[spring-context-6.0.11.jar:6.0.11]
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.postProcessBeanDefinitionRegistry(ConfigurationClassPostProcessor.java:287) ~[spring-context-6.0.11.jar:6.0.11]
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanDefinitionRegistryPostProcessors(PostProcessorRegistrationDelegate.java:344) ~[spring-context-6.0.11.jar:6.0.11]
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:115) ~[spring-context-6.0.11.jar:6.0.11]
	at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:771) ~[spring-context-6.0.11.jar:6.0.11]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:589) ~[spring-context-6.0.11.jar:6.0.11]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146) ~[spring-boot-3.1.2.jar:3.1.2]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734) [spring-boot-3.1.2.jar:3.1.2]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:436) [spring-boot-3.1.2.jar:3.1.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312) [spring-boot-3.1.2.jar:3.1.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306) [spring-boot-3.1.2.jar:3.1.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295) [spring-boot-3.1.2.jar:3.1.2]
	at App.TestSpringBootApplication.main(TestSpringBootApplication.java:32) [classes/:?]
[INFO ] 01-03-2024 16:46:18.664 [background-preinit] Version - HV000001: Hibernate Validator 8.0.1.Final
[INFO ] 01-03-2024 16:46:18.807 [main] TestSpringBootApplication - Starting TestSpringBootApplication using Java 17.0.10 with PID 2048955 (/home/dima/backend_microservice/UserProductsMicroService/target/classes started by dima in /home/dima/backend_microservice/UserProductsMicroService)
[INFO ] 01-03-2024 16:46:18.821 [main] TestSpringBootApplication - No active profile set, falling back to 1 default profile: "default"
[INFO ] 01-03-2024 16:46:21.099 [main] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
[INFO ] 01-03-2024 16:46:21.101 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data R2DBC repositories in DEFAULT mode.
[INFO ] 01-03-2024 16:46:21.590 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 475 ms. Found 1 R2DBC repository interfaces.
[INFO ] 01-03-2024 16:46:22.317 [main] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
[INFO ] 01-03-2024 16:46:22.329 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO ] 01-03-2024 16:46:22.377 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 37 ms. Found 0 JPA repository interfaces.
[ERROR] 01-03-2024 16:46:23.928 [main] AprLifecycleListener - An incompatible version [1.2.23] of the Apache Tomcat Native library is installed, while Tomcat requires version [1.2.34]
[INFO ] 01-03-2024 16:46:25.334 [main] TomcatWebServer - Tomcat initialized with port(s): 8300 (http)
[INFO ] 01-03-2024 16:46:25.362 [main] Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8300"]
[INFO ] 01-03-2024 16:46:25.372 [main] StandardService - Starting service [Tomcat]
[INFO ] 01-03-2024 16:46:25.373 [main] StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.11]
[INFO ] 01-03-2024 16:46:26.722 [main] TldScanner - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
[INFO ] 01-03-2024 16:46:26.743 [main] [/users_products_api] - Initializing Spring embedded WebApplicationContext
[INFO ] 01-03-2024 16:46:26.750 [main] ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 7666 ms
[INFO ] 01-03-2024 16:46:28.412 [main] Version - HHH000412: Hibernate ORM core version 6.2.6.Final
[INFO ] 01-03-2024 16:46:28.418 [main] Environment - HHH000406: Using bytecode reflection optimizer
[DEBUG] 01-03-2024 16:46:28.833 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@a4df251
[DEBUG] 01-03-2024 16:46:28.834 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@a4df251
[DEBUG] 01-03-2024 16:46:28.835 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@a4df251
[DEBUG] 01-03-2024 16:46:28.835 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@71e7830a
[DEBUG] 01-03-2024 16:46:28.835 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@71e7830a
[DEBUG] 01-03-2024 16:46:28.836 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@3feebf9c
[DEBUG] 01-03-2024 16:46:28.836 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@3feebf9c
[DEBUG] 01-03-2024 16:46:28.837 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@305e95a4
[DEBUG] 01-03-2024 16:46:28.837 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@305e95a4
[DEBUG] 01-03-2024 16:46:28.838 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@55e42684
[DEBUG] 01-03-2024 16:46:28.838 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@55e42684
[DEBUG] 01-03-2024 16:46:28.838 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@55e42684
[DEBUG] 01-03-2024 16:46:28.839 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@18d610e1
[DEBUG] 01-03-2024 16:46:28.840 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@18d610e1
[DEBUG] 01-03-2024 16:46:28.840 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@18d610e1
[DEBUG] 01-03-2024 16:46:28.841 [main] BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@528e5e38
[DEBUG] 01-03-2024 16:46:28.841 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@528e5e38
[DEBUG] 01-03-2024 16:46:28.841 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@16391278
[DEBUG] 01-03-2024 16:46:28.842 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@621dc63d
[DEBUG] 01-03-2024 16:46:28.842 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@621dc63d
[DEBUG] 01-03-2024 16:46:28.843 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@4ae49387
[DEBUG] 01-03-2024 16:46:28.844 [main] BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@6abb7b7d
[DEBUG] 01-03-2024 16:46:28.844 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@34cf0e80
[DEBUG] 01-03-2024 16:46:28.845 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@34cf0e80
[DEBUG] 01-03-2024 16:46:28.845 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@34cf0e80
[DEBUG] 01-03-2024 16:46:28.845 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@38ef1a0a
[DEBUG] 01-03-2024 16:46:28.846 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@38ef1a0a
[DEBUG] 01-03-2024 16:46:28.846 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@38ef1a0a
[DEBUG] 01-03-2024 16:46:28.847 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@56f9de3b
[DEBUG] 01-03-2024 16:46:28.847 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@56f9de3b
[DEBUG] 01-03-2024 16:46:28.848 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@56f9de3b
[DEBUG] 01-03-2024 16:46:28.848 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@6728370a
[DEBUG] 01-03-2024 16:46:28.849 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@6728370a
[DEBUG] 01-03-2024 16:46:28.849 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@6728370a
[DEBUG] 01-03-2024 16:46:28.849 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@2b5f8e61
[DEBUG] 01-03-2024 16:46:28.850 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@2b5f8e61
[DEBUG] 01-03-2024 16:46:28.850 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@2b5f8e61
[DEBUG] 01-03-2024 16:46:28.851 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@6ba0ee4a
[DEBUG] 01-03-2024 16:46:28.852 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@6ba0ee4a
[DEBUG] 01-03-2024 16:46:28.852 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@73b0ed03
[DEBUG] 01-03-2024 16:46:28.852 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@73b0ed03
[DEBUG] 01-03-2024 16:46:28.853 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@55061418
[DEBUG] 01-03-2024 16:46:28.853 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@55061418
[DEBUG] 01-03-2024 16:46:28.854 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@55061418
[DEBUG] 01-03-2024 16:46:28.854 [main] BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@27db45f
[DEBUG] 01-03-2024 16:46:28.854 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@6ec3d8e4
[DEBUG] 01-03-2024 16:46:28.855 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@6ec3d8e4
[DEBUG] 01-03-2024 16:46:28.855 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@1aeff8ca
[DEBUG] 01-03-2024 16:46:28.856 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@7f2c995b
[DEBUG] 01-03-2024 16:46:28.857 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@7f2c995b
[DEBUG] 01-03-2024 16:46:28.857 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@7f2c995b
[DEBUG] 01-03-2024 16:46:28.857 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@101c15ad
[DEBUG] 01-03-2024 16:46:28.858 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@6068ebb2
[DEBUG] 01-03-2024 16:46:28.858 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@5a466dd
[DEBUG] 01-03-2024 16:46:28.858 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@1ed9d173
[DEBUG] 01-03-2024 16:46:28.859 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@1ed9d173
[DEBUG] 01-03-2024 16:46:28.859 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@6e981e78
[DEBUG] 01-03-2024 16:46:28.860 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@6e981e78
[DEBUG] 01-03-2024 16:46:28.860 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@498a4d62
[DEBUG] 01-03-2024 16:46:28.860 [main] BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@6fbe4800
[DEBUG] 01-03-2024 16:46:28.860 [main] BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@3f3c5ecd
[DEBUG] 01-03-2024 16:46:28.861 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@1179fc8c
[DEBUG] 01-03-2024 16:46:28.861 [main] BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@a03529c
[DEBUG] 01-03-2024 16:46:28.861 [main] BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@1760e594
[DEBUG] 01-03-2024 16:46:28.862 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@4af70b83
[DEBUG] 01-03-2024 16:46:28.862 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@4af70b83
[DEBUG] 01-03-2024 16:46:28.862 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@143413cd
[DEBUG] 01-03-2024 16:46:28.863 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@143413cd
[DEBUG] 01-03-2024 16:46:28.863 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@4b32465
[DEBUG] 01-03-2024 16:46:28.863 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@4b32465
[DEBUG] 01-03-2024 16:46:28.864 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@146f3d22
[DEBUG] 01-03-2024 16:46:28.864 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@146f3d22
[DEBUG] 01-03-2024 16:46:28.864 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@66b6873f
[DEBUG] 01-03-2024 16:46:28.865 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@66b6873f
[DEBUG] 01-03-2024 16:46:28.865 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@52285a5f
[DEBUG] 01-03-2024 16:46:28.866 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4fa5cc73
[DEBUG] 01-03-2024 16:46:28.866 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@224e6e88
[DEBUG] 01-03-2024 16:46:28.867 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@224e6e88
[DEBUG] 01-03-2024 16:46:28.868 [main] BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@70139a81
[DEBUG] 01-03-2024 16:46:28.869 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@60f9dc7e
[DEBUG] 01-03-2024 16:46:28.869 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@15e5246
[DEBUG] 01-03-2024 16:46:28.869 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@503556cb
[DEBUG] 01-03-2024 16:46:28.870 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@503556cb
[DEBUG] 01-03-2024 16:46:28.870 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@3c9e19de
[DEBUG] 01-03-2024 16:46:28.870 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@12aa381f
[DEBUG] 01-03-2024 16:46:28.871 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@6115846e
[DEBUG] 01-03-2024 16:46:28.871 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@6115846e
[DEBUG] 01-03-2024 16:46:28.871 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@1bec1589
[DEBUG] 01-03-2024 16:46:28.872 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@1bec1589
[DEBUG] 01-03-2024 16:46:28.872 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@57f0bfc3
[DEBUG] 01-03-2024 16:46:28.872 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@57f0bfc3
[DEBUG] 01-03-2024 16:46:28.873 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@57f0bfc3
[DEBUG] 01-03-2024 16:46:28.873 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@14590fe2
[DEBUG] 01-03-2024 16:46:28.873 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@14590fe2
[DEBUG] 01-03-2024 16:46:28.874 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@14590fe2
[DEBUG] 01-03-2024 16:46:28.874 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@5922cff3
[DEBUG] 01-03-2024 16:46:28.874 [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@2299d903
[DEBUG] 01-03-2024 16:46:28.875 [main] BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@70c56434
[DEBUG] 01-03-2024 16:46:28.875 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@70c56434
[DEBUG] 01-03-2024 16:46:28.876 [main] BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@2c3f43d1
[DEBUG] 01-03-2024 16:46:28.876 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@2c3f43d1
[DEBUG] 01-03-2024 16:46:28.876 [main] BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@2c3f43d1
[DEBUG] 01-03-2024 16:46:28.877 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@632d4cf2
[DEBUG] 01-03-2024 16:46:28.877 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@f10d055
[DEBUG] 01-03-2024 16:46:28.877 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@542ff147
[DEBUG] 01-03-2024 16:46:28.878 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@542ff147
[DEBUG] 01-03-2024 16:46:28.878 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@2d801d8
[DEBUG] 01-03-2024 16:46:28.879 [main] BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@2d801d8
[DEBUG] 01-03-2024 16:46:28.879 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@2d801d8
[DEBUG] 01-03-2024 16:46:28.880 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@b9b97ad
[DEBUG] 01-03-2024 16:46:28.880 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@b9b97ad
[DEBUG] 01-03-2024 16:46:28.880 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@2807cf3
[DEBUG] 01-03-2024 16:46:28.881 [main] BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@2807cf3
[DEBUG] 01-03-2024 16:46:28.881 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@298e002d
[DEBUG] 01-03-2024 16:46:28.881 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@298e002d
[DEBUG] 01-03-2024 16:46:28.882 [main] BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@6b9a1205
[DEBUG] 01-03-2024 16:46:28.882 [main] BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@6b9a1205
[DEBUG] 01-03-2024 16:46:28.882 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@3c6bd624
[DEBUG] 01-03-2024 16:46:28.883 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@3c6bd624
[DEBUG] 01-03-2024 16:46:28.883 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@3d8d52be
[DEBUG] 01-03-2024 16:46:28.898 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@ff21443
[DEBUG] 01-03-2024 16:46:28.899 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@ff21443
[DEBUG] 01-03-2024 16:46:28.902 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@6851b296
[DEBUG] 01-03-2024 16:46:28.902 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@9e50283
[DEBUG] 01-03-2024 16:46:28.903 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@5368e981
[DEBUG] 01-03-2024 16:46:28.903 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@1c171746
[DEBUG] 01-03-2024 16:46:28.904 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@79b7c350
[DEBUG] 01-03-2024 16:46:28.904 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@586737ff
[DEBUG] 01-03-2024 16:46:28.904 [main] BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@4cd7e993
[DEBUG] 01-03-2024 16:46:28.905 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@685e6a68
[DEBUG] 01-03-2024 16:46:28.905 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@2fb48970
[DEBUG] 01-03-2024 16:46:30.213 [main] DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7482309c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@f42336c)
[DEBUG] 01-03-2024 16:46:30.219 [main] JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
[DEBUG] 01-03-2024 16:46:30.219 [main] JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 01-03-2024 16:46:30.244 [main] BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@56b751b1
[DEBUG] 01-03-2024 16:46:30.245 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@56b751b1
[DEBUG] 01-03-2024 16:46:30.245 [main] BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@ff21443`
[DEBUG] 01-03-2024 16:46:30.248 [main] JdbcTypeRegistry - addDescriptor(3100, NumericTypeDescriptor) replaced previous registration(org.hibernate.dialect.PostgreSQLIntervalSecondJdbcType@48d31d25)
[DEBUG] 01-03-2024 16:46:30.262 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 01-03-2024 16:46:30.263 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 01-03-2024 16:46:30.263 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 01-03-2024 16:46:30.264 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 01-03-2024 16:46:30.264 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 01-03-2024 16:46:30.264 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 01-03-2024 16:46:30.266 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 01-03-2024 16:46:30.267 [main] BasicTypeRegistry - Adding type registration OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 01-03-2024 16:46:30.267 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 01-03-2024 16:46:30.270 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7d95166a] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@18b3db6e]
[WARN ] 01-03-2024 16:46:30.671 [main] InFlightMetadataCollectorImpl - HHH000069: Duplicate generator name generator
[INFO ] 01-03-2024 16:46:30.848 [main] BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
[INFO ] 01-03-2024 16:46:33.467 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 01-03-2024 16:46:33.469 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7d95166a] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@56017274]
[TRACE] 01-03-2024 16:46:33.477 [main] TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@56017274] for TypeConfiguration
[WARN ] 01-03-2024 16:46:33.989 [main] JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[INFO ] 01-03-2024 16:46:35.497 [main] Http11NioProtocol - Starting ProtocolHandler ["http-nio-8300"]
[INFO ] 01-03-2024 16:46:35.599 [main] TomcatWebServer - Tomcat started on port(s): 8300 (http) with context path '/users_products_api'
[INFO ] 01-03-2024 16:46:35.634 [main] TestSpringBootApplication - Started TestSpringBootApplication in 18.854 seconds (process running for 23.859)
[INFO ] 01-03-2024 16:46:44.050 [http-nio-8300-exec-1] [/users_products_api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[INFO ] 01-03-2024 16:46:44.052 [http-nio-8300-exec-1] DispatcherServlet - Initializing Servlet 'dispatcherServlet'
[INFO ] 01-03-2024 16:46:44.059 [http-nio-8300-exec-1] DispatcherServlet - Completed initialization in 6 ms
[WARN ] 01-03-2024 16:46:46.147 [reactor-tcp-epoll-1] ReactorNettyClient - Error: SEVERITY_LOCALIZED=ERROR, SEVERITY_NON_LOCALIZED=ERROR, CODE=42P01, MESSAGE=relation "e_users" does not exist, POSITION=104, FILE=parse_relation.c, LINE=1191, ROUTINE=parserOpenTable
[TRACE] 01-03-2024 17:05:21.286 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@56017274] for TypeConfiguration
[DEBUG] 01-03-2024 17:05:21.297 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@5735dc7e] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@56017274]
[INFO ] 01-03-2024 17:05:32.833 [background-preinit] Version - HV000001: Hibernate Validator 8.0.1.Final
[INFO ] 01-03-2024 17:05:32.928 [main] TestSpringBootApplication - Starting TestSpringBootApplication using Java 17.0.10 with PID 2058793 (/home/dima/backend_microservice/UserProductsMicroService/target/classes started by dima in /home/dima/backend_microservice/UserProductsMicroService)
[INFO ] 01-03-2024 17:05:32.968 [main] TestSpringBootApplication - No active profile set, falling back to 1 default profile: "default"
[INFO ] 01-03-2024 17:05:34.979 [main] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
[INFO ] 01-03-2024 17:05:34.982 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data R2DBC repositories in DEFAULT mode.
[INFO ] 01-03-2024 17:05:35.450 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 457 ms. Found 1 R2DBC repository interfaces.
[INFO ] 01-03-2024 17:05:36.044 [main] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
[INFO ] 01-03-2024 17:05:36.049 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO ] 01-03-2024 17:05:36.080 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 22 ms. Found 0 JPA repository interfaces.
[ERROR] 01-03-2024 17:05:37.274 [main] AprLifecycleListener - An incompatible version [1.2.23] of the Apache Tomcat Native library is installed, while Tomcat requires version [1.2.34]
[INFO ] 01-03-2024 17:05:38.162 [main] TomcatWebServer - Tomcat initialized with port(s): 8300 (http)
[INFO ] 01-03-2024 17:05:38.182 [main] Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8300"]
[INFO ] 01-03-2024 17:05:38.189 [main] StandardService - Starting service [Tomcat]
[INFO ] 01-03-2024 17:05:38.191 [main] StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.11]
[INFO ] 01-03-2024 17:05:39.210 [main] TldScanner - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
[INFO ] 01-03-2024 17:05:39.227 [main] [/users_products_api] - Initializing Spring embedded WebApplicationContext
[INFO ] 01-03-2024 17:05:39.232 [main] ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 6082 ms
[INFO ] 01-03-2024 17:05:40.357 [main] Version - HHH000412: Hibernate ORM core version 6.2.6.Final
[INFO ] 01-03-2024 17:05:40.364 [main] Environment - HHH000406: Using bytecode reflection optimizer
[DEBUG] 01-03-2024 17:05:40.763 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@1a7e799e
[DEBUG] 01-03-2024 17:05:40.764 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@1a7e799e
[DEBUG] 01-03-2024 17:05:40.764 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@1a7e799e
[DEBUG] 01-03-2024 17:05:40.765 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@37a3ec27
[DEBUG] 01-03-2024 17:05:40.765 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@37a3ec27
[DEBUG] 01-03-2024 17:05:40.766 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@283baa39
[DEBUG] 01-03-2024 17:05:40.766 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@283baa39
[DEBUG] 01-03-2024 17:05:40.767 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@416b1265
[DEBUG] 01-03-2024 17:05:40.767 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@416b1265
[DEBUG] 01-03-2024 17:05:40.768 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@2830315f
[DEBUG] 01-03-2024 17:05:40.768 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@2830315f
[DEBUG] 01-03-2024 17:05:40.768 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@2830315f
[DEBUG] 01-03-2024 17:05:40.769 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@da22aa
[DEBUG] 01-03-2024 17:05:40.769 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@da22aa
[DEBUG] 01-03-2024 17:05:40.770 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@da22aa
[DEBUG] 01-03-2024 17:05:40.770 [main] BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@75452aea
[DEBUG] 01-03-2024 17:05:40.771 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@75452aea
[DEBUG] 01-03-2024 17:05:40.771 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@6c24f61d
[DEBUG] 01-03-2024 17:05:40.772 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@4537880f
[DEBUG] 01-03-2024 17:05:40.772 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@4537880f
[DEBUG] 01-03-2024 17:05:40.773 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@14292d71
[DEBUG] 01-03-2024 17:05:40.773 [main] BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@48e74764
[DEBUG] 01-03-2024 17:05:40.774 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@338d47b
[DEBUG] 01-03-2024 17:05:40.774 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@338d47b
[DEBUG] 01-03-2024 17:05:40.775 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@338d47b
[DEBUG] 01-03-2024 17:05:40.775 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@7a3643e3
[DEBUG] 01-03-2024 17:05:40.776 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@7a3643e3
[DEBUG] 01-03-2024 17:05:40.776 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@7a3643e3
[DEBUG] 01-03-2024 17:05:40.777 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@2729bb71
[DEBUG] 01-03-2024 17:05:40.778 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@2729bb71
[DEBUG] 01-03-2024 17:05:40.778 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@2729bb71
[DEBUG] 01-03-2024 17:05:40.779 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@55071497
[DEBUG] 01-03-2024 17:05:40.779 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@55071497
[DEBUG] 01-03-2024 17:05:40.780 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@55071497
[DEBUG] 01-03-2024 17:05:40.780 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@10d98940
[DEBUG] 01-03-2024 17:05:40.780 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@10d98940
[DEBUG] 01-03-2024 17:05:40.780 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@10d98940
[DEBUG] 01-03-2024 17:05:40.781 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@58b8f9e3
[DEBUG] 01-03-2024 17:05:40.781 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@58b8f9e3
[DEBUG] 01-03-2024 17:05:40.781 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@32a033b6
[DEBUG] 01-03-2024 17:05:40.782 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@32a033b6
[DEBUG] 01-03-2024 17:05:40.782 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@5f6e2ad9
[DEBUG] 01-03-2024 17:05:40.783 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@5f6e2ad9
[DEBUG] 01-03-2024 17:05:40.783 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@5f6e2ad9
[DEBUG] 01-03-2024 17:05:40.784 [main] BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@3212bfd
[DEBUG] 01-03-2024 17:05:40.784 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@1cc9bd9b
[DEBUG] 01-03-2024 17:05:40.786 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@1cc9bd9b
[DEBUG] 01-03-2024 17:05:40.788 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@2f471037
[DEBUG] 01-03-2024 17:05:40.788 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@1d1cfe4
[DEBUG] 01-03-2024 17:05:40.789 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@1d1cfe4
[DEBUG] 01-03-2024 17:05:40.789 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@1d1cfe4
[DEBUG] 01-03-2024 17:05:40.789 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@ba562e0
[DEBUG] 01-03-2024 17:05:40.790 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@5a51336a
[DEBUG] 01-03-2024 17:05:40.790 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@4d8056bf
[DEBUG] 01-03-2024 17:05:40.791 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@42211e04
[DEBUG] 01-03-2024 17:05:40.791 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@42211e04
[DEBUG] 01-03-2024 17:05:40.792 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@6233c6c2
[DEBUG] 01-03-2024 17:05:40.793 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@6233c6c2
[DEBUG] 01-03-2024 17:05:40.793 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@312a738d
[DEBUG] 01-03-2024 17:05:40.794 [main] BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@7e50eeb9
[DEBUG] 01-03-2024 17:05:40.794 [main] BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@34cb0e49
[DEBUG] 01-03-2024 17:05:40.794 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@48b2dbc4
[DEBUG] 01-03-2024 17:05:40.795 [main] BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@2a667f44
[DEBUG] 01-03-2024 17:05:40.795 [main] BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@53ba7997
[DEBUG] 01-03-2024 17:05:40.796 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@3f6f9cef
[DEBUG] 01-03-2024 17:05:40.796 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@3f6f9cef
[DEBUG] 01-03-2024 17:05:40.796 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@61dd1c3d
[DEBUG] 01-03-2024 17:05:40.797 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@61dd1c3d
[DEBUG] 01-03-2024 17:05:40.797 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@7858d31d
[DEBUG] 01-03-2024 17:05:40.798 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@7858d31d
[DEBUG] 01-03-2024 17:05:40.798 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@782e6b40
[DEBUG] 01-03-2024 17:05:40.798 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@782e6b40
[DEBUG] 01-03-2024 17:05:40.799 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@3b65084e
[DEBUG] 01-03-2024 17:05:40.799 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@3b65084e
[DEBUG] 01-03-2024 17:05:40.799 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@32d0d7eb
[DEBUG] 01-03-2024 17:05:40.800 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@cae2a97
[DEBUG] 01-03-2024 17:05:40.801 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@7d12429
[DEBUG] 01-03-2024 17:05:40.801 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@7d12429
[DEBUG] 01-03-2024 17:05:40.802 [main] BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@14656be5
[DEBUG] 01-03-2024 17:05:40.802 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@20be890d
[DEBUG] 01-03-2024 17:05:40.802 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@5db9f51f
[DEBUG] 01-03-2024 17:05:40.803 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@534762ed
[DEBUG] 01-03-2024 17:05:40.803 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@534762ed
[DEBUG] 01-03-2024 17:05:40.804 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@6c421123
[DEBUG] 01-03-2024 17:05:40.804 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@38e00b47
[DEBUG] 01-03-2024 17:05:40.804 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@2a631049
[DEBUG] 01-03-2024 17:05:40.805 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@2a631049
[DEBUG] 01-03-2024 17:05:40.805 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@425b5fe2
[DEBUG] 01-03-2024 17:05:40.806 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@425b5fe2
[DEBUG] 01-03-2024 17:05:40.806 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@3eec8583
[DEBUG] 01-03-2024 17:05:40.806 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@3eec8583
[DEBUG] 01-03-2024 17:05:40.807 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@3eec8583
[DEBUG] 01-03-2024 17:05:40.807 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@66e1b2a
[DEBUG] 01-03-2024 17:05:40.808 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@66e1b2a
[DEBUG] 01-03-2024 17:05:40.808 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@66e1b2a
[DEBUG] 01-03-2024 17:05:40.808 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@343db2f6
[DEBUG] 01-03-2024 17:05:40.809 [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@2c815fdc
[DEBUG] 01-03-2024 17:05:40.809 [main] BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@769b0752
[DEBUG] 01-03-2024 17:05:40.810 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@769b0752
[DEBUG] 01-03-2024 17:05:40.810 [main] BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@dae5e0
[DEBUG] 01-03-2024 17:05:40.810 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@dae5e0
[DEBUG] 01-03-2024 17:05:40.811 [main] BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@dae5e0
[DEBUG] 01-03-2024 17:05:40.811 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@59a94d0f
[DEBUG] 01-03-2024 17:05:40.812 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@7ff09659
[DEBUG] 01-03-2024 17:05:40.812 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@517fbf62
[DEBUG] 01-03-2024 17:05:40.812 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@517fbf62
[DEBUG] 01-03-2024 17:05:40.813 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@65db548
[DEBUG] 01-03-2024 17:05:40.813 [main] BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@65db548
[DEBUG] 01-03-2024 17:05:40.814 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@65db548
[DEBUG] 01-03-2024 17:05:40.815 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@150f41b9
[DEBUG] 01-03-2024 17:05:40.815 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@150f41b9
[DEBUG] 01-03-2024 17:05:40.816 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@6e364f1f
[DEBUG] 01-03-2024 17:05:40.816 [main] BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@6e364f1f
[DEBUG] 01-03-2024 17:05:40.817 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@429e7914
[DEBUG] 01-03-2024 17:05:40.817 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@429e7914
[DEBUG] 01-03-2024 17:05:40.818 [main] BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@298263fa
[DEBUG] 01-03-2024 17:05:40.818 [main] BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@298263fa
[DEBUG] 01-03-2024 17:05:40.818 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@466fedfa
[DEBUG] 01-03-2024 17:05:40.819 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@466fedfa
[DEBUG] 01-03-2024 17:05:40.819 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@1a7d0c9f
[DEBUG] 01-03-2024 17:05:40.835 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@12aa381f
[DEBUG] 01-03-2024 17:05:40.836 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@12aa381f
[DEBUG] 01-03-2024 17:05:40.840 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@542ff147
[DEBUG] 01-03-2024 17:05:40.840 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@2d801d8
[DEBUG] 01-03-2024 17:05:40.841 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@b9b97ad
[DEBUG] 01-03-2024 17:05:40.841 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@2807cf3
[DEBUG] 01-03-2024 17:05:40.842 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@298e002d
[DEBUG] 01-03-2024 17:05:40.842 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@6b9a1205
[DEBUG] 01-03-2024 17:05:40.842 [main] BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@3c6bd624
[DEBUG] 01-03-2024 17:05:40.843 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@3d8d52be
[DEBUG] 01-03-2024 17:05:40.843 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@645ba24a
[DEBUG] 01-03-2024 17:05:41.907 [main] DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3e2772a9) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4449b273)
[DEBUG] 01-03-2024 17:05:41.912 [main] JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
[DEBUG] 01-03-2024 17:05:41.913 [main] JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 01-03-2024 17:05:41.935 [main] BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@413eaf5d
[DEBUG] 01-03-2024 17:05:41.935 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@413eaf5d
[DEBUG] 01-03-2024 17:05:41.936 [main] BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@12aa381f`
[DEBUG] 01-03-2024 17:05:41.939 [main] JdbcTypeRegistry - addDescriptor(3100, NumericTypeDescriptor) replaced previous registration(org.hibernate.dialect.PostgreSQLIntervalSecondJdbcType@7482309c)
[DEBUG] 01-03-2024 17:05:41.954 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 01-03-2024 17:05:41.955 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 01-03-2024 17:05:41.955 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 01-03-2024 17:05:41.956 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 01-03-2024 17:05:41.956 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 01-03-2024 17:05:41.956 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 01-03-2024 17:05:41.959 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 01-03-2024 17:05:41.959 [main] BasicTypeRegistry - Adding type registration OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 01-03-2024 17:05:41.960 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 01-03-2024 17:05:41.963 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1aee6d14] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@54a6ef6]
[INFO ] 01-03-2024 17:05:42.188 [main] BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
[INFO ] 01-03-2024 17:05:43.500 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 01-03-2024 17:05:43.502 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1aee6d14] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@74844216]
[TRACE] 01-03-2024 17:05:43.516 [main] TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@74844216] for TypeConfiguration
[WARN ] 01-03-2024 17:05:43.877 [main] JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[INFO ] 01-03-2024 17:05:45.213 [main] Http11NioProtocol - Starting ProtocolHandler ["http-nio-8300"]
[INFO ] 01-03-2024 17:05:45.272 [main] TomcatWebServer - Tomcat started on port(s): 8300 (http) with context path '/users_products_api'
[INFO ] 01-03-2024 17:05:45.312 [main] TestSpringBootApplication - Started TestSpringBootApplication in 13.709 seconds (process running for 16.839)
[INFO ] 01-03-2024 17:05:50.202 [http-nio-8300-exec-1] [/users_products_api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[INFO ] 01-03-2024 17:05:50.206 [http-nio-8300-exec-1] DispatcherServlet - Initializing Servlet 'dispatcherServlet'
[INFO ] 01-03-2024 17:05:50.210 [http-nio-8300-exec-1] DispatcherServlet - Completed initialization in 3 ms
[WARN ] 01-03-2024 17:05:51.788 [reactor-tcp-epoll-1] ReactorNettyClient - Error: SEVERITY_LOCALIZED=ERROR, SEVERITY_NON_LOCALIZED=ERROR, CODE=42703, MESSAGE=column users.products does not exist, POSITION=72, FILE=parse_relation.c, LINE=3398, ROUTINE=errorMissingColumn
[TRACE] 01-03-2024 17:07:57.838 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@74844216] for TypeConfiguration
[DEBUG] 01-03-2024 17:07:57.839 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@7b4b7301] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@74844216]
[INFO ] 01-03-2024 17:08:07.896 [background-preinit] Version - HV000001: Hibernate Validator 8.0.1.Final
[INFO ] 01-03-2024 17:08:07.991 [main] TestSpringBootApplication - Starting TestSpringBootApplication using Java 17.0.10 with PID 2060189 (/home/dima/backend_microservice/UserProductsMicroService/target/classes started by dima in /home/dima/backend_microservice/UserProductsMicroService)
[INFO ] 01-03-2024 17:08:08.018 [main] TestSpringBootApplication - No active profile set, falling back to 1 default profile: "default"
[INFO ] 01-03-2024 17:08:10.806 [main] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
[INFO ] 01-03-2024 17:08:10.808 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data R2DBC repositories in DEFAULT mode.
[INFO ] 01-03-2024 17:08:11.461 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 638 ms. Found 1 R2DBC repository interfaces.
[INFO ] 01-03-2024 17:08:12.237 [main] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
[INFO ] 01-03-2024 17:08:12.240 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO ] 01-03-2024 17:08:12.310 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 47 ms. Found 0 JPA repository interfaces.
[ERROR] 01-03-2024 17:08:13.799 [main] AprLifecycleListener - An incompatible version [1.2.23] of the Apache Tomcat Native library is installed, while Tomcat requires version [1.2.34]
[INFO ] 01-03-2024 17:08:14.784 [main] TomcatWebServer - Tomcat initialized with port(s): 8300 (http)
[INFO ] 01-03-2024 17:08:14.804 [main] Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8300"]
[INFO ] 01-03-2024 17:08:14.810 [main] StandardService - Starting service [Tomcat]
[INFO ] 01-03-2024 17:08:14.812 [main] StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.11]
[INFO ] 01-03-2024 17:08:15.982 [main] TldScanner - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
[INFO ] 01-03-2024 17:08:16.002 [main] [/users_products_api] - Initializing Spring embedded WebApplicationContext
[INFO ] 01-03-2024 17:08:16.006 [main] ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 7703 ms
[INFO ] 01-03-2024 17:08:17.508 [main] Version - HHH000412: Hibernate ORM core version 6.2.6.Final
[INFO ] 01-03-2024 17:08:17.515 [main] Environment - HHH000406: Using bytecode reflection optimizer
[DEBUG] 01-03-2024 17:08:17.924 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@365bfc5f
[DEBUG] 01-03-2024 17:08:17.925 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@365bfc5f
[DEBUG] 01-03-2024 17:08:17.925 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@365bfc5f
[DEBUG] 01-03-2024 17:08:17.925 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@1a7e799e
[DEBUG] 01-03-2024 17:08:17.926 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@1a7e799e
[DEBUG] 01-03-2024 17:08:17.926 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@37a3ec27
[DEBUG] 01-03-2024 17:08:17.927 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@37a3ec27
[DEBUG] 01-03-2024 17:08:17.927 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@283baa39
[DEBUG] 01-03-2024 17:08:17.928 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@283baa39
[DEBUG] 01-03-2024 17:08:17.929 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@416b1265
[DEBUG] 01-03-2024 17:08:17.930 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@416b1265
[DEBUG] 01-03-2024 17:08:17.930 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@416b1265
[DEBUG] 01-03-2024 17:08:17.932 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@2830315f
[DEBUG] 01-03-2024 17:08:17.933 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@2830315f
[DEBUG] 01-03-2024 17:08:17.935 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@2830315f
[DEBUG] 01-03-2024 17:08:17.936 [main] BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@da22aa
[DEBUG] 01-03-2024 17:08:17.937 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@da22aa
[DEBUG] 01-03-2024 17:08:17.937 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@75452aea
[DEBUG] 01-03-2024 17:08:17.938 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@6c24f61d
[DEBUG] 01-03-2024 17:08:17.939 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@6c24f61d
[DEBUG] 01-03-2024 17:08:17.939 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@4537880f
[DEBUG] 01-03-2024 17:08:17.940 [main] BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@14292d71
[DEBUG] 01-03-2024 17:08:17.940 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@48e74764
[DEBUG] 01-03-2024 17:08:17.941 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@48e74764
[DEBUG] 01-03-2024 17:08:17.941 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@48e74764
[DEBUG] 01-03-2024 17:08:17.942 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@338d47b
[DEBUG] 01-03-2024 17:08:17.942 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@338d47b
[DEBUG] 01-03-2024 17:08:17.942 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@338d47b
[DEBUG] 01-03-2024 17:08:17.943 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@7a3643e3
[DEBUG] 01-03-2024 17:08:17.944 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@7a3643e3
[DEBUG] 01-03-2024 17:08:17.944 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@7a3643e3
[DEBUG] 01-03-2024 17:08:17.945 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@2729bb71
[DEBUG] 01-03-2024 17:08:17.945 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@2729bb71
[DEBUG] 01-03-2024 17:08:17.945 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@2729bb71
[DEBUG] 01-03-2024 17:08:17.946 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@55071497
[DEBUG] 01-03-2024 17:08:17.946 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@55071497
[DEBUG] 01-03-2024 17:08:17.946 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@55071497
[DEBUG] 01-03-2024 17:08:17.957 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@10d98940
[DEBUG] 01-03-2024 17:08:17.957 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@10d98940
[DEBUG] 01-03-2024 17:08:17.958 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@58b8f9e3
[DEBUG] 01-03-2024 17:08:17.958 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@58b8f9e3
[DEBUG] 01-03-2024 17:08:17.958 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@32a033b6
[DEBUG] 01-03-2024 17:08:17.959 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@32a033b6
[DEBUG] 01-03-2024 17:08:17.959 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@32a033b6
[DEBUG] 01-03-2024 17:08:17.960 [main] BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@5f6e2ad9
[DEBUG] 01-03-2024 17:08:17.960 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@3212bfd
[DEBUG] 01-03-2024 17:08:17.960 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@3212bfd
[DEBUG] 01-03-2024 17:08:17.961 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@1cc9bd9b
[DEBUG] 01-03-2024 17:08:17.961 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@2f471037
[DEBUG] 01-03-2024 17:08:17.961 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@2f471037
[DEBUG] 01-03-2024 17:08:17.962 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@2f471037
[DEBUG] 01-03-2024 17:08:17.962 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@1d1cfe4
[DEBUG] 01-03-2024 17:08:17.962 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@ba562e0
[DEBUG] 01-03-2024 17:08:17.963 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@5a51336a
[DEBUG] 01-03-2024 17:08:17.963 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@4d8056bf
[DEBUG] 01-03-2024 17:08:17.963 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@4d8056bf
[DEBUG] 01-03-2024 17:08:17.964 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@42211e04
[DEBUG] 01-03-2024 17:08:17.964 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@42211e04
[DEBUG] 01-03-2024 17:08:17.964 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@6233c6c2
[DEBUG] 01-03-2024 17:08:17.965 [main] BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@312a738d
[DEBUG] 01-03-2024 17:08:17.965 [main] BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@7e50eeb9
[DEBUG] 01-03-2024 17:08:17.966 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@34cb0e49
[DEBUG] 01-03-2024 17:08:17.966 [main] BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@48b2dbc4
[DEBUG] 01-03-2024 17:08:17.966 [main] BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@2a667f44
[DEBUG] 01-03-2024 17:08:17.967 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@53ba7997
[DEBUG] 01-03-2024 17:08:17.967 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@53ba7997
[DEBUG] 01-03-2024 17:08:17.967 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@3f6f9cef
[DEBUG] 01-03-2024 17:08:17.968 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@3f6f9cef
[DEBUG] 01-03-2024 17:08:17.968 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@61dd1c3d
[DEBUG] 01-03-2024 17:08:17.968 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@61dd1c3d
[DEBUG] 01-03-2024 17:08:17.969 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@7858d31d
[DEBUG] 01-03-2024 17:08:17.969 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@7858d31d
[DEBUG] 01-03-2024 17:08:17.969 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@782e6b40
[DEBUG] 01-03-2024 17:08:17.970 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@782e6b40
[DEBUG] 01-03-2024 17:08:17.970 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@3b65084e
[DEBUG] 01-03-2024 17:08:17.971 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@32d0d7eb
[DEBUG] 01-03-2024 17:08:17.971 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@cae2a97
[DEBUG] 01-03-2024 17:08:17.971 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@cae2a97
[DEBUG] 01-03-2024 17:08:17.972 [main] BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@7d12429
[DEBUG] 01-03-2024 17:08:17.972 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@14656be5
[DEBUG] 01-03-2024 17:08:17.972 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@20be890d
[DEBUG] 01-03-2024 17:08:17.972 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@5db9f51f
[DEBUG] 01-03-2024 17:08:17.973 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@5db9f51f
[DEBUG] 01-03-2024 17:08:17.973 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@534762ed
[DEBUG] 01-03-2024 17:08:17.973 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@6c421123
[DEBUG] 01-03-2024 17:08:17.974 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@38e00b47
[DEBUG] 01-03-2024 17:08:17.974 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@38e00b47
[DEBUG] 01-03-2024 17:08:17.974 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@2a631049
[DEBUG] 01-03-2024 17:08:17.975 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@2a631049
[DEBUG] 01-03-2024 17:08:17.976 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@425b5fe2
[DEBUG] 01-03-2024 17:08:17.976 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@425b5fe2
[DEBUG] 01-03-2024 17:08:17.977 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@425b5fe2
[DEBUG] 01-03-2024 17:08:17.977 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@3eec8583
[DEBUG] 01-03-2024 17:08:17.977 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@3eec8583
[DEBUG] 01-03-2024 17:08:17.978 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@3eec8583
[DEBUG] 01-03-2024 17:08:17.978 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@66e1b2a
[DEBUG] 01-03-2024 17:08:17.981 [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@343db2f6
[DEBUG] 01-03-2024 17:08:17.982 [main] BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@2c815fdc
[DEBUG] 01-03-2024 17:08:17.982 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@2c815fdc
[DEBUG] 01-03-2024 17:08:17.982 [main] BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@769b0752
[DEBUG] 01-03-2024 17:08:17.983 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@769b0752
[DEBUG] 01-03-2024 17:08:17.983 [main] BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@769b0752
[DEBUG] 01-03-2024 17:08:17.984 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@dae5e0
[DEBUG] 01-03-2024 17:08:17.985 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@59a94d0f
[DEBUG] 01-03-2024 17:08:17.985 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@7ff09659
[DEBUG] 01-03-2024 17:08:17.988 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@7ff09659
[DEBUG] 01-03-2024 17:08:17.988 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@517fbf62
[DEBUG] 01-03-2024 17:08:17.989 [main] BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@517fbf62
[DEBUG] 01-03-2024 17:08:17.989 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@517fbf62
[DEBUG] 01-03-2024 17:08:17.991 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@65db548
[DEBUG] 01-03-2024 17:08:17.991 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@65db548
[DEBUG] 01-03-2024 17:08:17.992 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@150f41b9
[DEBUG] 01-03-2024 17:08:17.993 [main] BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@150f41b9
[DEBUG] 01-03-2024 17:08:17.994 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@6e364f1f
[DEBUG] 01-03-2024 17:08:17.995 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@6e364f1f
[DEBUG] 01-03-2024 17:08:17.995 [main] BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@429e7914
[DEBUG] 01-03-2024 17:08:17.995 [main] BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@429e7914
[DEBUG] 01-03-2024 17:08:17.996 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@298263fa
[DEBUG] 01-03-2024 17:08:17.996 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@298263fa
[DEBUG] 01-03-2024 17:08:17.996 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@466fedfa
[DEBUG] 01-03-2024 17:08:18.013 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@3c9e19de
[DEBUG] 01-03-2024 17:08:18.014 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@3c9e19de
[DEBUG] 01-03-2024 17:08:18.017 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@f10d055
[DEBUG] 01-03-2024 17:08:18.019 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@542ff147
[DEBUG] 01-03-2024 17:08:18.019 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@2d801d8
[DEBUG] 01-03-2024 17:08:18.020 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@b9b97ad
[DEBUG] 01-03-2024 17:08:18.020 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@2807cf3
[DEBUG] 01-03-2024 17:08:18.020 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@298e002d
[DEBUG] 01-03-2024 17:08:18.021 [main] BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@6b9a1205
[DEBUG] 01-03-2024 17:08:18.021 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@3c6bd624
[DEBUG] 01-03-2024 17:08:18.021 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@3d8d52be
[DEBUG] 01-03-2024 17:08:19.245 [main] DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3e2772a9) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4449b273)
[DEBUG] 01-03-2024 17:08:19.251 [main] JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
[DEBUG] 01-03-2024 17:08:19.252 [main] JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 01-03-2024 17:08:19.274 [main] BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@413eaf5d
[DEBUG] 01-03-2024 17:08:19.275 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@413eaf5d
[DEBUG] 01-03-2024 17:08:19.275 [main] BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@3c9e19de`
[DEBUG] 01-03-2024 17:08:19.279 [main] JdbcTypeRegistry - addDescriptor(3100, NumericTypeDescriptor) replaced previous registration(org.hibernate.dialect.PostgreSQLIntervalSecondJdbcType@7482309c)
[DEBUG] 01-03-2024 17:08:19.294 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 01-03-2024 17:08:19.294 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 01-03-2024 17:08:19.294 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 01-03-2024 17:08:19.295 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 01-03-2024 17:08:19.295 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 01-03-2024 17:08:19.295 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 01-03-2024 17:08:19.297 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 01-03-2024 17:08:19.298 [main] BasicTypeRegistry - Adding type registration OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 01-03-2024 17:08:19.298 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 01-03-2024 17:08:19.302 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1aee6d14] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@54a6ef6]
[INFO ] 01-03-2024 17:08:19.441 [main] BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
[INFO ] 01-03-2024 17:08:20.814 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 01-03-2024 17:08:20.816 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1aee6d14] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@74844216]
[TRACE] 01-03-2024 17:08:20.828 [main] TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@74844216] for TypeConfiguration
[WARN ] 01-03-2024 17:08:21.337 [main] JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[INFO ] 01-03-2024 17:08:22.265 [main] Http11NioProtocol - Starting ProtocolHandler ["http-nio-8300"]
[INFO ] 01-03-2024 17:08:22.360 [main] TomcatWebServer - Tomcat started on port(s): 8300 (http) with context path '/users_products_api'
[INFO ] 01-03-2024 17:08:22.402 [main] TestSpringBootApplication - Started TestSpringBootApplication in 15.489 seconds (process running for 18.866)
[TRACE] 01-03-2024 17:08:35.777 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@74844216] for TypeConfiguration
[DEBUG] 01-03-2024 17:08:35.778 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@46b12220] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@74844216]
[INFO ] 01-03-2024 17:08:45.406 [background-preinit] Version - HV000001: Hibernate Validator 8.0.1.Final
[INFO ] 01-03-2024 17:08:45.528 [main] TestSpringBootApplication - Starting TestSpringBootApplication using Java 17.0.10 with PID 2060589 (/home/dima/backend_microservice/UserProductsMicroService/target/classes started by dima in /home/dima/backend_microservice/UserProductsMicroService)
[INFO ] 01-03-2024 17:08:45.538 [main] TestSpringBootApplication - No active profile set, falling back to 1 default profile: "default"
[INFO ] 01-03-2024 17:08:47.129 [main] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
[INFO ] 01-03-2024 17:08:47.132 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data R2DBC repositories in DEFAULT mode.
[INFO ] 01-03-2024 17:08:47.601 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 456 ms. Found 1 R2DBC repository interfaces.
[INFO ] 01-03-2024 17:08:48.774 [main] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
[INFO ] 01-03-2024 17:08:48.781 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO ] 01-03-2024 17:08:48.842 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 27 ms. Found 0 JPA repository interfaces.
[ERROR] 01-03-2024 17:08:49.976 [main] AprLifecycleListener - An incompatible version [1.2.23] of the Apache Tomcat Native library is installed, while Tomcat requires version [1.2.34]
[INFO ] 01-03-2024 17:08:50.981 [main] TomcatWebServer - Tomcat initialized with port(s): 8300 (http)
[INFO ] 01-03-2024 17:08:51.004 [main] Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8300"]
[INFO ] 01-03-2024 17:08:51.011 [main] StandardService - Starting service [Tomcat]
[INFO ] 01-03-2024 17:08:51.012 [main] StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.11]
[INFO ] 01-03-2024 17:08:52.008 [main] TldScanner - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
[INFO ] 01-03-2024 17:08:52.027 [main] [/users_products_api] - Initializing Spring embedded WebApplicationContext
[INFO ] 01-03-2024 17:08:52.034 [main] ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 6342 ms
[INFO ] 01-03-2024 17:08:53.255 [main] Version - HHH000412: Hibernate ORM core version 6.2.6.Final
[INFO ] 01-03-2024 17:08:53.262 [main] Environment - HHH000406: Using bytecode reflection optimizer
[DEBUG] 01-03-2024 17:08:53.627 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@6463da36
[DEBUG] 01-03-2024 17:08:53.628 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@6463da36
[DEBUG] 01-03-2024 17:08:53.629 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@6463da36
[DEBUG] 01-03-2024 17:08:53.629 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@4a4b288a
[DEBUG] 01-03-2024 17:08:53.630 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@4a4b288a
[DEBUG] 01-03-2024 17:08:53.630 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@1c6ac73c
[DEBUG] 01-03-2024 17:08:53.631 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@1c6ac73c
[DEBUG] 01-03-2024 17:08:53.631 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@29892a77
[DEBUG] 01-03-2024 17:08:53.632 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@29892a77
[DEBUG] 01-03-2024 17:08:53.633 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@5341e71a
[DEBUG] 01-03-2024 17:08:53.633 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@5341e71a
[DEBUG] 01-03-2024 17:08:53.633 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@5341e71a
[DEBUG] 01-03-2024 17:08:53.634 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@405d8a80
[DEBUG] 01-03-2024 17:08:53.634 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@405d8a80
[DEBUG] 01-03-2024 17:08:53.635 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@405d8a80
[DEBUG] 01-03-2024 17:08:53.635 [main] BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@ac4e690
[DEBUG] 01-03-2024 17:08:53.636 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@ac4e690
[DEBUG] 01-03-2024 17:08:53.636 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@6afeaf2d
[DEBUG] 01-03-2024 17:08:53.637 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@365bfc5f
[DEBUG] 01-03-2024 17:08:53.637 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@365bfc5f
[DEBUG] 01-03-2024 17:08:53.638 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@1a7e799e
[DEBUG] 01-03-2024 17:08:53.638 [main] BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@37a3ec27
[DEBUG] 01-03-2024 17:08:53.638 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@283baa39
[DEBUG] 01-03-2024 17:08:53.639 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@283baa39
[DEBUG] 01-03-2024 17:08:53.639 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@283baa39
[DEBUG] 01-03-2024 17:08:53.640 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@416b1265
[DEBUG] 01-03-2024 17:08:53.640 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@416b1265
[DEBUG] 01-03-2024 17:08:53.642 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@416b1265
[DEBUG] 01-03-2024 17:08:53.642 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@2830315f
[DEBUG] 01-03-2024 17:08:53.642 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@2830315f
[DEBUG] 01-03-2024 17:08:53.643 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@2830315f
[DEBUG] 01-03-2024 17:08:53.643 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@da22aa
[DEBUG] 01-03-2024 17:08:53.644 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@da22aa
[DEBUG] 01-03-2024 17:08:53.644 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@da22aa
[DEBUG] 01-03-2024 17:08:53.644 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@75452aea
[DEBUG] 01-03-2024 17:08:53.645 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@75452aea
[DEBUG] 01-03-2024 17:08:53.645 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@75452aea
[DEBUG] 01-03-2024 17:08:53.645 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@6c24f61d
[DEBUG] 01-03-2024 17:08:53.645 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@6c24f61d
[DEBUG] 01-03-2024 17:08:53.646 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@4537880f
[DEBUG] 01-03-2024 17:08:53.646 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@4537880f
[DEBUG] 01-03-2024 17:08:53.646 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@14292d71
[DEBUG] 01-03-2024 17:08:53.647 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@14292d71
[DEBUG] 01-03-2024 17:08:53.647 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@14292d71
[DEBUG] 01-03-2024 17:08:53.647 [main] BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@48e74764
[DEBUG] 01-03-2024 17:08:53.648 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@338d47b
[DEBUG] 01-03-2024 17:08:53.648 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@338d47b
[DEBUG] 01-03-2024 17:08:53.648 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@7a3643e3
[DEBUG] 01-03-2024 17:08:53.649 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@2729bb71
[DEBUG] 01-03-2024 17:08:53.649 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@2729bb71
[DEBUG] 01-03-2024 17:08:53.649 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@2729bb71
[DEBUG] 01-03-2024 17:08:53.650 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@55071497
[DEBUG] 01-03-2024 17:08:53.650 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@10d98940
[DEBUG] 01-03-2024 17:08:53.650 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@58b8f9e3
[DEBUG] 01-03-2024 17:08:53.650 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@32a033b6
[DEBUG] 01-03-2024 17:08:53.651 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@32a033b6
[DEBUG] 01-03-2024 17:08:53.651 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@5f6e2ad9
[DEBUG] 01-03-2024 17:08:53.652 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@5f6e2ad9
[DEBUG] 01-03-2024 17:08:53.652 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@3212bfd
[DEBUG] 01-03-2024 17:08:53.652 [main] BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@1cc9bd9b
[DEBUG] 01-03-2024 17:08:53.653 [main] BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@2f471037
[DEBUG] 01-03-2024 17:08:53.653 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@1d1cfe4
[DEBUG] 01-03-2024 17:08:53.653 [main] BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@ba562e0
[DEBUG] 01-03-2024 17:08:53.654 [main] BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@5a51336a
[DEBUG] 01-03-2024 17:08:53.654 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@4d8056bf
[DEBUG] 01-03-2024 17:08:53.654 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@4d8056bf
[DEBUG] 01-03-2024 17:08:53.655 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@42211e04
[DEBUG] 01-03-2024 17:08:53.655 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@42211e04
[DEBUG] 01-03-2024 17:08:53.655 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@6233c6c2
[DEBUG] 01-03-2024 17:08:53.656 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@6233c6c2
[DEBUG] 01-03-2024 17:08:53.656 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@312a738d
[DEBUG] 01-03-2024 17:08:53.656 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@312a738d
[DEBUG] 01-03-2024 17:08:53.657 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@7e50eeb9
[DEBUG] 01-03-2024 17:08:53.657 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@7e50eeb9
[DEBUG] 01-03-2024 17:08:53.657 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@34cb0e49
[DEBUG] 01-03-2024 17:08:53.658 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@48b2dbc4
[DEBUG] 01-03-2024 17:08:53.658 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@2a667f44
[DEBUG] 01-03-2024 17:08:53.659 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@2a667f44
[DEBUG] 01-03-2024 17:08:53.659 [main] BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@53ba7997
[DEBUG] 01-03-2024 17:08:53.660 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@3f6f9cef
[DEBUG] 01-03-2024 17:08:53.660 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@61dd1c3d
[DEBUG] 01-03-2024 17:08:53.661 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@7858d31d
[DEBUG] 01-03-2024 17:08:53.661 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@7858d31d
[DEBUG] 01-03-2024 17:08:53.661 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@782e6b40
[DEBUG] 01-03-2024 17:08:53.661 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3b65084e
[DEBUG] 01-03-2024 17:08:53.662 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@32d0d7eb
[DEBUG] 01-03-2024 17:08:53.662 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@32d0d7eb
[DEBUG] 01-03-2024 17:08:53.662 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@cae2a97
[DEBUG] 01-03-2024 17:08:53.663 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@cae2a97
[DEBUG] 01-03-2024 17:08:53.663 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@7d12429
[DEBUG] 01-03-2024 17:08:53.664 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@7d12429
[DEBUG] 01-03-2024 17:08:53.664 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@7d12429
[DEBUG] 01-03-2024 17:08:53.664 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@14656be5
[DEBUG] 01-03-2024 17:08:53.665 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@14656be5
[DEBUG] 01-03-2024 17:08:53.665 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@14656be5
[DEBUG] 01-03-2024 17:08:53.666 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@20be890d
[DEBUG] 01-03-2024 17:08:53.666 [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@5db9f51f
[DEBUG] 01-03-2024 17:08:53.666 [main] BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@534762ed
[DEBUG] 01-03-2024 17:08:53.667 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@534762ed
[DEBUG] 01-03-2024 17:08:53.667 [main] BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@6c421123
[DEBUG] 01-03-2024 17:08:53.667 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@6c421123
[DEBUG] 01-03-2024 17:08:53.668 [main] BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@6c421123
[DEBUG] 01-03-2024 17:08:53.668 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@38e00b47
[DEBUG] 01-03-2024 17:08:53.668 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@2a631049
[DEBUG] 01-03-2024 17:08:53.669 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@425b5fe2
[DEBUG] 01-03-2024 17:08:53.669 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@425b5fe2
[DEBUG] 01-03-2024 17:08:53.669 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@3eec8583
[DEBUG] 01-03-2024 17:08:53.670 [main] BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@3eec8583
[DEBUG] 01-03-2024 17:08:53.670 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@3eec8583
[DEBUG] 01-03-2024 17:08:53.670 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@66e1b2a
[DEBUG] 01-03-2024 17:08:53.671 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@66e1b2a
[DEBUG] 01-03-2024 17:08:53.671 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@343db2f6
[DEBUG] 01-03-2024 17:08:53.671 [main] BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@343db2f6
[DEBUG] 01-03-2024 17:08:53.672 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@2c815fdc
[DEBUG] 01-03-2024 17:08:53.672 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@2c815fdc
[DEBUG] 01-03-2024 17:08:53.672 [main] BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@769b0752
[DEBUG] 01-03-2024 17:08:53.673 [main] BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@769b0752
[DEBUG] 01-03-2024 17:08:53.673 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@dae5e0
[DEBUG] 01-03-2024 17:08:53.673 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@dae5e0
[DEBUG] 01-03-2024 17:08:53.673 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@59a94d0f
[DEBUG] 01-03-2024 17:08:53.686 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@66b6873f
[DEBUG] 01-03-2024 17:08:53.687 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@66b6873f
[DEBUG] 01-03-2024 17:08:53.690 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@1bec1589
[DEBUG] 01-03-2024 17:08:53.691 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@57f0bfc3
[DEBUG] 01-03-2024 17:08:53.691 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@14590fe2
[DEBUG] 01-03-2024 17:08:53.692 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@5922cff3
[DEBUG] 01-03-2024 17:08:53.692 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@2299d903
[DEBUG] 01-03-2024 17:08:53.692 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@70c56434
[DEBUG] 01-03-2024 17:08:53.693 [main] BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@2c3f43d1
[DEBUG] 01-03-2024 17:08:53.693 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@632d4cf2
[DEBUG] 01-03-2024 17:08:53.693 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@f10d055
[DEBUG] 01-03-2024 17:08:55.129 [main] DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@727956bb) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6ffbf0ac)
[DEBUG] 01-03-2024 17:08:55.135 [main] JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
[DEBUG] 01-03-2024 17:08:55.136 [main] JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 01-03-2024 17:08:55.156 [main] BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@5cbe72b9
[DEBUG] 01-03-2024 17:08:55.157 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@5cbe72b9
[DEBUG] 01-03-2024 17:08:55.157 [main] BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@66b6873f`
[DEBUG] 01-03-2024 17:08:55.160 [main] JdbcTypeRegistry - addDescriptor(3100, NumericTypeDescriptor) replaced previous registration(org.hibernate.dialect.PostgreSQLIntervalSecondJdbcType@c1a74d)
[DEBUG] 01-03-2024 17:08:55.174 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 01-03-2024 17:08:55.175 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 01-03-2024 17:08:55.175 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 01-03-2024 17:08:55.176 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 01-03-2024 17:08:55.176 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 01-03-2024 17:08:55.177 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 01-03-2024 17:08:55.179 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 01-03-2024 17:08:55.179 [main] BasicTypeRegistry - Adding type registration OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 01-03-2024 17:08:55.180 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 01-03-2024 17:08:55.183 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3c89b864] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@3400d6fa]
[INFO ] 01-03-2024 17:08:55.309 [main] BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
[INFO ] 01-03-2024 17:08:56.448 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 01-03-2024 17:08:56.450 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3c89b864] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@42f2cae8]
[TRACE] 01-03-2024 17:08:56.463 [main] TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@42f2cae8] for TypeConfiguration
[WARN ] 01-03-2024 17:08:56.803 [main] JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[INFO ] 01-03-2024 17:08:57.625 [main] Http11NioProtocol - Starting ProtocolHandler ["http-nio-8300"]
[INFO ] 01-03-2024 17:08:57.718 [main] TomcatWebServer - Tomcat started on port(s): 8300 (http) with context path '/users_products_api'
[INFO ] 01-03-2024 17:08:57.759 [main] TestSpringBootApplication - Started TestSpringBootApplication in 13.272 seconds (process running for 16.247)
[INFO ] 01-03-2024 17:09:03.675 [http-nio-8300-exec-2] [/users_products_api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[INFO ] 01-03-2024 17:09:03.676 [http-nio-8300-exec-2] DispatcherServlet - Initializing Servlet 'dispatcherServlet'
[INFO ] 01-03-2024 17:09:03.681 [http-nio-8300-exec-2] DispatcherServlet - Completed initialization in 3 ms
[WARN ] 01-03-2024 17:09:05.357 [reactor-tcp-epoll-1] ReactorNettyClient - Error: SEVERITY_LOCALIZED=ERROR, SEVERITY_NON_LOCALIZED=ERROR, CODE=42703, MESSAGE=column users.products does not exist, POSITION=72, FILE=parse_relation.c, LINE=3398, ROUTINE=errorMissingColumn
[TRACE] 01-03-2024 17:18:59.194 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@42f2cae8] for TypeConfiguration
[DEBUG] 01-03-2024 17:18:59.195 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@1d106165] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@42f2cae8]
[INFO ] 01-03-2024 17:19:08.222 [background-preinit] Version - HV000001: Hibernate Validator 8.0.1.Final
[INFO ] 01-03-2024 17:19:08.391 [main] TestSpringBootApplication - Starting TestSpringBootApplication using Java 17.0.10 with PID 2065900 (/home/dima/backend_microservice/UserProductsMicroService/target/classes started by dima in /home/dima/backend_microservice/UserProductsMicroService)
[INFO ] 01-03-2024 17:19:08.406 [main] TestSpringBootApplication - No active profile set, falling back to 1 default profile: "default"
[INFO ] 01-03-2024 17:19:10.754 [main] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
[INFO ] 01-03-2024 17:19:10.756 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data R2DBC repositories in DEFAULT mode.
[INFO ] 01-03-2024 17:19:11.472 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 704 ms. Found 1 R2DBC repository interfaces.
[INFO ] 01-03-2024 17:19:12.170 [main] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
[INFO ] 01-03-2024 17:19:12.173 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO ] 01-03-2024 17:19:12.240 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 36 ms. Found 0 JPA repository interfaces.
[ERROR] 01-03-2024 17:19:13.444 [main] AprLifecycleListener - An incompatible version [1.2.23] of the Apache Tomcat Native library is installed, while Tomcat requires version [1.2.34]
[INFO ] 01-03-2024 17:19:14.488 [main] TomcatWebServer - Tomcat initialized with port(s): 8300 (http)
[INFO ] 01-03-2024 17:19:14.516 [main] Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8300"]
[INFO ] 01-03-2024 17:19:14.523 [main] StandardService - Starting service [Tomcat]
[INFO ] 01-03-2024 17:19:14.524 [main] StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.11]
[INFO ] 01-03-2024 17:19:15.703 [main] TldScanner - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
[INFO ] 01-03-2024 17:19:15.726 [main] [/users_products_api] - Initializing Spring embedded WebApplicationContext
[INFO ] 01-03-2024 17:19:15.732 [main] ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 7091 ms
[INFO ] 01-03-2024 17:19:17.317 [main] Version - HHH000412: Hibernate ORM core version 6.2.6.Final
[INFO ] 01-03-2024 17:19:17.325 [main] Environment - HHH000406: Using bytecode reflection optimizer
[DEBUG] 01-03-2024 17:19:17.727 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@5341e71a
[DEBUG] 01-03-2024 17:19:17.728 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@5341e71a
[DEBUG] 01-03-2024 17:19:17.728 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@5341e71a
[DEBUG] 01-03-2024 17:19:17.729 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@405d8a80
[DEBUG] 01-03-2024 17:19:17.729 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@405d8a80
[DEBUG] 01-03-2024 17:19:17.730 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@ac4e690
[DEBUG] 01-03-2024 17:19:17.730 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@ac4e690
[DEBUG] 01-03-2024 17:19:17.731 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@6afeaf2d
[DEBUG] 01-03-2024 17:19:17.731 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@6afeaf2d
[DEBUG] 01-03-2024 17:19:17.732 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@365bfc5f
[DEBUG] 01-03-2024 17:19:17.732 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@365bfc5f
[DEBUG] 01-03-2024 17:19:17.733 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@365bfc5f
[DEBUG] 01-03-2024 17:19:17.733 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@1a7e799e
[DEBUG] 01-03-2024 17:19:17.735 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@1a7e799e
[DEBUG] 01-03-2024 17:19:17.735 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@1a7e799e
[DEBUG] 01-03-2024 17:19:17.736 [main] BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@37a3ec27
[DEBUG] 01-03-2024 17:19:17.738 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@37a3ec27
[DEBUG] 01-03-2024 17:19:17.739 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@283baa39
[DEBUG] 01-03-2024 17:19:17.743 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@416b1265
[DEBUG] 01-03-2024 17:19:17.743 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@416b1265
[DEBUG] 01-03-2024 17:19:17.744 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@2830315f
[DEBUG] 01-03-2024 17:19:17.744 [main] BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@da22aa
[DEBUG] 01-03-2024 17:19:17.745 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@75452aea
[DEBUG] 01-03-2024 17:19:17.745 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@75452aea
[DEBUG] 01-03-2024 17:19:17.745 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@75452aea
[DEBUG] 01-03-2024 17:19:17.746 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@6c24f61d
[DEBUG] 01-03-2024 17:19:17.746 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@6c24f61d
[DEBUG] 01-03-2024 17:19:17.747 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@6c24f61d
[DEBUG] 01-03-2024 17:19:17.747 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@4537880f
[DEBUG] 01-03-2024 17:19:17.748 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@4537880f
[DEBUG] 01-03-2024 17:19:17.748 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@4537880f
[DEBUG] 01-03-2024 17:19:17.749 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@14292d71
[DEBUG] 01-03-2024 17:19:17.749 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@14292d71
[DEBUG] 01-03-2024 17:19:17.750 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@14292d71
[DEBUG] 01-03-2024 17:19:17.750 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@48e74764
[DEBUG] 01-03-2024 17:19:17.751 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@48e74764
[DEBUG] 01-03-2024 17:19:17.751 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@48e74764
[DEBUG] 01-03-2024 17:19:17.751 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@338d47b
[DEBUG] 01-03-2024 17:19:17.752 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@338d47b
[DEBUG] 01-03-2024 17:19:17.752 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@7a3643e3
[DEBUG] 01-03-2024 17:19:17.752 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@7a3643e3
[DEBUG] 01-03-2024 17:19:17.753 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@2729bb71
[DEBUG] 01-03-2024 17:19:17.753 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@2729bb71
[DEBUG] 01-03-2024 17:19:17.754 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@2729bb71
[DEBUG] 01-03-2024 17:19:17.755 [main] BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@55071497
[DEBUG] 01-03-2024 17:19:17.756 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@10d98940
[DEBUG] 01-03-2024 17:19:17.756 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@10d98940
[DEBUG] 01-03-2024 17:19:17.756 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@58b8f9e3
[DEBUG] 01-03-2024 17:19:17.756 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@32a033b6
[DEBUG] 01-03-2024 17:19:17.757 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@32a033b6
[DEBUG] 01-03-2024 17:19:17.757 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@32a033b6
[DEBUG] 01-03-2024 17:19:17.758 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@5f6e2ad9
[DEBUG] 01-03-2024 17:19:17.758 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@3212bfd
[DEBUG] 01-03-2024 17:19:17.758 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@1cc9bd9b
[DEBUG] 01-03-2024 17:19:17.759 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@2f471037
[DEBUG] 01-03-2024 17:19:17.759 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@2f471037
[DEBUG] 01-03-2024 17:19:17.760 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@1d1cfe4
[DEBUG] 01-03-2024 17:19:17.761 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@1d1cfe4
[DEBUG] 01-03-2024 17:19:17.761 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@ba562e0
[DEBUG] 01-03-2024 17:19:17.761 [main] BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@5a51336a
[DEBUG] 01-03-2024 17:19:17.762 [main] BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@4d8056bf
[DEBUG] 01-03-2024 17:19:17.762 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@42211e04
[DEBUG] 01-03-2024 17:19:17.762 [main] BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@6233c6c2
[DEBUG] 01-03-2024 17:19:17.763 [main] BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@312a738d
[DEBUG] 01-03-2024 17:19:17.763 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@7e50eeb9
[DEBUG] 01-03-2024 17:19:17.763 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@7e50eeb9
[DEBUG] 01-03-2024 17:19:17.764 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@34cb0e49
[DEBUG] 01-03-2024 17:19:17.764 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@34cb0e49
[DEBUG] 01-03-2024 17:19:17.765 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@48b2dbc4
[DEBUG] 01-03-2024 17:19:17.765 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@48b2dbc4
[DEBUG] 01-03-2024 17:19:17.765 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@2a667f44
[DEBUG] 01-03-2024 17:19:17.766 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@2a667f44
[DEBUG] 01-03-2024 17:19:17.766 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@53ba7997
[DEBUG] 01-03-2024 17:19:17.767 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@53ba7997
[DEBUG] 01-03-2024 17:19:17.767 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@3f6f9cef
[DEBUG] 01-03-2024 17:19:17.768 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@61dd1c3d
[DEBUG] 01-03-2024 17:19:17.768 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@7858d31d
[DEBUG] 01-03-2024 17:19:17.768 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@7858d31d
[DEBUG] 01-03-2024 17:19:17.769 [main] BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@782e6b40
[DEBUG] 01-03-2024 17:19:17.769 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@3b65084e
[DEBUG] 01-03-2024 17:19:17.769 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@32d0d7eb
[DEBUG] 01-03-2024 17:19:17.770 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@cae2a97
[DEBUG] 01-03-2024 17:19:17.770 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@cae2a97
[DEBUG] 01-03-2024 17:19:17.770 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@7d12429
[DEBUG] 01-03-2024 17:19:17.771 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@14656be5
[DEBUG] 01-03-2024 17:19:17.771 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@20be890d
[DEBUG] 01-03-2024 17:19:17.771 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@20be890d
[DEBUG] 01-03-2024 17:19:17.772 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@5db9f51f
[DEBUG] 01-03-2024 17:19:17.772 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@5db9f51f
[DEBUG] 01-03-2024 17:19:17.772 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@534762ed
[DEBUG] 01-03-2024 17:19:17.773 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@534762ed
[DEBUG] 01-03-2024 17:19:17.773 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@534762ed
[DEBUG] 01-03-2024 17:19:17.773 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@6c421123
[DEBUG] 01-03-2024 17:19:17.774 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@6c421123
[DEBUG] 01-03-2024 17:19:17.774 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@6c421123
[DEBUG] 01-03-2024 17:19:17.774 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@38e00b47
[DEBUG] 01-03-2024 17:19:17.775 [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@2a631049
[DEBUG] 01-03-2024 17:19:17.775 [main] BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@425b5fe2
[DEBUG] 01-03-2024 17:19:17.775 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@425b5fe2
[DEBUG] 01-03-2024 17:19:17.776 [main] BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@3eec8583
[DEBUG] 01-03-2024 17:19:17.776 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@3eec8583
[DEBUG] 01-03-2024 17:19:17.776 [main] BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@3eec8583
[DEBUG] 01-03-2024 17:19:17.777 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@66e1b2a
[DEBUG] 01-03-2024 17:19:17.777 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@343db2f6
[DEBUG] 01-03-2024 17:19:17.778 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@2c815fdc
[DEBUG] 01-03-2024 17:19:17.778 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@2c815fdc
[DEBUG] 01-03-2024 17:19:17.779 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@769b0752
[DEBUG] 01-03-2024 17:19:17.779 [main] BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@769b0752
[DEBUG] 01-03-2024 17:19:17.779 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@769b0752
[DEBUG] 01-03-2024 17:19:17.781 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@dae5e0
[DEBUG] 01-03-2024 17:19:17.781 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@dae5e0
[DEBUG] 01-03-2024 17:19:17.782 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@59a94d0f
[DEBUG] 01-03-2024 17:19:17.782 [main] BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@59a94d0f
[DEBUG] 01-03-2024 17:19:17.782 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@7ff09659
[DEBUG] 01-03-2024 17:19:17.783 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@7ff09659
[DEBUG] 01-03-2024 17:19:17.783 [main] BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@517fbf62
[DEBUG] 01-03-2024 17:19:17.783 [main] BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@517fbf62
[DEBUG] 01-03-2024 17:19:17.784 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@65db548
[DEBUG] 01-03-2024 17:19:17.784 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@65db548
[DEBUG] 01-03-2024 17:19:17.784 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@150f41b9
[DEBUG] 01-03-2024 17:19:17.799 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@70139a81
[DEBUG] 01-03-2024 17:19:17.799 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@70139a81
[DEBUG] 01-03-2024 17:19:17.802 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@2299d903
[DEBUG] 01-03-2024 17:19:17.803 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@70c56434
[DEBUG] 01-03-2024 17:19:17.803 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@2c3f43d1
[DEBUG] 01-03-2024 17:19:17.804 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@632d4cf2
[DEBUG] 01-03-2024 17:19:17.804 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@f10d055
[DEBUG] 01-03-2024 17:19:17.804 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@542ff147
[DEBUG] 01-03-2024 17:19:17.805 [main] BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@2d801d8
[DEBUG] 01-03-2024 17:19:17.805 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@b9b97ad
[DEBUG] 01-03-2024 17:19:17.805 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@2807cf3
[DEBUG] 01-03-2024 17:19:19.087 [main] DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1b8ee69d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2b400bd0)
[DEBUG] 01-03-2024 17:19:19.100 [main] JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
[DEBUG] 01-03-2024 17:19:19.108 [main] JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 01-03-2024 17:19:19.150 [main] BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@47eae91d
[DEBUG] 01-03-2024 17:19:19.151 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@47eae91d
[DEBUG] 01-03-2024 17:19:19.151 [main] BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@70139a81`
[DEBUG] 01-03-2024 17:19:19.162 [main] JdbcTypeRegistry - addDescriptor(3100, NumericTypeDescriptor) replaced previous registration(org.hibernate.dialect.PostgreSQLIntervalSecondJdbcType@413eaf5d)
[DEBUG] 01-03-2024 17:19:19.181 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 01-03-2024 17:19:19.182 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 01-03-2024 17:19:19.182 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 01-03-2024 17:19:19.183 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 01-03-2024 17:19:19.183 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 01-03-2024 17:19:19.184 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 01-03-2024 17:19:19.187 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 01-03-2024 17:19:19.187 [main] BasicTypeRegistry - Adding type registration OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 01-03-2024 17:19:19.188 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 01-03-2024 17:19:19.192 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@30133a11] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@2168def]
[INFO ] 01-03-2024 17:19:19.594 [main] BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
[INFO ] 01-03-2024 17:19:21.166 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 01-03-2024 17:19:21.167 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@30133a11] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@403cff1c]
[TRACE] 01-03-2024 17:19:21.181 [main] TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@403cff1c] for TypeConfiguration
[WARN ] 01-03-2024 17:19:21.840 [main] JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[INFO ] 01-03-2024 17:19:23.098 [main] Http11NioProtocol - Starting ProtocolHandler ["http-nio-8300"]
[INFO ] 01-03-2024 17:19:23.217 [main] TomcatWebServer - Tomcat started on port(s): 8300 (http) with context path '/users_products_api'
[INFO ] 01-03-2024 17:19:23.249 [main] TestSpringBootApplication - Started TestSpringBootApplication in 15.999 seconds (process running for 19.231)
[INFO ] 01-03-2024 17:19:25.869 [http-nio-8300-exec-1] [/users_products_api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[INFO ] 01-03-2024 17:19:25.871 [http-nio-8300-exec-1] DispatcherServlet - Initializing Servlet 'dispatcherServlet'
[INFO ] 01-03-2024 17:19:25.874 [http-nio-8300-exec-1] DispatcherServlet - Completed initialization in 3 ms
[WARN ] 01-03-2024 17:19:27.381 [reactor-tcp-epoll-1] ReactorNettyClient - Error: SEVERITY_LOCALIZED=ERROR, SEVERITY_NON_LOCALIZED=ERROR, CODE=42703, MESSAGE=column users.products does not exist, POSITION=72, FILE=parse_relation.c, LINE=3398, ROUTINE=errorMissingColumn
[TRACE] 01-03-2024 17:20:39.935 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@403cff1c] for TypeConfiguration
[DEBUG] 01-03-2024 17:20:39.936 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@70cd3235] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@403cff1c]
[INFO ] 01-03-2024 17:20:50.128 [background-preinit] Version - HV000001: Hibernate Validator 8.0.1.Final
[INFO ] 01-03-2024 17:20:50.368 [main] TestSpringBootApplication - Starting TestSpringBootApplication using Java 17.0.10 with PID 2066874 (/home/dima/backend_microservice/UserProductsMicroService/target/classes started by dima in /home/dima/backend_microservice/UserProductsMicroService)
[INFO ] 01-03-2024 17:20:50.384 [main] TestSpringBootApplication - No active profile set, falling back to 1 default profile: "default"
[INFO ] 01-03-2024 17:20:52.951 [main] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
[INFO ] 01-03-2024 17:20:52.954 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data R2DBC repositories in DEFAULT mode.
[INFO ] 01-03-2024 17:20:53.479 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 512 ms. Found 1 R2DBC repository interfaces.
[INFO ] 01-03-2024 17:20:54.322 [main] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
[INFO ] 01-03-2024 17:20:54.324 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO ] 01-03-2024 17:20:54.411 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 60 ms. Found 0 JPA repository interfaces.
[ERROR] 01-03-2024 17:20:55.983 [main] AprLifecycleListener - An incompatible version [1.2.23] of the Apache Tomcat Native library is installed, while Tomcat requires version [1.2.34]
[INFO ] 01-03-2024 17:20:57.178 [main] TomcatWebServer - Tomcat initialized with port(s): 8300 (http)
[INFO ] 01-03-2024 17:20:57.208 [main] Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8300"]
[INFO ] 01-03-2024 17:20:57.218 [main] StandardService - Starting service [Tomcat]
[INFO ] 01-03-2024 17:20:57.220 [main] StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.11]
[INFO ] 01-03-2024 17:20:58.784 [main] TldScanner - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
[INFO ] 01-03-2024 17:20:58.805 [main] [/users_products_api] - Initializing Spring embedded WebApplicationContext
[INFO ] 01-03-2024 17:20:58.812 [main] ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 8014 ms
[INFO ] 01-03-2024 17:21:00.265 [main] Version - HHH000412: Hibernate ORM core version 6.2.6.Final
[INFO ] 01-03-2024 17:21:00.274 [main] Environment - HHH000406: Using bytecode reflection optimizer
[DEBUG] 01-03-2024 17:21:00.914 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@2bc0b8c8
[DEBUG] 01-03-2024 17:21:00.916 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@2bc0b8c8
[DEBUG] 01-03-2024 17:21:00.916 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@2bc0b8c8
[DEBUG] 01-03-2024 17:21:00.917 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@15f861ee
[DEBUG] 01-03-2024 17:21:00.919 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@15f861ee
[DEBUG] 01-03-2024 17:21:00.919 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@3f1158ee
[DEBUG] 01-03-2024 17:21:00.920 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@3f1158ee
[DEBUG] 01-03-2024 17:21:00.930 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@6463da36
[DEBUG] 01-03-2024 17:21:00.931 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@6463da36
[DEBUG] 01-03-2024 17:21:00.932 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@4a4b288a
[DEBUG] 01-03-2024 17:21:00.933 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@4a4b288a
[DEBUG] 01-03-2024 17:21:00.935 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@4a4b288a
[DEBUG] 01-03-2024 17:21:00.936 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@1c6ac73c
[DEBUG] 01-03-2024 17:21:00.937 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@1c6ac73c
[DEBUG] 01-03-2024 17:21:00.937 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@1c6ac73c
[DEBUG] 01-03-2024 17:21:00.939 [main] BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@29892a77
[DEBUG] 01-03-2024 17:21:00.940 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@29892a77
[DEBUG] 01-03-2024 17:21:00.944 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@5341e71a
[DEBUG] 01-03-2024 17:21:00.945 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@405d8a80
[DEBUG] 01-03-2024 17:21:00.947 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@405d8a80
[DEBUG] 01-03-2024 17:21:00.948 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@ac4e690
[DEBUG] 01-03-2024 17:21:00.949 [main] BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@6afeaf2d
[DEBUG] 01-03-2024 17:21:00.950 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@365bfc5f
[DEBUG] 01-03-2024 17:21:00.950 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@365bfc5f
[DEBUG] 01-03-2024 17:21:00.951 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@365bfc5f
[DEBUG] 01-03-2024 17:21:00.952 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@1a7e799e
[DEBUG] 01-03-2024 17:21:00.953 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@1a7e799e
[DEBUG] 01-03-2024 17:21:00.954 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@1a7e799e
[DEBUG] 01-03-2024 17:21:00.954 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@37a3ec27
[DEBUG] 01-03-2024 17:21:00.955 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@37a3ec27
[DEBUG] 01-03-2024 17:21:00.957 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@37a3ec27
[DEBUG] 01-03-2024 17:21:00.960 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@283baa39
[DEBUG] 01-03-2024 17:21:00.960 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@283baa39
[DEBUG] 01-03-2024 17:21:00.961 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@283baa39
[DEBUG] 01-03-2024 17:21:00.961 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@416b1265
[DEBUG] 01-03-2024 17:21:00.962 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@416b1265
[DEBUG] 01-03-2024 17:21:00.962 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@416b1265
[DEBUG] 01-03-2024 17:21:00.963 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@2830315f
[DEBUG] 01-03-2024 17:21:00.963 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@2830315f
[DEBUG] 01-03-2024 17:21:00.964 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@da22aa
[DEBUG] 01-03-2024 17:21:00.964 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@da22aa
[DEBUG] 01-03-2024 17:21:00.965 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@75452aea
[DEBUG] 01-03-2024 17:21:00.965 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@75452aea
[DEBUG] 01-03-2024 17:21:00.968 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@75452aea
[DEBUG] 01-03-2024 17:21:00.968 [main] BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@6c24f61d
[DEBUG] 01-03-2024 17:21:00.972 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@4537880f
[DEBUG] 01-03-2024 17:21:00.973 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@4537880f
[DEBUG] 01-03-2024 17:21:00.981 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@14292d71
[DEBUG] 01-03-2024 17:21:00.981 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@48e74764
[DEBUG] 01-03-2024 17:21:00.982 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@48e74764
[DEBUG] 01-03-2024 17:21:00.984 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@48e74764
[DEBUG] 01-03-2024 17:21:00.984 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@338d47b
[DEBUG] 01-03-2024 17:21:00.985 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@7a3643e3
[DEBUG] 01-03-2024 17:21:00.985 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@2729bb71
[DEBUG] 01-03-2024 17:21:00.986 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@55071497
[DEBUG] 01-03-2024 17:21:00.988 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@55071497
[DEBUG] 01-03-2024 17:21:01.002 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@10d98940
[DEBUG] 01-03-2024 17:21:01.003 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@10d98940
[DEBUG] 01-03-2024 17:21:01.003 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@58b8f9e3
[DEBUG] 01-03-2024 17:21:01.004 [main] BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@32a033b6
[DEBUG] 01-03-2024 17:21:01.004 [main] BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@5f6e2ad9
[DEBUG] 01-03-2024 17:21:01.005 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@3212bfd
[DEBUG] 01-03-2024 17:21:01.005 [main] BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@1cc9bd9b
[DEBUG] 01-03-2024 17:21:01.005 [main] BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@2f471037
[DEBUG] 01-03-2024 17:21:01.006 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@1d1cfe4
[DEBUG] 01-03-2024 17:21:01.006 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@1d1cfe4
[DEBUG] 01-03-2024 17:21:01.006 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@ba562e0
[DEBUG] 01-03-2024 17:21:01.007 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@ba562e0
[DEBUG] 01-03-2024 17:21:01.007 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@5a51336a
[DEBUG] 01-03-2024 17:21:01.008 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@5a51336a
[DEBUG] 01-03-2024 17:21:01.008 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@4d8056bf
[DEBUG] 01-03-2024 17:21:01.008 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@4d8056bf
[DEBUG] 01-03-2024 17:21:01.008 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@42211e04
[DEBUG] 01-03-2024 17:21:01.009 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@42211e04
[DEBUG] 01-03-2024 17:21:01.009 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@6233c6c2
[DEBUG] 01-03-2024 17:21:01.009 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@312a738d
[DEBUG] 01-03-2024 17:21:01.010 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@7e50eeb9
[DEBUG] 01-03-2024 17:21:01.010 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@7e50eeb9
[DEBUG] 01-03-2024 17:21:01.010 [main] BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@34cb0e49
[DEBUG] 01-03-2024 17:21:01.011 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@48b2dbc4
[DEBUG] 01-03-2024 17:21:01.011 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@2a667f44
[DEBUG] 01-03-2024 17:21:01.012 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@53ba7997
[DEBUG] 01-03-2024 17:21:01.030 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@53ba7997
[DEBUG] 01-03-2024 17:21:01.031 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@3f6f9cef
[DEBUG] 01-03-2024 17:21:01.031 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@61dd1c3d
[DEBUG] 01-03-2024 17:21:01.032 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@7858d31d
[DEBUG] 01-03-2024 17:21:01.032 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@7858d31d
[DEBUG] 01-03-2024 17:21:01.033 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@782e6b40
[DEBUG] 01-03-2024 17:21:01.033 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@782e6b40
[DEBUG] 01-03-2024 17:21:01.034 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@3b65084e
[DEBUG] 01-03-2024 17:21:01.035 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@3b65084e
[DEBUG] 01-03-2024 17:21:01.035 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@3b65084e
[DEBUG] 01-03-2024 17:21:01.036 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@32d0d7eb
[DEBUG] 01-03-2024 17:21:01.036 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@32d0d7eb
[DEBUG] 01-03-2024 17:21:01.037 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@32d0d7eb
[DEBUG] 01-03-2024 17:21:01.037 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@cae2a97
[DEBUG] 01-03-2024 17:21:01.038 [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@7d12429
[DEBUG] 01-03-2024 17:21:01.038 [main] BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@14656be5
[DEBUG] 01-03-2024 17:21:01.038 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@14656be5
[DEBUG] 01-03-2024 17:21:01.038 [main] BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@20be890d
[DEBUG] 01-03-2024 17:21:01.039 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@20be890d
[DEBUG] 01-03-2024 17:21:01.039 [main] BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@20be890d
[DEBUG] 01-03-2024 17:21:01.039 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@5db9f51f
[DEBUG] 01-03-2024 17:21:01.040 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@534762ed
[DEBUG] 01-03-2024 17:21:01.040 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@6c421123
[DEBUG] 01-03-2024 17:21:01.040 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@6c421123
[DEBUG] 01-03-2024 17:21:01.044 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@38e00b47
[DEBUG] 01-03-2024 17:21:01.045 [main] BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@38e00b47
[DEBUG] 01-03-2024 17:21:01.046 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@38e00b47
[DEBUG] 01-03-2024 17:21:01.047 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@2a631049
[DEBUG] 01-03-2024 17:21:01.048 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@2a631049
[DEBUG] 01-03-2024 17:21:01.048 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@425b5fe2
[DEBUG] 01-03-2024 17:21:01.049 [main] BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@425b5fe2
[DEBUG] 01-03-2024 17:21:01.049 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@3eec8583
[DEBUG] 01-03-2024 17:21:01.049 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@3eec8583
[DEBUG] 01-03-2024 17:21:01.050 [main] BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@66e1b2a
[DEBUG] 01-03-2024 17:21:01.050 [main] BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@66e1b2a
[DEBUG] 01-03-2024 17:21:01.050 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@343db2f6
[DEBUG] 01-03-2024 17:21:01.052 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@343db2f6
[DEBUG] 01-03-2024 17:21:01.052 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@2c815fdc
[DEBUG] 01-03-2024 17:21:01.068 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@143413cd
[DEBUG] 01-03-2024 17:21:01.068 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@143413cd
[DEBUG] 01-03-2024 17:21:01.071 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@3c9e19de
[DEBUG] 01-03-2024 17:21:01.072 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@12aa381f
[DEBUG] 01-03-2024 17:21:01.072 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@6115846e
[DEBUG] 01-03-2024 17:21:01.073 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@1bec1589
[DEBUG] 01-03-2024 17:21:01.073 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@57f0bfc3
[DEBUG] 01-03-2024 17:21:01.073 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@14590fe2
[DEBUG] 01-03-2024 17:21:01.074 [main] BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@5922cff3
[DEBUG] 01-03-2024 17:21:01.074 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@2299d903
[DEBUG] 01-03-2024 17:21:01.074 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@70c56434
[DEBUG] 01-03-2024 17:21:02.548 [main] DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1fe05fff) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6e017950)
[DEBUG] 01-03-2024 17:21:02.554 [main] JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
[DEBUG] 01-03-2024 17:21:02.555 [main] JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 01-03-2024 17:21:02.576 [main] BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@2fea9a7b
[DEBUG] 01-03-2024 17:21:02.577 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@2fea9a7b
[DEBUG] 01-03-2024 17:21:02.577 [main] BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@143413cd`
[DEBUG] 01-03-2024 17:21:02.580 [main] JdbcTypeRegistry - addDescriptor(3100, NumericTypeDescriptor) replaced previous registration(org.hibernate.dialect.PostgreSQLIntervalSecondJdbcType@e993715)
[DEBUG] 01-03-2024 17:21:02.595 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 01-03-2024 17:21:02.595 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 01-03-2024 17:21:02.595 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 01-03-2024 17:21:02.596 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 01-03-2024 17:21:02.596 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 01-03-2024 17:21:02.596 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 01-03-2024 17:21:02.599 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 01-03-2024 17:21:02.599 [main] BasicTypeRegistry - Adding type registration OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 01-03-2024 17:21:02.600 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 01-03-2024 17:21:02.603 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3a8640f7] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@ca10069]
[INFO ] 01-03-2024 17:21:02.758 [main] BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
[INFO ] 01-03-2024 17:21:04.168 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 01-03-2024 17:21:04.169 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3a8640f7] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@77e1dacd]
[TRACE] 01-03-2024 17:21:04.182 [main] TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@77e1dacd] for TypeConfiguration
[WARN ] 01-03-2024 17:21:04.649 [main] JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[INFO ] 01-03-2024 17:21:05.785 [main] Http11NioProtocol - Starting ProtocolHandler ["http-nio-8300"]
[INFO ] 01-03-2024 17:21:05.869 [main] TomcatWebServer - Tomcat started on port(s): 8300 (http) with context path '/users_products_api'
[INFO ] 01-03-2024 17:21:05.902 [main] TestSpringBootApplication - Started TestSpringBootApplication in 16.799 seconds (process running for 20.074)
[INFO ] 01-03-2024 17:21:10.051 [http-nio-8300-exec-1] [/users_products_api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[INFO ] 01-03-2024 17:21:10.052 [http-nio-8300-exec-1] DispatcherServlet - Initializing Servlet 'dispatcherServlet'
[INFO ] 01-03-2024 17:21:10.060 [http-nio-8300-exec-1] DispatcherServlet - Completed initialization in 7 ms
[WARN ] 01-03-2024 17:21:11.564 [reactor-tcp-epoll-1] ReactorNettyClient - Error: SEVERITY_LOCALIZED=ERROR, SEVERITY_NON_LOCALIZED=ERROR, CODE=42703, MESSAGE=column users.products does not exist, POSITION=72, FILE=parse_relation.c, LINE=3398, ROUTINE=errorMissingColumn
[TRACE] 04-03-2024 10:04:45.765 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@77e1dacd] for TypeConfiguration
[DEBUG] 04-03-2024 10:04:45.768 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@4633f627] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@77e1dacd]
[INFO ] 04-03-2024 10:04:58.356 [background-preinit] Version - HV000001: Hibernate Validator 8.0.1.Final
[INFO ] 04-03-2024 10:04:58.622 [main] TestSpringBootApplication - Starting TestSpringBootApplication using Java 17.0.10 with PID 2127410 (/home/dima/backend_microservice/UserProductsMicroService/target/classes started by dima in /home/dima/backend_microservice/UserProductsMicroService)
[INFO ] 04-03-2024 10:04:58.642 [main] TestSpringBootApplication - No active profile set, falling back to 1 default profile: "default"
[INFO ] 04-03-2024 10:05:00.486 [main] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
[INFO ] 04-03-2024 10:05:00.488 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data R2DBC repositories in DEFAULT mode.
[INFO ] 04-03-2024 10:05:01.040 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 534 ms. Found 1 R2DBC repository interfaces.
[INFO ] 04-03-2024 10:05:01.659 [main] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
[INFO ] 04-03-2024 10:05:01.663 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO ] 04-03-2024 10:05:01.695 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 20 ms. Found 0 JPA repository interfaces.
[ERROR] 04-03-2024 10:05:02.754 [main] AprLifecycleListener - An incompatible version [1.2.23] of the Apache Tomcat Native library is installed, while Tomcat requires version [1.2.34]
[INFO ] 04-03-2024 10:05:03.540 [main] TomcatWebServer - Tomcat initialized with port(s): 8300 (http)
[INFO ] 04-03-2024 10:05:03.561 [main] Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8300"]
[INFO ] 04-03-2024 10:05:03.569 [main] StandardService - Starting service [Tomcat]
[INFO ] 04-03-2024 10:05:03.570 [main] StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.11]
[INFO ] 04-03-2024 10:05:04.962 [main] TldScanner - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
[INFO ] 04-03-2024 10:05:04.990 [main] [/users_products_api] - Initializing Spring embedded WebApplicationContext
[INFO ] 04-03-2024 10:05:04.995 [main] ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 6148 ms
[INFO ] 04-03-2024 10:05:06.568 [main] Version - HHH000412: Hibernate ORM core version 6.2.6.Final
[INFO ] 04-03-2024 10:05:06.577 [main] Environment - HHH000406: Using bytecode reflection optimizer
[DEBUG] 04-03-2024 10:05:07.084 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@66ab924
[DEBUG] 04-03-2024 10:05:07.084 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@66ab924
[DEBUG] 04-03-2024 10:05:07.085 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@66ab924
[DEBUG] 04-03-2024 10:05:07.085 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@6df2af02
[DEBUG] 04-03-2024 10:05:07.086 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@6df2af02
[DEBUG] 04-03-2024 10:05:07.087 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@779228dc
[DEBUG] 04-03-2024 10:05:07.087 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@779228dc
[DEBUG] 04-03-2024 10:05:07.087 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@1f7336b2
[DEBUG] 04-03-2024 10:05:07.088 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@1f7336b2
[DEBUG] 04-03-2024 10:05:07.089 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@4c030fe1
[DEBUG] 04-03-2024 10:05:07.089 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@4c030fe1
[DEBUG] 04-03-2024 10:05:07.090 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@4c030fe1
[DEBUG] 04-03-2024 10:05:07.090 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@347123dc
[DEBUG] 04-03-2024 10:05:07.091 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@347123dc
[DEBUG] 04-03-2024 10:05:07.091 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@347123dc
[DEBUG] 04-03-2024 10:05:07.091 [main] BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@52433946
[DEBUG] 04-03-2024 10:05:07.092 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@52433946
[DEBUG] 04-03-2024 10:05:07.092 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@5403431a
[DEBUG] 04-03-2024 10:05:07.093 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@ab327c
[DEBUG] 04-03-2024 10:05:07.093 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@ab327c
[DEBUG] 04-03-2024 10:05:07.093 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@3d798e76
[DEBUG] 04-03-2024 10:05:07.094 [main] BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@763b0996
[DEBUG] 04-03-2024 10:05:07.095 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@386e9fd8
[DEBUG] 04-03-2024 10:05:07.095 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@386e9fd8
[DEBUG] 04-03-2024 10:05:07.096 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@386e9fd8
[DEBUG] 04-03-2024 10:05:07.096 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@618f627b
[DEBUG] 04-03-2024 10:05:07.096 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@618f627b
[DEBUG] 04-03-2024 10:05:07.097 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@618f627b
[DEBUG] 04-03-2024 10:05:07.097 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@10745a02
[DEBUG] 04-03-2024 10:05:07.098 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@10745a02
[DEBUG] 04-03-2024 10:05:07.098 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@10745a02
[DEBUG] 04-03-2024 10:05:07.099 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@3e2d8623
[DEBUG] 04-03-2024 10:05:07.099 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@3e2d8623
[DEBUG] 04-03-2024 10:05:07.099 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@3e2d8623
[DEBUG] 04-03-2024 10:05:07.100 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@72715e61
[DEBUG] 04-03-2024 10:05:07.100 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@72715e61
[DEBUG] 04-03-2024 10:05:07.100 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@72715e61
[DEBUG] 04-03-2024 10:05:07.101 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@68f776ee
[DEBUG] 04-03-2024 10:05:07.101 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@68f776ee
[DEBUG] 04-03-2024 10:05:07.101 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@5a6195b8
[DEBUG] 04-03-2024 10:05:07.102 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@5a6195b8
[DEBUG] 04-03-2024 10:05:07.102 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@8af1c49
[DEBUG] 04-03-2024 10:05:07.103 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@8af1c49
[DEBUG] 04-03-2024 10:05:07.103 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@8af1c49
[DEBUG] 04-03-2024 10:05:07.103 [main] BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@70d5d96b
[DEBUG] 04-03-2024 10:05:07.104 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@23469199
[DEBUG] 04-03-2024 10:05:07.104 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@23469199
[DEBUG] 04-03-2024 10:05:07.105 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@75dc1c1c
[DEBUG] 04-03-2024 10:05:07.105 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@5611bba
[DEBUG] 04-03-2024 10:05:07.105 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@5611bba
[DEBUG] 04-03-2024 10:05:07.106 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@5611bba
[DEBUG] 04-03-2024 10:05:07.107 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@5ba184fc
[DEBUG] 04-03-2024 10:05:07.107 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@4cfc0c48
[DEBUG] 04-03-2024 10:05:07.107 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@59d5c537
[DEBUG] 04-03-2024 10:05:07.108 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@5464b97c
[DEBUG] 04-03-2024 10:05:07.109 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@5464b97c
[DEBUG] 04-03-2024 10:05:07.109 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@3355168
[DEBUG] 04-03-2024 10:05:07.110 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@3355168
[DEBUG] 04-03-2024 10:05:07.111 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@2f07930a
[DEBUG] 04-03-2024 10:05:07.111 [main] BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@580c17a0
[DEBUG] 04-03-2024 10:05:07.111 [main] BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@29d2fa84
[DEBUG] 04-03-2024 10:05:07.112 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@4540c7
[DEBUG] 04-03-2024 10:05:07.112 [main] BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@13c90c06
[DEBUG] 04-03-2024 10:05:07.112 [main] BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@2bc0b8c8
[DEBUG] 04-03-2024 10:05:07.113 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@15f861ee
[DEBUG] 04-03-2024 10:05:07.113 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@15f861ee
[DEBUG] 04-03-2024 10:05:07.113 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@3f1158ee
[DEBUG] 04-03-2024 10:05:07.114 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@3f1158ee
[DEBUG] 04-03-2024 10:05:07.114 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@6463da36
[DEBUG] 04-03-2024 10:05:07.114 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@6463da36
[DEBUG] 04-03-2024 10:05:07.115 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@4a4b288a
[DEBUG] 04-03-2024 10:05:07.115 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@4a4b288a
[DEBUG] 04-03-2024 10:05:07.115 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@1c6ac73c
[DEBUG] 04-03-2024 10:05:07.116 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@1c6ac73c
[DEBUG] 04-03-2024 10:05:07.116 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@29892a77
[DEBUG] 04-03-2024 10:05:07.116 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@5341e71a
[DEBUG] 04-03-2024 10:05:07.117 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@405d8a80
[DEBUG] 04-03-2024 10:05:07.117 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@405d8a80
[DEBUG] 04-03-2024 10:05:07.117 [main] BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@ac4e690
[DEBUG] 04-03-2024 10:05:07.118 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@6afeaf2d
[DEBUG] 04-03-2024 10:05:07.118 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@365bfc5f
[DEBUG] 04-03-2024 10:05:07.119 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@1a7e799e
[DEBUG] 04-03-2024 10:05:07.119 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@1a7e799e
[DEBUG] 04-03-2024 10:05:07.119 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@37a3ec27
[DEBUG] 04-03-2024 10:05:07.120 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@283baa39
[DEBUG] 04-03-2024 10:05:07.120 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@416b1265
[DEBUG] 04-03-2024 10:05:07.120 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@416b1265
[DEBUG] 04-03-2024 10:05:07.121 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@2830315f
[DEBUG] 04-03-2024 10:05:07.121 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@2830315f
[DEBUG] 04-03-2024 10:05:07.121 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@da22aa
[DEBUG] 04-03-2024 10:05:07.122 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@da22aa
[DEBUG] 04-03-2024 10:05:07.122 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@da22aa
[DEBUG] 04-03-2024 10:05:07.123 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@75452aea
[DEBUG] 04-03-2024 10:05:07.123 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@75452aea
[DEBUG] 04-03-2024 10:05:07.123 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@75452aea
[DEBUG] 04-03-2024 10:05:07.124 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@6c24f61d
[DEBUG] 04-03-2024 10:05:07.124 [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@4537880f
[DEBUG] 04-03-2024 10:05:07.124 [main] BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@14292d71
[DEBUG] 04-03-2024 10:05:07.125 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@14292d71
[DEBUG] 04-03-2024 10:05:07.125 [main] BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@48e74764
[DEBUG] 04-03-2024 10:05:07.126 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@48e74764
[DEBUG] 04-03-2024 10:05:07.126 [main] BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@48e74764
[DEBUG] 04-03-2024 10:05:07.126 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@338d47b
[DEBUG] 04-03-2024 10:05:07.127 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@7a3643e3
[DEBUG] 04-03-2024 10:05:07.127 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@2729bb71
[DEBUG] 04-03-2024 10:05:07.127 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@2729bb71
[DEBUG] 04-03-2024 10:05:07.128 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@55071497
[DEBUG] 04-03-2024 10:05:07.128 [main] BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@55071497
[DEBUG] 04-03-2024 10:05:07.129 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@55071497
[DEBUG] 04-03-2024 10:05:07.129 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@10d98940
[DEBUG] 04-03-2024 10:05:07.130 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@10d98940
[DEBUG] 04-03-2024 10:05:07.130 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@58b8f9e3
[DEBUG] 04-03-2024 10:05:07.130 [main] BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@58b8f9e3
[DEBUG] 04-03-2024 10:05:07.131 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@32a033b6
[DEBUG] 04-03-2024 10:05:07.131 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@32a033b6
[DEBUG] 04-03-2024 10:05:07.147 [main] BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@5f6e2ad9
[DEBUG] 04-03-2024 10:05:07.147 [main] BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@5f6e2ad9
[DEBUG] 04-03-2024 10:05:07.147 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@3212bfd
[DEBUG] 04-03-2024 10:05:07.147 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@3212bfd
[DEBUG] 04-03-2024 10:05:07.148 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@1cc9bd9b
[DEBUG] 04-03-2024 10:05:07.165 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@3feebf9c
[DEBUG] 04-03-2024 10:05:07.166 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@3feebf9c
[DEBUG] 04-03-2024 10:05:07.168 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@56f9de3b
[DEBUG] 04-03-2024 10:05:07.169 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@6728370a
[DEBUG] 04-03-2024 10:05:07.169 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@2b5f8e61
[DEBUG] 04-03-2024 10:05:07.170 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@6ba0ee4a
[DEBUG] 04-03-2024 10:05:07.170 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@73b0ed03
[DEBUG] 04-03-2024 10:05:07.170 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@55061418
[DEBUG] 04-03-2024 10:05:07.171 [main] BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@27db45f
[DEBUG] 04-03-2024 10:05:07.171 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@6ec3d8e4
[DEBUG] 04-03-2024 10:05:07.171 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@1aeff8ca
[DEBUG] 04-03-2024 10:05:08.796 [main] DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@520c3dcb) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@145fe8ab)
[DEBUG] 04-03-2024 10:05:08.803 [main] JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
[DEBUG] 04-03-2024 10:05:08.804 [main] JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 04-03-2024 10:05:08.828 [main] BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@34bf66af
[DEBUG] 04-03-2024 10:05:08.829 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@34bf66af
[DEBUG] 04-03-2024 10:05:08.829 [main] BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@3feebf9c`
[DEBUG] 04-03-2024 10:05:08.834 [main] JdbcTypeRegistry - addDescriptor(3100, NumericTypeDescriptor) replaced previous registration(org.hibernate.dialect.PostgreSQLIntervalSecondJdbcType@11309dd4)
[DEBUG] 04-03-2024 10:05:08.849 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 04-03-2024 10:05:08.850 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 04-03-2024 10:05:08.850 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 04-03-2024 10:05:08.850 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 04-03-2024 10:05:08.851 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 04-03-2024 10:05:08.852 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 04-03-2024 10:05:08.855 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 04-03-2024 10:05:08.855 [main] BasicTypeRegistry - Adding type registration OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 04-03-2024 10:05:08.856 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 04-03-2024 10:05:08.859 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2ec92631] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@76220ef1]
[INFO ] 04-03-2024 10:05:09.075 [main] BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
[INFO ] 04-03-2024 10:05:10.364 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 04-03-2024 10:05:10.366 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2ec92631] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@5cdc8499]
[TRACE] 04-03-2024 10:05:10.377 [main] TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@5cdc8499] for TypeConfiguration
[WARN ] 04-03-2024 10:05:10.744 [main] JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[INFO ] 04-03-2024 10:05:11.751 [main] Http11NioProtocol - Starting ProtocolHandler ["http-nio-8300"]
[INFO ] 04-03-2024 10:05:11.836 [main] TomcatWebServer - Tomcat started on port(s): 8300 (http) with context path '/users_products_api'
[INFO ] 04-03-2024 10:05:11.875 [main] TestSpringBootApplication - Started TestSpringBootApplication in 14.96 seconds (process running for 18.579)
[INFO ] 04-03-2024 10:05:20.924 [http-nio-8300-exec-1] [/users_products_api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[INFO ] 04-03-2024 10:05:20.925 [http-nio-8300-exec-1] DispatcherServlet - Initializing Servlet 'dispatcherServlet'
[INFO ] 04-03-2024 10:05:20.931 [http-nio-8300-exec-1] DispatcherServlet - Completed initialization in 4 ms
[TRACE] 04-03-2024 10:09:22.169 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@5cdc8499] for TypeConfiguration
[DEBUG] 04-03-2024 10:09:22.170 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@7fa9a4bb] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@5cdc8499]
[INFO ] 04-03-2024 10:09:37.171 [background-preinit] Version - HV000001: Hibernate Validator 8.0.1.Final
[INFO ] 04-03-2024 10:09:37.342 [main] TestSpringBootApplication - Starting TestSpringBootApplication using Java 17.0.10 with PID 2129979 (/home/dima/backend_microservice/UserProductsMicroService/target/classes started by dima in /home/dima/backend_microservice/UserProductsMicroService)
[INFO ] 04-03-2024 10:09:37.357 [main] TestSpringBootApplication - No active profile set, falling back to 1 default profile: "default"
[INFO ] 04-03-2024 10:09:39.388 [main] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
[INFO ] 04-03-2024 10:09:39.390 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data R2DBC repositories in DEFAULT mode.
[INFO ] 04-03-2024 10:09:39.895 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 491 ms. Found 1 R2DBC repository interfaces.
[INFO ] 04-03-2024 10:09:40.623 [main] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
[INFO ] 04-03-2024 10:09:40.627 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO ] 04-03-2024 10:09:40.656 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 20 ms. Found 0 JPA repository interfaces.
[ERROR] 04-03-2024 10:09:41.697 [main] AprLifecycleListener - An incompatible version [1.2.23] of the Apache Tomcat Native library is installed, while Tomcat requires version [1.2.34]
[INFO ] 04-03-2024 10:09:42.507 [main] TomcatWebServer - Tomcat initialized with port(s): 8300 (http)
[INFO ] 04-03-2024 10:09:42.531 [main] Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8300"]
[INFO ] 04-03-2024 10:09:42.539 [main] StandardService - Starting service [Tomcat]
[INFO ] 04-03-2024 10:09:42.540 [main] StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.11]
[INFO ] 04-03-2024 10:09:43.620 [main] TldScanner - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
[INFO ] 04-03-2024 10:09:43.639 [main] [/users_products_api] - Initializing Spring embedded WebApplicationContext
[INFO ] 04-03-2024 10:09:43.644 [main] ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 5922 ms
[INFO ] 04-03-2024 10:09:44.855 [main] Version - HHH000412: Hibernate ORM core version 6.2.6.Final
[INFO ] 04-03-2024 10:09:44.863 [main] Environment - HHH000406: Using bytecode reflection optimizer
[DEBUG] 04-03-2024 10:09:45.453 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@10745a02
[DEBUG] 04-03-2024 10:09:45.454 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@10745a02
[DEBUG] 04-03-2024 10:09:45.454 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@10745a02
[DEBUG] 04-03-2024 10:09:45.455 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@3e2d8623
[DEBUG] 04-03-2024 10:09:45.455 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@3e2d8623
[DEBUG] 04-03-2024 10:09:45.455 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@72715e61
[DEBUG] 04-03-2024 10:09:45.456 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@72715e61
[DEBUG] 04-03-2024 10:09:45.457 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@68f776ee
[DEBUG] 04-03-2024 10:09:45.458 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@68f776ee
[DEBUG] 04-03-2024 10:09:45.459 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@5a6195b8
[DEBUG] 04-03-2024 10:09:45.459 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@5a6195b8
[DEBUG] 04-03-2024 10:09:45.459 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@5a6195b8
[DEBUG] 04-03-2024 10:09:45.460 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@8af1c49
[DEBUG] 04-03-2024 10:09:45.460 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@8af1c49
[DEBUG] 04-03-2024 10:09:45.461 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@8af1c49
[DEBUG] 04-03-2024 10:09:45.461 [main] BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@70d5d96b
[DEBUG] 04-03-2024 10:09:45.462 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@70d5d96b
[DEBUG] 04-03-2024 10:09:45.462 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@23469199
[DEBUG] 04-03-2024 10:09:45.463 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@75dc1c1c
[DEBUG] 04-03-2024 10:09:45.463 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@75dc1c1c
[DEBUG] 04-03-2024 10:09:45.464 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@5611bba
[DEBUG] 04-03-2024 10:09:45.464 [main] BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@5ba184fc
[DEBUG] 04-03-2024 10:09:45.465 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@4cfc0c48
[DEBUG] 04-03-2024 10:09:45.465 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@4cfc0c48
[DEBUG] 04-03-2024 10:09:45.465 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@4cfc0c48
[DEBUG] 04-03-2024 10:09:45.466 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@59d5c537
[DEBUG] 04-03-2024 10:09:45.466 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@59d5c537
[DEBUG] 04-03-2024 10:09:45.467 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@59d5c537
[DEBUG] 04-03-2024 10:09:45.467 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@5464b97c
[DEBUG] 04-03-2024 10:09:45.468 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@5464b97c
[DEBUG] 04-03-2024 10:09:45.469 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@5464b97c
[DEBUG] 04-03-2024 10:09:45.469 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@3355168
[DEBUG] 04-03-2024 10:09:45.469 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@3355168
[DEBUG] 04-03-2024 10:09:45.470 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@3355168
[DEBUG] 04-03-2024 10:09:45.473 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@2f07930a
[DEBUG] 04-03-2024 10:09:45.473 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@2f07930a
[DEBUG] 04-03-2024 10:09:45.473 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@2f07930a
[DEBUG] 04-03-2024 10:09:45.474 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@580c17a0
[DEBUG] 04-03-2024 10:09:45.474 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@580c17a0
[DEBUG] 04-03-2024 10:09:45.475 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@29d2fa84
[DEBUG] 04-03-2024 10:09:45.475 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@29d2fa84
[DEBUG] 04-03-2024 10:09:45.475 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@4540c7
[DEBUG] 04-03-2024 10:09:45.476 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@4540c7
[DEBUG] 04-03-2024 10:09:45.476 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@4540c7
[DEBUG] 04-03-2024 10:09:45.476 [main] BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@13c90c06
[DEBUG] 04-03-2024 10:09:45.477 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@2bc0b8c8
[DEBUG] 04-03-2024 10:09:45.477 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@2bc0b8c8
[DEBUG] 04-03-2024 10:09:45.478 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@15f861ee
[DEBUG] 04-03-2024 10:09:45.479 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@3f1158ee
[DEBUG] 04-03-2024 10:09:45.479 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@3f1158ee
[DEBUG] 04-03-2024 10:09:45.479 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@3f1158ee
[DEBUG] 04-03-2024 10:09:45.480 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@6463da36
[DEBUG] 04-03-2024 10:09:45.480 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@4a4b288a
[DEBUG] 04-03-2024 10:09:45.480 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@1c6ac73c
[DEBUG] 04-03-2024 10:09:45.480 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@29892a77
[DEBUG] 04-03-2024 10:09:45.481 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@29892a77
[DEBUG] 04-03-2024 10:09:45.481 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@5341e71a
[DEBUG] 04-03-2024 10:09:45.482 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@5341e71a
[DEBUG] 04-03-2024 10:09:45.483 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@405d8a80
[DEBUG] 04-03-2024 10:09:45.483 [main] BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@ac4e690
[DEBUG] 04-03-2024 10:09:45.483 [main] BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@6afeaf2d
[DEBUG] 04-03-2024 10:09:45.484 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@365bfc5f
[DEBUG] 04-03-2024 10:09:45.484 [main] BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@1a7e799e
[DEBUG] 04-03-2024 10:09:45.487 [main] BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@37a3ec27
[DEBUG] 04-03-2024 10:09:45.488 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@283baa39
[DEBUG] 04-03-2024 10:09:45.489 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@283baa39
[DEBUG] 04-03-2024 10:09:45.495 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@416b1265
[DEBUG] 04-03-2024 10:09:45.496 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@416b1265
[DEBUG] 04-03-2024 10:09:45.497 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@2830315f
[DEBUG] 04-03-2024 10:09:45.497 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@2830315f
[DEBUG] 04-03-2024 10:09:45.498 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@da22aa
[DEBUG] 04-03-2024 10:09:45.499 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@da22aa
[DEBUG] 04-03-2024 10:09:45.499 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@75452aea
[DEBUG] 04-03-2024 10:09:45.500 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@75452aea
[DEBUG] 04-03-2024 10:09:45.501 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@6c24f61d
[DEBUG] 04-03-2024 10:09:45.502 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4537880f
[DEBUG] 04-03-2024 10:09:45.502 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@14292d71
[DEBUG] 04-03-2024 10:09:45.503 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@14292d71
[DEBUG] 04-03-2024 10:09:45.504 [main] BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@48e74764
[DEBUG] 04-03-2024 10:09:45.506 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@338d47b
[DEBUG] 04-03-2024 10:09:45.506 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@7a3643e3
[DEBUG] 04-03-2024 10:09:45.507 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@2729bb71
[DEBUG] 04-03-2024 10:09:45.507 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@2729bb71
[DEBUG] 04-03-2024 10:09:45.507 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@55071497
[DEBUG] 04-03-2024 10:09:45.507 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@10d98940
[DEBUG] 04-03-2024 10:09:45.509 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@58b8f9e3
[DEBUG] 04-03-2024 10:09:45.509 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@58b8f9e3
[DEBUG] 04-03-2024 10:09:45.510 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@32a033b6
[DEBUG] 04-03-2024 10:09:45.510 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@32a033b6
[DEBUG] 04-03-2024 10:09:45.511 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@5f6e2ad9
[DEBUG] 04-03-2024 10:09:45.511 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@5f6e2ad9
[DEBUG] 04-03-2024 10:09:45.512 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@5f6e2ad9
[DEBUG] 04-03-2024 10:09:45.512 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@3212bfd
[DEBUG] 04-03-2024 10:09:45.513 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@3212bfd
[DEBUG] 04-03-2024 10:09:45.513 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@3212bfd
[DEBUG] 04-03-2024 10:09:45.513 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@1cc9bd9b
[DEBUG] 04-03-2024 10:09:45.514 [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@2f471037
[DEBUG] 04-03-2024 10:09:45.514 [main] BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@1d1cfe4
[DEBUG] 04-03-2024 10:09:45.514 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@1d1cfe4
[DEBUG] 04-03-2024 10:09:45.515 [main] BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@ba562e0
[DEBUG] 04-03-2024 10:09:45.515 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@ba562e0
[DEBUG] 04-03-2024 10:09:45.515 [main] BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@ba562e0
[DEBUG] 04-03-2024 10:09:45.516 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@5a51336a
[DEBUG] 04-03-2024 10:09:45.516 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@4d8056bf
[DEBUG] 04-03-2024 10:09:45.516 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@42211e04
[DEBUG] 04-03-2024 10:09:45.517 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@42211e04
[DEBUG] 04-03-2024 10:09:45.517 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@6233c6c2
[DEBUG] 04-03-2024 10:09:45.517 [main] BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@6233c6c2
[DEBUG] 04-03-2024 10:09:45.517 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@6233c6c2
[DEBUG] 04-03-2024 10:09:45.518 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@312a738d
[DEBUG] 04-03-2024 10:09:45.518 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@312a738d
[DEBUG] 04-03-2024 10:09:45.519 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@7e50eeb9
[DEBUG] 04-03-2024 10:09:45.519 [main] BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@7e50eeb9
[DEBUG] 04-03-2024 10:09:45.520 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@34cb0e49
[DEBUG] 04-03-2024 10:09:45.520 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@34cb0e49
[DEBUG] 04-03-2024 10:09:45.520 [main] BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@48b2dbc4
[DEBUG] 04-03-2024 10:09:45.521 [main] BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@48b2dbc4
[DEBUG] 04-03-2024 10:09:45.521 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@2a667f44
[DEBUG] 04-03-2024 10:09:45.521 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@2a667f44
[DEBUG] 04-03-2024 10:09:45.521 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@53ba7997
[DEBUG] 04-03-2024 10:09:45.541 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@2b5f8e61
[DEBUG] 04-03-2024 10:09:45.548 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@2b5f8e61
[DEBUG] 04-03-2024 10:09:45.552 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@1ed9d173
[DEBUG] 04-03-2024 10:09:45.553 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@6e981e78
[DEBUG] 04-03-2024 10:09:45.553 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@498a4d62
[DEBUG] 04-03-2024 10:09:45.554 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@6fbe4800
[DEBUG] 04-03-2024 10:09:45.554 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@3f3c5ecd
[DEBUG] 04-03-2024 10:09:45.555 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@1179fc8c
[DEBUG] 04-03-2024 10:09:45.555 [main] BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@a03529c
[DEBUG] 04-03-2024 10:09:45.555 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@1760e594
[DEBUG] 04-03-2024 10:09:45.556 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@4af70b83
[DEBUG] 04-03-2024 10:09:47.133 [main] DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@14af73e1) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@73da303e)
[DEBUG] 04-03-2024 10:09:47.139 [main] JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
[DEBUG] 04-03-2024 10:09:47.140 [main] JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 04-03-2024 10:09:47.161 [main] BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@103e7c7c
[DEBUG] 04-03-2024 10:09:47.161 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@103e7c7c
[DEBUG] 04-03-2024 10:09:47.162 [main] BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@2b5f8e61`
[DEBUG] 04-03-2024 10:09:47.164 [main] JdbcTypeRegistry - addDescriptor(3100, NumericTypeDescriptor) replaced previous registration(org.hibernate.dialect.PostgreSQLIntervalSecondJdbcType@3355b8ff)
[DEBUG] 04-03-2024 10:09:47.179 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 04-03-2024 10:09:47.179 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 04-03-2024 10:09:47.179 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 04-03-2024 10:09:47.180 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 04-03-2024 10:09:47.180 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 04-03-2024 10:09:47.180 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 04-03-2024 10:09:47.182 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 04-03-2024 10:09:47.183 [main] BasicTypeRegistry - Adding type registration OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 04-03-2024 10:09:47.183 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 04-03-2024 10:09:47.187 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@45849604] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@6cbbfe29]
[INFO ] 04-03-2024 10:09:47.329 [main] BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
[INFO ] 04-03-2024 10:09:48.769 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 04-03-2024 10:09:48.771 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@45849604] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@72bdbfe9]
[TRACE] 04-03-2024 10:09:48.783 [main] TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@72bdbfe9] for TypeConfiguration
[WARN ] 04-03-2024 10:09:49.220 [main] JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[INFO ] 04-03-2024 10:09:50.281 [main] Http11NioProtocol - Starting ProtocolHandler ["http-nio-8300"]
[INFO ] 04-03-2024 10:09:50.339 [main] TomcatWebServer - Tomcat started on port(s): 8300 (http) with context path '/users_products_api'
[INFO ] 04-03-2024 10:09:50.374 [main] TestSpringBootApplication - Started TestSpringBootApplication in 14.185 seconds (process running for 17.251)
[INFO ] 04-03-2024 10:09:54.744 [http-nio-8300-exec-2] [/users_products_api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[INFO ] 04-03-2024 10:09:54.745 [http-nio-8300-exec-2] DispatcherServlet - Initializing Servlet 'dispatcherServlet'
[INFO ] 04-03-2024 10:09:54.748 [http-nio-8300-exec-2] DispatcherServlet - Completed initialization in 2 ms
[TRACE] 04-03-2024 10:11:27.505 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@72bdbfe9] for TypeConfiguration
[DEBUG] 04-03-2024 10:11:27.506 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@6c6616d9] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@72bdbfe9]
[INFO ] 04-03-2024 10:11:44.138 [background-preinit] Version - HV000001: Hibernate Validator 8.0.1.Final
[INFO ] 04-03-2024 10:11:44.426 [main] TestSpringBootApplication - Starting TestSpringBootApplication using Java 17.0.10 with PID 2131142 (/home/dima/backend_microservice/UserProductsMicroService/target/classes started by dima in /home/dima/backend_microservice/UserProductsMicroService)
[INFO ] 04-03-2024 10:11:44.448 [main] TestSpringBootApplication - No active profile set, falling back to 1 default profile: "default"
[INFO ] 04-03-2024 10:11:46.712 [main] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
[INFO ] 04-03-2024 10:11:46.715 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data R2DBC repositories in DEFAULT mode.
[INFO ] 04-03-2024 10:11:47.309 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 572 ms. Found 1 R2DBC repository interfaces.
[INFO ] 04-03-2024 10:11:48.429 [main] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
[INFO ] 04-03-2024 10:11:48.436 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO ] 04-03-2024 10:11:48.475 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 25 ms. Found 0 JPA repository interfaces.
[ERROR] 04-03-2024 10:11:49.693 [main] AprLifecycleListener - An incompatible version [1.2.23] of the Apache Tomcat Native library is installed, while Tomcat requires version [1.2.34]
[INFO ] 04-03-2024 10:11:51.159 [main] TomcatWebServer - Tomcat initialized with port(s): 8300 (http)
[INFO ] 04-03-2024 10:11:51.185 [main] Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8300"]
[INFO ] 04-03-2024 10:11:51.192 [main] StandardService - Starting service [Tomcat]
[INFO ] 04-03-2024 10:11:51.193 [main] StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.11]
[INFO ] 04-03-2024 10:11:52.484 [main] TldScanner - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
[INFO ] 04-03-2024 10:11:52.502 [main] [/users_products_api] - Initializing Spring embedded WebApplicationContext
[INFO ] 04-03-2024 10:11:52.507 [main] ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 7726 ms
[INFO ] 04-03-2024 10:11:53.713 [main] Version - HHH000412: Hibernate ORM core version 6.2.6.Final
[INFO ] 04-03-2024 10:11:53.719 [main] Environment - HHH000406: Using bytecode reflection optimizer
[DEBUG] 04-03-2024 10:11:54.153 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@69fe7090
[DEBUG] 04-03-2024 10:11:54.154 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@69fe7090
[DEBUG] 04-03-2024 10:11:54.155 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@69fe7090
[DEBUG] 04-03-2024 10:11:54.155 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@6501b105
[DEBUG] 04-03-2024 10:11:54.156 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@6501b105
[DEBUG] 04-03-2024 10:11:54.156 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@66ab924
[DEBUG] 04-03-2024 10:11:54.157 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@66ab924
[DEBUG] 04-03-2024 10:11:54.157 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@6df2af02
[DEBUG] 04-03-2024 10:11:54.158 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@6df2af02
[DEBUG] 04-03-2024 10:11:54.158 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@779228dc
[DEBUG] 04-03-2024 10:11:54.159 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@779228dc
[DEBUG] 04-03-2024 10:11:54.159 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@779228dc
[DEBUG] 04-03-2024 10:11:54.160 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@1f7336b2
[DEBUG] 04-03-2024 10:11:54.161 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@1f7336b2
[DEBUG] 04-03-2024 10:11:54.161 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@1f7336b2
[DEBUG] 04-03-2024 10:11:54.161 [main] BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@4c030fe1
[DEBUG] 04-03-2024 10:11:54.162 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@4c030fe1
[DEBUG] 04-03-2024 10:11:54.162 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@347123dc
[DEBUG] 04-03-2024 10:11:54.163 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@52433946
[DEBUG] 04-03-2024 10:11:54.163 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@52433946
[DEBUG] 04-03-2024 10:11:54.164 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@5403431a
[DEBUG] 04-03-2024 10:11:54.164 [main] BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@ab327c
[DEBUG] 04-03-2024 10:11:54.165 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@3d798e76
[DEBUG] 04-03-2024 10:11:54.165 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@3d798e76
[DEBUG] 04-03-2024 10:11:54.166 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@3d798e76
[DEBUG] 04-03-2024 10:11:54.166 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@763b0996
[DEBUG] 04-03-2024 10:11:54.167 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@763b0996
[DEBUG] 04-03-2024 10:11:54.167 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@763b0996
[DEBUG] 04-03-2024 10:11:54.168 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@386e9fd8
[DEBUG] 04-03-2024 10:11:54.168 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@386e9fd8
[DEBUG] 04-03-2024 10:11:54.169 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@386e9fd8
[DEBUG] 04-03-2024 10:11:54.169 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@618f627b
[DEBUG] 04-03-2024 10:11:54.169 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@618f627b
[DEBUG] 04-03-2024 10:11:54.170 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@618f627b
[DEBUG] 04-03-2024 10:11:54.170 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@10745a02
[DEBUG] 04-03-2024 10:11:54.171 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@10745a02
[DEBUG] 04-03-2024 10:11:54.171 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@10745a02
[DEBUG] 04-03-2024 10:11:54.171 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@3e2d8623
[DEBUG] 04-03-2024 10:11:54.172 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@3e2d8623
[DEBUG] 04-03-2024 10:11:54.172 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@72715e61
[DEBUG] 04-03-2024 10:11:54.173 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@72715e61
[DEBUG] 04-03-2024 10:11:54.173 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@68f776ee
[DEBUG] 04-03-2024 10:11:54.173 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@68f776ee
[DEBUG] 04-03-2024 10:11:54.174 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@68f776ee
[DEBUG] 04-03-2024 10:11:54.174 [main] BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@5a6195b8
[DEBUG] 04-03-2024 10:11:54.175 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@8af1c49
[DEBUG] 04-03-2024 10:11:54.175 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@8af1c49
[DEBUG] 04-03-2024 10:11:54.176 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@70d5d96b
[DEBUG] 04-03-2024 10:11:54.176 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@23469199
[DEBUG] 04-03-2024 10:11:54.177 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@23469199
[DEBUG] 04-03-2024 10:11:54.177 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@23469199
[DEBUG] 04-03-2024 10:11:54.178 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@75dc1c1c
[DEBUG] 04-03-2024 10:11:54.178 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@5611bba
[DEBUG] 04-03-2024 10:11:54.179 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@5ba184fc
[DEBUG] 04-03-2024 10:11:54.179 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@4cfc0c48
[DEBUG] 04-03-2024 10:11:54.180 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@4cfc0c48
[DEBUG] 04-03-2024 10:11:54.180 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@59d5c537
[DEBUG] 04-03-2024 10:11:54.180 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@59d5c537
[DEBUG] 04-03-2024 10:11:54.181 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@5464b97c
[DEBUG] 04-03-2024 10:11:54.182 [main] BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@3355168
[DEBUG] 04-03-2024 10:11:54.183 [main] BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@2f07930a
[DEBUG] 04-03-2024 10:11:54.183 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@580c17a0
[DEBUG] 04-03-2024 10:11:54.183 [main] BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@29d2fa84
[DEBUG] 04-03-2024 10:11:54.184 [main] BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@4540c7
[DEBUG] 04-03-2024 10:11:54.184 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@13c90c06
[DEBUG] 04-03-2024 10:11:54.184 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@13c90c06
[DEBUG] 04-03-2024 10:11:54.185 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@2bc0b8c8
[DEBUG] 04-03-2024 10:11:54.185 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@2bc0b8c8
[DEBUG] 04-03-2024 10:11:54.185 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@15f861ee
[DEBUG] 04-03-2024 10:11:54.186 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@15f861ee
[DEBUG] 04-03-2024 10:11:54.186 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@3f1158ee
[DEBUG] 04-03-2024 10:11:54.186 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@3f1158ee
[DEBUG] 04-03-2024 10:11:54.187 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@6463da36
[DEBUG] 04-03-2024 10:11:54.187 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@6463da36
[DEBUG] 04-03-2024 10:11:54.188 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@4a4b288a
[DEBUG] 04-03-2024 10:11:54.188 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@1c6ac73c
[DEBUG] 04-03-2024 10:11:54.188 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@29892a77
[DEBUG] 04-03-2024 10:11:54.189 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@29892a77
[DEBUG] 04-03-2024 10:11:54.189 [main] BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@5341e71a
[DEBUG] 04-03-2024 10:11:54.189 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@405d8a80
[DEBUG] 04-03-2024 10:11:54.191 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@ac4e690
[DEBUG] 04-03-2024 10:11:54.191 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@6afeaf2d
[DEBUG] 04-03-2024 10:11:54.192 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@6afeaf2d
[DEBUG] 04-03-2024 10:11:54.192 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@365bfc5f
[DEBUG] 04-03-2024 10:11:54.192 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@1a7e799e
[DEBUG] 04-03-2024 10:11:54.193 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@37a3ec27
[DEBUG] 04-03-2024 10:11:54.193 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@37a3ec27
[DEBUG] 04-03-2024 10:11:54.193 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@283baa39
[DEBUG] 04-03-2024 10:11:54.194 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@283baa39
[DEBUG] 04-03-2024 10:11:54.194 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@416b1265
[DEBUG] 04-03-2024 10:11:54.195 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@416b1265
[DEBUG] 04-03-2024 10:11:54.195 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@416b1265
[DEBUG] 04-03-2024 10:11:54.197 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@2830315f
[DEBUG] 04-03-2024 10:11:54.197 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@2830315f
[DEBUG] 04-03-2024 10:11:54.197 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@2830315f
[DEBUG] 04-03-2024 10:11:54.198 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@da22aa
[DEBUG] 04-03-2024 10:11:54.198 [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@75452aea
[DEBUG] 04-03-2024 10:11:54.198 [main] BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@6c24f61d
[DEBUG] 04-03-2024 10:11:54.199 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@6c24f61d
[DEBUG] 04-03-2024 10:11:54.199 [main] BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@4537880f
[DEBUG] 04-03-2024 10:11:54.199 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@4537880f
[DEBUG] 04-03-2024 10:11:54.200 [main] BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@4537880f
[DEBUG] 04-03-2024 10:11:54.200 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@14292d71
[DEBUG] 04-03-2024 10:11:54.200 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@48e74764
[DEBUG] 04-03-2024 10:11:54.201 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@338d47b
[DEBUG] 04-03-2024 10:11:54.201 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@338d47b
[DEBUG] 04-03-2024 10:11:54.201 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@7a3643e3
[DEBUG] 04-03-2024 10:11:54.202 [main] BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@7a3643e3
[DEBUG] 04-03-2024 10:11:54.202 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@7a3643e3
[DEBUG] 04-03-2024 10:11:54.203 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@2729bb71
[DEBUG] 04-03-2024 10:11:54.203 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@2729bb71
[DEBUG] 04-03-2024 10:11:54.203 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@55071497
[DEBUG] 04-03-2024 10:11:54.204 [main] BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@55071497
[DEBUG] 04-03-2024 10:11:54.204 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@10d98940
[DEBUG] 04-03-2024 10:11:54.205 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@10d98940
[DEBUG] 04-03-2024 10:11:54.205 [main] BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@58b8f9e3
[DEBUG] 04-03-2024 10:11:54.205 [main] BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@58b8f9e3
[DEBUG] 04-03-2024 10:11:54.206 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@32a033b6
[DEBUG] 04-03-2024 10:11:54.206 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@32a033b6
[DEBUG] 04-03-2024 10:11:54.206 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@5f6e2ad9
[DEBUG] 04-03-2024 10:11:54.221 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@a4df251
[DEBUG] 04-03-2024 10:11:54.222 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@a4df251
[DEBUG] 04-03-2024 10:11:54.227 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@34cf0e80
[DEBUG] 04-03-2024 10:11:54.227 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@38ef1a0a
[DEBUG] 04-03-2024 10:11:54.228 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@56f9de3b
[DEBUG] 04-03-2024 10:11:54.228 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@6728370a
[DEBUG] 04-03-2024 10:11:54.229 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@2b5f8e61
[DEBUG] 04-03-2024 10:11:54.229 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@6ba0ee4a
[DEBUG] 04-03-2024 10:11:54.231 [main] BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@73b0ed03
[DEBUG] 04-03-2024 10:11:54.232 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@55061418
[DEBUG] 04-03-2024 10:11:54.232 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@27db45f
[DEBUG] 04-03-2024 10:11:55.577 [main] DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7286827b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1dd64243)
[DEBUG] 04-03-2024 10:11:55.584 [main] JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
[DEBUG] 04-03-2024 10:11:55.584 [main] JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 04-03-2024 10:11:55.607 [main] BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@7eefaca0
[DEBUG] 04-03-2024 10:11:55.608 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@7eefaca0
[DEBUG] 04-03-2024 10:11:55.608 [main] BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@a4df251`
[DEBUG] 04-03-2024 10:11:55.611 [main] JdbcTypeRegistry - addDescriptor(3100, NumericTypeDescriptor) replaced previous registration(org.hibernate.dialect.PostgreSQLIntervalSecondJdbcType@3dec79f8)
[DEBUG] 04-03-2024 10:11:55.628 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 04-03-2024 10:11:55.629 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 04-03-2024 10:11:55.629 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 04-03-2024 10:11:55.630 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 04-03-2024 10:11:55.630 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 04-03-2024 10:11:55.631 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 04-03-2024 10:11:55.633 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 04-03-2024 10:11:55.633 [main] BasicTypeRegistry - Adding type registration OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 04-03-2024 10:11:55.634 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 04-03-2024 10:11:55.637 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4583b617] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@22a63740]
[INFO ] 04-03-2024 10:11:55.862 [main] BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
[INFO ] 04-03-2024 10:11:57.414 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 04-03-2024 10:11:57.416 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4583b617] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@58b5d5fc]
[TRACE] 04-03-2024 10:11:57.434 [main] TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@58b5d5fc] for TypeConfiguration
[WARN ] 04-03-2024 10:11:57.868 [main] JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[INFO ] 04-03-2024 10:12:00.096 [main] Http11NioProtocol - Starting ProtocolHandler ["http-nio-8300"]
[INFO ] 04-03-2024 10:12:00.404 [main] TomcatWebServer - Tomcat started on port(s): 8300 (http) with context path '/users_products_api'
[INFO ] 04-03-2024 10:12:00.511 [main] TestSpringBootApplication - Started TestSpringBootApplication in 18.145 seconds (process running for 23.187)
[INFO ] 04-03-2024 10:12:24.815 [http-nio-8300-exec-2] [/users_products_api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[INFO ] 04-03-2024 10:12:24.815 [http-nio-8300-exec-2] DispatcherServlet - Initializing Servlet 'dispatcherServlet'
[INFO ] 04-03-2024 10:12:24.819 [http-nio-8300-exec-2] DispatcherServlet - Completed initialization in 3 ms
[TRACE] 04-03-2024 10:14:08.300 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@58b5d5fc] for TypeConfiguration
[DEBUG] 04-03-2024 10:14:08.302 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@7215855b] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@58b5d5fc]
[INFO ] 04-03-2024 10:14:18.979 [background-preinit] Version - HV000001: Hibernate Validator 8.0.1.Final
[INFO ] 04-03-2024 10:14:19.135 [main] TestSpringBootApplication - Starting TestSpringBootApplication using Java 17.0.10 with PID 2132589 (/home/dima/backend_microservice/UserProductsMicroService/target/classes started by dima in /home/dima/backend_microservice/UserProductsMicroService)
[INFO ] 04-03-2024 10:14:19.151 [main] TestSpringBootApplication - No active profile set, falling back to 1 default profile: "default"
[INFO ] 04-03-2024 10:14:21.393 [main] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
[INFO ] 04-03-2024 10:14:21.396 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data R2DBC repositories in DEFAULT mode.
[INFO ] 04-03-2024 10:14:21.968 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 554 ms. Found 1 R2DBC repository interfaces.
[INFO ] 04-03-2024 10:14:22.640 [main] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
[INFO ] 04-03-2024 10:14:22.644 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO ] 04-03-2024 10:14:22.677 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 22 ms. Found 0 JPA repository interfaces.
[ERROR] 04-03-2024 10:14:23.786 [main] AprLifecycleListener - An incompatible version [1.2.23] of the Apache Tomcat Native library is installed, while Tomcat requires version [1.2.34]
[INFO ] 04-03-2024 10:14:24.567 [main] TomcatWebServer - Tomcat initialized with port(s): 8300 (http)
[INFO ] 04-03-2024 10:14:24.588 [main] Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8300"]
[INFO ] 04-03-2024 10:14:24.594 [main] StandardService - Starting service [Tomcat]
[INFO ] 04-03-2024 10:14:24.595 [main] StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.11]
[INFO ] 04-03-2024 10:14:25.673 [main] TldScanner - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
[INFO ] 04-03-2024 10:14:25.699 [main] [/users_products_api] - Initializing Spring embedded WebApplicationContext
[INFO ] 04-03-2024 10:14:25.704 [main] ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 6348 ms
[INFO ] 04-03-2024 10:14:27.411 [main] Version - HHH000412: Hibernate ORM core version 6.2.6.Final
[INFO ] 04-03-2024 10:14:27.420 [main] Environment - HHH000406: Using bytecode reflection optimizer
[DEBUG] 04-03-2024 10:14:28.185 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@1f7336b2
[DEBUG] 04-03-2024 10:14:28.186 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@1f7336b2
[DEBUG] 04-03-2024 10:14:28.186 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@1f7336b2
[DEBUG] 04-03-2024 10:14:28.187 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@4c030fe1
[DEBUG] 04-03-2024 10:14:28.188 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@4c030fe1
[DEBUG] 04-03-2024 10:14:28.188 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@347123dc
[DEBUG] 04-03-2024 10:14:28.189 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@347123dc
[DEBUG] 04-03-2024 10:14:28.189 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@52433946
[DEBUG] 04-03-2024 10:14:28.190 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@52433946
[DEBUG] 04-03-2024 10:14:28.191 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@5403431a
[DEBUG] 04-03-2024 10:14:28.191 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@5403431a
[DEBUG] 04-03-2024 10:14:28.192 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@5403431a
[DEBUG] 04-03-2024 10:14:28.193 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@ab327c
[DEBUG] 04-03-2024 10:14:28.193 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@ab327c
[DEBUG] 04-03-2024 10:14:28.194 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@ab327c
[DEBUG] 04-03-2024 10:14:28.195 [main] BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@3d798e76
[DEBUG] 04-03-2024 10:14:28.195 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@3d798e76
[DEBUG] 04-03-2024 10:14:28.196 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@763b0996
[DEBUG] 04-03-2024 10:14:28.196 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@386e9fd8
[DEBUG] 04-03-2024 10:14:28.197 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@386e9fd8
[DEBUG] 04-03-2024 10:14:28.197 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@618f627b
[DEBUG] 04-03-2024 10:14:28.198 [main] BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@10745a02
[DEBUG] 04-03-2024 10:14:28.199 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@3e2d8623
[DEBUG] 04-03-2024 10:14:28.199 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@3e2d8623
[DEBUG] 04-03-2024 10:14:28.199 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@3e2d8623
[DEBUG] 04-03-2024 10:14:28.200 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@72715e61
[DEBUG] 04-03-2024 10:14:28.201 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@72715e61
[DEBUG] 04-03-2024 10:14:28.201 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@72715e61
[DEBUG] 04-03-2024 10:14:28.201 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@68f776ee
[DEBUG] 04-03-2024 10:14:28.202 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@68f776ee
[DEBUG] 04-03-2024 10:14:28.203 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@68f776ee
[DEBUG] 04-03-2024 10:14:28.203 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@5a6195b8
[DEBUG] 04-03-2024 10:14:28.203 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@5a6195b8
[DEBUG] 04-03-2024 10:14:28.204 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@5a6195b8
[DEBUG] 04-03-2024 10:14:28.204 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@8af1c49
[DEBUG] 04-03-2024 10:14:28.205 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@8af1c49
[DEBUG] 04-03-2024 10:14:28.205 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@8af1c49
[DEBUG] 04-03-2024 10:14:28.206 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@70d5d96b
[DEBUG] 04-03-2024 10:14:28.206 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@70d5d96b
[DEBUG] 04-03-2024 10:14:28.207 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@23469199
[DEBUG] 04-03-2024 10:14:28.207 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@23469199
[DEBUG] 04-03-2024 10:14:28.208 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@75dc1c1c
[DEBUG] 04-03-2024 10:14:28.208 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@75dc1c1c
[DEBUG] 04-03-2024 10:14:28.209 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@75dc1c1c
[DEBUG] 04-03-2024 10:14:28.209 [main] BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@5611bba
[DEBUG] 04-03-2024 10:14:28.210 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@5ba184fc
[DEBUG] 04-03-2024 10:14:28.210 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@5ba184fc
[DEBUG] 04-03-2024 10:14:28.211 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@4cfc0c48
[DEBUG] 04-03-2024 10:14:28.211 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@59d5c537
[DEBUG] 04-03-2024 10:14:28.211 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@59d5c537
[DEBUG] 04-03-2024 10:14:28.212 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@59d5c537
[DEBUG] 04-03-2024 10:14:28.212 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@5464b97c
[DEBUG] 04-03-2024 10:14:28.212 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@3355168
[DEBUG] 04-03-2024 10:14:28.213 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@2f07930a
[DEBUG] 04-03-2024 10:14:28.213 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@580c17a0
[DEBUG] 04-03-2024 10:14:28.214 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@580c17a0
[DEBUG] 04-03-2024 10:14:28.214 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@29d2fa84
[DEBUG] 04-03-2024 10:14:28.214 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@29d2fa84
[DEBUG] 04-03-2024 10:14:28.215 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@4540c7
[DEBUG] 04-03-2024 10:14:28.215 [main] BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@13c90c06
[DEBUG] 04-03-2024 10:14:28.216 [main] BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@2bc0b8c8
[DEBUG] 04-03-2024 10:14:28.216 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@15f861ee
[DEBUG] 04-03-2024 10:14:28.216 [main] BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@3f1158ee
[DEBUG] 04-03-2024 10:14:28.217 [main] BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@6463da36
[DEBUG] 04-03-2024 10:14:28.218 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@4a4b288a
[DEBUG] 04-03-2024 10:14:28.218 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@4a4b288a
[DEBUG] 04-03-2024 10:14:28.218 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@1c6ac73c
[DEBUG] 04-03-2024 10:14:28.219 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@1c6ac73c
[DEBUG] 04-03-2024 10:14:28.219 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@29892a77
[DEBUG] 04-03-2024 10:14:28.220 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@29892a77
[DEBUG] 04-03-2024 10:14:28.220 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@5341e71a
[DEBUG] 04-03-2024 10:14:28.220 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@5341e71a
[DEBUG] 04-03-2024 10:14:28.221 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@405d8a80
[DEBUG] 04-03-2024 10:14:28.221 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@405d8a80
[DEBUG] 04-03-2024 10:14:28.221 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@ac4e690
[DEBUG] 04-03-2024 10:14:28.222 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@6afeaf2d
[DEBUG] 04-03-2024 10:14:28.223 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@365bfc5f
[DEBUG] 04-03-2024 10:14:28.223 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@365bfc5f
[DEBUG] 04-03-2024 10:14:28.223 [main] BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@1a7e799e
[DEBUG] 04-03-2024 10:14:28.224 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@37a3ec27
[DEBUG] 04-03-2024 10:14:28.225 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@283baa39
[DEBUG] 04-03-2024 10:14:28.225 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@416b1265
[DEBUG] 04-03-2024 10:14:28.226 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@416b1265
[DEBUG] 04-03-2024 10:14:28.227 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2830315f
[DEBUG] 04-03-2024 10:14:28.227 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@da22aa
[DEBUG] 04-03-2024 10:14:28.227 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@75452aea
[DEBUG] 04-03-2024 10:14:28.228 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@75452aea
[DEBUG] 04-03-2024 10:14:28.228 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@6c24f61d
[DEBUG] 04-03-2024 10:14:28.229 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@6c24f61d
[DEBUG] 04-03-2024 10:14:28.229 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@4537880f
[DEBUG] 04-03-2024 10:14:28.229 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@4537880f
[DEBUG] 04-03-2024 10:14:28.230 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@4537880f
[DEBUG] 04-03-2024 10:14:28.230 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@14292d71
[DEBUG] 04-03-2024 10:14:28.231 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@14292d71
[DEBUG] 04-03-2024 10:14:28.231 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@14292d71
[DEBUG] 04-03-2024 10:14:28.232 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@48e74764
[DEBUG] 04-03-2024 10:14:28.232 [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@338d47b
[DEBUG] 04-03-2024 10:14:28.232 [main] BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@7a3643e3
[DEBUG] 04-03-2024 10:14:28.233 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@7a3643e3
[DEBUG] 04-03-2024 10:14:28.234 [main] BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@2729bb71
[DEBUG] 04-03-2024 10:14:28.234 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@2729bb71
[DEBUG] 04-03-2024 10:14:28.235 [main] BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@2729bb71
[DEBUG] 04-03-2024 10:14:28.235 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@55071497
[DEBUG] 04-03-2024 10:14:28.235 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@10d98940
[DEBUG] 04-03-2024 10:14:28.236 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@58b8f9e3
[DEBUG] 04-03-2024 10:14:28.236 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@58b8f9e3
[DEBUG] 04-03-2024 10:14:28.237 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@32a033b6
[DEBUG] 04-03-2024 10:14:28.237 [main] BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@32a033b6
[DEBUG] 04-03-2024 10:14:28.237 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@32a033b6
[DEBUG] 04-03-2024 10:14:28.238 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@5f6e2ad9
[DEBUG] 04-03-2024 10:14:28.238 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@5f6e2ad9
[DEBUG] 04-03-2024 10:14:28.239 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@3212bfd
[DEBUG] 04-03-2024 10:14:28.239 [main] BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@3212bfd
[DEBUG] 04-03-2024 10:14:28.239 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@1cc9bd9b
[DEBUG] 04-03-2024 10:14:28.240 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@1cc9bd9b
[DEBUG] 04-03-2024 10:14:28.240 [main] BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@2f471037
[DEBUG] 04-03-2024 10:14:28.241 [main] BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@2f471037
[DEBUG] 04-03-2024 10:14:28.241 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@1d1cfe4
[DEBUG] 04-03-2024 10:14:28.241 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@1d1cfe4
[DEBUG] 04-03-2024 10:14:28.242 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@ba562e0
[DEBUG] 04-03-2024 10:14:28.261 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@18d610e1
[DEBUG] 04-03-2024 10:14:28.262 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@18d610e1
[DEBUG] 04-03-2024 10:14:28.267 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@6ba0ee4a
[DEBUG] 04-03-2024 10:14:28.268 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@73b0ed03
[DEBUG] 04-03-2024 10:14:28.268 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@55061418
[DEBUG] 04-03-2024 10:14:28.269 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@27db45f
[DEBUG] 04-03-2024 10:14:28.269 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@6ec3d8e4
[DEBUG] 04-03-2024 10:14:28.269 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@1aeff8ca
[DEBUG] 04-03-2024 10:14:28.270 [main] BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@7f2c995b
[DEBUG] 04-03-2024 10:14:28.270 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@101c15ad
[DEBUG] 04-03-2024 10:14:28.271 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@6068ebb2
[DEBUG] 04-03-2024 10:14:29.732 [main] DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3b347439) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5d3634c8)
[DEBUG] 04-03-2024 10:14:29.737 [main] JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
[DEBUG] 04-03-2024 10:14:29.738 [main] JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 04-03-2024 10:14:29.768 [main] BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@3dec79f8
[DEBUG] 04-03-2024 10:14:29.768 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@3dec79f8
[DEBUG] 04-03-2024 10:14:29.769 [main] BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@18d610e1`
[DEBUG] 04-03-2024 10:14:29.777 [main] JdbcTypeRegistry - addDescriptor(3100, NumericTypeDescriptor) replaced previous registration(org.hibernate.dialect.PostgreSQLIntervalSecondJdbcType@2bd4780c)
[DEBUG] 04-03-2024 10:14:29.795 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 04-03-2024 10:14:29.796 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 04-03-2024 10:14:29.796 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 04-03-2024 10:14:29.796 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 04-03-2024 10:14:29.797 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 04-03-2024 10:14:29.797 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 04-03-2024 10:14:29.799 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 04-03-2024 10:14:29.799 [main] BasicTypeRegistry - Adding type registration OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 04-03-2024 10:14:29.800 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 04-03-2024 10:14:29.802 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@65ad2b42] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@294ebe11]
[INFO ] 04-03-2024 10:14:29.985 [main] BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
[INFO ] 04-03-2024 10:14:31.292 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 04-03-2024 10:14:31.295 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@65ad2b42] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@73d7d676]
[TRACE] 04-03-2024 10:14:31.309 [main] TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@73d7d676] for TypeConfiguration
[WARN ] 04-03-2024 10:14:31.694 [main] JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[INFO ] 04-03-2024 10:14:32.778 [main] Http11NioProtocol - Starting ProtocolHandler ["http-nio-8300"]
[INFO ] 04-03-2024 10:14:32.851 [main] TomcatWebServer - Tomcat started on port(s): 8300 (http) with context path '/users_products_api'
[INFO ] 04-03-2024 10:14:32.882 [main] TestSpringBootApplication - Started TestSpringBootApplication in 15.019 seconds (process running for 18.876)
[INFO ] 04-03-2024 10:14:47.856 [http-nio-8300-exec-1] [/users_products_api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[INFO ] 04-03-2024 10:14:47.857 [http-nio-8300-exec-1] DispatcherServlet - Initializing Servlet 'dispatcherServlet'
[INFO ] 04-03-2024 10:14:47.860 [http-nio-8300-exec-1] DispatcherServlet - Completed initialization in 3 ms
[TRACE] 04-03-2024 10:15:21.172 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@73d7d676] for TypeConfiguration
[DEBUG] 04-03-2024 10:15:21.173 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@3dba873a] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@73d7d676]
[INFO ] 04-03-2024 10:15:32.543 [background-preinit] Version - HV000001: Hibernate Validator 8.0.1.Final
[INFO ] 04-03-2024 10:15:32.616 [main] TestSpringBootApplication - Starting TestSpringBootApplication using Java 17.0.10 with PID 2133287 (/home/dima/backend_microservice/UserProductsMicroService/target/classes started by dima in /home/dima/backend_microservice/UserProductsMicroService)
[INFO ] 04-03-2024 10:15:32.630 [main] TestSpringBootApplication - No active profile set, falling back to 1 default profile: "default"
[INFO ] 04-03-2024 10:15:34.544 [main] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
[INFO ] 04-03-2024 10:15:34.546 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data R2DBC repositories in DEFAULT mode.
[INFO ] 04-03-2024 10:15:35.067 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 509 ms. Found 1 R2DBC repository interfaces.
[INFO ] 04-03-2024 10:15:35.685 [main] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
[INFO ] 04-03-2024 10:15:35.688 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO ] 04-03-2024 10:15:35.717 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 20 ms. Found 0 JPA repository interfaces.
[ERROR] 04-03-2024 10:15:36.962 [main] AprLifecycleListener - An incompatible version [1.2.23] of the Apache Tomcat Native library is installed, while Tomcat requires version [1.2.34]
[INFO ] 04-03-2024 10:15:37.754 [main] TomcatWebServer - Tomcat initialized with port(s): 8300 (http)
[INFO ] 04-03-2024 10:15:37.792 [main] Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8300"]
[INFO ] 04-03-2024 10:15:37.801 [main] StandardService - Starting service [Tomcat]
[INFO ] 04-03-2024 10:15:37.803 [main] StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.11]
[INFO ] 04-03-2024 10:15:39.491 [main] TldScanner - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
[INFO ] 04-03-2024 10:15:39.523 [main] [/users_products_api] - Initializing Spring embedded WebApplicationContext
[INFO ] 04-03-2024 10:15:39.534 [main] ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 6693 ms
[INFO ] 04-03-2024 10:15:41.103 [main] Version - HHH000412: Hibernate ORM core version 6.2.6.Final
[INFO ] 04-03-2024 10:15:41.109 [main] Environment - HHH000406: Using bytecode reflection optimizer
[DEBUG] 04-03-2024 10:15:41.600 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@5f0d8937
[DEBUG] 04-03-2024 10:15:41.601 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@5f0d8937
[DEBUG] 04-03-2024 10:15:41.601 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@5f0d8937
[DEBUG] 04-03-2024 10:15:41.602 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@105dc04d
[DEBUG] 04-03-2024 10:15:41.603 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@105dc04d
[DEBUG] 04-03-2024 10:15:41.603 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@504b8705
[DEBUG] 04-03-2024 10:15:41.603 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@504b8705
[DEBUG] 04-03-2024 10:15:41.604 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@24a8e40d
[DEBUG] 04-03-2024 10:15:41.605 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@24a8e40d
[DEBUG] 04-03-2024 10:15:41.605 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@175f859e
[DEBUG] 04-03-2024 10:15:41.606 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@175f859e
[DEBUG] 04-03-2024 10:15:41.606 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@175f859e
[DEBUG] 04-03-2024 10:15:41.607 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@69fe7090
[DEBUG] 04-03-2024 10:15:41.607 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@69fe7090
[DEBUG] 04-03-2024 10:15:41.608 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@69fe7090
[DEBUG] 04-03-2024 10:15:41.608 [main] BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@6501b105
[DEBUG] 04-03-2024 10:15:41.609 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@6501b105
[DEBUG] 04-03-2024 10:15:41.609 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@66ab924
[DEBUG] 04-03-2024 10:15:41.610 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@6df2af02
[DEBUG] 04-03-2024 10:15:41.610 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@6df2af02
[DEBUG] 04-03-2024 10:15:41.611 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@779228dc
[DEBUG] 04-03-2024 10:15:41.611 [main] BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@1f7336b2
[DEBUG] 04-03-2024 10:15:41.612 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@4c030fe1
[DEBUG] 04-03-2024 10:15:41.612 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@4c030fe1
[DEBUG] 04-03-2024 10:15:41.613 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@4c030fe1
[DEBUG] 04-03-2024 10:15:41.613 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@347123dc
[DEBUG] 04-03-2024 10:15:41.614 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@347123dc
[DEBUG] 04-03-2024 10:15:41.615 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@347123dc
[DEBUG] 04-03-2024 10:15:41.615 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@52433946
[DEBUG] 04-03-2024 10:15:41.616 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@52433946
[DEBUG] 04-03-2024 10:15:41.616 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@52433946
[DEBUG] 04-03-2024 10:15:41.617 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@5403431a
[DEBUG] 04-03-2024 10:15:41.617 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@5403431a
[DEBUG] 04-03-2024 10:15:41.618 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@5403431a
[DEBUG] 04-03-2024 10:15:41.618 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@ab327c
[DEBUG] 04-03-2024 10:15:41.619 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@ab327c
[DEBUG] 04-03-2024 10:15:41.619 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@ab327c
[DEBUG] 04-03-2024 10:15:41.620 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@3d798e76
[DEBUG] 04-03-2024 10:15:41.621 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@3d798e76
[DEBUG] 04-03-2024 10:15:41.621 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@763b0996
[DEBUG] 04-03-2024 10:15:41.621 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@763b0996
[DEBUG] 04-03-2024 10:15:41.622 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@386e9fd8
[DEBUG] 04-03-2024 10:15:41.622 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@386e9fd8
[DEBUG] 04-03-2024 10:15:41.623 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@386e9fd8
[DEBUG] 04-03-2024 10:15:41.623 [main] BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@618f627b
[DEBUG] 04-03-2024 10:15:41.624 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@10745a02
[DEBUG] 04-03-2024 10:15:41.624 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@10745a02
[DEBUG] 04-03-2024 10:15:41.624 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@3e2d8623
[DEBUG] 04-03-2024 10:15:41.625 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@72715e61
[DEBUG] 04-03-2024 10:15:41.625 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@72715e61
[DEBUG] 04-03-2024 10:15:41.625 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@72715e61
[DEBUG] 04-03-2024 10:15:41.626 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@68f776ee
[DEBUG] 04-03-2024 10:15:41.626 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@5a6195b8
[DEBUG] 04-03-2024 10:15:41.627 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@8af1c49
[DEBUG] 04-03-2024 10:15:41.627 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@70d5d96b
[DEBUG] 04-03-2024 10:15:41.627 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@70d5d96b
[DEBUG] 04-03-2024 10:15:41.628 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@23469199
[DEBUG] 04-03-2024 10:15:41.628 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@23469199
[DEBUG] 04-03-2024 10:15:41.628 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@75dc1c1c
[DEBUG] 04-03-2024 10:15:41.629 [main] BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@5611bba
[DEBUG] 04-03-2024 10:15:41.629 [main] BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@5ba184fc
[DEBUG] 04-03-2024 10:15:41.630 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@4cfc0c48
[DEBUG] 04-03-2024 10:15:41.630 [main] BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@59d5c537
[DEBUG] 04-03-2024 10:15:41.631 [main] BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@5464b97c
[DEBUG] 04-03-2024 10:15:41.631 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@3355168
[DEBUG] 04-03-2024 10:15:41.632 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@3355168
[DEBUG] 04-03-2024 10:15:41.632 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@2f07930a
[DEBUG] 04-03-2024 10:15:41.633 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@2f07930a
[DEBUG] 04-03-2024 10:15:41.634 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@580c17a0
[DEBUG] 04-03-2024 10:15:41.634 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@580c17a0
[DEBUG] 04-03-2024 10:15:41.635 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@29d2fa84
[DEBUG] 04-03-2024 10:15:41.635 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@29d2fa84
[DEBUG] 04-03-2024 10:15:41.636 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@4540c7
[DEBUG] 04-03-2024 10:15:41.636 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@4540c7
[DEBUG] 04-03-2024 10:15:41.636 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@13c90c06
[DEBUG] 04-03-2024 10:15:41.637 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@2bc0b8c8
[DEBUG] 04-03-2024 10:15:41.637 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@15f861ee
[DEBUG] 04-03-2024 10:15:41.637 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@15f861ee
[DEBUG] 04-03-2024 10:15:41.638 [main] BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@3f1158ee
[DEBUG] 04-03-2024 10:15:41.638 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@6463da36
[DEBUG] 04-03-2024 10:15:41.639 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4a4b288a
[DEBUG] 04-03-2024 10:15:41.639 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@1c6ac73c
[DEBUG] 04-03-2024 10:15:41.640 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@1c6ac73c
[DEBUG] 04-03-2024 10:15:41.640 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@29892a77
[DEBUG] 04-03-2024 10:15:41.640 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@5341e71a
[DEBUG] 04-03-2024 10:15:41.641 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@405d8a80
[DEBUG] 04-03-2024 10:15:41.641 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@405d8a80
[DEBUG] 04-03-2024 10:15:41.641 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@ac4e690
[DEBUG] 04-03-2024 10:15:41.642 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@ac4e690
[DEBUG] 04-03-2024 10:15:41.642 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@6afeaf2d
[DEBUG] 04-03-2024 10:15:41.643 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@6afeaf2d
[DEBUG] 04-03-2024 10:15:41.643 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@6afeaf2d
[DEBUG] 04-03-2024 10:15:41.644 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@365bfc5f
[DEBUG] 04-03-2024 10:15:41.644 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@365bfc5f
[DEBUG] 04-03-2024 10:15:41.645 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@365bfc5f
[DEBUG] 04-03-2024 10:15:41.645 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@1a7e799e
[DEBUG] 04-03-2024 10:15:41.645 [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@37a3ec27
[DEBUG] 04-03-2024 10:15:41.646 [main] BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@283baa39
[DEBUG] 04-03-2024 10:15:41.646 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@283baa39
[DEBUG] 04-03-2024 10:15:41.647 [main] BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@416b1265
[DEBUG] 04-03-2024 10:15:41.647 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@416b1265
[DEBUG] 04-03-2024 10:15:41.648 [main] BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@416b1265
[DEBUG] 04-03-2024 10:15:41.648 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@2830315f
[DEBUG] 04-03-2024 10:15:41.648 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@da22aa
[DEBUG] 04-03-2024 10:15:41.649 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@75452aea
[DEBUG] 04-03-2024 10:15:41.649 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@75452aea
[DEBUG] 04-03-2024 10:15:41.649 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@6c24f61d
[DEBUG] 04-03-2024 10:15:41.650 [main] BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@6c24f61d
[DEBUG] 04-03-2024 10:15:41.650 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@6c24f61d
[DEBUG] 04-03-2024 10:15:41.651 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@4537880f
[DEBUG] 04-03-2024 10:15:41.652 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@4537880f
[DEBUG] 04-03-2024 10:15:41.652 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@14292d71
[DEBUG] 04-03-2024 10:15:41.652 [main] BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@14292d71
[DEBUG] 04-03-2024 10:15:41.653 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@48e74764
[DEBUG] 04-03-2024 10:15:41.653 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@48e74764
[DEBUG] 04-03-2024 10:15:41.654 [main] BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@338d47b
[DEBUG] 04-03-2024 10:15:41.654 [main] BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@338d47b
[DEBUG] 04-03-2024 10:15:41.655 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@7a3643e3
[DEBUG] 04-03-2024 10:15:41.655 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@7a3643e3
[DEBUG] 04-03-2024 10:15:41.655 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@2729bb71
[DEBUG] 04-03-2024 10:15:41.671 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@369ad7da
[DEBUG] 04-03-2024 10:15:41.672 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@369ad7da
[DEBUG] 04-03-2024 10:15:41.674 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@528e5e38
[DEBUG] 04-03-2024 10:15:41.675 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@16391278
[DEBUG] 04-03-2024 10:15:41.675 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@621dc63d
[DEBUG] 04-03-2024 10:15:41.676 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@4ae49387
[DEBUG] 04-03-2024 10:15:41.676 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@6abb7b7d
[DEBUG] 04-03-2024 10:15:41.676 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@34cf0e80
[DEBUG] 04-03-2024 10:15:41.677 [main] BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@38ef1a0a
[DEBUG] 04-03-2024 10:15:41.678 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@56f9de3b
[DEBUG] 04-03-2024 10:15:41.678 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@6728370a
[DEBUG] 04-03-2024 10:15:43.003 [main] DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@23ec63af) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@280d6a20)
[DEBUG] 04-03-2024 10:15:43.008 [main] JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
[DEBUG] 04-03-2024 10:15:43.008 [main] JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 04-03-2024 10:15:43.036 [main] BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@708f7386
[DEBUG] 04-03-2024 10:15:43.036 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@708f7386
[DEBUG] 04-03-2024 10:15:43.037 [main] BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@369ad7da`
[DEBUG] 04-03-2024 10:15:43.039 [main] JdbcTypeRegistry - addDescriptor(3100, NumericTypeDescriptor) replaced previous registration(org.hibernate.dialect.PostgreSQLIntervalSecondJdbcType@7eefaca0)
[DEBUG] 04-03-2024 10:15:43.055 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 04-03-2024 10:15:43.055 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 04-03-2024 10:15:43.055 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 04-03-2024 10:15:43.056 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 04-03-2024 10:15:43.056 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 04-03-2024 10:15:43.056 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 04-03-2024 10:15:43.058 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 04-03-2024 10:15:43.058 [main] BasicTypeRegistry - Adding type registration OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 04-03-2024 10:15:43.059 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 04-03-2024 10:15:43.061 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2864d34d] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@5fb514c2]
[INFO ] 04-03-2024 10:15:43.204 [main] BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
[INFO ] 04-03-2024 10:15:44.356 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 04-03-2024 10:15:44.357 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2864d34d] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@c7269ad]
[TRACE] 04-03-2024 10:15:44.373 [main] TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@c7269ad] for TypeConfiguration
[WARN ] 04-03-2024 10:15:44.800 [main] JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[INFO ] 04-03-2024 10:15:45.838 [main] Http11NioProtocol - Starting ProtocolHandler ["http-nio-8300"]
[INFO ] 04-03-2024 10:15:45.949 [main] TomcatWebServer - Tomcat started on port(s): 8300 (http) with context path '/users_products_api'
[INFO ] 04-03-2024 10:15:45.980 [main] TestSpringBootApplication - Started TestSpringBootApplication in 14.522 seconds (process running for 18.476)
[INFO ] 04-03-2024 10:15:51.363 [http-nio-8300-exec-1] [/users_products_api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[INFO ] 04-03-2024 10:15:51.364 [http-nio-8300-exec-1] DispatcherServlet - Initializing Servlet 'dispatcherServlet'
[INFO ] 04-03-2024 10:15:51.372 [http-nio-8300-exec-1] DispatcherServlet - Completed initialization in 4 ms
[TRACE] 04-03-2024 12:41:25.434 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@c7269ad] for TypeConfiguration
[DEBUG] 04-03-2024 12:41:25.438 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@5837d06b] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@c7269ad]
[INFO ] 04-03-2024 12:41:36.250 [background-preinit] Version - HV000001: Hibernate Validator 8.0.1.Final
[INFO ] 04-03-2024 12:41:36.423 [main] TestSpringBootApplication - Starting TestSpringBootApplication using Java 17.0.10 with PID 2206036 (/home/dima/backend_microservice/UserProductsMicroService/target/classes started by dima in /home/dima/backend_microservice/UserProductsMicroService)
[INFO ] 04-03-2024 12:41:36.438 [main] TestSpringBootApplication - No active profile set, falling back to 1 default profile: "default"
[INFO ] 04-03-2024 12:41:39.121 [main] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
[INFO ] 04-03-2024 12:41:39.124 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data R2DBC repositories in DEFAULT mode.
[INFO ] 04-03-2024 12:41:39.712 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 572 ms. Found 1 R2DBC repository interfaces.
[INFO ] 04-03-2024 12:41:40.318 [main] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
[INFO ] 04-03-2024 12:41:40.329 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO ] 04-03-2024 12:41:40.362 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 20 ms. Found 0 JPA repository interfaces.
[ERROR] 04-03-2024 12:41:41.379 [main] AprLifecycleListener - An incompatible version [1.2.23] of the Apache Tomcat Native library is installed, while Tomcat requires version [1.2.34]
[INFO ] 04-03-2024 12:41:42.140 [main] TomcatWebServer - Tomcat initialized with port(s): 8300 (http)
[INFO ] 04-03-2024 12:41:42.161 [main] Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8300"]
[INFO ] 04-03-2024 12:41:42.167 [main] StandardService - Starting service [Tomcat]
[INFO ] 04-03-2024 12:41:42.169 [main] StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.11]
[INFO ] 04-03-2024 12:41:43.206 [main] TldScanner - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
[INFO ] 04-03-2024 12:41:43.229 [main] [/users_products_api] - Initializing Spring embedded WebApplicationContext
[INFO ] 04-03-2024 12:41:43.234 [main] ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 6374 ms
[INFO ] 04-03-2024 12:41:44.516 [main] Version - HHH000412: Hibernate ORM core version 6.2.6.Final
[INFO ] 04-03-2024 12:41:44.525 [main] Environment - HHH000406: Using bytecode reflection optimizer
[DEBUG] 04-03-2024 12:41:45.076 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@779228dc
[DEBUG] 04-03-2024 12:41:45.076 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@779228dc
[DEBUG] 04-03-2024 12:41:45.077 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@779228dc
[DEBUG] 04-03-2024 12:41:45.078 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@1f7336b2
[DEBUG] 04-03-2024 12:41:45.079 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@1f7336b2
[DEBUG] 04-03-2024 12:41:45.080 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@4c030fe1
[DEBUG] 04-03-2024 12:41:45.080 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@4c030fe1
[DEBUG] 04-03-2024 12:41:45.081 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@347123dc
[DEBUG] 04-03-2024 12:41:45.081 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@347123dc
[DEBUG] 04-03-2024 12:41:45.082 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@52433946
[DEBUG] 04-03-2024 12:41:45.082 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@52433946
[DEBUG] 04-03-2024 12:41:45.083 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@52433946
[DEBUG] 04-03-2024 12:41:45.083 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@5403431a
[DEBUG] 04-03-2024 12:41:45.084 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@5403431a
[DEBUG] 04-03-2024 12:41:45.084 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@5403431a
[DEBUG] 04-03-2024 12:41:45.084 [main] BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@ab327c
[DEBUG] 04-03-2024 12:41:45.085 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@ab327c
[DEBUG] 04-03-2024 12:41:45.085 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@3d798e76
[DEBUG] 04-03-2024 12:41:45.085 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@763b0996
[DEBUG] 04-03-2024 12:41:45.087 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@763b0996
[DEBUG] 04-03-2024 12:41:45.087 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@386e9fd8
[DEBUG] 04-03-2024 12:41:45.088 [main] BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@618f627b
[DEBUG] 04-03-2024 12:41:45.089 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@10745a02
[DEBUG] 04-03-2024 12:41:45.089 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@10745a02
[DEBUG] 04-03-2024 12:41:45.090 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@10745a02
[DEBUG] 04-03-2024 12:41:45.090 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@3e2d8623
[DEBUG] 04-03-2024 12:41:45.091 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@3e2d8623
[DEBUG] 04-03-2024 12:41:45.091 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@3e2d8623
[DEBUG] 04-03-2024 12:41:45.092 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@72715e61
[DEBUG] 04-03-2024 12:41:45.092 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@72715e61
[DEBUG] 04-03-2024 12:41:45.093 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@72715e61
[DEBUG] 04-03-2024 12:41:45.093 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@68f776ee
[DEBUG] 04-03-2024 12:41:45.093 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@68f776ee
[DEBUG] 04-03-2024 12:41:45.094 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@68f776ee
[DEBUG] 04-03-2024 12:41:45.094 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@5a6195b8
[DEBUG] 04-03-2024 12:41:45.095 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@5a6195b8
[DEBUG] 04-03-2024 12:41:45.095 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@5a6195b8
[DEBUG] 04-03-2024 12:41:45.095 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@8af1c49
[DEBUG] 04-03-2024 12:41:45.096 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@8af1c49
[DEBUG] 04-03-2024 12:41:45.097 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@70d5d96b
[DEBUG] 04-03-2024 12:41:45.097 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@70d5d96b
[DEBUG] 04-03-2024 12:41:45.098 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@23469199
[DEBUG] 04-03-2024 12:41:45.098 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@23469199
[DEBUG] 04-03-2024 12:41:45.098 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@23469199
[DEBUG] 04-03-2024 12:41:45.099 [main] BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@75dc1c1c
[DEBUG] 04-03-2024 12:41:45.099 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@5611bba
[DEBUG] 04-03-2024 12:41:45.100 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@5611bba
[DEBUG] 04-03-2024 12:41:45.100 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@5ba184fc
[DEBUG] 04-03-2024 12:41:45.100 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@4cfc0c48
[DEBUG] 04-03-2024 12:41:45.101 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@4cfc0c48
[DEBUG] 04-03-2024 12:41:45.101 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@4cfc0c48
[DEBUG] 04-03-2024 12:41:45.102 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@59d5c537
[DEBUG] 04-03-2024 12:41:45.102 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@5464b97c
[DEBUG] 04-03-2024 12:41:45.102 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@3355168
[DEBUG] 04-03-2024 12:41:45.103 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@2f07930a
[DEBUG] 04-03-2024 12:41:45.103 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@2f07930a
[DEBUG] 04-03-2024 12:41:45.104 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@580c17a0
[DEBUG] 04-03-2024 12:41:45.104 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@580c17a0
[DEBUG] 04-03-2024 12:41:45.105 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@29d2fa84
[DEBUG] 04-03-2024 12:41:45.105 [main] BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@4540c7
[DEBUG] 04-03-2024 12:41:45.106 [main] BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@13c90c06
[DEBUG] 04-03-2024 12:41:45.106 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@2bc0b8c8
[DEBUG] 04-03-2024 12:41:45.107 [main] BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@15f861ee
[DEBUG] 04-03-2024 12:41:45.107 [main] BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@3f1158ee
[DEBUG] 04-03-2024 12:41:45.107 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@6463da36
[DEBUG] 04-03-2024 12:41:45.108 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@6463da36
[DEBUG] 04-03-2024 12:41:45.108 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@4a4b288a
[DEBUG] 04-03-2024 12:41:45.109 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@4a4b288a
[DEBUG] 04-03-2024 12:41:45.110 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@1c6ac73c
[DEBUG] 04-03-2024 12:41:45.110 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@1c6ac73c
[DEBUG] 04-03-2024 12:41:45.111 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@29892a77
[DEBUG] 04-03-2024 12:41:45.111 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@29892a77
[DEBUG] 04-03-2024 12:41:45.112 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@5341e71a
[DEBUG] 04-03-2024 12:41:45.112 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@5341e71a
[DEBUG] 04-03-2024 12:41:45.112 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@405d8a80
[DEBUG] 04-03-2024 12:41:45.113 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@ac4e690
[DEBUG] 04-03-2024 12:41:45.113 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@6afeaf2d
[DEBUG] 04-03-2024 12:41:45.114 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@6afeaf2d
[DEBUG] 04-03-2024 12:41:45.114 [main] BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@365bfc5f
[DEBUG] 04-03-2024 12:41:45.115 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@1a7e799e
[DEBUG] 04-03-2024 12:41:45.115 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@37a3ec27
[DEBUG] 04-03-2024 12:41:45.115 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@283baa39
[DEBUG] 04-03-2024 12:41:45.116 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@283baa39
[DEBUG] 04-03-2024 12:41:45.116 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@416b1265
[DEBUG] 04-03-2024 12:41:45.116 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@2830315f
[DEBUG] 04-03-2024 12:41:45.117 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@da22aa
[DEBUG] 04-03-2024 12:41:45.117 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@da22aa
[DEBUG] 04-03-2024 12:41:45.117 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@75452aea
[DEBUG] 04-03-2024 12:41:45.118 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@75452aea
[DEBUG] 04-03-2024 12:41:45.118 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@6c24f61d
[DEBUG] 04-03-2024 12:41:45.119 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@6c24f61d
[DEBUG] 04-03-2024 12:41:45.119 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@6c24f61d
[DEBUG] 04-03-2024 12:41:45.120 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@4537880f
[DEBUG] 04-03-2024 12:41:45.120 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@4537880f
[DEBUG] 04-03-2024 12:41:45.120 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@4537880f
[DEBUG] 04-03-2024 12:41:45.121 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@14292d71
[DEBUG] 04-03-2024 12:41:45.121 [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@48e74764
[DEBUG] 04-03-2024 12:41:45.121 [main] BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@338d47b
[DEBUG] 04-03-2024 12:41:45.122 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@338d47b
[DEBUG] 04-03-2024 12:41:45.122 [main] BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@7a3643e3
[DEBUG] 04-03-2024 12:41:45.123 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@7a3643e3
[DEBUG] 04-03-2024 12:41:45.123 [main] BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@7a3643e3
[DEBUG] 04-03-2024 12:41:45.123 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@2729bb71
[DEBUG] 04-03-2024 12:41:45.124 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@55071497
[DEBUG] 04-03-2024 12:41:45.124 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@10d98940
[DEBUG] 04-03-2024 12:41:45.125 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@10d98940
[DEBUG] 04-03-2024 12:41:45.125 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@58b8f9e3
[DEBUG] 04-03-2024 12:41:45.125 [main] BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@58b8f9e3
[DEBUG] 04-03-2024 12:41:45.126 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@58b8f9e3
[DEBUG] 04-03-2024 12:41:45.126 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@32a033b6
[DEBUG] 04-03-2024 12:41:45.127 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@32a033b6
[DEBUG] 04-03-2024 12:41:45.128 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@5f6e2ad9
[DEBUG] 04-03-2024 12:41:45.128 [main] BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@5f6e2ad9
[DEBUG] 04-03-2024 12:41:45.129 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@3212bfd
[DEBUG] 04-03-2024 12:41:45.129 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@3212bfd
[DEBUG] 04-03-2024 12:41:45.130 [main] BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@1cc9bd9b
[DEBUG] 04-03-2024 12:41:45.130 [main] BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@1cc9bd9b
[DEBUG] 04-03-2024 12:41:45.130 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@2f471037
[DEBUG] 04-03-2024 12:41:45.131 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@2f471037
[DEBUG] 04-03-2024 12:41:45.131 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@1d1cfe4
[DEBUG] 04-03-2024 12:41:45.146 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@55e42684
[DEBUG] 04-03-2024 12:41:45.147 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@55e42684
[DEBUG] 04-03-2024 12:41:45.150 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@2b5f8e61
[DEBUG] 04-03-2024 12:41:45.151 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@6ba0ee4a
[DEBUG] 04-03-2024 12:41:45.151 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@73b0ed03
[DEBUG] 04-03-2024 12:41:45.151 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@55061418
[DEBUG] 04-03-2024 12:41:45.152 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@27db45f
[DEBUG] 04-03-2024 12:41:45.152 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@6ec3d8e4
[DEBUG] 04-03-2024 12:41:45.153 [main] BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@1aeff8ca
[DEBUG] 04-03-2024 12:41:45.153 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@7f2c995b
[DEBUG] 04-03-2024 12:41:45.153 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@101c15ad
[DEBUG] 04-03-2024 12:41:47.062 [main] DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@145fe8ab) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3b347439)
[DEBUG] 04-03-2024 12:41:47.067 [main] JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
[DEBUG] 04-03-2024 12:41:47.068 [main] JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 04-03-2024 12:41:47.089 [main] BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@37364634
[DEBUG] 04-03-2024 12:41:47.090 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@37364634
[DEBUG] 04-03-2024 12:41:47.090 [main] BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@55e42684`
[DEBUG] 04-03-2024 12:41:47.093 [main] JdbcTypeRegistry - addDescriptor(3100, NumericTypeDescriptor) replaced previous registration(org.hibernate.dialect.PostgreSQLIntervalSecondJdbcType@4f4d05b3)
[DEBUG] 04-03-2024 12:41:47.111 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 04-03-2024 12:41:47.111 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 04-03-2024 12:41:47.111 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 04-03-2024 12:41:47.112 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 04-03-2024 12:41:47.112 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 04-03-2024 12:41:47.112 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 04-03-2024 12:41:47.115 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 04-03-2024 12:41:47.116 [main] BasicTypeRegistry - Adding type registration OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 04-03-2024 12:41:47.116 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 04-03-2024 12:41:47.121 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@76220ef1] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@65ad2b42]
[INFO ] 04-03-2024 12:41:47.401 [main] BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
[INFO ] 04-03-2024 12:41:48.936 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 04-03-2024 12:41:48.938 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@76220ef1] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@2a30b0cb]
[TRACE] 04-03-2024 12:41:48.958 [main] TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@2a30b0cb] for TypeConfiguration
[WARN ] 04-03-2024 12:41:49.415 [main] JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[INFO ] 04-03-2024 12:41:50.487 [main] Http11NioProtocol - Starting ProtocolHandler ["http-nio-8300"]
[INFO ] 04-03-2024 12:41:50.546 [main] TomcatWebServer - Tomcat started on port(s): 8300 (http) with context path '/users_products_api'
[INFO ] 04-03-2024 12:41:50.590 [main] TestSpringBootApplication - Started TestSpringBootApplication in 15.511 seconds (process running for 18.453)
[INFO ] 04-03-2024 12:43:15.619 [http-nio-8300-exec-1] [/users_products_api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[INFO ] 04-03-2024 12:43:15.619 [http-nio-8300-exec-1] DispatcherServlet - Initializing Servlet 'dispatcherServlet'
[INFO ] 04-03-2024 12:43:15.623 [http-nio-8300-exec-1] DispatcherServlet - Completed initialization in 3 ms
[TRACE] 04-03-2024 13:17:06.321 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@2a30b0cb] for TypeConfiguration
[DEBUG] 04-03-2024 13:17:06.326 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@438270c3] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@2a30b0cb]
[INFO ] 04-03-2024 13:17:20.001 [background-preinit] Version - HV000001: Hibernate Validator 8.0.1.Final
[INFO ] 04-03-2024 13:17:20.187 [main] TestSpringBootApplication - Starting TestSpringBootApplication using Java 17.0.10 with PID 2223974 (/home/dima/backend_microservice/UserProductsMicroService/target/classes started by dima in /home/dima/backend_microservice/UserProductsMicroService)
[INFO ] 04-03-2024 13:17:20.204 [main] TestSpringBootApplication - No active profile set, falling back to 1 default profile: "default"
[INFO ] 04-03-2024 13:17:22.697 [main] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
[INFO ] 04-03-2024 13:17:22.700 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data R2DBC repositories in DEFAULT mode.
[INFO ] 04-03-2024 13:17:23.242 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 522 ms. Found 1 R2DBC repository interfaces.
[INFO ] 04-03-2024 13:17:23.862 [main] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
[INFO ] 04-03-2024 13:17:23.865 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO ] 04-03-2024 13:17:23.922 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 38 ms. Found 0 JPA repository interfaces.
[ERROR] 04-03-2024 13:17:25.473 [main] AprLifecycleListener - An incompatible version [1.2.23] of the Apache Tomcat Native library is installed, while Tomcat requires version [1.2.34]
[INFO ] 04-03-2024 13:17:26.313 [main] TomcatWebServer - Tomcat initialized with port(s): 8300 (http)
[INFO ] 04-03-2024 13:17:26.337 [main] Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8300"]
[INFO ] 04-03-2024 13:17:26.352 [main] StandardService - Starting service [Tomcat]
[INFO ] 04-03-2024 13:17:26.353 [main] StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.11]
[INFO ] 04-03-2024 13:17:27.416 [main] TldScanner - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
[INFO ] 04-03-2024 13:17:27.447 [main] [/users_products_api] - Initializing Spring embedded WebApplicationContext
[INFO ] 04-03-2024 13:17:27.452 [main] ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 6994 ms
[INFO ] 04-03-2024 13:17:29.086 [main] Version - HHH000412: Hibernate ORM core version 6.2.6.Final
[INFO ] 04-03-2024 13:17:29.096 [main] Environment - HHH000406: Using bytecode reflection optimizer
[DEBUG] 04-03-2024 13:17:29.801 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@66ab924
[DEBUG] 04-03-2024 13:17:29.802 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@66ab924
[DEBUG] 04-03-2024 13:17:29.802 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@66ab924
[DEBUG] 04-03-2024 13:17:29.803 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@6df2af02
[DEBUG] 04-03-2024 13:17:29.803 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@6df2af02
[DEBUG] 04-03-2024 13:17:29.804 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@779228dc
[DEBUG] 04-03-2024 13:17:29.804 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@779228dc
[DEBUG] 04-03-2024 13:17:29.805 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@1f7336b2
[DEBUG] 04-03-2024 13:17:29.805 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@1f7336b2
[DEBUG] 04-03-2024 13:17:29.806 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@4c030fe1
[DEBUG] 04-03-2024 13:17:29.807 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@4c030fe1
[DEBUG] 04-03-2024 13:17:29.807 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@4c030fe1
[DEBUG] 04-03-2024 13:17:29.808 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@347123dc
[DEBUG] 04-03-2024 13:17:29.822 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@347123dc
[DEBUG] 04-03-2024 13:17:29.823 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@347123dc
[DEBUG] 04-03-2024 13:17:29.824 [main] BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@52433946
[DEBUG] 04-03-2024 13:17:29.824 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@52433946
[DEBUG] 04-03-2024 13:17:29.825 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@5403431a
[DEBUG] 04-03-2024 13:17:29.825 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@ab327c
[DEBUG] 04-03-2024 13:17:29.826 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@ab327c
[DEBUG] 04-03-2024 13:17:29.826 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@3d798e76
[DEBUG] 04-03-2024 13:17:29.827 [main] BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@763b0996
[DEBUG] 04-03-2024 13:17:29.827 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@386e9fd8
[DEBUG] 04-03-2024 13:17:29.828 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@386e9fd8
[DEBUG] 04-03-2024 13:17:29.831 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@386e9fd8
[DEBUG] 04-03-2024 13:17:29.834 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@618f627b
[DEBUG] 04-03-2024 13:17:29.836 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@618f627b
[DEBUG] 04-03-2024 13:17:29.836 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@618f627b
[DEBUG] 04-03-2024 13:17:29.836 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@10745a02
[DEBUG] 04-03-2024 13:17:29.837 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@10745a02
[DEBUG] 04-03-2024 13:17:29.837 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@10745a02
[DEBUG] 04-03-2024 13:17:29.838 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@3e2d8623
[DEBUG] 04-03-2024 13:17:29.838 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@3e2d8623
[DEBUG] 04-03-2024 13:17:29.839 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@3e2d8623
[DEBUG] 04-03-2024 13:17:29.839 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@72715e61
[DEBUG] 04-03-2024 13:17:29.839 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@72715e61
[DEBUG] 04-03-2024 13:17:29.840 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@72715e61
[DEBUG] 04-03-2024 13:17:29.840 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@68f776ee
[DEBUG] 04-03-2024 13:17:29.841 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@68f776ee
[DEBUG] 04-03-2024 13:17:29.841 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@5a6195b8
[DEBUG] 04-03-2024 13:17:29.841 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@5a6195b8
[DEBUG] 04-03-2024 13:17:29.842 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@8af1c49
[DEBUG] 04-03-2024 13:17:29.842 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@8af1c49
[DEBUG] 04-03-2024 13:17:29.843 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@8af1c49
[DEBUG] 04-03-2024 13:17:29.843 [main] BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@70d5d96b
[DEBUG] 04-03-2024 13:17:29.844 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@23469199
[DEBUG] 04-03-2024 13:17:29.844 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@23469199
[DEBUG] 04-03-2024 13:17:29.844 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@75dc1c1c
[DEBUG] 04-03-2024 13:17:29.845 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@5611bba
[DEBUG] 04-03-2024 13:17:29.845 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@5611bba
[DEBUG] 04-03-2024 13:17:29.845 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@5611bba
[DEBUG] 04-03-2024 13:17:29.846 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@5ba184fc
[DEBUG] 04-03-2024 13:17:29.846 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@4cfc0c48
[DEBUG] 04-03-2024 13:17:29.847 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@59d5c537
[DEBUG] 04-03-2024 13:17:29.847 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@5464b97c
[DEBUG] 04-03-2024 13:17:29.847 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@5464b97c
[DEBUG] 04-03-2024 13:17:29.848 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@3355168
[DEBUG] 04-03-2024 13:17:29.848 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@3355168
[DEBUG] 04-03-2024 13:17:29.849 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@2f07930a
[DEBUG] 04-03-2024 13:17:29.849 [main] BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@580c17a0
[DEBUG] 04-03-2024 13:17:29.850 [main] BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@29d2fa84
[DEBUG] 04-03-2024 13:17:29.850 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@4540c7
[DEBUG] 04-03-2024 13:17:29.851 [main] BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@13c90c06
[DEBUG] 04-03-2024 13:17:29.851 [main] BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@2bc0b8c8
[DEBUG] 04-03-2024 13:17:29.852 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@15f861ee
[DEBUG] 04-03-2024 13:17:29.852 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@15f861ee
[DEBUG] 04-03-2024 13:17:29.853 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@3f1158ee
[DEBUG] 04-03-2024 13:17:29.854 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@3f1158ee
[DEBUG] 04-03-2024 13:17:29.854 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@6463da36
[DEBUG] 04-03-2024 13:17:29.854 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@6463da36
[DEBUG] 04-03-2024 13:17:29.855 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@4a4b288a
[DEBUG] 04-03-2024 13:17:29.855 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@4a4b288a
[DEBUG] 04-03-2024 13:17:29.855 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@1c6ac73c
[DEBUG] 04-03-2024 13:17:29.856 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@1c6ac73c
[DEBUG] 04-03-2024 13:17:29.856 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@29892a77
[DEBUG] 04-03-2024 13:17:29.856 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@5341e71a
[DEBUG] 04-03-2024 13:17:29.857 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@405d8a80
[DEBUG] 04-03-2024 13:17:29.857 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@405d8a80
[DEBUG] 04-03-2024 13:17:29.857 [main] BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@ac4e690
[DEBUG] 04-03-2024 13:17:29.858 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@6afeaf2d
[DEBUG] 04-03-2024 13:17:29.858 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@365bfc5f
[DEBUG] 04-03-2024 13:17:29.858 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@1a7e799e
[DEBUG] 04-03-2024 13:17:29.859 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@1a7e799e
[DEBUG] 04-03-2024 13:17:29.859 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@37a3ec27
[DEBUG] 04-03-2024 13:17:29.859 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@283baa39
[DEBUG] 04-03-2024 13:17:29.860 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@416b1265
[DEBUG] 04-03-2024 13:17:29.860 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@416b1265
[DEBUG] 04-03-2024 13:17:29.860 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@2830315f
[DEBUG] 04-03-2024 13:17:29.861 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@2830315f
[DEBUG] 04-03-2024 13:17:29.861 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@da22aa
[DEBUG] 04-03-2024 13:17:29.862 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@da22aa
[DEBUG] 04-03-2024 13:17:29.862 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@da22aa
[DEBUG] 04-03-2024 13:17:29.863 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@75452aea
[DEBUG] 04-03-2024 13:17:29.863 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@75452aea
[DEBUG] 04-03-2024 13:17:29.864 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@75452aea
[DEBUG] 04-03-2024 13:17:29.864 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@6c24f61d
[DEBUG] 04-03-2024 13:17:29.864 [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@4537880f
[DEBUG] 04-03-2024 13:17:29.864 [main] BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@14292d71
[DEBUG] 04-03-2024 13:17:29.865 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@14292d71
[DEBUG] 04-03-2024 13:17:29.865 [main] BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@48e74764
[DEBUG] 04-03-2024 13:17:29.866 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@48e74764
[DEBUG] 04-03-2024 13:17:29.866 [main] BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@48e74764
[DEBUG] 04-03-2024 13:17:29.866 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@338d47b
[DEBUG] 04-03-2024 13:17:29.866 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@7a3643e3
[DEBUG] 04-03-2024 13:17:29.867 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@2729bb71
[DEBUG] 04-03-2024 13:17:29.867 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@2729bb71
[DEBUG] 04-03-2024 13:17:29.868 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@55071497
[DEBUG] 04-03-2024 13:17:29.868 [main] BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@55071497
[DEBUG] 04-03-2024 13:17:29.868 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@55071497
[DEBUG] 04-03-2024 13:17:29.872 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@10d98940
[DEBUG] 04-03-2024 13:17:29.873 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@10d98940
[DEBUG] 04-03-2024 13:17:29.873 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@58b8f9e3
[DEBUG] 04-03-2024 13:17:29.873 [main] BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@58b8f9e3
[DEBUG] 04-03-2024 13:17:29.874 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@32a033b6
[DEBUG] 04-03-2024 13:17:29.874 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@32a033b6
[DEBUG] 04-03-2024 13:17:29.874 [main] BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@5f6e2ad9
[DEBUG] 04-03-2024 13:17:29.875 [main] BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@5f6e2ad9
[DEBUG] 04-03-2024 13:17:29.875 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@3212bfd
[DEBUG] 04-03-2024 13:17:29.875 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@3212bfd
[DEBUG] 04-03-2024 13:17:29.875 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@1cc9bd9b
[DEBUG] 04-03-2024 13:17:29.896 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@3feebf9c
[DEBUG] 04-03-2024 13:17:29.896 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@3feebf9c
[DEBUG] 04-03-2024 13:17:29.899 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@56f9de3b
[DEBUG] 04-03-2024 13:17:29.900 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@6728370a
[DEBUG] 04-03-2024 13:17:29.900 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@2b5f8e61
[DEBUG] 04-03-2024 13:17:29.900 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@6ba0ee4a
[DEBUG] 04-03-2024 13:17:29.901 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@73b0ed03
[DEBUG] 04-03-2024 13:17:29.901 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@55061418
[DEBUG] 04-03-2024 13:17:29.901 [main] BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@27db45f
[DEBUG] 04-03-2024 13:17:29.902 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@6ec3d8e4
[DEBUG] 04-03-2024 13:17:29.902 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@1aeff8ca
[DEBUG] 04-03-2024 13:17:31.592 [main] DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2ef913a4) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@520c3dcb)
[DEBUG] 04-03-2024 13:17:31.597 [main] JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
[DEBUG] 04-03-2024 13:17:31.598 [main] JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 04-03-2024 13:17:31.619 [main] BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@33eab2e8
[DEBUG] 04-03-2024 13:17:31.620 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@33eab2e8
[DEBUG] 04-03-2024 13:17:31.621 [main] BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@3feebf9c`
[DEBUG] 04-03-2024 13:17:31.624 [main] JdbcTypeRegistry - addDescriptor(3100, NumericTypeDescriptor) replaced previous registration(org.hibernate.dialect.PostgreSQLIntervalSecondJdbcType@14b26e90)
[DEBUG] 04-03-2024 13:17:31.644 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 04-03-2024 13:17:31.645 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 04-03-2024 13:17:31.645 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 04-03-2024 13:17:31.646 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 04-03-2024 13:17:31.646 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 04-03-2024 13:17:31.646 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 04-03-2024 13:17:31.648 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 04-03-2024 13:17:31.649 [main] BasicTypeRegistry - Adding type registration OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 04-03-2024 13:17:31.649 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 04-03-2024 13:17:31.652 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@211da640] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@2ec92631]
[INFO ] 04-03-2024 13:17:31.889 [main] BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
[INFO ] 04-03-2024 13:17:33.197 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 04-03-2024 13:17:33.199 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@211da640] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@7591cbd1]
[TRACE] 04-03-2024 13:17:33.214 [main] TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@7591cbd1] for TypeConfiguration
[WARN ] 04-03-2024 13:17:33.631 [main] JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[INFO ] 04-03-2024 13:17:34.708 [main] Http11NioProtocol - Starting ProtocolHandler ["http-nio-8300"]
[INFO ] 04-03-2024 13:17:34.771 [main] TomcatWebServer - Tomcat started on port(s): 8300 (http) with context path '/users_products_api'
[INFO ] 04-03-2024 13:17:34.812 [main] TestSpringBootApplication - Started TestSpringBootApplication in 16.313 seconds (process running for 19.518)
[INFO ] 04-03-2024 13:17:47.556 [http-nio-8300-exec-2] [/users_products_api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[INFO ] 04-03-2024 13:17:47.558 [http-nio-8300-exec-2] DispatcherServlet - Initializing Servlet 'dispatcherServlet'
[INFO ] 04-03-2024 13:17:47.563 [http-nio-8300-exec-2] DispatcherServlet - Completed initialization in 4 ms
[TRACE] 04-03-2024 15:09:43.150 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@7591cbd1] for TypeConfiguration
[DEBUG] 04-03-2024 15:09:43.154 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@24e1258] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@7591cbd1]
[INFO ] 04-03-2024 15:09:57.726 [background-preinit] Version - HV000001: Hibernate Validator 8.0.1.Final
[INFO ] 04-03-2024 15:09:57.932 [main] TestSpringBootApplication - Starting TestSpringBootApplication using Java 17.0.10 with PID 2280121 (/home/dima/backend_microservice/UserProductsMicroService/target/classes started by dima in /home/dima/backend_microservice/UserProductsMicroService)
[INFO ] 04-03-2024 15:09:57.946 [main] TestSpringBootApplication - No active profile set, falling back to 1 default profile: "default"
[INFO ] 04-03-2024 15:10:00.406 [main] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
[INFO ] 04-03-2024 15:10:00.409 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data R2DBC repositories in DEFAULT mode.
[INFO ] 04-03-2024 15:10:01.063 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 633 ms. Found 1 R2DBC repository interfaces.
[INFO ] 04-03-2024 15:10:01.717 [main] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
[INFO ] 04-03-2024 15:10:01.720 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO ] 04-03-2024 15:10:01.753 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 24 ms. Found 0 JPA repository interfaces.
[ERROR] 04-03-2024 15:10:03.499 [main] AprLifecycleListener - An incompatible version [1.2.23] of the Apache Tomcat Native library is installed, while Tomcat requires version [1.2.34]
[INFO ] 04-03-2024 15:10:04.379 [main] TomcatWebServer - Tomcat initialized with port(s): 8300 (http)
[INFO ] 04-03-2024 15:10:04.400 [main] Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8300"]
[INFO ] 04-03-2024 15:10:04.407 [main] StandardService - Starting service [Tomcat]
[INFO ] 04-03-2024 15:10:04.408 [main] StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.11]
[INFO ] 04-03-2024 15:10:05.353 [main] TldScanner - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
[INFO ] 04-03-2024 15:10:05.372 [main] [/users_products_api] - Initializing Spring embedded WebApplicationContext
[INFO ] 04-03-2024 15:10:05.376 [main] ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 7114 ms
[INFO ] 04-03-2024 15:10:06.657 [main] Version - HHH000412: Hibernate ORM core version 6.2.6.Final
[INFO ] 04-03-2024 15:10:06.672 [main] Environment - HHH000406: Using bytecode reflection optimizer
[DEBUG] 04-03-2024 15:10:07.099 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@42211e04
[DEBUG] 04-03-2024 15:10:07.100 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@42211e04
[DEBUG] 04-03-2024 15:10:07.100 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@42211e04
[DEBUG] 04-03-2024 15:10:07.101 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@6233c6c2
[DEBUG] 04-03-2024 15:10:07.101 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@6233c6c2
[DEBUG] 04-03-2024 15:10:07.102 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@312a738d
[DEBUG] 04-03-2024 15:10:07.103 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@312a738d
[DEBUG] 04-03-2024 15:10:07.103 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@7e50eeb9
[DEBUG] 04-03-2024 15:10:07.104 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@7e50eeb9
[DEBUG] 04-03-2024 15:10:07.104 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@34cb0e49
[DEBUG] 04-03-2024 15:10:07.105 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@34cb0e49
[DEBUG] 04-03-2024 15:10:07.105 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@34cb0e49
[DEBUG] 04-03-2024 15:10:07.106 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@48b2dbc4
[DEBUG] 04-03-2024 15:10:07.107 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@48b2dbc4
[DEBUG] 04-03-2024 15:10:07.107 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@48b2dbc4
[DEBUG] 04-03-2024 15:10:07.108 [main] BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@2a667f44
[DEBUG] 04-03-2024 15:10:07.108 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@2a667f44
[DEBUG] 04-03-2024 15:10:07.109 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@53ba7997
[DEBUG] 04-03-2024 15:10:07.109 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@3f6f9cef
[DEBUG] 04-03-2024 15:10:07.110 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@3f6f9cef
[DEBUG] 04-03-2024 15:10:07.110 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@61dd1c3d
[DEBUG] 04-03-2024 15:10:07.111 [main] BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@7858d31d
[DEBUG] 04-03-2024 15:10:07.111 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@782e6b40
[DEBUG] 04-03-2024 15:10:07.112 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@782e6b40
[DEBUG] 04-03-2024 15:10:07.112 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@782e6b40
[DEBUG] 04-03-2024 15:10:07.113 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@3b65084e
[DEBUG] 04-03-2024 15:10:07.113 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@3b65084e
[DEBUG] 04-03-2024 15:10:07.114 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@3b65084e
[DEBUG] 04-03-2024 15:10:07.114 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@32d0d7eb
[DEBUG] 04-03-2024 15:10:07.115 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@32d0d7eb
[DEBUG] 04-03-2024 15:10:07.115 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@32d0d7eb
[DEBUG] 04-03-2024 15:10:07.116 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@cae2a97
[DEBUG] 04-03-2024 15:10:07.116 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@cae2a97
[DEBUG] 04-03-2024 15:10:07.117 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@cae2a97
[DEBUG] 04-03-2024 15:10:07.117 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@7d12429
[DEBUG] 04-03-2024 15:10:07.117 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@7d12429
[DEBUG] 04-03-2024 15:10:07.118 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@7d12429
[DEBUG] 04-03-2024 15:10:07.118 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@14656be5
[DEBUG] 04-03-2024 15:10:07.119 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@14656be5
[DEBUG] 04-03-2024 15:10:07.119 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@20be890d
[DEBUG] 04-03-2024 15:10:07.120 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@20be890d
[DEBUG] 04-03-2024 15:10:07.120 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@5db9f51f
[DEBUG] 04-03-2024 15:10:07.120 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@5db9f51f
[DEBUG] 04-03-2024 15:10:07.121 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@5db9f51f
[DEBUG] 04-03-2024 15:10:07.121 [main] BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@534762ed
[DEBUG] 04-03-2024 15:10:07.122 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@6c421123
[DEBUG] 04-03-2024 15:10:07.123 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@6c421123
[DEBUG] 04-03-2024 15:10:07.123 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@38e00b47
[DEBUG] 04-03-2024 15:10:07.123 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@2a631049
[DEBUG] 04-03-2024 15:10:07.124 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@2a631049
[DEBUG] 04-03-2024 15:10:07.124 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@2a631049
[DEBUG] 04-03-2024 15:10:07.125 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@425b5fe2
[DEBUG] 04-03-2024 15:10:07.125 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@3eec8583
[DEBUG] 04-03-2024 15:10:07.125 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@66e1b2a
[DEBUG] 04-03-2024 15:10:07.126 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@343db2f6
[DEBUG] 04-03-2024 15:10:07.126 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@343db2f6
[DEBUG] 04-03-2024 15:10:07.127 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@2c815fdc
[DEBUG] 04-03-2024 15:10:07.127 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@2c815fdc
[DEBUG] 04-03-2024 15:10:07.127 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@769b0752
[DEBUG] 04-03-2024 15:10:07.128 [main] BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@dae5e0
[DEBUG] 04-03-2024 15:10:07.128 [main] BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@59a94d0f
[DEBUG] 04-03-2024 15:10:07.129 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@7ff09659
[DEBUG] 04-03-2024 15:10:07.129 [main] BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@517fbf62
[DEBUG] 04-03-2024 15:10:07.129 [main] BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@65db548
[DEBUG] 04-03-2024 15:10:07.130 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@150f41b9
[DEBUG] 04-03-2024 15:10:07.131 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@150f41b9
[DEBUG] 04-03-2024 15:10:07.131 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@6e364f1f
[DEBUG] 04-03-2024 15:10:07.131 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@6e364f1f
[DEBUG] 04-03-2024 15:10:07.132 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@429e7914
[DEBUG] 04-03-2024 15:10:07.132 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@429e7914
[DEBUG] 04-03-2024 15:10:07.132 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@298263fa
[DEBUG] 04-03-2024 15:10:07.133 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@298263fa
[DEBUG] 04-03-2024 15:10:07.133 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@466fedfa
[DEBUG] 04-03-2024 15:10:07.134 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@466fedfa
[DEBUG] 04-03-2024 15:10:07.134 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@1a7d0c9f
[DEBUG] 04-03-2024 15:10:07.135 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@2b1a901d
[DEBUG] 04-03-2024 15:10:07.135 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@11bdab37
[DEBUG] 04-03-2024 15:10:07.135 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@11bdab37
[DEBUG] 04-03-2024 15:10:07.136 [main] BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@280484c7
[DEBUG] 04-03-2024 15:10:07.136 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@5a6f6cac
[DEBUG] 04-03-2024 15:10:07.137 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@258a8584
[DEBUG] 04-03-2024 15:10:07.137 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@59127611
[DEBUG] 04-03-2024 15:10:07.137 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@59127611
[DEBUG] 04-03-2024 15:10:07.138 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@553ce348
[DEBUG] 04-03-2024 15:10:07.138 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@7417ef4f
[DEBUG] 04-03-2024 15:10:07.139 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@5c0e2ec
[DEBUG] 04-03-2024 15:10:07.139 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@5c0e2ec
[DEBUG] 04-03-2024 15:10:07.140 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@4fa8bebb
[DEBUG] 04-03-2024 15:10:07.140 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@4fa8bebb
[DEBUG] 04-03-2024 15:10:07.140 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@7d3c22a5
[DEBUG] 04-03-2024 15:10:07.141 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@7d3c22a5
[DEBUG] 04-03-2024 15:10:07.141 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@7d3c22a5
[DEBUG] 04-03-2024 15:10:07.142 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@369ad7da
[DEBUG] 04-03-2024 15:10:07.142 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@369ad7da
[DEBUG] 04-03-2024 15:10:07.143 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@369ad7da
[DEBUG] 04-03-2024 15:10:07.143 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@344f9467
[DEBUG] 04-03-2024 15:10:07.143 [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@3e98b933
[DEBUG] 04-03-2024 15:10:07.144 [main] BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@222d9d4f
[DEBUG] 04-03-2024 15:10:07.144 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@222d9d4f
[DEBUG] 04-03-2024 15:10:07.144 [main] BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@4269aad7
[DEBUG] 04-03-2024 15:10:07.145 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@4269aad7
[DEBUG] 04-03-2024 15:10:07.145 [main] BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@4269aad7
[DEBUG] 04-03-2024 15:10:07.145 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@a4df251
[DEBUG] 04-03-2024 15:10:07.146 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@71e7830a
[DEBUG] 04-03-2024 15:10:07.146 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@3feebf9c
[DEBUG] 04-03-2024 15:10:07.147 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@3feebf9c
[DEBUG] 04-03-2024 15:10:07.147 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@305e95a4
[DEBUG] 04-03-2024 15:10:07.148 [main] BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@305e95a4
[DEBUG] 04-03-2024 15:10:07.148 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@305e95a4
[DEBUG] 04-03-2024 15:10:07.148 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@55e42684
[DEBUG] 04-03-2024 15:10:07.149 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@55e42684
[DEBUG] 04-03-2024 15:10:07.149 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@18d610e1
[DEBUG] 04-03-2024 15:10:07.150 [main] BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@18d610e1
[DEBUG] 04-03-2024 15:10:07.150 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@528e5e38
[DEBUG] 04-03-2024 15:10:07.151 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@528e5e38
[DEBUG] 04-03-2024 15:10:07.151 [main] BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@16391278
[DEBUG] 04-03-2024 15:10:07.151 [main] BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@16391278
[DEBUG] 04-03-2024 15:10:07.152 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@621dc63d
[DEBUG] 04-03-2024 15:10:07.152 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@621dc63d
[DEBUG] 04-03-2024 15:10:07.152 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@4ae49387
[DEBUG] 04-03-2024 15:10:07.167 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@72f3f14c
[DEBUG] 04-03-2024 15:10:07.168 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@72f3f14c
[DEBUG] 04-03-2024 15:10:07.170 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@28fa541
[DEBUG] 04-03-2024 15:10:07.171 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@5a82bc58
[DEBUG] 04-03-2024 15:10:07.171 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@4aab7195
[DEBUG] 04-03-2024 15:10:07.172 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@6210666c
[DEBUG] 04-03-2024 15:10:07.172 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@1dca62c2
[DEBUG] 04-03-2024 15:10:07.172 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@52657d5f
[DEBUG] 04-03-2024 15:10:07.173 [main] BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@43d3995f
[DEBUG] 04-03-2024 15:10:07.173 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@2211b44f
[DEBUG] 04-03-2024 15:10:07.173 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@6c830ebd
[DEBUG] 04-03-2024 15:10:08.577 [main] DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@708f7386) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@377e90b0)
[DEBUG] 04-03-2024 15:10:08.583 [main] JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
[DEBUG] 04-03-2024 15:10:08.584 [main] JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 04-03-2024 15:10:08.609 [main] BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@3e9b3b3c
[DEBUG] 04-03-2024 15:10:08.610 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@3e9b3b3c
[DEBUG] 04-03-2024 15:10:08.610 [main] BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@72f3f14c`
[DEBUG] 04-03-2024 15:10:08.613 [main] JdbcTypeRegistry - addDescriptor(3100, NumericTypeDescriptor) replaced previous registration(org.hibernate.dialect.PostgreSQLIntervalSecondJdbcType@211da640)
[DEBUG] 04-03-2024 15:10:08.628 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 04-03-2024 15:10:08.628 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 04-03-2024 15:10:08.629 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 04-03-2024 15:10:08.629 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 04-03-2024 15:10:08.630 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 04-03-2024 15:10:08.630 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 04-03-2024 15:10:08.632 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 04-03-2024 15:10:08.633 [main] BasicTypeRegistry - Adding type registration OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 04-03-2024 15:10:08.633 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 04-03-2024 15:10:08.636 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@87220f1] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@77998ea7]
[WARN ] 04-03-2024 15:10:08.905 [main] AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'CRUDUserProducts': Unsatisfied dependency expressed through field 'dao': Error creating bean with name 'DAOUserProducts': Unsatisfied dependency expressed through field 'factory': Error creating bean with name 'entityManagerFactory' defined in class path resource [server/DatabaseConfiguration.class]: Entity 'entity.eProducts' has no identifier (every '@Entity' class must declare or inherit at least one '@Id' or '@EmbeddedId' property)
[INFO ] 04-03-2024 15:10:08.911 [main] StandardService - Stopping service [Tomcat]
[INFO ] 04-03-2024 15:10:08.966 [main] ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
[ERROR] 04-03-2024 15:10:09.028 [main] SpringApplication - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'CRUDUserProducts': Unsatisfied dependency expressed through field 'dao': Error creating bean with name 'DAOUserProducts': Unsatisfied dependency expressed through field 'factory': Error creating bean with name 'entityManagerFactory' defined in class path resource [server/DatabaseConfiguration.class]: Entity 'entity.eProducts' has no identifier (every '@Entity' class must declare or inherit at least one '@Id' or '@EmbeddedId' property)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:716) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:696) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:483) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1416) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:597) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:973) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:942) ~[spring-context-6.0.11.jar:6.0.11]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:608) ~[spring-context-6.0.11.jar:6.0.11]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146) ~[spring-boot-3.1.2.jar:3.1.2]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734) [spring-boot-3.1.2.jar:3.1.2]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:436) [spring-boot-3.1.2.jar:3.1.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312) [spring-boot-3.1.2.jar:3.1.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306) [spring-boot-3.1.2.jar:3.1.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295) [spring-boot-3.1.2.jar:3.1.2]
	at App.TestSpringBootApplication.main(TestSpringBootApplication.java:32) [classes/:?]
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'DAOUserProducts': Unsatisfied dependency expressed through field 'factory': Error creating bean with name 'entityManagerFactory' defined in class path resource [server/DatabaseConfiguration.class]: Entity 'entity.eProducts' has no identifier (every '@Entity' class must declare or inherit at least one '@Id' or '@EmbeddedId' property)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:716) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:696) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:483) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1416) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:597) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:713) ~[spring-beans-6.0.11.jar:6.0.11]
	... 20 more
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [server/DatabaseConfiguration.class]: Entity 'entity.eProducts' has no identifier (every '@Entity' class must declare or inherit at least one '@Id' or '@EmbeddedId' property)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1770) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:713) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:696) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:483) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1416) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:597) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:713) ~[spring-beans-6.0.11.jar:6.0.11]
	... 20 more
Caused by: org.hibernate.AnnotationException: Entity 'entity.eProducts' has no identifier (every '@Entity' class must declare or inherit at least one '@Id' or '@EmbeddedId' property)
	at org.hibernate.boot.model.internal.InheritanceState.determineDefaultAccessType(InheritanceState.java:279) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.boot.model.internal.InheritanceState.getElementsToProcess(InheritanceState.java:215) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.boot.model.internal.InheritanceState.postProcess(InheritanceState.java:160) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.boot.model.internal.EntityBinder.handleIdentifier(EntityBinder.java:293) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.boot.model.internal.EntityBinder.bindEntityClass(EntityBinder.java:228) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.boot.model.internal.AnnotationBinder.bindClass(AnnotationBinder.java:417) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.boot.model.source.internal.annotations.AnnotationMetadataSourceProcessorImpl.processEntityHierarchies(AnnotationMetadataSourceProcessorImpl.java:255) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess$1.processEntityHierarchies(MetadataBuildingProcess.java:275) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:318) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.build(MetadataBuildingProcess.java:125) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:451) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:102) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:910) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:960) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:616) ~[spring-orm-6.0.11.jar:6.0.11]
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:600) ~[spring-orm-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1817) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1766) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:713) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:696) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:483) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1416) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:597) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:713) ~[spring-beans-6.0.11.jar:6.0.11]
	... 20 more
[INFO ] 04-03-2024 15:11:47.583 [background-preinit] Version - HV000001: Hibernate Validator 8.0.1.Final
[INFO ] 04-03-2024 15:11:47.647 [main] TestSpringBootApplication - Starting TestSpringBootApplication using Java 17.0.10 with PID 2281119 (/home/dima/backend_microservice/UserProductsMicroService/target/classes started by dima in /home/dima/backend_microservice/UserProductsMicroService)
[INFO ] 04-03-2024 15:11:47.661 [main] TestSpringBootApplication - No active profile set, falling back to 1 default profile: "default"
[INFO ] 04-03-2024 15:11:49.504 [main] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
[INFO ] 04-03-2024 15:11:49.506 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data R2DBC repositories in DEFAULT mode.
[INFO ] 04-03-2024 15:11:50.039 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 518 ms. Found 1 R2DBC repository interfaces.
[INFO ] 04-03-2024 15:11:50.581 [main] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
[INFO ] 04-03-2024 15:11:50.584 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO ] 04-03-2024 15:11:50.617 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 23 ms. Found 0 JPA repository interfaces.
[ERROR] 04-03-2024 15:11:51.643 [main] AprLifecycleListener - An incompatible version [1.2.23] of the Apache Tomcat Native library is installed, while Tomcat requires version [1.2.34]
[INFO ] 04-03-2024 15:11:52.447 [main] TomcatWebServer - Tomcat initialized with port(s): 8300 (http)
[INFO ] 04-03-2024 15:11:52.469 [main] Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8300"]
[INFO ] 04-03-2024 15:11:52.476 [main] StandardService - Starting service [Tomcat]
[INFO ] 04-03-2024 15:11:52.477 [main] StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.11]
[INFO ] 04-03-2024 15:11:53.454 [main] TldScanner - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
[INFO ] 04-03-2024 15:11:53.473 [main] [/users_products_api] - Initializing Spring embedded WebApplicationContext
[INFO ] 04-03-2024 15:11:53.479 [main] ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 5594 ms
[INFO ] 04-03-2024 15:11:54.726 [main] Version - HHH000412: Hibernate ORM core version 6.2.6.Final
[INFO ] 04-03-2024 15:11:54.732 [main] Environment - HHH000406: Using bytecode reflection optimizer
[DEBUG] 04-03-2024 15:11:55.083 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@42211e04
[DEBUG] 04-03-2024 15:11:55.084 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@42211e04
[DEBUG] 04-03-2024 15:11:55.084 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@42211e04
[DEBUG] 04-03-2024 15:11:55.085 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@6233c6c2
[DEBUG] 04-03-2024 15:11:55.085 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@6233c6c2
[DEBUG] 04-03-2024 15:11:55.086 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@312a738d
[DEBUG] 04-03-2024 15:11:55.086 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@312a738d
[DEBUG] 04-03-2024 15:11:55.087 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@7e50eeb9
[DEBUG] 04-03-2024 15:11:55.087 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@7e50eeb9
[DEBUG] 04-03-2024 15:11:55.087 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@34cb0e49
[DEBUG] 04-03-2024 15:11:55.088 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@34cb0e49
[DEBUG] 04-03-2024 15:11:55.088 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@34cb0e49
[DEBUG] 04-03-2024 15:11:55.089 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@48b2dbc4
[DEBUG] 04-03-2024 15:11:55.089 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@48b2dbc4
[DEBUG] 04-03-2024 15:11:55.090 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@48b2dbc4
[DEBUG] 04-03-2024 15:11:55.090 [main] BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@2a667f44
[DEBUG] 04-03-2024 15:11:55.091 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@2a667f44
[DEBUG] 04-03-2024 15:11:55.091 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@53ba7997
[DEBUG] 04-03-2024 15:11:55.091 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@3f6f9cef
[DEBUG] 04-03-2024 15:11:55.092 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@3f6f9cef
[DEBUG] 04-03-2024 15:11:55.092 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@61dd1c3d
[DEBUG] 04-03-2024 15:11:55.093 [main] BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@7858d31d
[DEBUG] 04-03-2024 15:11:55.093 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@782e6b40
[DEBUG] 04-03-2024 15:11:55.094 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@782e6b40
[DEBUG] 04-03-2024 15:11:55.094 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@782e6b40
[DEBUG] 04-03-2024 15:11:55.095 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@3b65084e
[DEBUG] 04-03-2024 15:11:55.095 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@3b65084e
[DEBUG] 04-03-2024 15:11:55.095 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@3b65084e
[DEBUG] 04-03-2024 15:11:55.096 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@32d0d7eb
[DEBUG] 04-03-2024 15:11:55.096 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@32d0d7eb
[DEBUG] 04-03-2024 15:11:55.097 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@32d0d7eb
[DEBUG] 04-03-2024 15:11:55.097 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@cae2a97
[DEBUG] 04-03-2024 15:11:55.097 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@cae2a97
[DEBUG] 04-03-2024 15:11:55.097 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@cae2a97
[DEBUG] 04-03-2024 15:11:55.098 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@7d12429
[DEBUG] 04-03-2024 15:11:55.098 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@7d12429
[DEBUG] 04-03-2024 15:11:55.098 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@7d12429
[DEBUG] 04-03-2024 15:11:55.098 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@14656be5
[DEBUG] 04-03-2024 15:11:55.099 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@14656be5
[DEBUG] 04-03-2024 15:11:55.099 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@20be890d
[DEBUG] 04-03-2024 15:11:55.099 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@20be890d
[DEBUG] 04-03-2024 15:11:55.100 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@5db9f51f
[DEBUG] 04-03-2024 15:11:55.100 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@5db9f51f
[DEBUG] 04-03-2024 15:11:55.100 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@5db9f51f
[DEBUG] 04-03-2024 15:11:55.101 [main] BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@534762ed
[DEBUG] 04-03-2024 15:11:55.101 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@6c421123
[DEBUG] 04-03-2024 15:11:55.102 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@6c421123
[DEBUG] 04-03-2024 15:11:55.102 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@38e00b47
[DEBUG] 04-03-2024 15:11:55.102 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@2a631049
[DEBUG] 04-03-2024 15:11:55.103 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@2a631049
[DEBUG] 04-03-2024 15:11:55.103 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@2a631049
[DEBUG] 04-03-2024 15:11:55.103 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@425b5fe2
[DEBUG] 04-03-2024 15:11:55.103 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@3eec8583
[DEBUG] 04-03-2024 15:11:55.104 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@66e1b2a
[DEBUG] 04-03-2024 15:11:55.104 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@343db2f6
[DEBUG] 04-03-2024 15:11:55.104 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@343db2f6
[DEBUG] 04-03-2024 15:11:55.105 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@2c815fdc
[DEBUG] 04-03-2024 15:11:55.105 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@2c815fdc
[DEBUG] 04-03-2024 15:11:55.106 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@769b0752
[DEBUG] 04-03-2024 15:11:55.106 [main] BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@dae5e0
[DEBUG] 04-03-2024 15:11:55.106 [main] BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@59a94d0f
[DEBUG] 04-03-2024 15:11:55.107 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@7ff09659
[DEBUG] 04-03-2024 15:11:55.107 [main] BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@517fbf62
[DEBUG] 04-03-2024 15:11:55.107 [main] BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@65db548
[DEBUG] 04-03-2024 15:11:55.108 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@150f41b9
[DEBUG] 04-03-2024 15:11:55.108 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@150f41b9
[DEBUG] 04-03-2024 15:11:55.108 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@6e364f1f
[DEBUG] 04-03-2024 15:11:55.109 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@6e364f1f
[DEBUG] 04-03-2024 15:11:55.109 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@429e7914
[DEBUG] 04-03-2024 15:11:55.109 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@429e7914
[DEBUG] 04-03-2024 15:11:55.110 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@298263fa
[DEBUG] 04-03-2024 15:11:55.110 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@298263fa
[DEBUG] 04-03-2024 15:11:55.110 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@466fedfa
[DEBUG] 04-03-2024 15:11:55.111 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@466fedfa
[DEBUG] 04-03-2024 15:11:55.111 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@1a7d0c9f
[DEBUG] 04-03-2024 15:11:55.111 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@2b1a901d
[DEBUG] 04-03-2024 15:11:55.112 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@11bdab37
[DEBUG] 04-03-2024 15:11:55.113 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@11bdab37
[DEBUG] 04-03-2024 15:11:55.113 [main] BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@280484c7
[DEBUG] 04-03-2024 15:11:55.114 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@5a6f6cac
[DEBUG] 04-03-2024 15:11:55.115 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@258a8584
[DEBUG] 04-03-2024 15:11:55.116 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@59127611
[DEBUG] 04-03-2024 15:11:55.116 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@59127611
[DEBUG] 04-03-2024 15:11:55.116 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@553ce348
[DEBUG] 04-03-2024 15:11:55.117 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@7417ef4f
[DEBUG] 04-03-2024 15:11:55.117 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@5c0e2ec
[DEBUG] 04-03-2024 15:11:55.117 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@5c0e2ec
[DEBUG] 04-03-2024 15:11:55.118 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@4fa8bebb
[DEBUG] 04-03-2024 15:11:55.118 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@4fa8bebb
[DEBUG] 04-03-2024 15:11:55.119 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@7d3c22a5
[DEBUG] 04-03-2024 15:11:55.119 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@7d3c22a5
[DEBUG] 04-03-2024 15:11:55.119 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@7d3c22a5
[DEBUG] 04-03-2024 15:11:55.120 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@369ad7da
[DEBUG] 04-03-2024 15:11:55.120 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@369ad7da
[DEBUG] 04-03-2024 15:11:55.121 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@369ad7da
[DEBUG] 04-03-2024 15:11:55.121 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@344f9467
[DEBUG] 04-03-2024 15:11:55.121 [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@3e98b933
[DEBUG] 04-03-2024 15:11:55.122 [main] BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@222d9d4f
[DEBUG] 04-03-2024 15:11:55.122 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@222d9d4f
[DEBUG] 04-03-2024 15:11:55.123 [main] BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@4269aad7
[DEBUG] 04-03-2024 15:11:55.123 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@4269aad7
[DEBUG] 04-03-2024 15:11:55.123 [main] BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@4269aad7
[DEBUG] 04-03-2024 15:11:55.123 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@a4df251
[DEBUG] 04-03-2024 15:11:55.124 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@71e7830a
[DEBUG] 04-03-2024 15:11:55.124 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@3feebf9c
[DEBUG] 04-03-2024 15:11:55.124 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@3feebf9c
[DEBUG] 04-03-2024 15:11:55.125 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@305e95a4
[DEBUG] 04-03-2024 15:11:55.125 [main] BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@305e95a4
[DEBUG] 04-03-2024 15:11:55.125 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@305e95a4
[DEBUG] 04-03-2024 15:11:55.126 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@55e42684
[DEBUG] 04-03-2024 15:11:55.126 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@55e42684
[DEBUG] 04-03-2024 15:11:55.127 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@18d610e1
[DEBUG] 04-03-2024 15:11:55.127 [main] BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@18d610e1
[DEBUG] 04-03-2024 15:11:55.127 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@528e5e38
[DEBUG] 04-03-2024 15:11:55.127 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@528e5e38
[DEBUG] 04-03-2024 15:11:55.128 [main] BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@16391278
[DEBUG] 04-03-2024 15:11:55.128 [main] BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@16391278
[DEBUG] 04-03-2024 15:11:55.128 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@621dc63d
[DEBUG] 04-03-2024 15:11:55.129 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@621dc63d
[DEBUG] 04-03-2024 15:11:55.129 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@4ae49387
[DEBUG] 04-03-2024 15:11:55.142 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@72f3f14c
[DEBUG] 04-03-2024 15:11:55.143 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@72f3f14c
[DEBUG] 04-03-2024 15:11:55.146 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@28fa541
[DEBUG] 04-03-2024 15:11:55.147 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@5a82bc58
[DEBUG] 04-03-2024 15:11:55.147 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@4aab7195
[DEBUG] 04-03-2024 15:11:55.147 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@6210666c
[DEBUG] 04-03-2024 15:11:55.148 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@1dca62c2
[DEBUG] 04-03-2024 15:11:55.148 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@52657d5f
[DEBUG] 04-03-2024 15:11:55.148 [main] BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@43d3995f
[DEBUG] 04-03-2024 15:11:55.149 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@2211b44f
[DEBUG] 04-03-2024 15:11:55.149 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@6c830ebd
[DEBUG] 04-03-2024 15:11:56.539 [main] DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@708f7386) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@377e90b0)
[DEBUG] 04-03-2024 15:11:56.546 [main] JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
[DEBUG] 04-03-2024 15:11:56.547 [main] JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 04-03-2024 15:11:56.568 [main] BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@3e9b3b3c
[DEBUG] 04-03-2024 15:11:56.569 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@3e9b3b3c
[DEBUG] 04-03-2024 15:11:56.569 [main] BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@72f3f14c`
[DEBUG] 04-03-2024 15:11:56.572 [main] JdbcTypeRegistry - addDescriptor(3100, NumericTypeDescriptor) replaced previous registration(org.hibernate.dialect.PostgreSQLIntervalSecondJdbcType@211da640)
[DEBUG] 04-03-2024 15:11:56.587 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 04-03-2024 15:11:56.588 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 04-03-2024 15:11:56.588 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 04-03-2024 15:11:56.588 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 04-03-2024 15:11:56.589 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 04-03-2024 15:11:56.589 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 04-03-2024 15:11:56.591 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 04-03-2024 15:11:56.591 [main] BasicTypeRegistry - Adding type registration OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 04-03-2024 15:11:56.592 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 04-03-2024 15:11:56.595 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@87220f1] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@77998ea7]
[WARN ] 04-03-2024 15:11:57.258 [main] AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'CRUDUserProducts': Unsatisfied dependency expressed through field 'dao': Error creating bean with name 'DAOUserProducts': Unsatisfied dependency expressed through field 'factory': Error creating bean with name 'entityManagerFactory' defined in class path resource [server/DatabaseConfiguration.class]: Entity 'entity.eUsers' has no identifier (every '@Entity' class must declare or inherit at least one '@Id' or '@EmbeddedId' property)
[INFO ] 04-03-2024 15:11:57.263 [main] StandardService - Stopping service [Tomcat]
[INFO ] 04-03-2024 15:11:57.304 [main] ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
[ERROR] 04-03-2024 15:11:57.360 [main] SpringApplication - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'CRUDUserProducts': Unsatisfied dependency expressed through field 'dao': Error creating bean with name 'DAOUserProducts': Unsatisfied dependency expressed through field 'factory': Error creating bean with name 'entityManagerFactory' defined in class path resource [server/DatabaseConfiguration.class]: Entity 'entity.eUsers' has no identifier (every '@Entity' class must declare or inherit at least one '@Id' or '@EmbeddedId' property)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:716) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:696) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:483) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1416) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:597) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:973) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:942) ~[spring-context-6.0.11.jar:6.0.11]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:608) ~[spring-context-6.0.11.jar:6.0.11]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146) ~[spring-boot-3.1.2.jar:3.1.2]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734) [spring-boot-3.1.2.jar:3.1.2]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:436) [spring-boot-3.1.2.jar:3.1.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312) [spring-boot-3.1.2.jar:3.1.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306) [spring-boot-3.1.2.jar:3.1.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295) [spring-boot-3.1.2.jar:3.1.2]
	at App.TestSpringBootApplication.main(TestSpringBootApplication.java:32) [classes/:?]
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'DAOUserProducts': Unsatisfied dependency expressed through field 'factory': Error creating bean with name 'entityManagerFactory' defined in class path resource [server/DatabaseConfiguration.class]: Entity 'entity.eUsers' has no identifier (every '@Entity' class must declare or inherit at least one '@Id' or '@EmbeddedId' property)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:716) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:696) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:483) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1416) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:597) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:713) ~[spring-beans-6.0.11.jar:6.0.11]
	... 20 more
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [server/DatabaseConfiguration.class]: Entity 'entity.eUsers' has no identifier (every '@Entity' class must declare or inherit at least one '@Id' or '@EmbeddedId' property)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1770) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:713) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:696) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:483) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1416) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:597) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:713) ~[spring-beans-6.0.11.jar:6.0.11]
	... 20 more
Caused by: org.hibernate.AnnotationException: Entity 'entity.eUsers' has no identifier (every '@Entity' class must declare or inherit at least one '@Id' or '@EmbeddedId' property)
	at org.hibernate.boot.model.internal.InheritanceState.determineDefaultAccessType(InheritanceState.java:279) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.boot.model.internal.InheritanceState.getElementsToProcess(InheritanceState.java:215) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.boot.model.internal.InheritanceState.postProcess(InheritanceState.java:160) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.boot.model.internal.EntityBinder.handleIdentifier(EntityBinder.java:293) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.boot.model.internal.EntityBinder.bindEntityClass(EntityBinder.java:228) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.boot.model.internal.AnnotationBinder.bindClass(AnnotationBinder.java:417) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.boot.model.source.internal.annotations.AnnotationMetadataSourceProcessorImpl.processEntityHierarchies(AnnotationMetadataSourceProcessorImpl.java:255) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess$1.processEntityHierarchies(MetadataBuildingProcess.java:275) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:318) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.build(MetadataBuildingProcess.java:125) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:451) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:102) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:910) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:960) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:616) ~[spring-orm-6.0.11.jar:6.0.11]
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:600) ~[spring-orm-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1817) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1766) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:713) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:696) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:483) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1416) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:597) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:713) ~[spring-beans-6.0.11.jar:6.0.11]
	... 20 more
[INFO ] 04-03-2024 15:13:05.116 [background-preinit] Version - HV000001: Hibernate Validator 8.0.1.Final
[INFO ] 04-03-2024 15:13:05.210 [main] TestSpringBootApplication - Starting TestSpringBootApplication using Java 17.0.10 with PID 2281855 (/home/dima/backend_microservice/UserProductsMicroService/target/classes started by dima in /home/dima/backend_microservice/UserProductsMicroService)
[INFO ] 04-03-2024 15:13:05.228 [main] TestSpringBootApplication - No active profile set, falling back to 1 default profile: "default"
[INFO ] 04-03-2024 15:13:06.983 [main] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
[INFO ] 04-03-2024 15:13:06.987 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data R2DBC repositories in DEFAULT mode.
[INFO ] 04-03-2024 15:13:07.439 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 439 ms. Found 1 R2DBC repository interfaces.
[INFO ] 04-03-2024 15:13:07.982 [main] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
[INFO ] 04-03-2024 15:13:07.984 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO ] 04-03-2024 15:13:08.024 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 21 ms. Found 0 JPA repository interfaces.
[ERROR] 04-03-2024 15:13:09.110 [main] AprLifecycleListener - An incompatible version [1.2.23] of the Apache Tomcat Native library is installed, while Tomcat requires version [1.2.34]
[INFO ] 04-03-2024 15:13:10.170 [main] TomcatWebServer - Tomcat initialized with port(s): 8300 (http)
[INFO ] 04-03-2024 15:13:10.194 [main] Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8300"]
[INFO ] 04-03-2024 15:13:10.201 [main] StandardService - Starting service [Tomcat]
[INFO ] 04-03-2024 15:13:10.202 [main] StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.11]
[INFO ] 04-03-2024 15:13:11.240 [main] TldScanner - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
[INFO ] 04-03-2024 15:13:11.259 [main] [/users_products_api] - Initializing Spring embedded WebApplicationContext
[INFO ] 04-03-2024 15:13:11.264 [main] ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 5889 ms
[INFO ] 04-03-2024 15:13:12.662 [main] Version - HHH000412: Hibernate ORM core version 6.2.6.Final
[INFO ] 04-03-2024 15:13:12.668 [main] Environment - HHH000406: Using bytecode reflection optimizer
[DEBUG] 04-03-2024 15:13:13.012 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@ba562e0
[DEBUG] 04-03-2024 15:13:13.013 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@ba562e0
[DEBUG] 04-03-2024 15:13:13.013 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@ba562e0
[DEBUG] 04-03-2024 15:13:13.014 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@5a51336a
[DEBUG] 04-03-2024 15:13:13.014 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@5a51336a
[DEBUG] 04-03-2024 15:13:13.015 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@4d8056bf
[DEBUG] 04-03-2024 15:13:13.015 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@4d8056bf
[DEBUG] 04-03-2024 15:13:13.016 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@42211e04
[DEBUG] 04-03-2024 15:13:13.016 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@42211e04
[DEBUG] 04-03-2024 15:13:13.017 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@6233c6c2
[DEBUG] 04-03-2024 15:13:13.017 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@6233c6c2
[DEBUG] 04-03-2024 15:13:13.018 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@6233c6c2
[DEBUG] 04-03-2024 15:13:13.018 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@312a738d
[DEBUG] 04-03-2024 15:13:13.019 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@312a738d
[DEBUG] 04-03-2024 15:13:13.019 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@312a738d
[DEBUG] 04-03-2024 15:13:13.020 [main] BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@7e50eeb9
[DEBUG] 04-03-2024 15:13:13.020 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@7e50eeb9
[DEBUG] 04-03-2024 15:13:13.020 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@34cb0e49
[DEBUG] 04-03-2024 15:13:13.021 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@48b2dbc4
[DEBUG] 04-03-2024 15:13:13.021 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@48b2dbc4
[DEBUG] 04-03-2024 15:13:13.022 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@2a667f44
[DEBUG] 04-03-2024 15:13:13.023 [main] BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@53ba7997
[DEBUG] 04-03-2024 15:13:13.023 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@3f6f9cef
[DEBUG] 04-03-2024 15:13:13.024 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@3f6f9cef
[DEBUG] 04-03-2024 15:13:13.024 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@3f6f9cef
[DEBUG] 04-03-2024 15:13:13.025 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@61dd1c3d
[DEBUG] 04-03-2024 15:13:13.025 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@61dd1c3d
[DEBUG] 04-03-2024 15:13:13.026 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@61dd1c3d
[DEBUG] 04-03-2024 15:13:13.026 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@7858d31d
[DEBUG] 04-03-2024 15:13:13.026 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@7858d31d
[DEBUG] 04-03-2024 15:13:13.027 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@7858d31d
[DEBUG] 04-03-2024 15:13:13.027 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@782e6b40
[DEBUG] 04-03-2024 15:13:13.028 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@782e6b40
[DEBUG] 04-03-2024 15:13:13.028 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@782e6b40
[DEBUG] 04-03-2024 15:13:13.029 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@3b65084e
[DEBUG] 04-03-2024 15:13:13.029 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@3b65084e
[DEBUG] 04-03-2024 15:13:13.029 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@3b65084e
[DEBUG] 04-03-2024 15:13:13.030 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@32d0d7eb
[DEBUG] 04-03-2024 15:13:13.030 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@32d0d7eb
[DEBUG] 04-03-2024 15:13:13.030 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@cae2a97
[DEBUG] 04-03-2024 15:13:13.031 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@cae2a97
[DEBUG] 04-03-2024 15:13:13.031 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@7d12429
[DEBUG] 04-03-2024 15:13:13.031 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@7d12429
[DEBUG] 04-03-2024 15:13:13.032 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@7d12429
[DEBUG] 04-03-2024 15:13:13.032 [main] BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@14656be5
[DEBUG] 04-03-2024 15:13:13.033 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@20be890d
[DEBUG] 04-03-2024 15:13:13.033 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@20be890d
[DEBUG] 04-03-2024 15:13:13.034 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@5db9f51f
[DEBUG] 04-03-2024 15:13:13.034 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@534762ed
[DEBUG] 04-03-2024 15:13:13.034 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@534762ed
[DEBUG] 04-03-2024 15:13:13.035 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@534762ed
[DEBUG] 04-03-2024 15:13:13.035 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@6c421123
[DEBUG] 04-03-2024 15:13:13.035 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@38e00b47
[DEBUG] 04-03-2024 15:13:13.036 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@2a631049
[DEBUG] 04-03-2024 15:13:13.036 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@425b5fe2
[DEBUG] 04-03-2024 15:13:13.036 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@425b5fe2
[DEBUG] 04-03-2024 15:13:13.037 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@3eec8583
[DEBUG] 04-03-2024 15:13:13.037 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@3eec8583
[DEBUG] 04-03-2024 15:13:13.038 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@66e1b2a
[DEBUG] 04-03-2024 15:13:13.038 [main] BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@343db2f6
[DEBUG] 04-03-2024 15:13:13.038 [main] BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@2c815fdc
[DEBUG] 04-03-2024 15:13:13.039 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@769b0752
[DEBUG] 04-03-2024 15:13:13.039 [main] BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@dae5e0
[DEBUG] 04-03-2024 15:13:13.039 [main] BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@59a94d0f
[DEBUG] 04-03-2024 15:13:13.040 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@7ff09659
[DEBUG] 04-03-2024 15:13:13.040 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@7ff09659
[DEBUG] 04-03-2024 15:13:13.041 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@517fbf62
[DEBUG] 04-03-2024 15:13:13.041 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@517fbf62
[DEBUG] 04-03-2024 15:13:13.041 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@65db548
[DEBUG] 04-03-2024 15:13:13.042 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@65db548
[DEBUG] 04-03-2024 15:13:13.042 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@150f41b9
[DEBUG] 04-03-2024 15:13:13.043 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@150f41b9
[DEBUG] 04-03-2024 15:13:13.043 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@6e364f1f
[DEBUG] 04-03-2024 15:13:13.043 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@6e364f1f
[DEBUG] 04-03-2024 15:13:13.044 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@429e7914
[DEBUG] 04-03-2024 15:13:13.044 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@298263fa
[DEBUG] 04-03-2024 15:13:13.044 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@466fedfa
[DEBUG] 04-03-2024 15:13:13.045 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@466fedfa
[DEBUG] 04-03-2024 15:13:13.045 [main] BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@1a7d0c9f
[DEBUG] 04-03-2024 15:13:13.045 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2b1a901d
[DEBUG] 04-03-2024 15:13:13.046 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@11bdab37
[DEBUG] 04-03-2024 15:13:13.046 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@280484c7
[DEBUG] 04-03-2024 15:13:13.046 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@280484c7
[DEBUG] 04-03-2024 15:13:13.047 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@5a6f6cac
[DEBUG] 04-03-2024 15:13:13.047 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@258a8584
[DEBUG] 04-03-2024 15:13:13.047 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@59127611
[DEBUG] 04-03-2024 15:13:13.048 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@59127611
[DEBUG] 04-03-2024 15:13:13.048 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@553ce348
[DEBUG] 04-03-2024 15:13:13.048 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@553ce348
[DEBUG] 04-03-2024 15:13:13.049 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@7417ef4f
[DEBUG] 04-03-2024 15:13:13.049 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@7417ef4f
[DEBUG] 04-03-2024 15:13:13.049 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@7417ef4f
[DEBUG] 04-03-2024 15:13:13.050 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@5c0e2ec
[DEBUG] 04-03-2024 15:13:13.050 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@5c0e2ec
[DEBUG] 04-03-2024 15:13:13.051 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@5c0e2ec
[DEBUG] 04-03-2024 15:13:13.051 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@4fa8bebb
[DEBUG] 04-03-2024 15:13:13.051 [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@7d3c22a5
[DEBUG] 04-03-2024 15:13:13.051 [main] BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@369ad7da
[DEBUG] 04-03-2024 15:13:13.052 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@369ad7da
[DEBUG] 04-03-2024 15:13:13.052 [main] BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@344f9467
[DEBUG] 04-03-2024 15:13:13.052 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@344f9467
[DEBUG] 04-03-2024 15:13:13.053 [main] BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@344f9467
[DEBUG] 04-03-2024 15:13:13.053 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@3e98b933
[DEBUG] 04-03-2024 15:13:13.053 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@222d9d4f
[DEBUG] 04-03-2024 15:13:13.054 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@4269aad7
[DEBUG] 04-03-2024 15:13:13.054 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@4269aad7
[DEBUG] 04-03-2024 15:13:13.054 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@a4df251
[DEBUG] 04-03-2024 15:13:13.055 [main] BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@a4df251
[DEBUG] 04-03-2024 15:13:13.055 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@a4df251
[DEBUG] 04-03-2024 15:13:13.056 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@71e7830a
[DEBUG] 04-03-2024 15:13:13.056 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@71e7830a
[DEBUG] 04-03-2024 15:13:13.056 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@3feebf9c
[DEBUG] 04-03-2024 15:13:13.056 [main] BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@3feebf9c
[DEBUG] 04-03-2024 15:13:13.057 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@305e95a4
[DEBUG] 04-03-2024 15:13:13.057 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@305e95a4
[DEBUG] 04-03-2024 15:13:13.057 [main] BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@55e42684
[DEBUG] 04-03-2024 15:13:13.058 [main] BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@55e42684
[DEBUG] 04-03-2024 15:13:13.058 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@18d610e1
[DEBUG] 04-03-2024 15:13:13.058 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@18d610e1
[DEBUG] 04-03-2024 15:13:13.059 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@528e5e38
[DEBUG] 04-03-2024 15:13:13.071 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@536da29c
[DEBUG] 04-03-2024 15:13:13.072 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@536da29c
[DEBUG] 04-03-2024 15:13:13.074 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@57b1ec84
[DEBUG] 04-03-2024 15:13:13.075 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@3c27f72
[DEBUG] 04-03-2024 15:13:13.075 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@5cbe95b1
[DEBUG] 04-03-2024 15:13:13.076 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@28fa541
[DEBUG] 04-03-2024 15:13:13.076 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@5a82bc58
[DEBUG] 04-03-2024 15:13:13.076 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@4aab7195
[DEBUG] 04-03-2024 15:13:13.076 [main] BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@6210666c
[DEBUG] 04-03-2024 15:13:13.077 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@1dca62c2
[DEBUG] 04-03-2024 15:13:13.077 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@52657d5f
[DEBUG] 04-03-2024 15:13:14.105 [main] DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2a6dbb7c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5178345d)
[DEBUG] 04-03-2024 15:13:14.111 [main] JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
[DEBUG] 04-03-2024 15:13:14.111 [main] JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 04-03-2024 15:13:14.154 [main] BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@2474df51
[DEBUG] 04-03-2024 15:13:14.155 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@2474df51
[DEBUG] 04-03-2024 15:13:14.155 [main] BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@536da29c`
[DEBUG] 04-03-2024 15:13:14.158 [main] JdbcTypeRegistry - addDescriptor(3100, NumericTypeDescriptor) replaced previous registration(org.hibernate.dialect.PostgreSQLIntervalSecondJdbcType@32e7b78d)
[DEBUG] 04-03-2024 15:13:14.172 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 04-03-2024 15:13:14.173 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 04-03-2024 15:13:14.173 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 04-03-2024 15:13:14.173 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 04-03-2024 15:13:14.174 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 04-03-2024 15:13:14.174 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 04-03-2024 15:13:14.176 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 04-03-2024 15:13:14.176 [main] BasicTypeRegistry - Adding type registration OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 04-03-2024 15:13:14.177 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 04-03-2024 15:13:14.179 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@68f2363] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@37fca349]
[WARN ] 04-03-2024 15:13:14.553 [main] InFlightMetadataCollectorImpl - HHH000069: Duplicate generator name generator
[INFO ] 04-03-2024 15:13:14.729 [main] BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
[INFO ] 04-03-2024 15:13:17.535 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 04-03-2024 15:13:17.537 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@68f2363] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@45ecdd32]
[TRACE] 04-03-2024 15:13:17.544 [main] TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@45ecdd32] for TypeConfiguration
[WARN ] 04-03-2024 15:13:17.905 [main] JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[INFO ] 04-03-2024 15:13:19.264 [main] Http11NioProtocol - Starting ProtocolHandler ["http-nio-8300"]
[INFO ] 04-03-2024 15:13:19.397 [main] TomcatWebServer - Tomcat started on port(s): 8300 (http) with context path '/users_products_api'
[INFO ] 04-03-2024 15:13:19.433 [main] TestSpringBootApplication - Started TestSpringBootApplication in 15.172 seconds (process running for 17.679)
[INFO ] 04-03-2024 15:13:25.315 [http-nio-8300-exec-1] [/users_products_api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[INFO ] 04-03-2024 15:13:25.316 [http-nio-8300-exec-1] DispatcherServlet - Initializing Servlet 'dispatcherServlet'
[INFO ] 04-03-2024 15:13:25.320 [http-nio-8300-exec-1] DispatcherServlet - Completed initialization in 3 ms
[TRACE] 04-03-2024 15:32:21.966 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@45ecdd32] for TypeConfiguration
[DEBUG] 04-03-2024 15:32:21.986 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@24b2838f] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@45ecdd32]
[INFO ] 04-03-2024 15:32:33.560 [background-preinit] Version - HV000001: Hibernate Validator 8.0.1.Final
[INFO ] 04-03-2024 15:32:33.827 [main] TestSpringBootApplication - Starting TestSpringBootApplication using Java 17.0.10 with PID 2291582 (/home/dima/backend_microservice/UserProductsMicroService/target/classes started by dima in /home/dima/backend_microservice/UserProductsMicroService)
[INFO ] 04-03-2024 15:32:33.841 [main] TestSpringBootApplication - No active profile set, falling back to 1 default profile: "default"
[INFO ] 04-03-2024 15:32:36.972 [main] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
[INFO ] 04-03-2024 15:32:36.976 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data R2DBC repositories in DEFAULT mode.
[INFO ] 04-03-2024 15:32:37.452 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 460 ms. Found 1 R2DBC repository interfaces.
[INFO ] 04-03-2024 15:32:38.374 [main] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
[INFO ] 04-03-2024 15:32:38.378 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO ] 04-03-2024 15:32:38.410 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 22 ms. Found 0 JPA repository interfaces.
[ERROR] 04-03-2024 15:32:39.620 [main] AprLifecycleListener - An incompatible version [1.2.23] of the Apache Tomcat Native library is installed, while Tomcat requires version [1.2.34]
[INFO ] 04-03-2024 15:32:40.615 [main] TomcatWebServer - Tomcat initialized with port(s): 8300 (http)
[INFO ] 04-03-2024 15:32:40.648 [main] Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8300"]
[INFO ] 04-03-2024 15:32:40.674 [main] StandardService - Starting service [Tomcat]
[INFO ] 04-03-2024 15:32:40.675 [main] StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.11]
[INFO ] 04-03-2024 15:32:41.848 [main] TldScanner - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
[INFO ] 04-03-2024 15:32:41.867 [main] [/users_products_api] - Initializing Spring embedded WebApplicationContext
[INFO ] 04-03-2024 15:32:41.872 [main] ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 7722 ms
[INFO ] 04-03-2024 15:32:43.219 [main] Version - HHH000412: Hibernate ORM core version 6.2.6.Final
[INFO ] 04-03-2024 15:32:43.228 [main] Environment - HHH000406: Using bytecode reflection optimizer
[DEBUG] 04-03-2024 15:32:44.074 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@6233c6c2
[DEBUG] 04-03-2024 15:32:44.075 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@6233c6c2
[DEBUG] 04-03-2024 15:32:44.075 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@6233c6c2
[DEBUG] 04-03-2024 15:32:44.076 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@312a738d
[DEBUG] 04-03-2024 15:32:44.076 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@312a738d
[DEBUG] 04-03-2024 15:32:44.077 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@7e50eeb9
[DEBUG] 04-03-2024 15:32:44.077 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@7e50eeb9
[DEBUG] 04-03-2024 15:32:44.078 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@34cb0e49
[DEBUG] 04-03-2024 15:32:44.079 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@34cb0e49
[DEBUG] 04-03-2024 15:32:44.079 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@48b2dbc4
[DEBUG] 04-03-2024 15:32:44.079 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@48b2dbc4
[DEBUG] 04-03-2024 15:32:44.080 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@48b2dbc4
[DEBUG] 04-03-2024 15:32:44.081 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@2a667f44
[DEBUG] 04-03-2024 15:32:44.081 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@2a667f44
[DEBUG] 04-03-2024 15:32:44.081 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@2a667f44
[DEBUG] 04-03-2024 15:32:44.082 [main] BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@53ba7997
[DEBUG] 04-03-2024 15:32:44.082 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@53ba7997
[DEBUG] 04-03-2024 15:32:44.083 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@3f6f9cef
[DEBUG] 04-03-2024 15:32:44.083 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@61dd1c3d
[DEBUG] 04-03-2024 15:32:44.084 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@61dd1c3d
[DEBUG] 04-03-2024 15:32:44.084 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@7858d31d
[DEBUG] 04-03-2024 15:32:44.085 [main] BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@782e6b40
[DEBUG] 04-03-2024 15:32:44.085 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@3b65084e
[DEBUG] 04-03-2024 15:32:44.085 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@3b65084e
[DEBUG] 04-03-2024 15:32:44.086 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@3b65084e
[DEBUG] 04-03-2024 15:32:44.086 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@32d0d7eb
[DEBUG] 04-03-2024 15:32:44.087 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@32d0d7eb
[DEBUG] 04-03-2024 15:32:44.088 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@32d0d7eb
[DEBUG] 04-03-2024 15:32:44.088 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@cae2a97
[DEBUG] 04-03-2024 15:32:44.088 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@cae2a97
[DEBUG] 04-03-2024 15:32:44.089 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@cae2a97
[DEBUG] 04-03-2024 15:32:44.089 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@7d12429
[DEBUG] 04-03-2024 15:32:44.090 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@7d12429
[DEBUG] 04-03-2024 15:32:44.090 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@7d12429
[DEBUG] 04-03-2024 15:32:44.091 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@14656be5
[DEBUG] 04-03-2024 15:32:44.091 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@14656be5
[DEBUG] 04-03-2024 15:32:44.091 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@14656be5
[DEBUG] 04-03-2024 15:32:44.092 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@20be890d
[DEBUG] 04-03-2024 15:32:44.092 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@20be890d
[DEBUG] 04-03-2024 15:32:44.092 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@5db9f51f
[DEBUG] 04-03-2024 15:32:44.093 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@5db9f51f
[DEBUG] 04-03-2024 15:32:44.093 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@534762ed
[DEBUG] 04-03-2024 15:32:44.093 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@534762ed
[DEBUG] 04-03-2024 15:32:44.094 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@534762ed
[DEBUG] 04-03-2024 15:32:44.094 [main] BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@6c421123
[DEBUG] 04-03-2024 15:32:44.095 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@38e00b47
[DEBUG] 04-03-2024 15:32:44.095 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@38e00b47
[DEBUG] 04-03-2024 15:32:44.096 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@2a631049
[DEBUG] 04-03-2024 15:32:44.096 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@425b5fe2
[DEBUG] 04-03-2024 15:32:44.096 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@425b5fe2
[DEBUG] 04-03-2024 15:32:44.097 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@425b5fe2
[DEBUG] 04-03-2024 15:32:44.097 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@3eec8583
[DEBUG] 04-03-2024 15:32:44.097 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@66e1b2a
[DEBUG] 04-03-2024 15:32:44.098 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@343db2f6
[DEBUG] 04-03-2024 15:32:44.098 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@2c815fdc
[DEBUG] 04-03-2024 15:32:44.098 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@2c815fdc
[DEBUG] 04-03-2024 15:32:44.099 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@769b0752
[DEBUG] 04-03-2024 15:32:44.099 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@769b0752
[DEBUG] 04-03-2024 15:32:44.099 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@dae5e0
[DEBUG] 04-03-2024 15:32:44.100 [main] BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@59a94d0f
[DEBUG] 04-03-2024 15:32:44.100 [main] BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@7ff09659
[DEBUG] 04-03-2024 15:32:44.100 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@517fbf62
[DEBUG] 04-03-2024 15:32:44.101 [main] BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@65db548
[DEBUG] 04-03-2024 15:32:44.101 [main] BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@150f41b9
[DEBUG] 04-03-2024 15:32:44.101 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@6e364f1f
[DEBUG] 04-03-2024 15:32:44.102 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@6e364f1f
[DEBUG] 04-03-2024 15:32:44.102 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@429e7914
[DEBUG] 04-03-2024 15:32:44.102 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@429e7914
[DEBUG] 04-03-2024 15:32:44.103 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@298263fa
[DEBUG] 04-03-2024 15:32:44.103 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@298263fa
[DEBUG] 04-03-2024 15:32:44.103 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@466fedfa
[DEBUG] 04-03-2024 15:32:44.104 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@466fedfa
[DEBUG] 04-03-2024 15:32:44.104 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@1a7d0c9f
[DEBUG] 04-03-2024 15:32:44.104 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@1a7d0c9f
[DEBUG] 04-03-2024 15:32:44.105 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2b1a901d
[DEBUG] 04-03-2024 15:32:44.105 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@11bdab37
[DEBUG] 04-03-2024 15:32:44.106 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@280484c7
[DEBUG] 04-03-2024 15:32:44.107 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@280484c7
[DEBUG] 04-03-2024 15:32:44.107 [main] BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@5a6f6cac
[DEBUG] 04-03-2024 15:32:44.107 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@258a8584
[DEBUG] 04-03-2024 15:32:44.108 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@59127611
[DEBUG] 04-03-2024 15:32:44.108 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@553ce348
[DEBUG] 04-03-2024 15:32:44.108 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@553ce348
[DEBUG] 04-03-2024 15:32:44.109 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@7417ef4f
[DEBUG] 04-03-2024 15:32:44.109 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@5c0e2ec
[DEBUG] 04-03-2024 15:32:44.109 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@4fa8bebb
[DEBUG] 04-03-2024 15:32:44.109 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@4fa8bebb
[DEBUG] 04-03-2024 15:32:44.110 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@7d3c22a5
[DEBUG] 04-03-2024 15:32:44.110 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@7d3c22a5
[DEBUG] 04-03-2024 15:32:44.110 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@369ad7da
[DEBUG] 04-03-2024 15:32:44.111 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@369ad7da
[DEBUG] 04-03-2024 15:32:44.111 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@369ad7da
[DEBUG] 04-03-2024 15:32:44.112 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@344f9467
[DEBUG] 04-03-2024 15:32:44.112 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@344f9467
[DEBUG] 04-03-2024 15:32:44.112 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@344f9467
[DEBUG] 04-03-2024 15:32:44.112 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@3e98b933
[DEBUG] 04-03-2024 15:32:44.113 [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@222d9d4f
[DEBUG] 04-03-2024 15:32:44.133 [main] BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@4269aad7
[DEBUG] 04-03-2024 15:32:44.133 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@4269aad7
[DEBUG] 04-03-2024 15:32:44.134 [main] BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@a4df251
[DEBUG] 04-03-2024 15:32:44.134 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@a4df251
[DEBUG] 04-03-2024 15:32:44.135 [main] BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@a4df251
[DEBUG] 04-03-2024 15:32:44.135 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@71e7830a
[DEBUG] 04-03-2024 15:32:44.135 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@3feebf9c
[DEBUG] 04-03-2024 15:32:44.136 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@305e95a4
[DEBUG] 04-03-2024 15:32:44.136 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@305e95a4
[DEBUG] 04-03-2024 15:32:44.136 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@55e42684
[DEBUG] 04-03-2024 15:32:44.137 [main] BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@55e42684
[DEBUG] 04-03-2024 15:32:44.147 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@55e42684
[DEBUG] 04-03-2024 15:32:44.149 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@18d610e1
[DEBUG] 04-03-2024 15:32:44.150 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@18d610e1
[DEBUG] 04-03-2024 15:32:44.150 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@528e5e38
[DEBUG] 04-03-2024 15:32:44.150 [main] BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@528e5e38
[DEBUG] 04-03-2024 15:32:44.151 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@16391278
[DEBUG] 04-03-2024 15:32:44.151 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@16391278
[DEBUG] 04-03-2024 15:32:44.151 [main] BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@621dc63d
[DEBUG] 04-03-2024 15:32:44.152 [main] BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@621dc63d
[DEBUG] 04-03-2024 15:32:44.152 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@4ae49387
[DEBUG] 04-03-2024 15:32:44.152 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@4ae49387
[DEBUG] 04-03-2024 15:32:44.152 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@6abb7b7d
[DEBUG] 04-03-2024 15:32:44.186 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@4cb4c4cc
[DEBUG] 04-03-2024 15:32:44.187 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@4cb4c4cc
[DEBUG] 04-03-2024 15:32:44.190 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@5a82bc58
[DEBUG] 04-03-2024 15:32:44.192 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@4aab7195
[DEBUG] 04-03-2024 15:32:44.193 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@6210666c
[DEBUG] 04-03-2024 15:32:44.195 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@1dca62c2
[DEBUG] 04-03-2024 15:32:44.195 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@52657d5f
[DEBUG] 04-03-2024 15:32:44.196 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@43d3995f
[DEBUG] 04-03-2024 15:32:44.196 [main] BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@2211b44f
[DEBUG] 04-03-2024 15:32:44.197 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@6c830ebd
[DEBUG] 04-03-2024 15:32:44.197 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@15f519f7
[DEBUG] 04-03-2024 15:32:45.750 [main] DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@377e90b0) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@27b490de)
[DEBUG] 04-03-2024 15:32:45.756 [main] JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
[DEBUG] 04-03-2024 15:32:45.756 [main] JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 04-03-2024 15:32:45.782 [main] BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@3c97f5e9
[DEBUG] 04-03-2024 15:32:45.783 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@3c97f5e9
[DEBUG] 04-03-2024 15:32:45.784 [main] BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@4cb4c4cc`
[DEBUG] 04-03-2024 15:32:45.787 [main] JdbcTypeRegistry - addDescriptor(3100, NumericTypeDescriptor) replaced previous registration(org.hibernate.dialect.PostgreSQLIntervalSecondJdbcType@2ec92631)
[DEBUG] 04-03-2024 15:32:45.804 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 04-03-2024 15:32:45.804 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 04-03-2024 15:32:45.805 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 04-03-2024 15:32:45.805 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 04-03-2024 15:32:45.805 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 04-03-2024 15:32:45.806 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 04-03-2024 15:32:45.808 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 04-03-2024 15:32:45.808 [main] BasicTypeRegistry - Adding type registration OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 04-03-2024 15:32:45.809 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 04-03-2024 15:32:45.812 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@37fca349] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@86377d5]
[WARN ] 04-03-2024 15:32:46.308 [main] InFlightMetadataCollectorImpl - HHH000069: Duplicate generator name generator
[INFO ] 04-03-2024 15:32:46.483 [main] BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
[INFO ] 04-03-2024 15:32:49.480 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 04-03-2024 15:32:49.482 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@37fca349] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@2370c90]
[TRACE] 04-03-2024 15:32:49.489 [main] TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@2370c90] for TypeConfiguration
[WARN ] 04-03-2024 15:32:49.960 [main] JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[INFO ] 04-03-2024 15:32:50.913 [main] Http11NioProtocol - Starting ProtocolHandler ["http-nio-8300"]
[INFO ] 04-03-2024 15:32:50.979 [main] TomcatWebServer - Tomcat started on port(s): 8300 (http) with context path '/users_products_api'
[INFO ] 04-03-2024 15:32:51.008 [main] TestSpringBootApplication - Started TestSpringBootApplication in 18.833 seconds (process running for 21.882)
[INFO ] 04-03-2024 15:32:58.506 [http-nio-8300-exec-1] [/users_products_api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[INFO ] 04-03-2024 15:32:58.507 [http-nio-8300-exec-1] DispatcherServlet - Initializing Servlet 'dispatcherServlet'
[INFO ] 04-03-2024 15:32:58.512 [http-nio-8300-exec-1] DispatcherServlet - Completed initialization in 4 ms
[TRACE] 04-03-2024 15:34:17.818 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@2370c90] for TypeConfiguration
[DEBUG] 04-03-2024 15:34:17.818 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@1e9a6b41] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@2370c90]
[INFO ] 04-03-2024 15:34:29.384 [background-preinit] Version - HV000001: Hibernate Validator 8.0.1.Final
[INFO ] 04-03-2024 15:34:29.537 [main] TestSpringBootApplication - Starting TestSpringBootApplication using Java 17.0.10 with PID 2292632 (/home/dima/backend_microservice/UserProductsMicroService/target/classes started by dima in /home/dima/backend_microservice/UserProductsMicroService)
[INFO ] 04-03-2024 15:34:29.551 [main] TestSpringBootApplication - No active profile set, falling back to 1 default profile: "default"
[INFO ] 04-03-2024 15:34:31.672 [main] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
[INFO ] 04-03-2024 15:34:31.674 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data R2DBC repositories in DEFAULT mode.
[INFO ] 04-03-2024 15:34:32.274 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 586 ms. Found 1 R2DBC repository interfaces.
[INFO ] 04-03-2024 15:34:32.836 [main] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
[INFO ] 04-03-2024 15:34:32.839 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO ] 04-03-2024 15:34:32.868 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 19 ms. Found 0 JPA repository interfaces.
[ERROR] 04-03-2024 15:34:33.904 [main] AprLifecycleListener - An incompatible version [1.2.23] of the Apache Tomcat Native library is installed, while Tomcat requires version [1.2.34]
[INFO ] 04-03-2024 15:34:34.634 [main] TomcatWebServer - Tomcat initialized with port(s): 8300 (http)
[INFO ] 04-03-2024 15:34:34.657 [main] Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8300"]
[INFO ] 04-03-2024 15:34:34.666 [main] StandardService - Starting service [Tomcat]
[INFO ] 04-03-2024 15:34:34.667 [main] StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.11]
[INFO ] 04-03-2024 15:34:35.700 [main] TldScanner - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
[INFO ] 04-03-2024 15:34:35.718 [main] [/users_products_api] - Initializing Spring embedded WebApplicationContext
[INFO ] 04-03-2024 15:34:35.723 [main] ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 5945 ms
[INFO ] 04-03-2024 15:34:37.972 [main] Version - HHH000412: Hibernate ORM core version 6.2.6.Final
[INFO ] 04-03-2024 15:34:37.979 [main] Environment - HHH000406: Using bytecode reflection optimizer
[DEBUG] 04-03-2024 15:34:38.493 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@20be890d
[DEBUG] 04-03-2024 15:34:38.493 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@20be890d
[DEBUG] 04-03-2024 15:34:38.494 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@20be890d
[DEBUG] 04-03-2024 15:34:38.494 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@5db9f51f
[DEBUG] 04-03-2024 15:34:38.495 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@5db9f51f
[DEBUG] 04-03-2024 15:34:38.495 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@534762ed
[DEBUG] 04-03-2024 15:34:38.496 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@534762ed
[DEBUG] 04-03-2024 15:34:38.496 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@6c421123
[DEBUG] 04-03-2024 15:34:38.496 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@6c421123
[DEBUG] 04-03-2024 15:34:38.497 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@38e00b47
[DEBUG] 04-03-2024 15:34:38.497 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@38e00b47
[DEBUG] 04-03-2024 15:34:38.498 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@38e00b47
[DEBUG] 04-03-2024 15:34:38.498 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@2a631049
[DEBUG] 04-03-2024 15:34:38.499 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@2a631049
[DEBUG] 04-03-2024 15:34:38.499 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@2a631049
[DEBUG] 04-03-2024 15:34:38.499 [main] BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@425b5fe2
[DEBUG] 04-03-2024 15:34:38.500 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@425b5fe2
[DEBUG] 04-03-2024 15:34:38.500 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@3eec8583
[DEBUG] 04-03-2024 15:34:38.501 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@66e1b2a
[DEBUG] 04-03-2024 15:34:38.501 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@66e1b2a
[DEBUG] 04-03-2024 15:34:38.502 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@343db2f6
[DEBUG] 04-03-2024 15:34:38.502 [main] BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@2c815fdc
[DEBUG] 04-03-2024 15:34:38.503 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@769b0752
[DEBUG] 04-03-2024 15:34:38.503 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@769b0752
[DEBUG] 04-03-2024 15:34:38.503 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@769b0752
[DEBUG] 04-03-2024 15:34:38.504 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@dae5e0
[DEBUG] 04-03-2024 15:34:38.504 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@dae5e0
[DEBUG] 04-03-2024 15:34:38.505 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@dae5e0
[DEBUG] 04-03-2024 15:34:38.505 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@59a94d0f
[DEBUG] 04-03-2024 15:34:38.506 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@59a94d0f
[DEBUG] 04-03-2024 15:34:38.506 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@59a94d0f
[DEBUG] 04-03-2024 15:34:38.507 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@7ff09659
[DEBUG] 04-03-2024 15:34:38.507 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@7ff09659
[DEBUG] 04-03-2024 15:34:38.507 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@7ff09659
[DEBUG] 04-03-2024 15:34:38.508 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@517fbf62
[DEBUG] 04-03-2024 15:34:38.508 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@517fbf62
[DEBUG] 04-03-2024 15:34:38.509 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@517fbf62
[DEBUG] 04-03-2024 15:34:38.509 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@65db548
[DEBUG] 04-03-2024 15:34:38.509 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@65db548
[DEBUG] 04-03-2024 15:34:38.510 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@150f41b9
[DEBUG] 04-03-2024 15:34:38.510 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@150f41b9
[DEBUG] 04-03-2024 15:34:38.510 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@6e364f1f
[DEBUG] 04-03-2024 15:34:38.511 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@6e364f1f
[DEBUG] 04-03-2024 15:34:38.511 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@6e364f1f
[DEBUG] 04-03-2024 15:34:38.511 [main] BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@429e7914
[DEBUG] 04-03-2024 15:34:38.512 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@298263fa
[DEBUG] 04-03-2024 15:34:38.512 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@298263fa
[DEBUG] 04-03-2024 15:34:38.513 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@466fedfa
[DEBUG] 04-03-2024 15:34:38.513 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@1a7d0c9f
[DEBUG] 04-03-2024 15:34:38.513 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@1a7d0c9f
[DEBUG] 04-03-2024 15:34:38.514 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@1a7d0c9f
[DEBUG] 04-03-2024 15:34:38.514 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@2b1a901d
[DEBUG] 04-03-2024 15:34:38.514 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@11bdab37
[DEBUG] 04-03-2024 15:34:38.515 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@280484c7
[DEBUG] 04-03-2024 15:34:38.515 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@5a6f6cac
[DEBUG] 04-03-2024 15:34:38.515 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@5a6f6cac
[DEBUG] 04-03-2024 15:34:38.516 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@258a8584
[DEBUG] 04-03-2024 15:34:38.516 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@258a8584
[DEBUG] 04-03-2024 15:34:38.516 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@59127611
[DEBUG] 04-03-2024 15:34:38.517 [main] BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@553ce348
[DEBUG] 04-03-2024 15:34:38.517 [main] BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@7417ef4f
[DEBUG] 04-03-2024 15:34:38.517 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@5c0e2ec
[DEBUG] 04-03-2024 15:34:38.517 [main] BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@4fa8bebb
[DEBUG] 04-03-2024 15:34:38.518 [main] BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@7d3c22a5
[DEBUG] 04-03-2024 15:34:38.518 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@369ad7da
[DEBUG] 04-03-2024 15:34:38.518 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@369ad7da
[DEBUG] 04-03-2024 15:34:38.519 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@344f9467
[DEBUG] 04-03-2024 15:34:38.519 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@344f9467
[DEBUG] 04-03-2024 15:34:38.519 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@3e98b933
[DEBUG] 04-03-2024 15:34:38.520 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@3e98b933
[DEBUG] 04-03-2024 15:34:38.520 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@222d9d4f
[DEBUG] 04-03-2024 15:34:38.520 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@222d9d4f
[DEBUG] 04-03-2024 15:34:38.520 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@4269aad7
[DEBUG] 04-03-2024 15:34:38.521 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@4269aad7
[DEBUG] 04-03-2024 15:34:38.521 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@a4df251
[DEBUG] 04-03-2024 15:34:38.521 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@71e7830a
[DEBUG] 04-03-2024 15:34:38.522 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@3feebf9c
[DEBUG] 04-03-2024 15:34:38.522 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@3feebf9c
[DEBUG] 04-03-2024 15:34:38.522 [main] BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@305e95a4
[DEBUG] 04-03-2024 15:34:38.522 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@55e42684
[DEBUG] 04-03-2024 15:34:38.523 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@18d610e1
[DEBUG] 04-03-2024 15:34:38.523 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@528e5e38
[DEBUG] 04-03-2024 15:34:38.523 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@528e5e38
[DEBUG] 04-03-2024 15:34:38.524 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@16391278
[DEBUG] 04-03-2024 15:34:38.524 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@621dc63d
[DEBUG] 04-03-2024 15:34:38.524 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@4ae49387
[DEBUG] 04-03-2024 15:34:38.524 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@4ae49387
[DEBUG] 04-03-2024 15:34:38.525 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@6abb7b7d
[DEBUG] 04-03-2024 15:34:38.525 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@6abb7b7d
[DEBUG] 04-03-2024 15:34:38.525 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@34cf0e80
[DEBUG] 04-03-2024 15:34:38.526 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@34cf0e80
[DEBUG] 04-03-2024 15:34:38.526 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@34cf0e80
[DEBUG] 04-03-2024 15:34:38.526 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@38ef1a0a
[DEBUG] 04-03-2024 15:34:38.527 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@38ef1a0a
[DEBUG] 04-03-2024 15:34:38.527 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@38ef1a0a
[DEBUG] 04-03-2024 15:34:38.527 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@56f9de3b
[DEBUG] 04-03-2024 15:34:38.528 [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@6728370a
[DEBUG] 04-03-2024 15:34:38.528 [main] BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@2b5f8e61
[DEBUG] 04-03-2024 15:34:38.528 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@2b5f8e61
[DEBUG] 04-03-2024 15:34:38.528 [main] BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@6ba0ee4a
[DEBUG] 04-03-2024 15:34:38.529 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@6ba0ee4a
[DEBUG] 04-03-2024 15:34:38.529 [main] BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@6ba0ee4a
[DEBUG] 04-03-2024 15:34:38.529 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@73b0ed03
[DEBUG] 04-03-2024 15:34:38.530 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@55061418
[DEBUG] 04-03-2024 15:34:38.530 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@27db45f
[DEBUG] 04-03-2024 15:34:38.530 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@27db45f
[DEBUG] 04-03-2024 15:34:38.531 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@6ec3d8e4
[DEBUG] 04-03-2024 15:34:38.531 [main] BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@6ec3d8e4
[DEBUG] 04-03-2024 15:34:38.531 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@6ec3d8e4
[DEBUG] 04-03-2024 15:34:38.532 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@1aeff8ca
[DEBUG] 04-03-2024 15:34:38.532 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@1aeff8ca
[DEBUG] 04-03-2024 15:34:38.533 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@7f2c995b
[DEBUG] 04-03-2024 15:34:38.533 [main] BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@7f2c995b
[DEBUG] 04-03-2024 15:34:38.533 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@101c15ad
[DEBUG] 04-03-2024 15:34:38.534 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@101c15ad
[DEBUG] 04-03-2024 15:34:38.534 [main] BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@6068ebb2
[DEBUG] 04-03-2024 15:34:38.534 [main] BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@6068ebb2
[DEBUG] 04-03-2024 15:34:38.535 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@5a466dd
[DEBUG] 04-03-2024 15:34:38.535 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@5a466dd
[DEBUG] 04-03-2024 15:34:38.535 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@1ed9d173
[DEBUG] 04-03-2024 15:34:38.551 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@43d3995f
[DEBUG] 04-03-2024 15:34:38.551 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@43d3995f
[DEBUG] 04-03-2024 15:34:38.554 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@6181bc4a
[DEBUG] 04-03-2024 15:34:38.555 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@70485aa
[DEBUG] 04-03-2024 15:34:38.555 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@4bf8b77
[DEBUG] 04-03-2024 15:34:38.556 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@e06ec83
[DEBUG] 04-03-2024 15:34:38.556 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@628962e5
[DEBUG] 04-03-2024 15:34:38.556 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@410382cb
[DEBUG] 04-03-2024 15:34:38.557 [main] BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@399f5daf
[DEBUG] 04-03-2024 15:34:38.557 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@c4cceb
[DEBUG] 04-03-2024 15:34:38.557 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@29f3185c
[DEBUG] 04-03-2024 15:34:39.883 [main] DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@395eb363) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1e194966)
[DEBUG] 04-03-2024 15:34:39.891 [main] JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
[DEBUG] 04-03-2024 15:34:39.892 [main] JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 04-03-2024 15:34:39.922 [main] BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@48aa0813
[DEBUG] 04-03-2024 15:34:39.923 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@48aa0813
[DEBUG] 04-03-2024 15:34:39.923 [main] BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@43d3995f`
[DEBUG] 04-03-2024 15:34:39.927 [main] JdbcTypeRegistry - addDescriptor(3100, NumericTypeDescriptor) replaced previous registration(org.hibernate.dialect.PostgreSQLIntervalSecondJdbcType@5c25daad)
[DEBUG] 04-03-2024 15:34:39.942 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 04-03-2024 15:34:39.942 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 04-03-2024 15:34:39.943 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 04-03-2024 15:34:39.943 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 04-03-2024 15:34:39.944 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 04-03-2024 15:34:39.944 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 04-03-2024 15:34:39.946 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 04-03-2024 15:34:39.947 [main] BasicTypeRegistry - Adding type registration OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 04-03-2024 15:34:39.947 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 04-03-2024 15:34:39.950 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@702cfbde] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@7d3bcd3]
[WARN ] 04-03-2024 15:34:40.390 [main] InFlightMetadataCollectorImpl - HHH000069: Duplicate generator name generator
[INFO ] 04-03-2024 15:34:40.549 [main] BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
[INFO ] 04-03-2024 15:34:44.163 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 04-03-2024 15:34:44.164 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@702cfbde] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@53c21c05]
[TRACE] 04-03-2024 15:34:44.172 [main] TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@53c21c05] for TypeConfiguration
[WARN ] 04-03-2024 15:34:44.553 [main] JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[INFO ] 04-03-2024 15:34:45.484 [main] Http11NioProtocol - Starting ProtocolHandler ["http-nio-8300"]
[INFO ] 04-03-2024 15:34:45.548 [main] TomcatWebServer - Tomcat started on port(s): 8300 (http) with context path '/users_products_api'
[INFO ] 04-03-2024 15:34:45.578 [main] TestSpringBootApplication - Started TestSpringBootApplication in 17.644 seconds (process running for 21.225)
[INFO ] 04-03-2024 15:34:47.953 [http-nio-8300-exec-1] [/users_products_api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[INFO ] 04-03-2024 15:34:47.954 [http-nio-8300-exec-1] DispatcherServlet - Initializing Servlet 'dispatcherServlet'
[INFO ] 04-03-2024 15:34:47.957 [http-nio-8300-exec-1] DispatcherServlet - Completed initialization in 3 ms
[TRACE] 04-03-2024 15:35:27.488 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@53c21c05] for TypeConfiguration
[DEBUG] 04-03-2024 15:35:27.497 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@42de1363] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@53c21c05]
[INFO ] 04-03-2024 15:35:39.069 [background-preinit] Version - HV000001: Hibernate Validator 8.0.1.Final
[INFO ] 04-03-2024 15:35:39.212 [main] TestSpringBootApplication - Starting TestSpringBootApplication using Java 17.0.10 with PID 2293337 (/home/dima/backend_microservice/UserProductsMicroService/target/classes started by dima in /home/dima/backend_microservice/UserProductsMicroService)
[INFO ] 04-03-2024 15:35:39.230 [main] TestSpringBootApplication - No active profile set, falling back to 1 default profile: "default"
[INFO ] 04-03-2024 15:35:41.679 [main] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
[INFO ] 04-03-2024 15:35:41.681 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data R2DBC repositories in DEFAULT mode.
[INFO ] 04-03-2024 15:35:42.225 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 529 ms. Found 1 R2DBC repository interfaces.
[INFO ] 04-03-2024 15:35:42.891 [main] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
[INFO ] 04-03-2024 15:35:42.893 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO ] 04-03-2024 15:35:42.932 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 29 ms. Found 0 JPA repository interfaces.
[ERROR] 04-03-2024 15:35:44.061 [main] AprLifecycleListener - An incompatible version [1.2.23] of the Apache Tomcat Native library is installed, while Tomcat requires version [1.2.34]
[INFO ] 04-03-2024 15:35:45.088 [main] TomcatWebServer - Tomcat initialized with port(s): 8300 (http)
[INFO ] 04-03-2024 15:35:45.115 [main] Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8300"]
[INFO ] 04-03-2024 15:35:45.124 [main] StandardService - Starting service [Tomcat]
[INFO ] 04-03-2024 15:35:45.125 [main] StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.11]
[INFO ] 04-03-2024 15:35:46.435 [main] TldScanner - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
[INFO ] 04-03-2024 15:35:46.458 [main] [/users_products_api] - Initializing Spring embedded WebApplicationContext
[INFO ] 04-03-2024 15:35:46.465 [main] ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 7034 ms
[INFO ] 04-03-2024 15:35:48.029 [main] Version - HHH000412: Hibernate ORM core version 6.2.6.Final
[INFO ] 04-03-2024 15:35:48.043 [main] Environment - HHH000406: Using bytecode reflection optimizer
[DEBUG] 04-03-2024 15:35:48.571 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@5db9f51f
[DEBUG] 04-03-2024 15:35:48.573 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@5db9f51f
[DEBUG] 04-03-2024 15:35:48.573 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@5db9f51f
[DEBUG] 04-03-2024 15:35:48.574 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@534762ed
[DEBUG] 04-03-2024 15:35:48.575 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@534762ed
[DEBUG] 04-03-2024 15:35:48.576 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@6c421123
[DEBUG] 04-03-2024 15:35:48.576 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@6c421123
[DEBUG] 04-03-2024 15:35:48.578 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@38e00b47
[DEBUG] 04-03-2024 15:35:48.579 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@38e00b47
[DEBUG] 04-03-2024 15:35:48.579 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@2a631049
[DEBUG] 04-03-2024 15:35:48.580 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@2a631049
[DEBUG] 04-03-2024 15:35:48.580 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@2a631049
[DEBUG] 04-03-2024 15:35:48.580 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@425b5fe2
[DEBUG] 04-03-2024 15:35:48.581 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@425b5fe2
[DEBUG] 04-03-2024 15:35:48.581 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@425b5fe2
[DEBUG] 04-03-2024 15:35:48.582 [main] BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@3eec8583
[DEBUG] 04-03-2024 15:35:48.582 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@3eec8583
[DEBUG] 04-03-2024 15:35:48.583 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@66e1b2a
[DEBUG] 04-03-2024 15:35:48.583 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@343db2f6
[DEBUG] 04-03-2024 15:35:48.584 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@343db2f6
[DEBUG] 04-03-2024 15:35:48.586 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@2c815fdc
[DEBUG] 04-03-2024 15:35:48.586 [main] BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@769b0752
[DEBUG] 04-03-2024 15:35:48.587 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@dae5e0
[DEBUG] 04-03-2024 15:35:48.588 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@dae5e0
[DEBUG] 04-03-2024 15:35:48.588 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@dae5e0
[DEBUG] 04-03-2024 15:35:48.589 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@59a94d0f
[DEBUG] 04-03-2024 15:35:48.589 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@59a94d0f
[DEBUG] 04-03-2024 15:35:48.589 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@59a94d0f
[DEBUG] 04-03-2024 15:35:48.590 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@7ff09659
[DEBUG] 04-03-2024 15:35:48.590 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@7ff09659
[DEBUG] 04-03-2024 15:35:48.591 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@7ff09659
[DEBUG] 04-03-2024 15:35:48.591 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@517fbf62
[DEBUG] 04-03-2024 15:35:48.592 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@517fbf62
[DEBUG] 04-03-2024 15:35:48.592 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@517fbf62
[DEBUG] 04-03-2024 15:35:48.593 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@65db548
[DEBUG] 04-03-2024 15:35:48.593 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@65db548
[DEBUG] 04-03-2024 15:35:48.593 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@65db548
[DEBUG] 04-03-2024 15:35:48.594 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@150f41b9
[DEBUG] 04-03-2024 15:35:48.595 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@150f41b9
[DEBUG] 04-03-2024 15:35:48.596 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@6e364f1f
[DEBUG] 04-03-2024 15:35:48.596 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@6e364f1f
[DEBUG] 04-03-2024 15:35:48.598 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@429e7914
[DEBUG] 04-03-2024 15:35:48.599 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@429e7914
[DEBUG] 04-03-2024 15:35:48.599 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@429e7914
[DEBUG] 04-03-2024 15:35:48.599 [main] BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@298263fa
[DEBUG] 04-03-2024 15:35:48.600 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@466fedfa
[DEBUG] 04-03-2024 15:35:48.601 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@466fedfa
[DEBUG] 04-03-2024 15:35:48.601 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@1a7d0c9f
[DEBUG] 04-03-2024 15:35:48.601 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@2b1a901d
[DEBUG] 04-03-2024 15:35:48.602 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@2b1a901d
[DEBUG] 04-03-2024 15:35:48.602 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@2b1a901d
[DEBUG] 04-03-2024 15:35:48.603 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@11bdab37
[DEBUG] 04-03-2024 15:35:48.603 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@280484c7
[DEBUG] 04-03-2024 15:35:48.604 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@5a6f6cac
[DEBUG] 04-03-2024 15:35:48.604 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@258a8584
[DEBUG] 04-03-2024 15:35:48.604 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@258a8584
[DEBUG] 04-03-2024 15:35:48.605 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@59127611
[DEBUG] 04-03-2024 15:35:48.605 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@59127611
[DEBUG] 04-03-2024 15:35:48.605 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@553ce348
[DEBUG] 04-03-2024 15:35:48.606 [main] BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@7417ef4f
[DEBUG] 04-03-2024 15:35:48.606 [main] BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@5c0e2ec
[DEBUG] 04-03-2024 15:35:48.606 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@4fa8bebb
[DEBUG] 04-03-2024 15:35:48.607 [main] BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@7d3c22a5
[DEBUG] 04-03-2024 15:35:48.608 [main] BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@369ad7da
[DEBUG] 04-03-2024 15:35:48.608 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@344f9467
[DEBUG] 04-03-2024 15:35:48.608 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@344f9467
[DEBUG] 04-03-2024 15:35:48.609 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@3e98b933
[DEBUG] 04-03-2024 15:35:48.609 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@3e98b933
[DEBUG] 04-03-2024 15:35:48.610 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@222d9d4f
[DEBUG] 04-03-2024 15:35:48.610 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@222d9d4f
[DEBUG] 04-03-2024 15:35:48.613 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@4269aad7
[DEBUG] 04-03-2024 15:35:48.614 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@4269aad7
[DEBUG] 04-03-2024 15:35:48.614 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@a4df251
[DEBUG] 04-03-2024 15:35:48.615 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@a4df251
[DEBUG] 04-03-2024 15:35:48.615 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@71e7830a
[DEBUG] 04-03-2024 15:35:48.616 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3feebf9c
[DEBUG] 04-03-2024 15:35:48.617 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@305e95a4
[DEBUG] 04-03-2024 15:35:48.617 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@305e95a4
[DEBUG] 04-03-2024 15:35:48.617 [main] BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@55e42684
[DEBUG] 04-03-2024 15:35:48.618 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@18d610e1
[DEBUG] 04-03-2024 15:35:48.618 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@528e5e38
[DEBUG] 04-03-2024 15:35:48.618 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@16391278
[DEBUG] 04-03-2024 15:35:48.619 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@16391278
[DEBUG] 04-03-2024 15:35:48.619 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@621dc63d
[DEBUG] 04-03-2024 15:35:48.619 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4ae49387
[DEBUG] 04-03-2024 15:35:48.620 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@6abb7b7d
[DEBUG] 04-03-2024 15:35:48.620 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@6abb7b7d
[DEBUG] 04-03-2024 15:35:48.620 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@34cf0e80
[DEBUG] 04-03-2024 15:35:48.620 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@34cf0e80
[DEBUG] 04-03-2024 15:35:48.621 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@38ef1a0a
[DEBUG] 04-03-2024 15:35:48.621 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@38ef1a0a
[DEBUG] 04-03-2024 15:35:48.621 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@38ef1a0a
[DEBUG] 04-03-2024 15:35:48.622 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@56f9de3b
[DEBUG] 04-03-2024 15:35:48.623 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@56f9de3b
[DEBUG] 04-03-2024 15:35:48.624 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@56f9de3b
[DEBUG] 04-03-2024 15:35:48.624 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@6728370a
[DEBUG] 04-03-2024 15:35:48.624 [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@2b5f8e61
[DEBUG] 04-03-2024 15:35:48.624 [main] BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@6ba0ee4a
[DEBUG] 04-03-2024 15:35:48.625 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@6ba0ee4a
[DEBUG] 04-03-2024 15:35:48.625 [main] BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@73b0ed03
[DEBUG] 04-03-2024 15:35:48.625 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@73b0ed03
[DEBUG] 04-03-2024 15:35:48.626 [main] BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@73b0ed03
[DEBUG] 04-03-2024 15:35:48.626 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@55061418
[DEBUG] 04-03-2024 15:35:48.626 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@27db45f
[DEBUG] 04-03-2024 15:35:48.627 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@6ec3d8e4
[DEBUG] 04-03-2024 15:35:48.627 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@6ec3d8e4
[DEBUG] 04-03-2024 15:35:48.627 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@1aeff8ca
[DEBUG] 04-03-2024 15:35:48.628 [main] BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@1aeff8ca
[DEBUG] 04-03-2024 15:35:48.628 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@1aeff8ca
[DEBUG] 04-03-2024 15:35:48.628 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@7f2c995b
[DEBUG] 04-03-2024 15:35:48.629 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@7f2c995b
[DEBUG] 04-03-2024 15:35:48.630 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@101c15ad
[DEBUG] 04-03-2024 15:35:48.631 [main] BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@101c15ad
[DEBUG] 04-03-2024 15:35:48.631 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@6068ebb2
[DEBUG] 04-03-2024 15:35:48.632 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@6068ebb2
[DEBUG] 04-03-2024 15:35:48.632 [main] BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@5a466dd
[DEBUG] 04-03-2024 15:35:48.632 [main] BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@5a466dd
[DEBUG] 04-03-2024 15:35:48.633 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@1ed9d173
[DEBUG] 04-03-2024 15:35:48.633 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@1ed9d173
[DEBUG] 04-03-2024 15:35:48.633 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@6e981e78
[DEBUG] 04-03-2024 15:35:48.666 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@2211b44f
[DEBUG] 04-03-2024 15:35:48.666 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@2211b44f
[DEBUG] 04-03-2024 15:35:48.670 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@70485aa
[DEBUG] 04-03-2024 15:35:48.670 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@4bf8b77
[DEBUG] 04-03-2024 15:35:48.671 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@e06ec83
[DEBUG] 04-03-2024 15:35:48.671 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@628962e5
[DEBUG] 04-03-2024 15:35:48.671 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@410382cb
[DEBUG] 04-03-2024 15:35:48.672 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@399f5daf
[DEBUG] 04-03-2024 15:35:48.672 [main] BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@c4cceb
[DEBUG] 04-03-2024 15:35:48.672 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@29f3185c
[DEBUG] 04-03-2024 15:35:48.673 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@74bbc273
[DEBUG] 04-03-2024 15:35:50.395 [main] DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1e194966) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@160546b1)
[DEBUG] 04-03-2024 15:35:50.402 [main] JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
[DEBUG] 04-03-2024 15:35:50.402 [main] JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 04-03-2024 15:35:50.430 [main] BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@45849604
[DEBUG] 04-03-2024 15:35:50.434 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@45849604
[DEBUG] 04-03-2024 15:35:50.438 [main] BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@2211b44f`
[DEBUG] 04-03-2024 15:35:50.450 [main] JdbcTypeRegistry - addDescriptor(3100, NumericTypeDescriptor) replaced previous registration(org.hibernate.dialect.PostgreSQLIntervalSecondJdbcType@6fdc2db6)
[DEBUG] 04-03-2024 15:35:50.464 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 04-03-2024 15:35:50.467 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 04-03-2024 15:35:50.467 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 04-03-2024 15:35:50.467 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 04-03-2024 15:35:50.468 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 04-03-2024 15:35:50.468 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 04-03-2024 15:35:50.470 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 04-03-2024 15:35:50.470 [main] BasicTypeRegistry - Adding type registration OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 04-03-2024 15:35:50.470 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 04-03-2024 15:35:50.475 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7d3bcd3] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@5dce5c03]
[WARN ] 04-03-2024 15:35:50.925 [main] InFlightMetadataCollectorImpl - HHH000069: Duplicate generator name generator
[INFO ] 04-03-2024 15:35:51.080 [main] BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
[INFO ] 04-03-2024 15:35:53.920 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 04-03-2024 15:35:53.923 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7d3bcd3] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@45ecdd32]
[TRACE] 04-03-2024 15:35:53.930 [main] TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@45ecdd32] for TypeConfiguration
[WARN ] 04-03-2024 15:35:54.334 [main] JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[INFO ] 04-03-2024 15:35:55.534 [main] Http11NioProtocol - Starting ProtocolHandler ["http-nio-8300"]
[INFO ] 04-03-2024 15:35:55.600 [main] TomcatWebServer - Tomcat started on port(s): 8300 (http) with context path '/users_products_api'
[INFO ] 04-03-2024 15:35:55.636 [main] TestSpringBootApplication - Started TestSpringBootApplication in 17.633 seconds (process running for 21.291)
[INFO ] 04-03-2024 15:36:05.363 [http-nio-8300-exec-1] [/users_products_api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[INFO ] 04-03-2024 15:36:05.364 [http-nio-8300-exec-1] DispatcherServlet - Initializing Servlet 'dispatcherServlet'
[INFO ] 04-03-2024 15:36:05.370 [http-nio-8300-exec-1] DispatcherServlet - Completed initialization in 6 ms
[TRACE] 04-03-2024 15:37:09.855 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@45ecdd32] for TypeConfiguration
[DEBUG] 04-03-2024 15:37:09.856 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@387b29d1] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@45ecdd32]
[INFO ] 04-03-2024 15:37:20.785 [background-preinit] Version - HV000001: Hibernate Validator 8.0.1.Final
[INFO ] 04-03-2024 15:37:20.939 [main] TestSpringBootApplication - Starting TestSpringBootApplication using Java 17.0.10 with PID 2294267 (/home/dima/backend_microservice/UserProductsMicroService/target/classes started by dima in /home/dima/backend_microservice/UserProductsMicroService)
[INFO ] 04-03-2024 15:37:20.953 [main] TestSpringBootApplication - No active profile set, falling back to 1 default profile: "default"
[INFO ] 04-03-2024 15:37:22.832 [main] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
[INFO ] 04-03-2024 15:37:22.835 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data R2DBC repositories in DEFAULT mode.
[INFO ] 04-03-2024 15:37:23.468 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 611 ms. Found 1 R2DBC repository interfaces.
[INFO ] 04-03-2024 15:37:24.295 [main] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
[INFO ] 04-03-2024 15:37:24.297 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO ] 04-03-2024 15:37:24.327 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 20 ms. Found 0 JPA repository interfaces.
[ERROR] 04-03-2024 15:37:25.340 [main] AprLifecycleListener - An incompatible version [1.2.23] of the Apache Tomcat Native library is installed, while Tomcat requires version [1.2.34]
[INFO ] 04-03-2024 15:37:26.110 [main] TomcatWebServer - Tomcat initialized with port(s): 8300 (http)
[INFO ] 04-03-2024 15:37:26.131 [main] Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8300"]
[INFO ] 04-03-2024 15:37:26.140 [main] StandardService - Starting service [Tomcat]
[INFO ] 04-03-2024 15:37:26.141 [main] StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.11]
[INFO ] 04-03-2024 15:37:27.147 [main] TldScanner - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
[INFO ] 04-03-2024 15:37:27.164 [main] [/users_products_api] - Initializing Spring embedded WebApplicationContext
[INFO ] 04-03-2024 15:37:27.169 [main] ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 6021 ms
[INFO ] 04-03-2024 15:37:28.435 [main] Version - HHH000412: Hibernate ORM core version 6.2.6.Final
[INFO ] 04-03-2024 15:37:28.443 [main] Environment - HHH000406: Using bytecode reflection optimizer
[DEBUG] 04-03-2024 15:37:29.004 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@32d0d7eb
[DEBUG] 04-03-2024 15:37:29.007 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@32d0d7eb
[DEBUG] 04-03-2024 15:37:29.008 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@32d0d7eb
[DEBUG] 04-03-2024 15:37:29.008 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@cae2a97
[DEBUG] 04-03-2024 15:37:29.009 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@cae2a97
[DEBUG] 04-03-2024 15:37:29.009 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@7d12429
[DEBUG] 04-03-2024 15:37:29.009 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@7d12429
[DEBUG] 04-03-2024 15:37:29.010 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@14656be5
[DEBUG] 04-03-2024 15:37:29.011 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@14656be5
[DEBUG] 04-03-2024 15:37:29.011 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@20be890d
[DEBUG] 04-03-2024 15:37:29.012 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@20be890d
[DEBUG] 04-03-2024 15:37:29.013 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@20be890d
[DEBUG] 04-03-2024 15:37:29.013 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@5db9f51f
[DEBUG] 04-03-2024 15:37:29.015 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@5db9f51f
[DEBUG] 04-03-2024 15:37:29.016 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@5db9f51f
[DEBUG] 04-03-2024 15:37:29.016 [main] BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@534762ed
[DEBUG] 04-03-2024 15:37:29.017 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@534762ed
[DEBUG] 04-03-2024 15:37:29.017 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@6c421123
[DEBUG] 04-03-2024 15:37:29.018 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@38e00b47
[DEBUG] 04-03-2024 15:37:29.018 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@38e00b47
[DEBUG] 04-03-2024 15:37:29.018 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@2a631049
[DEBUG] 04-03-2024 15:37:29.019 [main] BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@425b5fe2
[DEBUG] 04-03-2024 15:37:29.019 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@3eec8583
[DEBUG] 04-03-2024 15:37:29.020 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@3eec8583
[DEBUG] 04-03-2024 15:37:29.020 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@3eec8583
[DEBUG] 04-03-2024 15:37:29.021 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@66e1b2a
[DEBUG] 04-03-2024 15:37:29.021 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@66e1b2a
[DEBUG] 04-03-2024 15:37:29.022 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@66e1b2a
[DEBUG] 04-03-2024 15:37:29.022 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@343db2f6
[DEBUG] 04-03-2024 15:37:29.022 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@343db2f6
[DEBUG] 04-03-2024 15:37:29.023 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@343db2f6
[DEBUG] 04-03-2024 15:37:29.023 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@2c815fdc
[DEBUG] 04-03-2024 15:37:29.024 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@2c815fdc
[DEBUG] 04-03-2024 15:37:29.024 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@2c815fdc
[DEBUG] 04-03-2024 15:37:29.025 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@769b0752
[DEBUG] 04-03-2024 15:37:29.025 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@769b0752
[DEBUG] 04-03-2024 15:37:29.026 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@769b0752
[DEBUG] 04-03-2024 15:37:29.026 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@dae5e0
[DEBUG] 04-03-2024 15:37:29.027 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@dae5e0
[DEBUG] 04-03-2024 15:37:29.028 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@59a94d0f
[DEBUG] 04-03-2024 15:37:29.028 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@59a94d0f
[DEBUG] 04-03-2024 15:37:29.029 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@7ff09659
[DEBUG] 04-03-2024 15:37:29.030 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@7ff09659
[DEBUG] 04-03-2024 15:37:29.031 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@7ff09659
[DEBUG] 04-03-2024 15:37:29.032 [main] BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@517fbf62
[DEBUG] 04-03-2024 15:37:29.032 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@65db548
[DEBUG] 04-03-2024 15:37:29.033 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@65db548
[DEBUG] 04-03-2024 15:37:29.033 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@150f41b9
[DEBUG] 04-03-2024 15:37:29.034 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@6e364f1f
[DEBUG] 04-03-2024 15:37:29.034 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@6e364f1f
[DEBUG] 04-03-2024 15:37:29.035 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@6e364f1f
[DEBUG] 04-03-2024 15:37:29.035 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@429e7914
[DEBUG] 04-03-2024 15:37:29.035 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@298263fa
[DEBUG] 04-03-2024 15:37:29.036 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@466fedfa
[DEBUG] 04-03-2024 15:37:29.036 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@1a7d0c9f
[DEBUG] 04-03-2024 15:37:29.037 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@1a7d0c9f
[DEBUG] 04-03-2024 15:37:29.037 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@2b1a901d
[DEBUG] 04-03-2024 15:37:29.037 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@2b1a901d
[DEBUG] 04-03-2024 15:37:29.038 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@11bdab37
[DEBUG] 04-03-2024 15:37:29.039 [main] BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@280484c7
[DEBUG] 04-03-2024 15:37:29.039 [main] BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@5a6f6cac
[DEBUG] 04-03-2024 15:37:29.040 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@258a8584
[DEBUG] 04-03-2024 15:37:29.040 [main] BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@59127611
[DEBUG] 04-03-2024 15:37:29.041 [main] BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@553ce348
[DEBUG] 04-03-2024 15:37:29.041 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@7417ef4f
[DEBUG] 04-03-2024 15:37:29.042 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@7417ef4f
[DEBUG] 04-03-2024 15:37:29.042 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@5c0e2ec
[DEBUG] 04-03-2024 15:37:29.043 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@5c0e2ec
[DEBUG] 04-03-2024 15:37:29.044 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@4fa8bebb
[DEBUG] 04-03-2024 15:37:29.045 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@4fa8bebb
[DEBUG] 04-03-2024 15:37:29.045 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@7d3c22a5
[DEBUG] 04-03-2024 15:37:29.052 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@7d3c22a5
[DEBUG] 04-03-2024 15:37:29.052 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@369ad7da
[DEBUG] 04-03-2024 15:37:29.052 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@369ad7da
[DEBUG] 04-03-2024 15:37:29.053 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@344f9467
[DEBUG] 04-03-2024 15:37:29.054 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3e98b933
[DEBUG] 04-03-2024 15:37:29.054 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@222d9d4f
[DEBUG] 04-03-2024 15:37:29.055 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@222d9d4f
[DEBUG] 04-03-2024 15:37:29.061 [main] BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@4269aad7
[DEBUG] 04-03-2024 15:37:29.062 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@a4df251
[DEBUG] 04-03-2024 15:37:29.063 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@71e7830a
[DEBUG] 04-03-2024 15:37:29.063 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@3feebf9c
[DEBUG] 04-03-2024 15:37:29.068 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@3feebf9c
[DEBUG] 04-03-2024 15:37:29.068 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@305e95a4
[DEBUG] 04-03-2024 15:37:29.070 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@55e42684
[DEBUG] 04-03-2024 15:37:29.071 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@18d610e1
[DEBUG] 04-03-2024 15:37:29.075 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@18d610e1
[DEBUG] 04-03-2024 15:37:29.077 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@528e5e38
[DEBUG] 04-03-2024 15:37:29.078 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@528e5e38
[DEBUG] 04-03-2024 15:37:29.078 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@16391278
[DEBUG] 04-03-2024 15:37:29.079 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@16391278
[DEBUG] 04-03-2024 15:37:29.079 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@16391278
[DEBUG] 04-03-2024 15:37:29.079 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@621dc63d
[DEBUG] 04-03-2024 15:37:29.100 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@621dc63d
[DEBUG] 04-03-2024 15:37:29.100 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@621dc63d
[DEBUG] 04-03-2024 15:37:29.101 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@4ae49387
[DEBUG] 04-03-2024 15:37:29.101 [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@6abb7b7d
[DEBUG] 04-03-2024 15:37:29.101 [main] BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@34cf0e80
[DEBUG] 04-03-2024 15:37:29.102 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@34cf0e80
[DEBUG] 04-03-2024 15:37:29.102 [main] BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@38ef1a0a
[DEBUG] 04-03-2024 15:37:29.103 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@38ef1a0a
[DEBUG] 04-03-2024 15:37:29.103 [main] BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@38ef1a0a
[DEBUG] 04-03-2024 15:37:29.104 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@56f9de3b
[DEBUG] 04-03-2024 15:37:29.104 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@6728370a
[DEBUG] 04-03-2024 15:37:29.104 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@2b5f8e61
[DEBUG] 04-03-2024 15:37:29.105 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@2b5f8e61
[DEBUG] 04-03-2024 15:37:29.105 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@6ba0ee4a
[DEBUG] 04-03-2024 15:37:29.106 [main] BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@6ba0ee4a
[DEBUG] 04-03-2024 15:37:29.107 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@6ba0ee4a
[DEBUG] 04-03-2024 15:37:29.109 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@73b0ed03
[DEBUG] 04-03-2024 15:37:29.109 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@73b0ed03
[DEBUG] 04-03-2024 15:37:29.109 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@55061418
[DEBUG] 04-03-2024 15:37:29.110 [main] BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@55061418
[DEBUG] 04-03-2024 15:37:29.110 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@27db45f
[DEBUG] 04-03-2024 15:37:29.111 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@27db45f
[DEBUG] 04-03-2024 15:37:29.111 [main] BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@6ec3d8e4
[DEBUG] 04-03-2024 15:37:29.112 [main] BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@6ec3d8e4
[DEBUG] 04-03-2024 15:37:29.112 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@1aeff8ca
[DEBUG] 04-03-2024 15:37:29.112 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@1aeff8ca
[DEBUG] 04-03-2024 15:37:29.112 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@7f2c995b
[DEBUG] 04-03-2024 15:37:29.138 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@4aab7195
[DEBUG] 04-03-2024 15:37:29.139 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@4aab7195
[DEBUG] 04-03-2024 15:37:29.141 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@2c2a903f
[DEBUG] 04-03-2024 15:37:29.142 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@7d537616
[DEBUG] 04-03-2024 15:37:29.142 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@604c7e9b
[DEBUG] 04-03-2024 15:37:29.143 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@19d27c27
[DEBUG] 04-03-2024 15:37:29.143 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@6181bc4a
[DEBUG] 04-03-2024 15:37:29.144 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@70485aa
[DEBUG] 04-03-2024 15:37:29.144 [main] BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@4bf8b77
[DEBUG] 04-03-2024 15:37:29.144 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@e06ec83
[DEBUG] 04-03-2024 15:37:29.144 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@628962e5
[DEBUG] 04-03-2024 15:37:30.481 [main] DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@11309dd4) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4f4d05b3)
[DEBUG] 04-03-2024 15:37:30.489 [main] JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
[DEBUG] 04-03-2024 15:37:30.489 [main] JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 04-03-2024 15:37:30.513 [main] BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@78fb72cb
[DEBUG] 04-03-2024 15:37:30.514 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@78fb72cb
[DEBUG] 04-03-2024 15:37:30.514 [main] BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@4aab7195`
[DEBUG] 04-03-2024 15:37:30.517 [main] JdbcTypeRegistry - addDescriptor(3100, NumericTypeDescriptor) replaced previous registration(org.hibernate.dialect.PostgreSQLIntervalSecondJdbcType@45849604)
[DEBUG] 04-03-2024 15:37:30.532 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 04-03-2024 15:37:30.533 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 04-03-2024 15:37:30.533 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 04-03-2024 15:37:30.533 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 04-03-2024 15:37:30.534 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 04-03-2024 15:37:30.534 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 04-03-2024 15:37:30.536 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 04-03-2024 15:37:30.536 [main] BasicTypeRegistry - Adding type registration OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 04-03-2024 15:37:30.537 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 04-03-2024 15:37:30.540 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@30ef32eb] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@474619d9]
[WARN ] 04-03-2024 15:37:30.987 [main] InFlightMetadataCollectorImpl - HHH000069: Duplicate generator name generator
[INFO ] 04-03-2024 15:37:31.157 [main] BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
[INFO ] 04-03-2024 15:37:34.404 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 04-03-2024 15:37:34.406 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@30ef32eb] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@2370c90]
[TRACE] 04-03-2024 15:37:34.418 [main] TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@2370c90] for TypeConfiguration
[WARN ] 04-03-2024 15:37:34.866 [main] JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[INFO ] 04-03-2024 15:37:36.369 [main] Http11NioProtocol - Starting ProtocolHandler ["http-nio-8300"]
[INFO ] 04-03-2024 15:37:36.481 [main] TomcatWebServer - Tomcat started on port(s): 8300 (http) with context path '/users_products_api'
[INFO ] 04-03-2024 15:37:36.520 [main] TestSpringBootApplication - Started TestSpringBootApplication in 16.795 seconds (process running for 20.246)
[INFO ] 04-03-2024 15:37:40.341 [http-nio-8300-exec-1] [/users_products_api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[INFO ] 04-03-2024 15:37:40.341 [http-nio-8300-exec-1] DispatcherServlet - Initializing Servlet 'dispatcherServlet'
[INFO ] 04-03-2024 15:37:40.345 [http-nio-8300-exec-1] DispatcherServlet - Completed initialization in 2 ms
[TRACE] 04-03-2024 15:38:17.823 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@2370c90] for TypeConfiguration
[DEBUG] 04-03-2024 15:38:17.825 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@1ec4af91] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@2370c90]
[INFO ] 04-03-2024 15:40:37.527 [background-preinit] Version - HV000001: Hibernate Validator 8.0.1.Final
[INFO ] 04-03-2024 15:40:37.669 [main] TestSpringBootApplication - Starting TestSpringBootApplication using Java 17.0.10 with PID 2296131 (/home/dima/backend_microservice/UserProductsMicroService/target/classes started by dima in /home/dima/backend_microservice/UserProductsMicroService)
[INFO ] 04-03-2024 15:40:37.683 [main] TestSpringBootApplication - No active profile set, falling back to 1 default profile: "default"
[INFO ] 04-03-2024 15:40:40.856 [main] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
[INFO ] 04-03-2024 15:40:40.858 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data R2DBC repositories in DEFAULT mode.
[INFO ] 04-03-2024 15:40:41.523 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 647 ms. Found 1 R2DBC repository interfaces.
[INFO ] 04-03-2024 15:40:42.177 [main] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
[INFO ] 04-03-2024 15:40:42.181 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO ] 04-03-2024 15:40:42.215 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 24 ms. Found 0 JPA repository interfaces.
[ERROR] 04-03-2024 15:40:43.265 [main] AprLifecycleListener - An incompatible version [1.2.23] of the Apache Tomcat Native library is installed, while Tomcat requires version [1.2.34]
[INFO ] 04-03-2024 15:40:44.059 [main] TomcatWebServer - Tomcat initialized with port(s): 8300 (http)
[INFO ] 04-03-2024 15:40:44.084 [main] Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8300"]
[INFO ] 04-03-2024 15:40:44.099 [main] StandardService - Starting service [Tomcat]
[INFO ] 04-03-2024 15:40:44.100 [main] StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.11]
[INFO ] 04-03-2024 15:40:45.152 [main] TldScanner - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
[INFO ] 04-03-2024 15:40:45.179 [main] [/users_products_api] - Initializing Spring embedded WebApplicationContext
[INFO ] 04-03-2024 15:40:45.184 [main] ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 7180 ms
[WARN ] 04-03-2024 15:40:45.412 [main] AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'CRUDUserProducts': Unsatisfied dependency expressed through field 'dao': Error creating bean with name 'DAOUserProducts': Unsatisfied dependency expressed through field 'rep': Error creating bean with name 'customizedUserProductsCrudRepository' defined in repository.CustomizedUserProductsCrudRepository defined in @EnableR2dbcRepositories declared on TestSpringBootApplication: Cannot resolve reference to bean 'r2dbc.CustomizedUserProductsCrudRepository.fragments#0' while setting bean property 'repositoryFragments'
[INFO ] 04-03-2024 15:40:45.423 [main] StandardService - Stopping service [Tomcat]
[INFO ] 04-03-2024 15:40:45.570 [main] ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
[ERROR] 04-03-2024 15:40:45.662 [main] LoggingFailureAnalysisReporter - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Failed to configure a ConnectionFactory: 'url' attribute is not specified and no embedded database could be configured.

Reason: Failed to determine a suitable R2DBC Connection URL


Action:

Consider the following:
	If you want an embedded database (H2), please put it on the classpath.
	If you have database settings to be loaded from a particular profile you may need to activate it (no profiles are currently active).

[INFO ] 04-03-2024 15:41:56.761 [background-preinit] Version - HV000001: Hibernate Validator 8.0.1.Final
[INFO ] 04-03-2024 15:41:56.885 [main] TestSpringBootApplication - Starting TestSpringBootApplication using Java 17.0.10 with PID 2296890 (/home/dima/backend_microservice/UserProductsMicroService/target/classes started by dima in /home/dima/backend_microservice/UserProductsMicroService)
[INFO ] 04-03-2024 15:41:56.899 [main] TestSpringBootApplication - No active profile set, falling back to 1 default profile: "default"
[INFO ] 04-03-2024 15:41:58.816 [main] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
[INFO ] 04-03-2024 15:41:58.817 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data R2DBC repositories in DEFAULT mode.
[INFO ] 04-03-2024 15:41:59.370 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 538 ms. Found 1 R2DBC repository interfaces.
[INFO ] 04-03-2024 15:41:59.996 [main] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
[INFO ] 04-03-2024 15:41:59.999 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO ] 04-03-2024 15:42:00.027 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 20 ms. Found 0 JPA repository interfaces.
[ERROR] 04-03-2024 15:42:01.002 [main] AprLifecycleListener - An incompatible version [1.2.23] of the Apache Tomcat Native library is installed, while Tomcat requires version [1.2.34]
[INFO ] 04-03-2024 15:42:01.713 [main] TomcatWebServer - Tomcat initialized with port(s): 8300 (http)
[INFO ] 04-03-2024 15:42:01.732 [main] Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8300"]
[INFO ] 04-03-2024 15:42:01.737 [main] StandardService - Starting service [Tomcat]
[INFO ] 04-03-2024 15:42:01.739 [main] StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.11]
[INFO ] 04-03-2024 15:42:03.093 [main] TldScanner - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
[INFO ] 04-03-2024 15:42:03.158 [main] [/users_products_api] - Initializing Spring embedded WebApplicationContext
[INFO ] 04-03-2024 15:42:03.163 [main] ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 6080 ms
[WARN ] 04-03-2024 15:42:03.474 [main] AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'CRUDUserProducts': Unsatisfied dependency expressed through field 'dao': Error creating bean with name 'DAOUserProducts': Unsatisfied dependency expressed through field 'rep': Error creating bean with name 'customizedUserProductsCrudRepository' defined in repository.CustomizedUserProductsCrudRepository defined in @EnableR2dbcRepositories declared on TestSpringBootApplication: Cannot resolve reference to bean 'r2dbc.CustomizedUserProductsCrudRepository.fragments#0' while setting bean property 'repositoryFragments'
[INFO ] 04-03-2024 15:42:03.481 [main] StandardService - Stopping service [Tomcat]
[INFO ] 04-03-2024 15:42:03.542 [main] ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
[ERROR] 04-03-2024 15:42:03.599 [main] LoggingFailureAnalysisReporter - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Failed to configure a ConnectionFactory: 'url' attribute is not specified and no embedded database could be configured.

Reason: Failed to determine a suitable R2DBC Connection URL


Action:

Consider the following:
	If you want an embedded database (H2), please put it on the classpath.
	If you have database settings to be loaded from a particular profile you may need to activate it (no profiles are currently active).

[INFO ] 04-03-2024 15:43:28.560 [background-preinit] Version - HV000001: Hibernate Validator 8.0.1.Final
[INFO ] 04-03-2024 15:43:28.690 [main] TestSpringBootApplication - Starting TestSpringBootApplication using Java 17.0.10 with PID 2297694 (/home/dima/backend_microservice/UserProductsMicroService/target/classes started by dima in /home/dima/backend_microservice/UserProductsMicroService)
[INFO ] 04-03-2024 15:43:28.710 [main] TestSpringBootApplication - No active profile set, falling back to 1 default profile: "default"
[INFO ] 04-03-2024 15:43:30.736 [main] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
[INFO ] 04-03-2024 15:43:30.739 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data R2DBC repositories in DEFAULT mode.
[INFO ] 04-03-2024 15:43:31.349 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 599 ms. Found 1 R2DBC repository interfaces.
[INFO ] 04-03-2024 15:43:32.021 [main] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
[INFO ] 04-03-2024 15:43:32.024 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO ] 04-03-2024 15:43:32.057 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 23 ms. Found 0 JPA repository interfaces.
[ERROR] 04-03-2024 15:43:33.052 [main] AprLifecycleListener - An incompatible version [1.2.23] of the Apache Tomcat Native library is installed, while Tomcat requires version [1.2.34]
[INFO ] 04-03-2024 15:43:33.794 [main] TomcatWebServer - Tomcat initialized with port(s): 8300 (http)
[INFO ] 04-03-2024 15:43:33.816 [main] Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8300"]
[INFO ] 04-03-2024 15:43:33.823 [main] StandardService - Starting service [Tomcat]
[INFO ] 04-03-2024 15:43:33.824 [main] StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.11]
[INFO ] 04-03-2024 15:43:34.878 [main] TldScanner - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
[INFO ] 04-03-2024 15:43:34.897 [main] [/users_products_api] - Initializing Spring embedded WebApplicationContext
[INFO ] 04-03-2024 15:43:34.901 [main] ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 6024 ms
[INFO ] 04-03-2024 15:43:36.322 [main] Version - HHH000412: Hibernate ORM core version 6.2.6.Final
[INFO ] 04-03-2024 15:43:36.338 [main] Environment - HHH000406: Using bytecode reflection optimizer
[DEBUG] 04-03-2024 15:43:37.025 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@20be890d
[DEBUG] 04-03-2024 15:43:37.026 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@20be890d
[DEBUG] 04-03-2024 15:43:37.027 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@20be890d
[DEBUG] 04-03-2024 15:43:37.027 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@5db9f51f
[DEBUG] 04-03-2024 15:43:37.028 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@5db9f51f
[DEBUG] 04-03-2024 15:43:37.028 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@534762ed
[DEBUG] 04-03-2024 15:43:37.028 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@534762ed
[DEBUG] 04-03-2024 15:43:37.029 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@6c421123
[DEBUG] 04-03-2024 15:43:37.030 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@6c421123
[DEBUG] 04-03-2024 15:43:37.030 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@38e00b47
[DEBUG] 04-03-2024 15:43:37.031 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@38e00b47
[DEBUG] 04-03-2024 15:43:37.031 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@38e00b47
[DEBUG] 04-03-2024 15:43:37.032 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@2a631049
[DEBUG] 04-03-2024 15:43:37.032 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@2a631049
[DEBUG] 04-03-2024 15:43:37.033 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@2a631049
[DEBUG] 04-03-2024 15:43:37.033 [main] BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@425b5fe2
[DEBUG] 04-03-2024 15:43:37.033 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@425b5fe2
[DEBUG] 04-03-2024 15:43:37.034 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@3eec8583
[DEBUG] 04-03-2024 15:43:37.034 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@66e1b2a
[DEBUG] 04-03-2024 15:43:37.035 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@66e1b2a
[DEBUG] 04-03-2024 15:43:37.035 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@343db2f6
[DEBUG] 04-03-2024 15:43:37.036 [main] BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@2c815fdc
[DEBUG] 04-03-2024 15:43:37.036 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@769b0752
[DEBUG] 04-03-2024 15:43:37.036 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@769b0752
[DEBUG] 04-03-2024 15:43:37.037 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@769b0752
[DEBUG] 04-03-2024 15:43:37.037 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@dae5e0
[DEBUG] 04-03-2024 15:43:37.038 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@dae5e0
[DEBUG] 04-03-2024 15:43:37.038 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@dae5e0
[DEBUG] 04-03-2024 15:43:37.039 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@59a94d0f
[DEBUG] 04-03-2024 15:43:37.039 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@59a94d0f
[DEBUG] 04-03-2024 15:43:37.039 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@59a94d0f
[DEBUG] 04-03-2024 15:43:37.040 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@7ff09659
[DEBUG] 04-03-2024 15:43:37.040 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@7ff09659
[DEBUG] 04-03-2024 15:43:37.040 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@7ff09659
[DEBUG] 04-03-2024 15:43:37.041 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@517fbf62
[DEBUG] 04-03-2024 15:43:37.041 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@517fbf62
[DEBUG] 04-03-2024 15:43:37.041 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@517fbf62
[DEBUG] 04-03-2024 15:43:37.042 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@65db548
[DEBUG] 04-03-2024 15:43:37.042 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@65db548
[DEBUG] 04-03-2024 15:43:37.043 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@150f41b9
[DEBUG] 04-03-2024 15:43:37.043 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@150f41b9
[DEBUG] 04-03-2024 15:43:37.043 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@6e364f1f
[DEBUG] 04-03-2024 15:43:37.044 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@6e364f1f
[DEBUG] 04-03-2024 15:43:37.044 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@6e364f1f
[DEBUG] 04-03-2024 15:43:37.044 [main] BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@429e7914
[DEBUG] 04-03-2024 15:43:37.045 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@298263fa
[DEBUG] 04-03-2024 15:43:37.045 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@298263fa
[DEBUG] 04-03-2024 15:43:37.045 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@466fedfa
[DEBUG] 04-03-2024 15:43:37.046 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@1a7d0c9f
[DEBUG] 04-03-2024 15:43:37.046 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@1a7d0c9f
[DEBUG] 04-03-2024 15:43:37.047 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@1a7d0c9f
[DEBUG] 04-03-2024 15:43:37.047 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@2b1a901d
[DEBUG] 04-03-2024 15:43:37.047 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@11bdab37
[DEBUG] 04-03-2024 15:43:37.047 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@280484c7
[DEBUG] 04-03-2024 15:43:37.048 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@5a6f6cac
[DEBUG] 04-03-2024 15:43:37.048 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@5a6f6cac
[DEBUG] 04-03-2024 15:43:37.049 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@258a8584
[DEBUG] 04-03-2024 15:43:37.049 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@258a8584
[DEBUG] 04-03-2024 15:43:37.049 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@59127611
[DEBUG] 04-03-2024 15:43:37.050 [main] BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@553ce348
[DEBUG] 04-03-2024 15:43:37.050 [main] BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@7417ef4f
[DEBUG] 04-03-2024 15:43:37.051 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@5c0e2ec
[DEBUG] 04-03-2024 15:43:37.051 [main] BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@4fa8bebb
[DEBUG] 04-03-2024 15:43:37.051 [main] BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@7d3c22a5
[DEBUG] 04-03-2024 15:43:37.052 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@369ad7da
[DEBUG] 04-03-2024 15:43:37.052 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@369ad7da
[DEBUG] 04-03-2024 15:43:37.052 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@344f9467
[DEBUG] 04-03-2024 15:43:37.053 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@344f9467
[DEBUG] 04-03-2024 15:43:37.053 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@3e98b933
[DEBUG] 04-03-2024 15:43:37.053 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@3e98b933
[DEBUG] 04-03-2024 15:43:37.054 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@222d9d4f
[DEBUG] 04-03-2024 15:43:37.054 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@222d9d4f
[DEBUG] 04-03-2024 15:43:37.055 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@4269aad7
[DEBUG] 04-03-2024 15:43:37.055 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@4269aad7
[DEBUG] 04-03-2024 15:43:37.055 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@a4df251
[DEBUG] 04-03-2024 15:43:37.056 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@71e7830a
[DEBUG] 04-03-2024 15:43:37.056 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@3feebf9c
[DEBUG] 04-03-2024 15:43:37.056 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@3feebf9c
[DEBUG] 04-03-2024 15:43:37.057 [main] BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@305e95a4
[DEBUG] 04-03-2024 15:43:37.057 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@55e42684
[DEBUG] 04-03-2024 15:43:37.057 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@18d610e1
[DEBUG] 04-03-2024 15:43:37.058 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@528e5e38
[DEBUG] 04-03-2024 15:43:37.058 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@528e5e38
[DEBUG] 04-03-2024 15:43:37.058 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@16391278
[DEBUG] 04-03-2024 15:43:37.059 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@621dc63d
[DEBUG] 04-03-2024 15:43:37.059 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@4ae49387
[DEBUG] 04-03-2024 15:43:37.059 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@4ae49387
[DEBUG] 04-03-2024 15:43:37.060 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@6abb7b7d
[DEBUG] 04-03-2024 15:43:37.060 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@6abb7b7d
[DEBUG] 04-03-2024 15:43:37.061 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@34cf0e80
[DEBUG] 04-03-2024 15:43:37.061 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@34cf0e80
[DEBUG] 04-03-2024 15:43:37.061 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@34cf0e80
[DEBUG] 04-03-2024 15:43:37.062 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@38ef1a0a
[DEBUG] 04-03-2024 15:43:37.062 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@38ef1a0a
[DEBUG] 04-03-2024 15:43:37.063 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@38ef1a0a
[DEBUG] 04-03-2024 15:43:37.063 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@56f9de3b
[DEBUG] 04-03-2024 15:43:37.063 [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@6728370a
[DEBUG] 04-03-2024 15:43:37.064 [main] BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@2b5f8e61
[DEBUG] 04-03-2024 15:43:37.064 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@2b5f8e61
[DEBUG] 04-03-2024 15:43:37.064 [main] BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@6ba0ee4a
[DEBUG] 04-03-2024 15:43:37.065 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@6ba0ee4a
[DEBUG] 04-03-2024 15:43:37.065 [main] BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@6ba0ee4a
[DEBUG] 04-03-2024 15:43:37.065 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@73b0ed03
[DEBUG] 04-03-2024 15:43:37.066 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@55061418
[DEBUG] 04-03-2024 15:43:37.066 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@27db45f
[DEBUG] 04-03-2024 15:43:37.067 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@27db45f
[DEBUG] 04-03-2024 15:43:37.067 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@6ec3d8e4
[DEBUG] 04-03-2024 15:43:37.067 [main] BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@6ec3d8e4
[DEBUG] 04-03-2024 15:43:37.068 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@6ec3d8e4
[DEBUG] 04-03-2024 15:43:37.068 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@1aeff8ca
[DEBUG] 04-03-2024 15:43:37.069 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@1aeff8ca
[DEBUG] 04-03-2024 15:43:37.069 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@7f2c995b
[DEBUG] 04-03-2024 15:43:37.069 [main] BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@7f2c995b
[DEBUG] 04-03-2024 15:43:37.070 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@101c15ad
[DEBUG] 04-03-2024 15:43:37.070 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@101c15ad
[DEBUG] 04-03-2024 15:43:37.070 [main] BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@6068ebb2
[DEBUG] 04-03-2024 15:43:37.071 [main] BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@6068ebb2
[DEBUG] 04-03-2024 15:43:37.071 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@5a466dd
[DEBUG] 04-03-2024 15:43:37.071 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@5a466dd
[DEBUG] 04-03-2024 15:43:37.072 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@1ed9d173
[DEBUG] 04-03-2024 15:43:37.088 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@43d3995f
[DEBUG] 04-03-2024 15:43:37.088 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@43d3995f
[DEBUG] 04-03-2024 15:43:37.091 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@6181bc4a
[DEBUG] 04-03-2024 15:43:37.091 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@70485aa
[DEBUG] 04-03-2024 15:43:37.092 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@4bf8b77
[DEBUG] 04-03-2024 15:43:37.092 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@e06ec83
[DEBUG] 04-03-2024 15:43:37.092 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@628962e5
[DEBUG] 04-03-2024 15:43:37.093 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@410382cb
[DEBUG] 04-03-2024 15:43:37.093 [main] BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@399f5daf
[DEBUG] 04-03-2024 15:43:37.093 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@c4cceb
[DEBUG] 04-03-2024 15:43:37.093 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@29f3185c
[DEBUG] 04-03-2024 15:43:38.448 [main] DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@395eb363) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1e194966)
[DEBUG] 04-03-2024 15:43:38.454 [main] JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
[DEBUG] 04-03-2024 15:43:38.454 [main] JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 04-03-2024 15:43:38.476 [main] BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@48aa0813
[DEBUG] 04-03-2024 15:43:38.476 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@48aa0813
[DEBUG] 04-03-2024 15:43:38.476 [main] BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@43d3995f`
[DEBUG] 04-03-2024 15:43:38.479 [main] JdbcTypeRegistry - addDescriptor(3100, NumericTypeDescriptor) replaced previous registration(org.hibernate.dialect.PostgreSQLIntervalSecondJdbcType@5c25daad)
[DEBUG] 04-03-2024 15:43:38.495 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 04-03-2024 15:43:38.495 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 04-03-2024 15:43:38.496 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 04-03-2024 15:43:38.496 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 04-03-2024 15:43:38.497 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 04-03-2024 15:43:38.497 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 04-03-2024 15:43:38.499 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 04-03-2024 15:43:38.499 [main] BasicTypeRegistry - Adding type registration OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 04-03-2024 15:43:38.499 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 04-03-2024 15:43:38.503 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@702cfbde] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@7d3bcd3]
[WARN ] 04-03-2024 15:43:38.948 [main] InFlightMetadataCollectorImpl - HHH000069: Duplicate generator name generator
[INFO ] 04-03-2024 15:43:39.114 [main] BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
[INFO ] 04-03-2024 15:43:42.246 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 04-03-2024 15:43:42.248 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@702cfbde] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@14091e24]
[TRACE] 04-03-2024 15:43:42.255 [main] TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@14091e24] for TypeConfiguration
[WARN ] 04-03-2024 15:43:42.644 [main] JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[INFO ] 04-03-2024 15:43:43.603 [main] Http11NioProtocol - Starting ProtocolHandler ["http-nio-8300"]
[INFO ] 04-03-2024 15:43:43.673 [main] TomcatWebServer - Tomcat started on port(s): 8300 (http) with context path '/users_products_api'
[INFO ] 04-03-2024 15:43:43.705 [main] TestSpringBootApplication - Started TestSpringBootApplication in 16.137 seconds (process running for 19.113)
[INFO ] 04-03-2024 15:43:48.039 [http-nio-8300-exec-1] [/users_products_api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[INFO ] 04-03-2024 15:43:48.040 [http-nio-8300-exec-1] DispatcherServlet - Initializing Servlet 'dispatcherServlet'
[INFO ] 04-03-2024 15:43:48.044 [http-nio-8300-exec-1] DispatcherServlet - Completed initialization in 3 ms
[TRACE] 04-03-2024 15:47:55.721 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@14091e24] for TypeConfiguration
[DEBUG] 04-03-2024 15:47:55.722 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@4823e311] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@14091e24]
[INFO ] 04-03-2024 15:48:07.470 [background-preinit] Version - HV000001: Hibernate Validator 8.0.1.Final
[INFO ] 04-03-2024 15:48:07.617 [main] TestSpringBootApplication - Starting TestSpringBootApplication using Java 17.0.10 with PID 2300174 (/home/dima/backend_microservice/UserProductsMicroService/target/classes started by dima in /home/dima/backend_microservice/UserProductsMicroService)
[INFO ] 04-03-2024 15:48:07.632 [main] TestSpringBootApplication - No active profile set, falling back to 1 default profile: "default"
[INFO ] 04-03-2024 15:48:09.569 [main] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
[INFO ] 04-03-2024 15:48:09.572 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data R2DBC repositories in DEFAULT mode.
[INFO ] 04-03-2024 15:48:10.256 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 668 ms. Found 1 R2DBC repository interfaces.
[INFO ] 04-03-2024 15:48:11.120 [main] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
[INFO ] 04-03-2024 15:48:11.123 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO ] 04-03-2024 15:48:11.152 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 19 ms. Found 0 JPA repository interfaces.
[ERROR] 04-03-2024 15:48:12.194 [main] AprLifecycleListener - An incompatible version [1.2.23] of the Apache Tomcat Native library is installed, while Tomcat requires version [1.2.34]
[INFO ] 04-03-2024 15:48:12.969 [main] TomcatWebServer - Tomcat initialized with port(s): 8300 (http)
[INFO ] 04-03-2024 15:48:12.991 [main] Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8300"]
[INFO ] 04-03-2024 15:48:13.003 [main] StandardService - Starting service [Tomcat]
[INFO ] 04-03-2024 15:48:13.005 [main] StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.11]
[INFO ] 04-03-2024 15:48:14.050 [main] TldScanner - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
[INFO ] 04-03-2024 15:48:14.070 [main] [/users_products_api] - Initializing Spring embedded WebApplicationContext
[INFO ] 04-03-2024 15:48:14.075 [main] ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 6218 ms
[INFO ] 04-03-2024 15:48:15.417 [main] Version - HHH000412: Hibernate ORM core version 6.2.6.Final
[INFO ] 04-03-2024 15:48:15.427 [main] Environment - HHH000406: Using bytecode reflection optimizer
[DEBUG] 04-03-2024 15:48:15.931 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@38e00b47
[DEBUG] 04-03-2024 15:48:15.932 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@38e00b47
[DEBUG] 04-03-2024 15:48:15.932 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@38e00b47
[DEBUG] 04-03-2024 15:48:15.933 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@2a631049
[DEBUG] 04-03-2024 15:48:15.933 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@2a631049
[DEBUG] 04-03-2024 15:48:15.934 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@425b5fe2
[DEBUG] 04-03-2024 15:48:15.935 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@425b5fe2
[DEBUG] 04-03-2024 15:48:15.936 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@3eec8583
[DEBUG] 04-03-2024 15:48:15.936 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@3eec8583
[DEBUG] 04-03-2024 15:48:15.937 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@66e1b2a
[DEBUG] 04-03-2024 15:48:15.938 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@66e1b2a
[DEBUG] 04-03-2024 15:48:15.939 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@66e1b2a
[DEBUG] 04-03-2024 15:48:15.939 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@343db2f6
[DEBUG] 04-03-2024 15:48:15.940 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@343db2f6
[DEBUG] 04-03-2024 15:48:15.940 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@343db2f6
[DEBUG] 04-03-2024 15:48:15.941 [main] BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@2c815fdc
[DEBUG] 04-03-2024 15:48:15.941 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@2c815fdc
[DEBUG] 04-03-2024 15:48:15.942 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@769b0752
[DEBUG] 04-03-2024 15:48:15.943 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@dae5e0
[DEBUG] 04-03-2024 15:48:15.943 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@dae5e0
[DEBUG] 04-03-2024 15:48:15.944 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@59a94d0f
[DEBUG] 04-03-2024 15:48:15.944 [main] BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@7ff09659
[DEBUG] 04-03-2024 15:48:15.945 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@517fbf62
[DEBUG] 04-03-2024 15:48:15.945 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@517fbf62
[DEBUG] 04-03-2024 15:48:15.946 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@517fbf62
[DEBUG] 04-03-2024 15:48:15.946 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@65db548
[DEBUG] 04-03-2024 15:48:15.947 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@65db548
[DEBUG] 04-03-2024 15:48:15.947 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@65db548
[DEBUG] 04-03-2024 15:48:15.948 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@150f41b9
[DEBUG] 04-03-2024 15:48:15.949 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@150f41b9
[DEBUG] 04-03-2024 15:48:15.949 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@150f41b9
[DEBUG] 04-03-2024 15:48:15.950 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@6e364f1f
[DEBUG] 04-03-2024 15:48:15.950 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@6e364f1f
[DEBUG] 04-03-2024 15:48:15.951 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@6e364f1f
[DEBUG] 04-03-2024 15:48:15.951 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@429e7914
[DEBUG] 04-03-2024 15:48:15.952 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@429e7914
[DEBUG] 04-03-2024 15:48:15.952 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@429e7914
[DEBUG] 04-03-2024 15:48:15.953 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@298263fa
[DEBUG] 04-03-2024 15:48:15.954 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@298263fa
[DEBUG] 04-03-2024 15:48:15.954 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@466fedfa
[DEBUG] 04-03-2024 15:48:15.954 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@466fedfa
[DEBUG] 04-03-2024 15:48:15.955 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@1a7d0c9f
[DEBUG] 04-03-2024 15:48:15.955 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@1a7d0c9f
[DEBUG] 04-03-2024 15:48:15.955 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@1a7d0c9f
[DEBUG] 04-03-2024 15:48:15.956 [main] BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@2b1a901d
[DEBUG] 04-03-2024 15:48:15.957 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@11bdab37
[DEBUG] 04-03-2024 15:48:15.957 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@11bdab37
[DEBUG] 04-03-2024 15:48:15.957 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@280484c7
[DEBUG] 04-03-2024 15:48:15.958 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@5a6f6cac
[DEBUG] 04-03-2024 15:48:15.958 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@5a6f6cac
[DEBUG] 04-03-2024 15:48:15.958 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@5a6f6cac
[DEBUG] 04-03-2024 15:48:15.959 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@258a8584
[DEBUG] 04-03-2024 15:48:15.959 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@59127611
[DEBUG] 04-03-2024 15:48:15.960 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@553ce348
[DEBUG] 04-03-2024 15:48:15.960 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@7417ef4f
[DEBUG] 04-03-2024 15:48:15.961 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@7417ef4f
[DEBUG] 04-03-2024 15:48:15.961 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@5c0e2ec
[DEBUG] 04-03-2024 15:48:15.962 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@5c0e2ec
[DEBUG] 04-03-2024 15:48:15.962 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@4fa8bebb
[DEBUG] 04-03-2024 15:48:15.962 [main] BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@7d3c22a5
[DEBUG] 04-03-2024 15:48:15.963 [main] BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@369ad7da
[DEBUG] 04-03-2024 15:48:15.963 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@344f9467
[DEBUG] 04-03-2024 15:48:15.964 [main] BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@3e98b933
[DEBUG] 04-03-2024 15:48:15.964 [main] BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@222d9d4f
[DEBUG] 04-03-2024 15:48:15.965 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@4269aad7
[DEBUG] 04-03-2024 15:48:15.965 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@4269aad7
[DEBUG] 04-03-2024 15:48:15.966 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@a4df251
[DEBUG] 04-03-2024 15:48:15.966 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@a4df251
[DEBUG] 04-03-2024 15:48:15.967 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@71e7830a
[DEBUG] 04-03-2024 15:48:15.967 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@71e7830a
[DEBUG] 04-03-2024 15:48:15.967 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@3feebf9c
[DEBUG] 04-03-2024 15:48:15.968 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@3feebf9c
[DEBUG] 04-03-2024 15:48:15.968 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@305e95a4
[DEBUG] 04-03-2024 15:48:15.968 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@305e95a4
[DEBUG] 04-03-2024 15:48:15.969 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@55e42684
[DEBUG] 04-03-2024 15:48:15.969 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@18d610e1
[DEBUG] 04-03-2024 15:48:15.970 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@528e5e38
[DEBUG] 04-03-2024 15:48:15.970 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@528e5e38
[DEBUG] 04-03-2024 15:48:15.971 [main] BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@16391278
[DEBUG] 04-03-2024 15:48:15.972 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@621dc63d
[DEBUG] 04-03-2024 15:48:15.972 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4ae49387
[DEBUG] 04-03-2024 15:48:15.972 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@6abb7b7d
[DEBUG] 04-03-2024 15:48:15.973 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@6abb7b7d
[DEBUG] 04-03-2024 15:48:15.973 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@34cf0e80
[DEBUG] 04-03-2024 15:48:15.974 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@38ef1a0a
[DEBUG] 04-03-2024 15:48:15.974 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@56f9de3b
[DEBUG] 04-03-2024 15:48:15.974 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@56f9de3b
[DEBUG] 04-03-2024 15:48:15.975 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@6728370a
[DEBUG] 04-03-2024 15:48:15.975 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@6728370a
[DEBUG] 04-03-2024 15:48:16.012 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@2b5f8e61
[DEBUG] 04-03-2024 15:48:16.013 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@2b5f8e61
[DEBUG] 04-03-2024 15:48:16.013 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@2b5f8e61
[DEBUG] 04-03-2024 15:48:16.014 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@6ba0ee4a
[DEBUG] 04-03-2024 15:48:16.014 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@6ba0ee4a
[DEBUG] 04-03-2024 15:48:16.015 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@6ba0ee4a
[DEBUG] 04-03-2024 15:48:16.015 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@73b0ed03
[DEBUG] 04-03-2024 15:48:16.015 [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@55061418
[DEBUG] 04-03-2024 15:48:16.015 [main] BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@27db45f
[DEBUG] 04-03-2024 15:48:16.016 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@27db45f
[DEBUG] 04-03-2024 15:48:16.017 [main] BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@6ec3d8e4
[DEBUG] 04-03-2024 15:48:16.017 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@6ec3d8e4
[DEBUG] 04-03-2024 15:48:16.017 [main] BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@6ec3d8e4
[DEBUG] 04-03-2024 15:48:16.018 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@1aeff8ca
[DEBUG] 04-03-2024 15:48:16.018 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@7f2c995b
[DEBUG] 04-03-2024 15:48:16.019 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@101c15ad
[DEBUG] 04-03-2024 15:48:16.019 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@101c15ad
[DEBUG] 04-03-2024 15:48:16.019 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@6068ebb2
[DEBUG] 04-03-2024 15:48:16.020 [main] BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@6068ebb2
[DEBUG] 04-03-2024 15:48:16.020 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@6068ebb2
[DEBUG] 04-03-2024 15:48:16.021 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@5a466dd
[DEBUG] 04-03-2024 15:48:16.021 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@5a466dd
[DEBUG] 04-03-2024 15:48:16.022 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@1ed9d173
[DEBUG] 04-03-2024 15:48:16.022 [main] BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@1ed9d173
[DEBUG] 04-03-2024 15:48:16.022 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@6e981e78
[DEBUG] 04-03-2024 15:48:16.023 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@6e981e78
[DEBUG] 04-03-2024 15:48:16.023 [main] BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@498a4d62
[DEBUG] 04-03-2024 15:48:16.023 [main] BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@498a4d62
[DEBUG] 04-03-2024 15:48:16.024 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@6fbe4800
[DEBUG] 04-03-2024 15:48:16.024 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@6fbe4800
[DEBUG] 04-03-2024 15:48:16.025 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@3f3c5ecd
[DEBUG] 04-03-2024 15:48:16.043 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@4a336377
[DEBUG] 04-03-2024 15:48:16.043 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@4a336377
[DEBUG] 04-03-2024 15:48:16.046 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@628962e5
[DEBUG] 04-03-2024 15:48:16.047 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@410382cb
[DEBUG] 04-03-2024 15:48:16.048 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@399f5daf
[DEBUG] 04-03-2024 15:48:16.048 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@c4cceb
[DEBUG] 04-03-2024 15:48:16.048 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@29f3185c
[DEBUG] 04-03-2024 15:48:16.049 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@74bbc273
[DEBUG] 04-03-2024 15:48:16.049 [main] BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@370a8b6e
[DEBUG] 04-03-2024 15:48:16.049 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@118fbaf0
[DEBUG] 04-03-2024 15:48:16.050 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@208f7165
[DEBUG] 04-03-2024 15:48:17.677 [main] DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5c3710b3) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@8b1202a)
[DEBUG] 04-03-2024 15:48:17.682 [main] JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
[DEBUG] 04-03-2024 15:48:17.683 [main] JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 04-03-2024 15:48:17.702 [main] BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@3df04fa1
[DEBUG] 04-03-2024 15:48:17.703 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@3df04fa1
[DEBUG] 04-03-2024 15:48:17.703 [main] BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@4a336377`
[DEBUG] 04-03-2024 15:48:17.706 [main] JdbcTypeRegistry - addDescriptor(3100, NumericTypeDescriptor) replaced previous registration(org.hibernate.dialect.PostgreSQLIntervalSecondJdbcType@16d61071)
[DEBUG] 04-03-2024 15:48:17.721 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 04-03-2024 15:48:17.721 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 04-03-2024 15:48:17.722 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 04-03-2024 15:48:17.722 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 04-03-2024 15:48:17.722 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 04-03-2024 15:48:17.723 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 04-03-2024 15:48:17.725 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 04-03-2024 15:48:17.725 [main] BasicTypeRegistry - Adding type registration OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 04-03-2024 15:48:17.725 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 04-03-2024 15:48:17.729 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1c135f63] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@63c4d16]
[WARN ] 04-03-2024 15:48:18.155 [main] InFlightMetadataCollectorImpl - HHH000069: Duplicate generator name generator
[INFO ] 04-03-2024 15:48:18.320 [main] BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
[INFO ] 04-03-2024 15:48:21.297 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 04-03-2024 15:48:21.300 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1c135f63] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@34c2e03d]
[TRACE] 04-03-2024 15:48:21.313 [main] TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@34c2e03d] for TypeConfiguration
[WARN ] 04-03-2024 15:48:21.706 [main] JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[INFO ] 04-03-2024 15:48:22.715 [main] Http11NioProtocol - Starting ProtocolHandler ["http-nio-8300"]
[INFO ] 04-03-2024 15:48:22.804 [main] TomcatWebServer - Tomcat started on port(s): 8300 (http) with context path '/users_products_api'
[INFO ] 04-03-2024 15:48:22.840 [main] TestSpringBootApplication - Started TestSpringBootApplication in 16.914 seconds (process running for 20.182)
[INFO ] 04-03-2024 15:48:30.199 [http-nio-8300-exec-1] [/users_products_api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[INFO ] 04-03-2024 15:48:30.199 [http-nio-8300-exec-1] DispatcherServlet - Initializing Servlet 'dispatcherServlet'
[INFO ] 04-03-2024 15:48:30.204 [http-nio-8300-exec-1] DispatcherServlet - Completed initialization in 4 ms
[TRACE] 04-03-2024 15:49:10.103 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@34c2e03d] for TypeConfiguration
[DEBUG] 04-03-2024 15:49:10.103 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@15e8aa1b] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@34c2e03d]
[INFO ] 04-03-2024 15:49:21.101 [background-preinit] Version - HV000001: Hibernate Validator 8.0.1.Final
[INFO ] 04-03-2024 15:49:21.294 [main] TestSpringBootApplication - Starting TestSpringBootApplication using Java 17.0.10 with PID 2300871 (/home/dima/backend_microservice/UserProductsMicroService/target/classes started by dima in /home/dima/backend_microservice/UserProductsMicroService)
[INFO ] 04-03-2024 15:49:21.313 [main] TestSpringBootApplication - No active profile set, falling back to 1 default profile: "default"
[INFO ] 04-03-2024 15:49:23.692 [main] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
[INFO ] 04-03-2024 15:49:23.695 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data R2DBC repositories in DEFAULT mode.
[INFO ] 04-03-2024 15:49:24.355 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 640 ms. Found 1 R2DBC repository interfaces.
[INFO ] 04-03-2024 15:49:24.973 [main] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
[INFO ] 04-03-2024 15:49:24.979 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO ] 04-03-2024 15:49:25.012 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 21 ms. Found 0 JPA repository interfaces.
[ERROR] 04-03-2024 15:49:26.202 [main] AprLifecycleListener - An incompatible version [1.2.23] of the Apache Tomcat Native library is installed, while Tomcat requires version [1.2.34]
[INFO ] 04-03-2024 15:49:27.087 [main] TomcatWebServer - Tomcat initialized with port(s): 8300 (http)
[INFO ] 04-03-2024 15:49:27.111 [main] Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8300"]
[INFO ] 04-03-2024 15:49:27.118 [main] StandardService - Starting service [Tomcat]
[INFO ] 04-03-2024 15:49:27.119 [main] StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.11]
[INFO ] 04-03-2024 15:49:28.207 [main] TldScanner - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
[INFO ] 04-03-2024 15:49:28.226 [main] [/users_products_api] - Initializing Spring embedded WebApplicationContext
[INFO ] 04-03-2024 15:49:28.235 [main] ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 6599 ms
[INFO ] 04-03-2024 15:49:29.935 [main] Version - HHH000412: Hibernate ORM core version 6.2.6.Final
[INFO ] 04-03-2024 15:49:29.985 [main] Environment - HHH000406: Using bytecode reflection optimizer
[DEBUG] 04-03-2024 15:49:30.777 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@534762ed
[DEBUG] 04-03-2024 15:49:30.778 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@534762ed
[DEBUG] 04-03-2024 15:49:30.779 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@534762ed
[DEBUG] 04-03-2024 15:49:30.780 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@6c421123
[DEBUG] 04-03-2024 15:49:30.780 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@6c421123
[DEBUG] 04-03-2024 15:49:30.781 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@38e00b47
[DEBUG] 04-03-2024 15:49:30.781 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@38e00b47
[DEBUG] 04-03-2024 15:49:30.782 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@2a631049
[DEBUG] 04-03-2024 15:49:30.782 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@2a631049
[DEBUG] 04-03-2024 15:49:30.783 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@425b5fe2
[DEBUG] 04-03-2024 15:49:30.783 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@425b5fe2
[DEBUG] 04-03-2024 15:49:30.784 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@425b5fe2
[DEBUG] 04-03-2024 15:49:30.785 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@3eec8583
[DEBUG] 04-03-2024 15:49:30.786 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@3eec8583
[DEBUG] 04-03-2024 15:49:30.787 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@3eec8583
[DEBUG] 04-03-2024 15:49:30.787 [main] BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@66e1b2a
[DEBUG] 04-03-2024 15:49:30.787 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@66e1b2a
[DEBUG] 04-03-2024 15:49:30.788 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@343db2f6
[DEBUG] 04-03-2024 15:49:30.789 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@2c815fdc
[DEBUG] 04-03-2024 15:49:30.789 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@2c815fdc
[DEBUG] 04-03-2024 15:49:30.790 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@769b0752
[DEBUG] 04-03-2024 15:49:30.790 [main] BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@dae5e0
[DEBUG] 04-03-2024 15:49:30.791 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@59a94d0f
[DEBUG] 04-03-2024 15:49:30.791 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@59a94d0f
[DEBUG] 04-03-2024 15:49:30.792 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@59a94d0f
[DEBUG] 04-03-2024 15:49:30.792 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@7ff09659
[DEBUG] 04-03-2024 15:49:30.793 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@7ff09659
[DEBUG] 04-03-2024 15:49:30.793 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@7ff09659
[DEBUG] 04-03-2024 15:49:30.794 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@517fbf62
[DEBUG] 04-03-2024 15:49:30.795 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@517fbf62
[DEBUG] 04-03-2024 15:49:30.795 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@517fbf62
[DEBUG] 04-03-2024 15:49:30.795 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@65db548
[DEBUG] 04-03-2024 15:49:30.796 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@65db548
[DEBUG] 04-03-2024 15:49:30.796 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@65db548
[DEBUG] 04-03-2024 15:49:30.796 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@150f41b9
[DEBUG] 04-03-2024 15:49:30.797 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@150f41b9
[DEBUG] 04-03-2024 15:49:30.797 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@150f41b9
[DEBUG] 04-03-2024 15:49:30.798 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@6e364f1f
[DEBUG] 04-03-2024 15:49:30.799 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@6e364f1f
[DEBUG] 04-03-2024 15:49:30.799 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@429e7914
[DEBUG] 04-03-2024 15:49:30.799 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@429e7914
[DEBUG] 04-03-2024 15:49:30.800 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@298263fa
[DEBUG] 04-03-2024 15:49:30.800 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@298263fa
[DEBUG] 04-03-2024 15:49:30.801 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@298263fa
[DEBUG] 04-03-2024 15:49:30.801 [main] BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@466fedfa
[DEBUG] 04-03-2024 15:49:30.802 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@1a7d0c9f
[DEBUG] 04-03-2024 15:49:30.803 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@1a7d0c9f
[DEBUG] 04-03-2024 15:49:30.803 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@2b1a901d
[DEBUG] 04-03-2024 15:49:30.803 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@11bdab37
[DEBUG] 04-03-2024 15:49:30.804 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@11bdab37
[DEBUG] 04-03-2024 15:49:30.804 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@11bdab37
[DEBUG] 04-03-2024 15:49:30.804 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@280484c7
[DEBUG] 04-03-2024 15:49:30.805 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@5a6f6cac
[DEBUG] 04-03-2024 15:49:30.805 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@258a8584
[DEBUG] 04-03-2024 15:49:30.806 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@59127611
[DEBUG] 04-03-2024 15:49:30.806 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@59127611
[DEBUG] 04-03-2024 15:49:30.807 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@553ce348
[DEBUG] 04-03-2024 15:49:30.807 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@553ce348
[DEBUG] 04-03-2024 15:49:30.807 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@7417ef4f
[DEBUG] 04-03-2024 15:49:30.808 [main] BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@5c0e2ec
[DEBUG] 04-03-2024 15:49:30.808 [main] BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@4fa8bebb
[DEBUG] 04-03-2024 15:49:30.809 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@7d3c22a5
[DEBUG] 04-03-2024 15:49:30.811 [main] BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@369ad7da
[DEBUG] 04-03-2024 15:49:30.811 [main] BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@344f9467
[DEBUG] 04-03-2024 15:49:30.812 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@3e98b933
[DEBUG] 04-03-2024 15:49:30.815 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@3e98b933
[DEBUG] 04-03-2024 15:49:30.816 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@222d9d4f
[DEBUG] 04-03-2024 15:49:30.816 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@222d9d4f
[DEBUG] 04-03-2024 15:49:30.817 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@4269aad7
[DEBUG] 04-03-2024 15:49:30.817 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@4269aad7
[DEBUG] 04-03-2024 15:49:30.818 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@a4df251
[DEBUG] 04-03-2024 15:49:30.823 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@a4df251
[DEBUG] 04-03-2024 15:49:30.824 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@71e7830a
[DEBUG] 04-03-2024 15:49:30.824 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@71e7830a
[DEBUG] 04-03-2024 15:49:30.825 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@3feebf9c
[DEBUG] 04-03-2024 15:49:30.825 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@305e95a4
[DEBUG] 04-03-2024 15:49:30.826 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@55e42684
[DEBUG] 04-03-2024 15:49:30.826 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@55e42684
[DEBUG] 04-03-2024 15:49:30.828 [main] BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@18d610e1
[DEBUG] 04-03-2024 15:49:30.828 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@528e5e38
[DEBUG] 04-03-2024 15:49:30.829 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@16391278
[DEBUG] 04-03-2024 15:49:30.830 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@621dc63d
[DEBUG] 04-03-2024 15:49:30.831 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@621dc63d
[DEBUG] 04-03-2024 15:49:30.831 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@4ae49387
[DEBUG] 04-03-2024 15:49:30.831 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@6abb7b7d
[DEBUG] 04-03-2024 15:49:30.832 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@34cf0e80
[DEBUG] 04-03-2024 15:49:30.832 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@34cf0e80
[DEBUG] 04-03-2024 15:49:30.832 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@38ef1a0a
[DEBUG] 04-03-2024 15:49:30.833 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@38ef1a0a
[DEBUG] 04-03-2024 15:49:30.833 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@56f9de3b
[DEBUG] 04-03-2024 15:49:30.834 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@56f9de3b
[DEBUG] 04-03-2024 15:49:30.834 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@56f9de3b
[DEBUG] 04-03-2024 15:49:30.835 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@6728370a
[DEBUG] 04-03-2024 15:49:30.835 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@6728370a
[DEBUG] 04-03-2024 15:49:30.836 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@6728370a
[DEBUG] 04-03-2024 15:49:30.836 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@2b5f8e61
[DEBUG] 04-03-2024 15:49:30.836 [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@6ba0ee4a
[DEBUG] 04-03-2024 15:49:30.837 [main] BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@73b0ed03
[DEBUG] 04-03-2024 15:49:30.837 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@73b0ed03
[DEBUG] 04-03-2024 15:49:30.838 [main] BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@55061418
[DEBUG] 04-03-2024 15:49:30.838 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@55061418
[DEBUG] 04-03-2024 15:49:30.839 [main] BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@55061418
[DEBUG] 04-03-2024 15:49:30.839 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@27db45f
[DEBUG] 04-03-2024 15:49:30.839 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@6ec3d8e4
[DEBUG] 04-03-2024 15:49:30.840 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@1aeff8ca
[DEBUG] 04-03-2024 15:49:30.840 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@1aeff8ca
[DEBUG] 04-03-2024 15:49:30.840 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@7f2c995b
[DEBUG] 04-03-2024 15:49:30.841 [main] BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@7f2c995b
[DEBUG] 04-03-2024 15:49:30.841 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@7f2c995b
[DEBUG] 04-03-2024 15:49:30.843 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@101c15ad
[DEBUG] 04-03-2024 15:49:30.843 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@101c15ad
[DEBUG] 04-03-2024 15:49:30.843 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@6068ebb2
[DEBUG] 04-03-2024 15:49:30.844 [main] BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@6068ebb2
[DEBUG] 04-03-2024 15:49:30.844 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@5a466dd
[DEBUG] 04-03-2024 15:49:30.844 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@5a466dd
[DEBUG] 04-03-2024 15:49:30.845 [main] BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@1ed9d173
[DEBUG] 04-03-2024 15:49:30.845 [main] BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@1ed9d173
[DEBUG] 04-03-2024 15:49:30.845 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@6e981e78
[DEBUG] 04-03-2024 15:49:30.846 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@6e981e78
[DEBUG] 04-03-2024 15:49:30.846 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@498a4d62
[DEBUG] 04-03-2024 15:49:30.863 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@6c830ebd
[DEBUG] 04-03-2024 15:49:30.863 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@6c830ebd
[DEBUG] 04-03-2024 15:49:30.866 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@4bf8b77
[DEBUG] 04-03-2024 15:49:30.866 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@e06ec83
[DEBUG] 04-03-2024 15:49:30.867 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@628962e5
[DEBUG] 04-03-2024 15:49:30.867 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@410382cb
[DEBUG] 04-03-2024 15:49:30.867 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@399f5daf
[DEBUG] 04-03-2024 15:49:30.868 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@c4cceb
[DEBUG] 04-03-2024 15:49:30.868 [main] BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@29f3185c
[DEBUG] 04-03-2024 15:49:30.868 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@74bbc273
[DEBUG] 04-03-2024 15:49:30.868 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@370a8b6e
[DEBUG] 04-03-2024 15:49:32.503 [main] DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@160546b1) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@103e7c7c)
[DEBUG] 04-03-2024 15:49:32.509 [main] JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
[DEBUG] 04-03-2024 15:49:32.510 [main] JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 04-03-2024 15:49:32.531 [main] BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@6cbbfe29
[DEBUG] 04-03-2024 15:49:32.532 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@6cbbfe29
[DEBUG] 04-03-2024 15:49:32.533 [main] BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@6c830ebd`
[DEBUG] 04-03-2024 15:49:32.537 [main] JdbcTypeRegistry - addDescriptor(3100, NumericTypeDescriptor) replaced previous registration(org.hibernate.dialect.PostgreSQLIntervalSecondJdbcType@5be69f7e)
[DEBUG] 04-03-2024 15:49:32.553 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 04-03-2024 15:49:32.555 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 04-03-2024 15:49:32.555 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 04-03-2024 15:49:32.556 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 04-03-2024 15:49:32.556 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 04-03-2024 15:49:32.556 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 04-03-2024 15:49:32.558 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 04-03-2024 15:49:32.559 [main] BasicTypeRegistry - Adding type registration OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 04-03-2024 15:49:32.559 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 04-03-2024 15:49:32.563 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5dce5c03] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@b76b7d8]
[WARN ] 04-03-2024 15:49:32.988 [main] InFlightMetadataCollectorImpl - HHH000069: Duplicate generator name generator
[INFO ] 04-03-2024 15:49:33.173 [main] BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
[INFO ] 04-03-2024 15:49:36.181 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 04-03-2024 15:49:36.182 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5dce5c03] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@408980aa]
[TRACE] 04-03-2024 15:49:36.189 [main] TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@408980aa] for TypeConfiguration
[WARN ] 04-03-2024 15:49:36.625 [main] JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[INFO ] 04-03-2024 15:49:37.602 [main] Http11NioProtocol - Starting ProtocolHandler ["http-nio-8300"]
[INFO ] 04-03-2024 15:49:37.661 [main] TomcatWebServer - Tomcat started on port(s): 8300 (http) with context path '/users_products_api'
[INFO ] 04-03-2024 15:49:37.695 [main] TestSpringBootApplication - Started TestSpringBootApplication in 17.664 seconds (process running for 21.133)
[INFO ] 04-03-2024 15:49:49.385 [http-nio-8300-exec-1] [/users_products_api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[INFO ] 04-03-2024 15:49:49.386 [http-nio-8300-exec-1] DispatcherServlet - Initializing Servlet 'dispatcherServlet'
[INFO ] 04-03-2024 15:49:49.389 [http-nio-8300-exec-1] DispatcherServlet - Completed initialization in 3 ms
[TRACE] 04-03-2024 15:52:05.574 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@408980aa] for TypeConfiguration
[DEBUG] 04-03-2024 15:52:05.575 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@1faf162b] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@408980aa]
[INFO ] 04-03-2024 15:52:18.070 [background-preinit] Version - HV000001: Hibernate Validator 8.0.1.Final
[INFO ] 04-03-2024 15:52:18.323 [main] TestSpringBootApplication - Starting TestSpringBootApplication using Java 17.0.10 with PID 2302440 (/home/dima/backend_microservice/UserProductsMicroService/target/classes started by dima in /home/dima/backend_microservice/UserProductsMicroService)
[INFO ] 04-03-2024 15:52:18.335 [main] TestSpringBootApplication - No active profile set, falling back to 1 default profile: "default"
[INFO ] 04-03-2024 15:52:21.443 [main] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
[INFO ] 04-03-2024 15:52:21.459 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO ] 04-03-2024 15:52:21.555 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 54 ms. Found 0 JPA repository interfaces.
[INFO ] 04-03-2024 15:52:21.666 [main] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
[INFO ] 04-03-2024 15:52:21.674 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data R2DBC repositories in DEFAULT mode.
[INFO ] 04-03-2024 15:52:21.680 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 3 ms. Found 0 R2DBC repository interfaces.
[ERROR] 04-03-2024 15:52:23.130 [main] AprLifecycleListener - An incompatible version [1.2.23] of the Apache Tomcat Native library is installed, while Tomcat requires version [1.2.34]
[INFO ] 04-03-2024 15:52:23.971 [main] TomcatWebServer - Tomcat initialized with port(s): 8300 (http)
[INFO ] 04-03-2024 15:52:24.005 [main] Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8300"]
[INFO ] 04-03-2024 15:52:24.017 [main] StandardService - Starting service [Tomcat]
[INFO ] 04-03-2024 15:52:24.018 [main] StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.11]
[INFO ] 04-03-2024 15:52:25.249 [main] TldScanner - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
[INFO ] 04-03-2024 15:52:25.270 [main] [/users_products_api] - Initializing Spring embedded WebApplicationContext
[INFO ] 04-03-2024 15:52:25.276 [main] ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 6792 ms
[WARN ] 04-03-2024 15:52:25.447 [main] AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'CRUDUserProducts': Unsatisfied dependency expressed through field 'dao': Error creating bean with name 'DAOUserProducts': Unsatisfied dependency expressed through field 'rep': No qualifying bean of type 'repository.CustomizedUserProductsCrudRepository' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
[INFO ] 04-03-2024 15:52:25.456 [main] StandardService - Stopping service [Tomcat]
[INFO ] 04-03-2024 15:52:25.523 [main] ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
[ERROR] 04-03-2024 15:52:25.603 [main] LoggingFailureAnalysisReporter - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Field rep in DAO.DAOUserProducts required a bean of type 'repository.CustomizedUserProductsCrudRepository' that could not be found.

The injection point has the following annotations:
	- @org.springframework.beans.factory.annotation.Autowired(required=true)


Action:

Consider defining a bean of type 'repository.CustomizedUserProductsCrudRepository' in your configuration.

[INFO ] 04-03-2024 15:53:24.769 [background-preinit] Version - HV000001: Hibernate Validator 8.0.1.Final
[INFO ] 04-03-2024 15:53:24.876 [main] TestSpringBootApplication - Starting TestSpringBootApplication using Java 17.0.10 with PID 2303086 (/home/dima/backend_microservice/UserProductsMicroService/target/classes started by dima in /home/dima/backend_microservice/UserProductsMicroService)
[INFO ] 04-03-2024 15:53:24.887 [main] TestSpringBootApplication - No active profile set, falling back to 1 default profile: "default"
[INFO ] 04-03-2024 15:53:27.039 [main] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
[INFO ] 04-03-2024 15:53:27.045 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO ] 04-03-2024 15:53:27.105 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 40 ms. Found 0 JPA repository interfaces.
[INFO ] 04-03-2024 15:53:27.156 [main] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
[INFO ] 04-03-2024 15:53:27.158 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data R2DBC repositories in DEFAULT mode.
[INFO ] 04-03-2024 15:53:27.162 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 2 ms. Found 0 R2DBC repository interfaces.
[ERROR] 04-03-2024 15:53:28.531 [main] AprLifecycleListener - An incompatible version [1.2.23] of the Apache Tomcat Native library is installed, while Tomcat requires version [1.2.34]
[INFO ] 04-03-2024 15:53:29.265 [main] TomcatWebServer - Tomcat initialized with port(s): 8300 (http)
[INFO ] 04-03-2024 15:53:29.286 [main] Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8300"]
[INFO ] 04-03-2024 15:53:29.293 [main] StandardService - Starting service [Tomcat]
[INFO ] 04-03-2024 15:53:29.294 [main] StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.11]
[INFO ] 04-03-2024 15:53:30.638 [main] TldScanner - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
[INFO ] 04-03-2024 15:53:30.655 [main] [/users_products_api] - Initializing Spring embedded WebApplicationContext
[INFO ] 04-03-2024 15:53:30.660 [main] ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 5625 ms
[WARN ] 04-03-2024 15:53:30.840 [main] AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'CRUDUserProducts': Unsatisfied dependency expressed through field 'dao': Error creating bean with name 'DAOUserProducts': Unsatisfied dependency expressed through field 'factory': Error creating bean with name 'r2dbcScriptDatabaseInitializer' defined in class path resource [org/springframework/boot/autoconfigure/sql/init/R2dbcInitializationConfiguration.class]: Unsatisfied dependency expressed through method 'r2dbcScriptDatabaseInitializer' parameter 0: Error creating bean with name 'connectionFactory' defined in class path resource [org/springframework/boot/autoconfigure/r2dbc/ConnectionFactoryConfigurations$PoolConfiguration$PooledConnectionFactoryConfiguration.class]: Failed to instantiate [io.r2dbc.pool.ConnectionPool]: Factory method 'connectionFactory' threw exception with message: Failed to determine a suitable R2DBC Connection URL
[INFO ] 04-03-2024 15:53:30.851 [main] StandardService - Stopping service [Tomcat]
[INFO ] 04-03-2024 15:53:30.933 [main] ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
[ERROR] 04-03-2024 15:53:30.995 [main] LoggingFailureAnalysisReporter - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Failed to configure a ConnectionFactory: 'url' attribute is not specified and no embedded database could be configured.

Reason: Failed to determine a suitable R2DBC Connection URL


Action:

Consider the following:
	If you want an embedded database (H2), please put it on the classpath.
	If you have database settings to be loaded from a particular profile you may need to activate it (no profiles are currently active).

[INFO ] 04-03-2024 15:55:14.649 [background-preinit] Version - HV000001: Hibernate Validator 8.0.1.Final
[INFO ] 04-03-2024 15:55:14.776 [main] TestSpringBootApplication - Starting TestSpringBootApplication using Java 17.0.10 with PID 2304078 (/home/dima/backend_microservice/UserProductsMicroService/target/classes started by dima in /home/dima/backend_microservice/UserProductsMicroService)
[INFO ] 04-03-2024 15:55:14.789 [main] TestSpringBootApplication - No active profile set, falling back to 1 default profile: "default"
[INFO ] 04-03-2024 15:55:17.252 [main] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
[INFO ] 04-03-2024 15:55:17.258 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO ] 04-03-2024 15:55:17.395 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 49 ms. Found 0 JPA repository interfaces.
[INFO ] 04-03-2024 15:55:17.500 [main] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
[INFO ] 04-03-2024 15:55:17.507 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data R2DBC repositories in DEFAULT mode.
[INFO ] 04-03-2024 15:55:17.511 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 3 ms. Found 0 R2DBC repository interfaces.
[ERROR] 04-03-2024 15:55:19.099 [main] AprLifecycleListener - An incompatible version [1.2.23] of the Apache Tomcat Native library is installed, while Tomcat requires version [1.2.34]
[INFO ] 04-03-2024 15:55:19.888 [main] TomcatWebServer - Tomcat initialized with port(s): 8300 (http)
[INFO ] 04-03-2024 15:55:19.916 [main] Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8300"]
[INFO ] 04-03-2024 15:55:19.926 [main] StandardService - Starting service [Tomcat]
[INFO ] 04-03-2024 15:55:19.928 [main] StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.11]
[INFO ] 04-03-2024 15:55:21.145 [main] TldScanner - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
[INFO ] 04-03-2024 15:55:21.164 [main] [/users_products_api] - Initializing Spring embedded WebApplicationContext
[INFO ] 04-03-2024 15:55:21.169 [main] ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 6114 ms
[WARN ] 04-03-2024 15:55:21.376 [main] AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'CRUDUserProducts': Unsatisfied dependency expressed through field 'dao': Error creating bean with name 'DAOUserProducts': Unsatisfied dependency expressed through field 'factory': Error creating bean with name 'r2dbcScriptDatabaseInitializer' defined in class path resource [org/springframework/boot/autoconfigure/sql/init/R2dbcInitializationConfiguration.class]: Unsatisfied dependency expressed through method 'r2dbcScriptDatabaseInitializer' parameter 0: Error creating bean with name 'connectionFactory' defined in class path resource [org/springframework/boot/autoconfigure/r2dbc/ConnectionFactoryConfigurations$PoolConfiguration$PooledConnectionFactoryConfiguration.class]: Failed to instantiate [io.r2dbc.pool.ConnectionPool]: Factory method 'connectionFactory' threw exception with message: Failed to determine a suitable R2DBC Connection URL
[INFO ] 04-03-2024 15:55:21.388 [main] StandardService - Stopping service [Tomcat]
[INFO ] 04-03-2024 15:55:21.465 [main] ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
[ERROR] 04-03-2024 15:55:21.512 [main] LoggingFailureAnalysisReporter - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Failed to configure a ConnectionFactory: 'url' attribute is not specified and no embedded database could be configured.

Reason: Failed to determine a suitable R2DBC Connection URL


Action:

Consider the following:
	If you want an embedded database (H2), please put it on the classpath.
	If you have database settings to be loaded from a particular profile you may need to activate it (no profiles are currently active).

[INFO ] 04-03-2024 16:01:26.617 [background-preinit] Version - HV000001: Hibernate Validator 8.0.1.Final
[INFO ] 04-03-2024 16:01:26.783 [main] TestSpringBootApplication - Starting TestSpringBootApplication using Java 17.0.10 with PID 2307582 (/home/dima/backend_microservice/UserProductsMicroService/target/classes started by dima in /home/dima/backend_microservice/UserProductsMicroService)
[INFO ] 04-03-2024 16:01:26.800 [main] TestSpringBootApplication - No active profile set, falling back to 1 default profile: "default"
[INFO ] 04-03-2024 16:01:29.697 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO ] 04-03-2024 16:01:29.821 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 93 ms. Found 0 JPA repository interfaces.
[ERROR] 04-03-2024 16:01:31.259 [main] AprLifecycleListener - An incompatible version [1.2.23] of the Apache Tomcat Native library is installed, while Tomcat requires version [1.2.34]
[INFO ] 04-03-2024 16:01:32.178 [main] TomcatWebServer - Tomcat initialized with port(s): 8300 (http)
[INFO ] 04-03-2024 16:01:32.202 [main] Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8300"]
[INFO ] 04-03-2024 16:01:32.211 [main] StandardService - Starting service [Tomcat]
[INFO ] 04-03-2024 16:01:32.212 [main] StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.11]
[INFO ] 04-03-2024 16:01:33.242 [main] TldScanner - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
[INFO ] 04-03-2024 16:01:33.262 [main] [/users_products_api] - Initializing Spring embedded WebApplicationContext
[INFO ] 04-03-2024 16:01:33.266 [main] ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 6210 ms
[INFO ] 04-03-2024 16:01:33.617 [main] Version - HHH000412: Hibernate ORM core version 6.2.6.Final
[INFO ] 04-03-2024 16:01:33.631 [main] Environment - HHH000406: Using bytecode reflection optimizer
[DEBUG] 04-03-2024 16:01:34.178 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@5d2a86c0
[DEBUG] 04-03-2024 16:01:34.179 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@5d2a86c0
[DEBUG] 04-03-2024 16:01:34.179 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@5d2a86c0
[DEBUG] 04-03-2024 16:01:34.180 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@5ba1b62e
[DEBUG] 04-03-2024 16:01:34.182 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@5ba1b62e
[DEBUG] 04-03-2024 16:01:34.182 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@65bd19bf
[DEBUG] 04-03-2024 16:01:34.182 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@65bd19bf
[DEBUG] 04-03-2024 16:01:34.183 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@74697863
[DEBUG] 04-03-2024 16:01:34.183 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@74697863
[DEBUG] 04-03-2024 16:01:34.184 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@7d7ceca8
[DEBUG] 04-03-2024 16:01:34.184 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@7d7ceca8
[DEBUG] 04-03-2024 16:01:34.185 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@7d7ceca8
[DEBUG] 04-03-2024 16:01:34.185 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@2bba35ef
[DEBUG] 04-03-2024 16:01:34.186 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@2bba35ef
[DEBUG] 04-03-2024 16:01:34.186 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@2bba35ef
[DEBUG] 04-03-2024 16:01:34.187 [main] BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@26c7b1c6
[DEBUG] 04-03-2024 16:01:34.188 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@26c7b1c6
[DEBUG] 04-03-2024 16:01:34.188 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@19526f1d
[DEBUG] 04-03-2024 16:01:34.189 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@3d1c933
[DEBUG] 04-03-2024 16:01:34.189 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@3d1c933
[DEBUG] 04-03-2024 16:01:34.191 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@79be91eb
[DEBUG] 04-03-2024 16:01:34.191 [main] BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@626c569b
[DEBUG] 04-03-2024 16:01:34.192 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@684ce74c
[DEBUG] 04-03-2024 16:01:34.192 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@684ce74c
[DEBUG] 04-03-2024 16:01:34.192 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@684ce74c
[DEBUG] 04-03-2024 16:01:34.193 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@65593327
[DEBUG] 04-03-2024 16:01:34.193 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@65593327
[DEBUG] 04-03-2024 16:01:34.194 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@65593327
[DEBUG] 04-03-2024 16:01:34.195 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@68e5c7ae
[DEBUG] 04-03-2024 16:01:34.196 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@68e5c7ae
[DEBUG] 04-03-2024 16:01:34.196 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@68e5c7ae
[DEBUG] 04-03-2024 16:01:34.197 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@68bd8ca7
[DEBUG] 04-03-2024 16:01:34.197 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@68bd8ca7
[DEBUG] 04-03-2024 16:01:34.198 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@68bd8ca7
[DEBUG] 04-03-2024 16:01:34.198 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@6744707b
[DEBUG] 04-03-2024 16:01:34.199 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@6744707b
[DEBUG] 04-03-2024 16:01:34.199 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@6744707b
[DEBUG] 04-03-2024 16:01:34.200 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@4b28a7bf
[DEBUG] 04-03-2024 16:01:34.200 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@4b28a7bf
[DEBUG] 04-03-2024 16:01:34.201 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@d36c1c3
[DEBUG] 04-03-2024 16:01:34.201 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@d36c1c3
[DEBUG] 04-03-2024 16:01:34.201 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@96abc76
[DEBUG] 04-03-2024 16:01:34.201 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@96abc76
[DEBUG] 04-03-2024 16:01:34.202 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@96abc76
[DEBUG] 04-03-2024 16:01:34.203 [main] BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@4d69d288
[DEBUG] 04-03-2024 16:01:34.204 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@437281c5
[DEBUG] 04-03-2024 16:01:34.205 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@437281c5
[DEBUG] 04-03-2024 16:01:34.205 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@787178b1
[DEBUG] 04-03-2024 16:01:34.206 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@24a4e2c5
[DEBUG] 04-03-2024 16:01:34.207 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@24a4e2c5
[DEBUG] 04-03-2024 16:01:34.207 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@24a4e2c5
[DEBUG] 04-03-2024 16:01:34.207 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@27da994b
[DEBUG] 04-03-2024 16:01:34.207 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@70f148dc
[DEBUG] 04-03-2024 16:01:34.207 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@3360283
[DEBUG] 04-03-2024 16:01:34.208 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@77aea
[DEBUG] 04-03-2024 16:01:34.208 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@77aea
[DEBUG] 04-03-2024 16:01:34.208 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@73e4bb60
[DEBUG] 04-03-2024 16:01:34.208 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@73e4bb60
[DEBUG] 04-03-2024 16:01:34.209 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@9a9aa68
[DEBUG] 04-03-2024 16:01:34.209 [main] BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@3a3883c4
[DEBUG] 04-03-2024 16:01:34.210 [main] BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@1537e43
[DEBUG] 04-03-2024 16:01:34.210 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@573aeab2
[DEBUG] 04-03-2024 16:01:34.211 [main] BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@1304e0d7
[DEBUG] 04-03-2024 16:01:34.211 [main] BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@6ddc67d0
[DEBUG] 04-03-2024 16:01:34.212 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@7767bd4e
[DEBUG] 04-03-2024 16:01:34.212 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@7767bd4e
[DEBUG] 04-03-2024 16:01:34.213 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@7708b66a
[DEBUG] 04-03-2024 16:01:34.213 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@7708b66a
[DEBUG] 04-03-2024 16:01:34.214 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@433ef204
[DEBUG] 04-03-2024 16:01:34.215 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@433ef204
[DEBUG] 04-03-2024 16:01:34.215 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@4dd2ef54
[DEBUG] 04-03-2024 16:01:34.216 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@4dd2ef54
[DEBUG] 04-03-2024 16:01:34.216 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@795b66d
[DEBUG] 04-03-2024 16:01:34.216 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@795b66d
[DEBUG] 04-03-2024 16:01:34.217 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@359ceb13
[DEBUG] 04-03-2024 16:01:34.217 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@1068176
[DEBUG] 04-03-2024 16:01:34.217 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@5bf4764d
[DEBUG] 04-03-2024 16:01:34.218 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@5bf4764d
[DEBUG] 04-03-2024 16:01:34.218 [main] BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@71789580
[DEBUG] 04-03-2024 16:01:34.219 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@23ee2ccf
[DEBUG] 04-03-2024 16:01:34.219 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@165614f5
[DEBUG] 04-03-2024 16:01:34.220 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@6e685e6c
[DEBUG] 04-03-2024 16:01:34.220 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@6e685e6c
[DEBUG] 04-03-2024 16:01:34.221 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@5b0902b4
[DEBUG] 04-03-2024 16:01:34.221 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@9d3d54e
[DEBUG] 04-03-2024 16:01:34.221 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@2f04993d
[DEBUG] 04-03-2024 16:01:34.222 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@2f04993d
[DEBUG] 04-03-2024 16:01:34.222 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@333398f
[DEBUG] 04-03-2024 16:01:34.222 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@333398f
[DEBUG] 04-03-2024 16:01:34.223 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@103c97ff
[DEBUG] 04-03-2024 16:01:34.223 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@103c97ff
[DEBUG] 04-03-2024 16:01:34.223 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@103c97ff
[DEBUG] 04-03-2024 16:01:34.223 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@7d25913
[DEBUG] 04-03-2024 16:01:34.224 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@7d25913
[DEBUG] 04-03-2024 16:01:34.224 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@7d25913
[DEBUG] 04-03-2024 16:01:34.224 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@c14e5a5
[DEBUG] 04-03-2024 16:01:34.225 [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@16f15ae9
[DEBUG] 04-03-2024 16:01:34.225 [main] BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@6206b4a7
[DEBUG] 04-03-2024 16:01:34.226 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@6206b4a7
[DEBUG] 04-03-2024 16:01:34.226 [main] BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@77896335
[DEBUG] 04-03-2024 16:01:34.227 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@77896335
[DEBUG] 04-03-2024 16:01:34.227 [main] BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@77896335
[DEBUG] 04-03-2024 16:01:34.227 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@5c1b89ac
[DEBUG] 04-03-2024 16:01:34.228 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@40a1b6d4
[DEBUG] 04-03-2024 16:01:34.228 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@175581eb
[DEBUG] 04-03-2024 16:01:34.228 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@175581eb
[DEBUG] 04-03-2024 16:01:34.229 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@2b79c8ff
[DEBUG] 04-03-2024 16:01:34.230 [main] BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@2b79c8ff
[DEBUG] 04-03-2024 16:01:34.230 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@2b79c8ff
[DEBUG] 04-03-2024 16:01:34.230 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@2baf72d5
[DEBUG] 04-03-2024 16:01:34.231 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@2baf72d5
[DEBUG] 04-03-2024 16:01:34.231 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@66756662
[DEBUG] 04-03-2024 16:01:34.232 [main] BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@66756662
[DEBUG] 04-03-2024 16:01:34.233 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@5d14e99e
[DEBUG] 04-03-2024 16:01:34.233 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@5d14e99e
[DEBUG] 04-03-2024 16:01:34.233 [main] BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@38cfecf3
[DEBUG] 04-03-2024 16:01:34.234 [main] BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@38cfecf3
[DEBUG] 04-03-2024 16:01:34.234 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@682618e5
[DEBUG] 04-03-2024 16:01:34.235 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@682618e5
[DEBUG] 04-03-2024 16:01:34.235 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@25ad25f5
[DEBUG] 04-03-2024 16:01:34.254 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@68aec50
[DEBUG] 04-03-2024 16:01:34.255 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@68aec50
[DEBUG] 04-03-2024 16:01:34.258 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@22f8adc2
[DEBUG] 04-03-2024 16:01:34.259 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@69d103f0
[DEBUG] 04-03-2024 16:01:34.259 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@5b742bc8
[DEBUG] 04-03-2024 16:01:34.260 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@74fb5b59
[DEBUG] 04-03-2024 16:01:34.260 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@130a6eb9
[DEBUG] 04-03-2024 16:01:34.260 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@722531ab
[DEBUG] 04-03-2024 16:01:34.261 [main] BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@8f57e4c
[DEBUG] 04-03-2024 16:01:34.261 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@26fadd98
[DEBUG] 04-03-2024 16:01:34.261 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@66451058
[DEBUG] 04-03-2024 16:01:35.654 [main] DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@79d4ff58) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7ec13984)
[DEBUG] 04-03-2024 16:01:35.660 [main] JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
[DEBUG] 04-03-2024 16:01:35.660 [main] JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 04-03-2024 16:01:35.681 [main] BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@64ec1459
[DEBUG] 04-03-2024 16:01:35.681 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@64ec1459
[DEBUG] 04-03-2024 16:01:35.682 [main] BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@68aec50`
[DEBUG] 04-03-2024 16:01:35.684 [main] JdbcTypeRegistry - addDescriptor(3100, NumericTypeDescriptor) replaced previous registration(org.hibernate.dialect.PostgreSQLIntervalSecondJdbcType@194b9783)
[DEBUG] 04-03-2024 16:01:35.708 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 04-03-2024 16:01:35.708 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 04-03-2024 16:01:35.709 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 04-03-2024 16:01:35.709 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 04-03-2024 16:01:35.709 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 04-03-2024 16:01:35.710 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 04-03-2024 16:01:35.712 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 04-03-2024 16:01:35.712 [main] BasicTypeRegistry - Adding type registration OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 04-03-2024 16:01:35.713 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 04-03-2024 16:01:35.716 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6e517c9e] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@770cae59]
[WARN ] 04-03-2024 16:01:36.620 [main] InFlightMetadataCollectorImpl - HHH000069: Duplicate generator name generator
[INFO ] 04-03-2024 16:01:36.780 [main] BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
[INFO ] 04-03-2024 16:01:39.735 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 04-03-2024 16:01:39.738 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6e517c9e] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@736f2fb8]
[TRACE] 04-03-2024 16:01:39.747 [main] TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@736f2fb8] for TypeConfiguration
[WARN ] 04-03-2024 16:01:40.210 [main] JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[INFO ] 04-03-2024 16:01:41.296 [main] Http11NioProtocol - Starting ProtocolHandler ["http-nio-8300"]
[INFO ] 04-03-2024 16:01:41.354 [main] TomcatWebServer - Tomcat started on port(s): 8300 (http) with context path '/users_products_api'
[INFO ] 04-03-2024 16:01:41.413 [main] TestSpringBootApplication - Started TestSpringBootApplication in 16.38 seconds (process running for 19.586)
[INFO ] 04-03-2024 16:01:47.130 [http-nio-8300-exec-1] [/users_products_api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[INFO ] 04-03-2024 16:01:47.131 [http-nio-8300-exec-1] DispatcherServlet - Initializing Servlet 'dispatcherServlet'
[INFO ] 04-03-2024 16:01:47.137 [http-nio-8300-exec-1] DispatcherServlet - Completed initialization in 6 ms
[TRACE] 04-03-2024 16:11:20.630 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@736f2fb8] for TypeConfiguration
[DEBUG] 04-03-2024 16:11:20.633 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@1c957b4a] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@736f2fb8]
[INFO ] 04-03-2024 16:11:33.247 [background-preinit] Version - HV000001: Hibernate Validator 8.0.1.Final
[INFO ] 04-03-2024 16:11:33.427 [main] TestSpringBootApplication - Starting TestSpringBootApplication using Java 17.0.10 with PID 2312832 (/home/dima/backend_microservice/UserProductsMicroService/target/classes started by dima in /home/dima/backend_microservice/UserProductsMicroService)
[INFO ] 04-03-2024 16:11:33.441 [main] TestSpringBootApplication - No active profile set, falling back to 1 default profile: "default"
[INFO ] 04-03-2024 16:11:35.717 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO ] 04-03-2024 16:11:35.798 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 50 ms. Found 0 JPA repository interfaces.
[ERROR] 04-03-2024 16:11:37.396 [main] AprLifecycleListener - An incompatible version [1.2.23] of the Apache Tomcat Native library is installed, while Tomcat requires version [1.2.34]
[INFO ] 04-03-2024 16:11:38.384 [main] TomcatWebServer - Tomcat initialized with port(s): 8300 (http)
[INFO ] 04-03-2024 16:11:38.422 [main] Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8300"]
[INFO ] 04-03-2024 16:11:38.443 [main] StandardService - Starting service [Tomcat]
[INFO ] 04-03-2024 16:11:38.447 [main] StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.11]
[INFO ] 04-03-2024 16:11:40.129 [main] TldScanner - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
[INFO ] 04-03-2024 16:11:40.176 [main] [/users_products_api] - Initializing Spring embedded WebApplicationContext
[INFO ] 04-03-2024 16:11:40.181 [main] ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 6573 ms
[INFO ] 04-03-2024 16:11:40.565 [main] Version - HHH000412: Hibernate ORM core version 6.2.6.Final
[INFO ] 04-03-2024 16:11:40.573 [main] Environment - HHH000406: Using bytecode reflection optimizer
[DEBUG] 04-03-2024 16:11:41.012 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@626c569b
[DEBUG] 04-03-2024 16:11:41.013 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@626c569b
[DEBUG] 04-03-2024 16:11:41.014 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@626c569b
[DEBUG] 04-03-2024 16:11:41.014 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@684ce74c
[DEBUG] 04-03-2024 16:11:41.015 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@684ce74c
[DEBUG] 04-03-2024 16:11:41.015 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@65593327
[DEBUG] 04-03-2024 16:11:41.016 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@65593327
[DEBUG] 04-03-2024 16:11:41.016 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@68e5c7ae
[DEBUG] 04-03-2024 16:11:41.017 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@68e5c7ae
[DEBUG] 04-03-2024 16:11:41.017 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@68bd8ca7
[DEBUG] 04-03-2024 16:11:41.017 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@68bd8ca7
[DEBUG] 04-03-2024 16:11:41.018 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@68bd8ca7
[DEBUG] 04-03-2024 16:11:41.019 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@6744707b
[DEBUG] 04-03-2024 16:11:41.019 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@6744707b
[DEBUG] 04-03-2024 16:11:41.019 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@6744707b
[DEBUG] 04-03-2024 16:11:41.020 [main] BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@4b28a7bf
[DEBUG] 04-03-2024 16:11:41.021 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@4b28a7bf
[DEBUG] 04-03-2024 16:11:41.022 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@d36c1c3
[DEBUG] 04-03-2024 16:11:41.022 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@96abc76
[DEBUG] 04-03-2024 16:11:41.022 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@96abc76
[DEBUG] 04-03-2024 16:11:41.023 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@4d69d288
[DEBUG] 04-03-2024 16:11:41.023 [main] BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@437281c5
[DEBUG] 04-03-2024 16:11:41.024 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@787178b1
[DEBUG] 04-03-2024 16:11:41.024 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@787178b1
[DEBUG] 04-03-2024 16:11:41.024 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@787178b1
[DEBUG] 04-03-2024 16:11:41.025 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@24a4e2c5
[DEBUG] 04-03-2024 16:11:41.025 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@24a4e2c5
[DEBUG] 04-03-2024 16:11:41.026 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@24a4e2c5
[DEBUG] 04-03-2024 16:11:41.026 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@27da994b
[DEBUG] 04-03-2024 16:11:41.027 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@27da994b
[DEBUG] 04-03-2024 16:11:41.027 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@27da994b
[DEBUG] 04-03-2024 16:11:41.027 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@70f148dc
[DEBUG] 04-03-2024 16:11:41.028 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@70f148dc
[DEBUG] 04-03-2024 16:11:41.028 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@70f148dc
[DEBUG] 04-03-2024 16:11:41.028 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@3360283
[DEBUG] 04-03-2024 16:11:41.029 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@3360283
[DEBUG] 04-03-2024 16:11:41.029 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@3360283
[DEBUG] 04-03-2024 16:11:41.030 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@77aea
[DEBUG] 04-03-2024 16:11:41.030 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@77aea
[DEBUG] 04-03-2024 16:11:41.031 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@73e4bb60
[DEBUG] 04-03-2024 16:11:41.031 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@73e4bb60
[DEBUG] 04-03-2024 16:11:41.032 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@9a9aa68
[DEBUG] 04-03-2024 16:11:41.032 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@9a9aa68
[DEBUG] 04-03-2024 16:11:41.032 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@9a9aa68
[DEBUG] 04-03-2024 16:11:41.033 [main] BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@3a3883c4
[DEBUG] 04-03-2024 16:11:41.033 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@1537e43
[DEBUG] 04-03-2024 16:11:41.034 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@1537e43
[DEBUG] 04-03-2024 16:11:41.034 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@573aeab2
[DEBUG] 04-03-2024 16:11:41.035 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@1304e0d7
[DEBUG] 04-03-2024 16:11:41.035 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@1304e0d7
[DEBUG] 04-03-2024 16:11:41.036 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@1304e0d7
[DEBUG] 04-03-2024 16:11:41.036 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@6ddc67d0
[DEBUG] 04-03-2024 16:11:41.037 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@7767bd4e
[DEBUG] 04-03-2024 16:11:41.037 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@7708b66a
[DEBUG] 04-03-2024 16:11:41.038 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@433ef204
[DEBUG] 04-03-2024 16:11:41.038 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@433ef204
[DEBUG] 04-03-2024 16:11:41.038 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@4dd2ef54
[DEBUG] 04-03-2024 16:11:41.039 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@4dd2ef54
[DEBUG] 04-03-2024 16:11:41.040 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@795b66d
[DEBUG] 04-03-2024 16:11:41.040 [main] BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@359ceb13
[DEBUG] 04-03-2024 16:11:41.040 [main] BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@1068176
[DEBUG] 04-03-2024 16:11:41.041 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@5bf4764d
[DEBUG] 04-03-2024 16:11:41.041 [main] BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@71789580
[DEBUG] 04-03-2024 16:11:41.041 [main] BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@23ee2ccf
[DEBUG] 04-03-2024 16:11:41.042 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@165614f5
[DEBUG] 04-03-2024 16:11:41.042 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@165614f5
[DEBUG] 04-03-2024 16:11:41.042 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@6e685e6c
[DEBUG] 04-03-2024 16:11:41.043 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@6e685e6c
[DEBUG] 04-03-2024 16:11:41.043 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@5b0902b4
[DEBUG] 04-03-2024 16:11:41.044 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@5b0902b4
[DEBUG] 04-03-2024 16:11:41.044 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@9d3d54e
[DEBUG] 04-03-2024 16:11:41.045 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@9d3d54e
[DEBUG] 04-03-2024 16:11:41.045 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@2f04993d
[DEBUG] 04-03-2024 16:11:41.045 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@2f04993d
[DEBUG] 04-03-2024 16:11:41.046 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@333398f
[DEBUG] 04-03-2024 16:11:41.046 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@103c97ff
[DEBUG] 04-03-2024 16:11:41.046 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@7d25913
[DEBUG] 04-03-2024 16:11:41.047 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@7d25913
[DEBUG] 04-03-2024 16:11:41.047 [main] BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@c14e5a5
[DEBUG] 04-03-2024 16:11:41.048 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@16f15ae9
[DEBUG] 04-03-2024 16:11:41.048 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@6206b4a7
[DEBUG] 04-03-2024 16:11:41.048 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@77896335
[DEBUG] 04-03-2024 16:11:41.048 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@77896335
[DEBUG] 04-03-2024 16:11:41.049 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@5c1b89ac
[DEBUG] 04-03-2024 16:11:41.049 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@40a1b6d4
[DEBUG] 04-03-2024 16:11:41.049 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@175581eb
[DEBUG] 04-03-2024 16:11:41.050 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@175581eb
[DEBUG] 04-03-2024 16:11:41.050 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@2b79c8ff
[DEBUG] 04-03-2024 16:11:41.051 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@2b79c8ff
[DEBUG] 04-03-2024 16:11:41.051 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@2baf72d5
[DEBUG] 04-03-2024 16:11:41.051 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@2baf72d5
[DEBUG] 04-03-2024 16:11:41.051 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@2baf72d5
[DEBUG] 04-03-2024 16:11:41.052 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@66756662
[DEBUG] 04-03-2024 16:11:41.052 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@66756662
[DEBUG] 04-03-2024 16:11:41.052 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@66756662
[DEBUG] 04-03-2024 16:11:41.053 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@5d14e99e
[DEBUG] 04-03-2024 16:11:41.053 [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@38cfecf3
[DEBUG] 04-03-2024 16:11:41.053 [main] BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@682618e5
[DEBUG] 04-03-2024 16:11:41.054 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@682618e5
[DEBUG] 04-03-2024 16:11:41.054 [main] BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@25ad25f5
[DEBUG] 04-03-2024 16:11:41.054 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@25ad25f5
[DEBUG] 04-03-2024 16:11:41.055 [main] BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@25ad25f5
[DEBUG] 04-03-2024 16:11:41.055 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@5f0f70c7
[DEBUG] 04-03-2024 16:11:41.055 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@1860a7a1
[DEBUG] 04-03-2024 16:11:41.055 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@40d96578
[DEBUG] 04-03-2024 16:11:41.056 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@40d96578
[DEBUG] 04-03-2024 16:11:41.056 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@c97721b
[DEBUG] 04-03-2024 16:11:41.057 [main] BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@c97721b
[DEBUG] 04-03-2024 16:11:41.057 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@c97721b
[DEBUG] 04-03-2024 16:11:41.057 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@283ab206
[DEBUG] 04-03-2024 16:11:41.057 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@283ab206
[DEBUG] 04-03-2024 16:11:41.058 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@35fa450f
[DEBUG] 04-03-2024 16:11:41.058 [main] BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@35fa450f
[DEBUG] 04-03-2024 16:11:41.059 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@3e03046d
[DEBUG] 04-03-2024 16:11:41.059 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@3e03046d
[DEBUG] 04-03-2024 16:11:41.059 [main] BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@9b3be1c
[DEBUG] 04-03-2024 16:11:41.060 [main] BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@9b3be1c
[DEBUG] 04-03-2024 16:11:41.060 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@74e497ae
[DEBUG] 04-03-2024 16:11:41.060 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@74e497ae
[DEBUG] 04-03-2024 16:11:41.060 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@13516600
[DEBUG] 04-03-2024 16:11:41.095 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@44fd7ba4
[DEBUG] 04-03-2024 16:11:41.095 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@44fd7ba4
[DEBUG] 04-03-2024 16:11:41.098 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@1e92c3b6
[DEBUG] 04-03-2024 16:11:41.099 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@6ef4cbe1
[DEBUG] 04-03-2024 16:11:41.099 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@207dd1b7
[DEBUG] 04-03-2024 16:11:41.100 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@2baac4a7
[DEBUG] 04-03-2024 16:11:41.100 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@23ad2d17
[DEBUG] 04-03-2024 16:11:41.100 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@6bce4140
[DEBUG] 04-03-2024 16:11:41.100 [main] BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@25f0c5e7
[DEBUG] 04-03-2024 16:11:41.101 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@5882b202
[DEBUG] 04-03-2024 16:11:41.101 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@120df990
[DEBUG] 04-03-2024 16:11:42.464 [main] DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@ae3c140) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6f2d3391)
[DEBUG] 04-03-2024 16:11:42.469 [main] JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
[DEBUG] 04-03-2024 16:11:42.469 [main] JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 04-03-2024 16:11:42.490 [main] BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@1f42366
[DEBUG] 04-03-2024 16:11:42.491 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@1f42366
[DEBUG] 04-03-2024 16:11:42.491 [main] BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@44fd7ba4`
[DEBUG] 04-03-2024 16:11:42.493 [main] JdbcTypeRegistry - addDescriptor(3100, NumericTypeDescriptor) replaced previous registration(org.hibernate.dialect.PostgreSQLIntervalSecondJdbcType@455da438)
[DEBUG] 04-03-2024 16:11:42.508 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 04-03-2024 16:11:42.508 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 04-03-2024 16:11:42.508 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 04-03-2024 16:11:42.509 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 04-03-2024 16:11:42.509 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 04-03-2024 16:11:42.510 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 04-03-2024 16:11:42.512 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 04-03-2024 16:11:42.512 [main] BasicTypeRegistry - Adding type registration OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 04-03-2024 16:11:42.512 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 04-03-2024 16:11:42.515 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7f012923] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@601f264d]
[WARN ] 04-03-2024 16:11:42.954 [main] InFlightMetadataCollectorImpl - HHH000069: Duplicate generator name generator
[INFO ] 04-03-2024 16:11:43.108 [main] BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
[INFO ] 04-03-2024 16:11:45.775 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 04-03-2024 16:11:45.777 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7f012923] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@7fa8fff]
[TRACE] 04-03-2024 16:11:45.785 [main] TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@7fa8fff] for TypeConfiguration
[WARN ] 04-03-2024 16:11:46.178 [main] JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[INFO ] 04-03-2024 16:11:47.413 [main] Http11NioProtocol - Starting ProtocolHandler ["http-nio-8300"]
[INFO ] 04-03-2024 16:11:47.647 [main] TomcatWebServer - Tomcat started on port(s): 8300 (http) with context path '/users_products_api'
[INFO ] 04-03-2024 16:11:47.732 [main] TestSpringBootApplication - Started TestSpringBootApplication in 15.661 seconds (process running for 18.705)
[INFO ] 04-03-2024 16:11:52.175 [http-nio-8300-exec-1] [/users_products_api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[INFO ] 04-03-2024 16:11:52.176 [http-nio-8300-exec-1] DispatcherServlet - Initializing Servlet 'dispatcherServlet'
[INFO ] 04-03-2024 16:11:52.179 [http-nio-8300-exec-1] DispatcherServlet - Completed initialization in 3 ms
[DEBUG] 04-03-2024 16:11:52.552 [http-nio-8300-exec-1] SQL - select e1_0.id,e1_0.email,e1_0.login,e1_0.name,e1_0.password,p1_0.id_user,p1_0.id,p1_0.name,p1_0.page_image,p1_0.price,p1_0.raiting,p1_0.year_issue from users e1_0 left join products p1_0 on e1_0.id=p1_0.id_user where e1_0.id=?
[TRACE] 04-03-2024 16:13:02.222 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@7fa8fff] for TypeConfiguration
[DEBUG] 04-03-2024 16:13:02.223 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@7b0d36c4] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@7fa8fff]
[INFO ] 04-03-2024 16:13:13.226 [background-preinit] Version - HV000001: Hibernate Validator 8.0.1.Final
[INFO ] 04-03-2024 16:13:13.331 [main] TestSpringBootApplication - Starting TestSpringBootApplication using Java 17.0.10 with PID 2313717 (/home/dima/backend_microservice/UserProductsMicroService/target/classes started by dima in /home/dima/backend_microservice/UserProductsMicroService)
[INFO ] 04-03-2024 16:13:13.345 [main] TestSpringBootApplication - No active profile set, falling back to 1 default profile: "default"
[INFO ] 04-03-2024 16:13:15.768 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO ] 04-03-2024 16:13:15.888 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 63 ms. Found 0 JPA repository interfaces.
[ERROR] 04-03-2024 16:13:17.311 [main] AprLifecycleListener - An incompatible version [1.2.23] of the Apache Tomcat Native library is installed, while Tomcat requires version [1.2.34]
[INFO ] 04-03-2024 16:13:18.294 [main] TomcatWebServer - Tomcat initialized with port(s): 8300 (http)
[INFO ] 04-03-2024 16:13:18.356 [main] Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8300"]
[INFO ] 04-03-2024 16:13:18.370 [main] StandardService - Starting service [Tomcat]
[INFO ] 04-03-2024 16:13:18.372 [main] StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.11]
[INFO ] 04-03-2024 16:13:19.583 [main] TldScanner - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
[INFO ] 04-03-2024 16:13:19.605 [main] [/users_products_api] - Initializing Spring embedded WebApplicationContext
[INFO ] 04-03-2024 16:13:19.610 [main] ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 6073 ms
[INFO ] 04-03-2024 16:13:20.276 [main] Version - HHH000412: Hibernate ORM core version 6.2.6.Final
[INFO ] 04-03-2024 16:13:20.294 [main] Environment - HHH000406: Using bytecode reflection optimizer
[DEBUG] 04-03-2024 16:13:21.234 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@2bba35ef
[DEBUG] 04-03-2024 16:13:21.235 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@2bba35ef
[DEBUG] 04-03-2024 16:13:21.235 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@2bba35ef
[DEBUG] 04-03-2024 16:13:21.236 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@26c7b1c6
[DEBUG] 04-03-2024 16:13:21.236 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@26c7b1c6
[DEBUG] 04-03-2024 16:13:21.237 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@19526f1d
[DEBUG] 04-03-2024 16:13:21.237 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@19526f1d
[DEBUG] 04-03-2024 16:13:21.238 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@3d1c933
[DEBUG] 04-03-2024 16:13:21.238 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@3d1c933
[DEBUG] 04-03-2024 16:13:21.239 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@79be91eb
[DEBUG] 04-03-2024 16:13:21.239 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@79be91eb
[DEBUG] 04-03-2024 16:13:21.240 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@79be91eb
[DEBUG] 04-03-2024 16:13:21.240 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@626c569b
[DEBUG] 04-03-2024 16:13:21.241 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@626c569b
[DEBUG] 04-03-2024 16:13:21.241 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@626c569b
[DEBUG] 04-03-2024 16:13:21.242 [main] BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@684ce74c
[DEBUG] 04-03-2024 16:13:21.242 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@684ce74c
[DEBUG] 04-03-2024 16:13:21.243 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@65593327
[DEBUG] 04-03-2024 16:13:21.243 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@68e5c7ae
[DEBUG] 04-03-2024 16:13:21.244 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@68e5c7ae
[DEBUG] 04-03-2024 16:13:21.244 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@68bd8ca7
[DEBUG] 04-03-2024 16:13:21.245 [main] BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@6744707b
[DEBUG] 04-03-2024 16:13:21.245 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@4b28a7bf
[DEBUG] 04-03-2024 16:13:21.246 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@4b28a7bf
[DEBUG] 04-03-2024 16:13:21.247 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@4b28a7bf
[DEBUG] 04-03-2024 16:13:21.247 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@d36c1c3
[DEBUG] 04-03-2024 16:13:21.248 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@d36c1c3
[DEBUG] 04-03-2024 16:13:21.248 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@d36c1c3
[DEBUG] 04-03-2024 16:13:21.249 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@96abc76
[DEBUG] 04-03-2024 16:13:21.249 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@96abc76
[DEBUG] 04-03-2024 16:13:21.249 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@96abc76
[DEBUG] 04-03-2024 16:13:21.250 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@4d69d288
[DEBUG] 04-03-2024 16:13:21.250 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@4d69d288
[DEBUG] 04-03-2024 16:13:21.251 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@4d69d288
[DEBUG] 04-03-2024 16:13:21.251 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@437281c5
[DEBUG] 04-03-2024 16:13:21.252 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@437281c5
[DEBUG] 04-03-2024 16:13:21.252 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@437281c5
[DEBUG] 04-03-2024 16:13:21.253 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@787178b1
[DEBUG] 04-03-2024 16:13:21.253 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@787178b1
[DEBUG] 04-03-2024 16:13:21.254 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@24a4e2c5
[DEBUG] 04-03-2024 16:13:21.254 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@24a4e2c5
[DEBUG] 04-03-2024 16:13:21.254 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@27da994b
[DEBUG] 04-03-2024 16:13:21.255 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@27da994b
[DEBUG] 04-03-2024 16:13:21.255 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@27da994b
[DEBUG] 04-03-2024 16:13:21.256 [main] BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@70f148dc
[DEBUG] 04-03-2024 16:13:21.256 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@3360283
[DEBUG] 04-03-2024 16:13:21.257 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@3360283
[DEBUG] 04-03-2024 16:13:21.257 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@77aea
[DEBUG] 04-03-2024 16:13:21.258 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@73e4bb60
[DEBUG] 04-03-2024 16:13:21.258 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@73e4bb60
[DEBUG] 04-03-2024 16:13:21.259 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@73e4bb60
[DEBUG] 04-03-2024 16:13:21.259 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@9a9aa68
[DEBUG] 04-03-2024 16:13:21.260 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@3a3883c4
[DEBUG] 04-03-2024 16:13:21.260 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@1537e43
[DEBUG] 04-03-2024 16:13:21.261 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@573aeab2
[DEBUG] 04-03-2024 16:13:21.261 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@573aeab2
[DEBUG] 04-03-2024 16:13:21.261 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@1304e0d7
[DEBUG] 04-03-2024 16:13:21.262 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@1304e0d7
[DEBUG] 04-03-2024 16:13:21.263 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@6ddc67d0
[DEBUG] 04-03-2024 16:13:21.263 [main] BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@7767bd4e
[DEBUG] 04-03-2024 16:13:21.264 [main] BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@7708b66a
[DEBUG] 04-03-2024 16:13:21.264 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@433ef204
[DEBUG] 04-03-2024 16:13:21.265 [main] BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@4dd2ef54
[DEBUG] 04-03-2024 16:13:21.265 [main] BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@795b66d
[DEBUG] 04-03-2024 16:13:21.266 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@359ceb13
[DEBUG] 04-03-2024 16:13:21.266 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@359ceb13
[DEBUG] 04-03-2024 16:13:21.267 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@1068176
[DEBUG] 04-03-2024 16:13:21.267 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@1068176
[DEBUG] 04-03-2024 16:13:21.267 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@5bf4764d
[DEBUG] 04-03-2024 16:13:21.268 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@5bf4764d
[DEBUG] 04-03-2024 16:13:21.268 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@71789580
[DEBUG] 04-03-2024 16:13:21.268 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@71789580
[DEBUG] 04-03-2024 16:13:21.269 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@23ee2ccf
[DEBUG] 04-03-2024 16:13:21.269 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@23ee2ccf
[DEBUG] 04-03-2024 16:13:21.269 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@165614f5
[DEBUG] 04-03-2024 16:13:21.270 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@6e685e6c
[DEBUG] 04-03-2024 16:13:21.270 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@5b0902b4
[DEBUG] 04-03-2024 16:13:21.270 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@5b0902b4
[DEBUG] 04-03-2024 16:13:21.271 [main] BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@9d3d54e
[DEBUG] 04-03-2024 16:13:21.271 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2f04993d
[DEBUG] 04-03-2024 16:13:21.272 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@333398f
[DEBUG] 04-03-2024 16:13:21.272 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@103c97ff
[DEBUG] 04-03-2024 16:13:21.272 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@103c97ff
[DEBUG] 04-03-2024 16:13:21.273 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@7d25913
[DEBUG] 04-03-2024 16:13:21.273 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@c14e5a5
[DEBUG] 04-03-2024 16:13:21.273 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@16f15ae9
[DEBUG] 04-03-2024 16:13:21.274 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@16f15ae9
[DEBUG] 04-03-2024 16:13:21.274 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@6206b4a7
[DEBUG] 04-03-2024 16:13:21.275 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@6206b4a7
[DEBUG] 04-03-2024 16:13:21.275 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@77896335
[DEBUG] 04-03-2024 16:13:21.275 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@77896335
[DEBUG] 04-03-2024 16:13:21.276 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@77896335
[DEBUG] 04-03-2024 16:13:21.276 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@5c1b89ac
[DEBUG] 04-03-2024 16:13:21.276 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@5c1b89ac
[DEBUG] 04-03-2024 16:13:21.277 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@5c1b89ac
[DEBUG] 04-03-2024 16:13:21.277 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@40a1b6d4
[DEBUG] 04-03-2024 16:13:21.278 [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@175581eb
[DEBUG] 04-03-2024 16:13:21.278 [main] BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@2b79c8ff
[DEBUG] 04-03-2024 16:13:21.278 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@2b79c8ff
[DEBUG] 04-03-2024 16:13:21.279 [main] BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@2baf72d5
[DEBUG] 04-03-2024 16:13:21.279 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@2baf72d5
[DEBUG] 04-03-2024 16:13:21.279 [main] BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@2baf72d5
[DEBUG] 04-03-2024 16:13:21.280 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@66756662
[DEBUG] 04-03-2024 16:13:21.280 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@5d14e99e
[DEBUG] 04-03-2024 16:13:21.281 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@38cfecf3
[DEBUG] 04-03-2024 16:13:21.281 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@38cfecf3
[DEBUG] 04-03-2024 16:13:21.289 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@682618e5
[DEBUG] 04-03-2024 16:13:21.289 [main] BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@682618e5
[DEBUG] 04-03-2024 16:13:21.290 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@682618e5
[DEBUG] 04-03-2024 16:13:21.290 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@25ad25f5
[DEBUG] 04-03-2024 16:13:21.290 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@25ad25f5
[DEBUG] 04-03-2024 16:13:21.291 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@5f0f70c7
[DEBUG] 04-03-2024 16:13:21.291 [main] BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@5f0f70c7
[DEBUG] 04-03-2024 16:13:21.292 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@1860a7a1
[DEBUG] 04-03-2024 16:13:21.292 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@1860a7a1
[DEBUG] 04-03-2024 16:13:21.292 [main] BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@40d96578
[DEBUG] 04-03-2024 16:13:21.292 [main] BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@40d96578
[DEBUG] 04-03-2024 16:13:21.293 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@c97721b
[DEBUG] 04-03-2024 16:13:21.293 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@c97721b
[DEBUG] 04-03-2024 16:13:21.293 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@283ab206
[DEBUG] 04-03-2024 16:13:21.312 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@54247647
[DEBUG] 04-03-2024 16:13:21.312 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@54247647
[DEBUG] 04-03-2024 16:13:21.315 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@722531ab
[DEBUG] 04-03-2024 16:13:21.316 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@8f57e4c
[DEBUG] 04-03-2024 16:13:21.317 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@26fadd98
[DEBUG] 04-03-2024 16:13:21.317 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@66451058
[DEBUG] 04-03-2024 16:13:21.318 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@3db6dd52
[DEBUG] 04-03-2024 16:13:21.318 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@1e92c3b6
[DEBUG] 04-03-2024 16:13:21.318 [main] BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@6ef4cbe1
[DEBUG] 04-03-2024 16:13:21.319 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@207dd1b7
[DEBUG] 04-03-2024 16:13:21.319 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@2baac4a7
[DEBUG] 04-03-2024 16:13:23.111 [main] DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@70f4abc1) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@26d028f7)
[DEBUG] 04-03-2024 16:13:23.119 [main] JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
[DEBUG] 04-03-2024 16:13:23.121 [main] JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 04-03-2024 16:13:23.149 [main] BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@194b9783
[DEBUG] 04-03-2024 16:13:23.150 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@194b9783
[DEBUG] 04-03-2024 16:13:23.150 [main] BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@54247647`
[DEBUG] 04-03-2024 16:13:23.152 [main] JdbcTypeRegistry - addDescriptor(3100, NumericTypeDescriptor) replaced previous registration(org.hibernate.dialect.PostgreSQLIntervalSecondJdbcType@1f42366)
[DEBUG] 04-03-2024 16:13:23.169 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 04-03-2024 16:13:23.170 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 04-03-2024 16:13:23.171 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 04-03-2024 16:13:23.171 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 04-03-2024 16:13:23.172 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 04-03-2024 16:13:23.172 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 04-03-2024 16:13:23.174 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 04-03-2024 16:13:23.175 [main] BasicTypeRegistry - Adding type registration OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 04-03-2024 16:13:23.175 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 04-03-2024 16:13:23.178 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3ce7394f] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@6723cce7]
[WARN ] 04-03-2024 16:13:23.671 [main] InFlightMetadataCollectorImpl - HHH000069: Duplicate generator name generator
[INFO ] 04-03-2024 16:13:23.875 [main] BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
[INFO ] 04-03-2024 16:13:26.691 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 04-03-2024 16:13:26.693 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3ce7394f] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@3c5bb37d]
[TRACE] 04-03-2024 16:13:26.699 [main] TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@3c5bb37d] for TypeConfiguration
[WARN ] 04-03-2024 16:13:27.105 [main] JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[INFO ] 04-03-2024 16:13:28.204 [main] Http11NioProtocol - Starting ProtocolHandler ["http-nio-8300"]
[INFO ] 04-03-2024 16:13:28.285 [main] TomcatWebServer - Tomcat started on port(s): 8300 (http) with context path '/users_products_api'
[INFO ] 04-03-2024 16:13:28.320 [main] TestSpringBootApplication - Started TestSpringBootApplication in 16.439 seconds (process running for 19.886)
[INFO ] 04-03-2024 16:13:33.324 [http-nio-8300-exec-1] [/users_products_api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[INFO ] 04-03-2024 16:13:33.325 [http-nio-8300-exec-1] DispatcherServlet - Initializing Servlet 'dispatcherServlet'
[INFO ] 04-03-2024 16:13:33.328 [http-nio-8300-exec-1] DispatcherServlet - Completed initialization in 3 ms
[DEBUG] 04-03-2024 16:13:33.685 [http-nio-8300-exec-1] SQL - select e1_0.id,e1_0.email,e1_0.login,e1_0.name,e1_0.password,p1_0.id_user,p1_0.id,p1_0.name,p1_0.page_image,p1_0.price,p1_0.raiting,p1_0.year_issue from users e1_0 left join products p1_0 on e1_0.id=p1_0.id_user where e1_0.id=?
[DEBUG] 04-03-2024 16:13:50.942 [http-nio-8300-exec-2] SQL - select e1_0.id,e1_0.email,e1_0.login,e1_0.name,e1_0.password,p1_0.id_user,p1_0.id,p1_0.name,p1_0.page_image,p1_0.price,p1_0.raiting,p1_0.year_issue from users e1_0 left join products p1_0 on e1_0.id=p1_0.id_user where e1_0.id=?
[TRACE] 04-03-2024 16:14:26.201 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@3c5bb37d] for TypeConfiguration
[DEBUG] 04-03-2024 16:14:26.209 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@15de9c0e] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@3c5bb37d]
[INFO ] 04-03-2024 16:14:37.736 [background-preinit] Version - HV000001: Hibernate Validator 8.0.1.Final
[INFO ] 04-03-2024 16:14:37.933 [main] TestSpringBootApplication - Starting TestSpringBootApplication using Java 17.0.10 with PID 2314526 (/home/dima/backend_microservice/UserProductsMicroService/target/classes started by dima in /home/dima/backend_microservice/UserProductsMicroService)
[INFO ] 04-03-2024 16:14:37.969 [main] TestSpringBootApplication - No active profile set, falling back to 1 default profile: "default"
[INFO ] 04-03-2024 16:14:40.283 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO ] 04-03-2024 16:14:40.404 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 60 ms. Found 0 JPA repository interfaces.
[ERROR] 04-03-2024 16:14:41.896 [main] AprLifecycleListener - An incompatible version [1.2.23] of the Apache Tomcat Native library is installed, while Tomcat requires version [1.2.34]
[INFO ] 04-03-2024 16:14:42.811 [main] TomcatWebServer - Tomcat initialized with port(s): 8300 (http)
[INFO ] 04-03-2024 16:14:42.833 [main] Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8300"]
[INFO ] 04-03-2024 16:14:42.839 [main] StandardService - Starting service [Tomcat]
[INFO ] 04-03-2024 16:14:42.841 [main] StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.11]
[INFO ] 04-03-2024 16:14:44.159 [main] TldScanner - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
[INFO ] 04-03-2024 16:14:44.182 [main] [/users_products_api] - Initializing Spring embedded WebApplicationContext
[INFO ] 04-03-2024 16:14:44.187 [main] ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 6035 ms
[INFO ] 04-03-2024 16:14:44.573 [main] Version - HHH000412: Hibernate ORM core version 6.2.6.Final
[INFO ] 04-03-2024 16:14:44.581 [main] Environment - HHH000406: Using bytecode reflection optimizer
[DEBUG] 04-03-2024 16:14:45.042 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@d36c1c3
[DEBUG] 04-03-2024 16:14:45.043 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@d36c1c3
[DEBUG] 04-03-2024 16:14:45.044 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@d36c1c3
[DEBUG] 04-03-2024 16:14:45.044 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@96abc76
[DEBUG] 04-03-2024 16:14:45.045 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@96abc76
[DEBUG] 04-03-2024 16:14:45.045 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@4d69d288
[DEBUG] 04-03-2024 16:14:45.046 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@4d69d288
[DEBUG] 04-03-2024 16:14:45.046 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@437281c5
[DEBUG] 04-03-2024 16:14:45.047 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@437281c5
[DEBUG] 04-03-2024 16:14:45.047 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@787178b1
[DEBUG] 04-03-2024 16:14:45.048 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@787178b1
[DEBUG] 04-03-2024 16:14:45.048 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@787178b1
[DEBUG] 04-03-2024 16:14:45.049 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@24a4e2c5
[DEBUG] 04-03-2024 16:14:45.049 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@24a4e2c5
[DEBUG] 04-03-2024 16:14:45.050 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@24a4e2c5
[DEBUG] 04-03-2024 16:14:45.050 [main] BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@27da994b
[DEBUG] 04-03-2024 16:14:45.051 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@27da994b
[DEBUG] 04-03-2024 16:14:45.051 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@70f148dc
[DEBUG] 04-03-2024 16:14:45.052 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@3360283
[DEBUG] 04-03-2024 16:14:45.052 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@3360283
[DEBUG] 04-03-2024 16:14:45.053 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@77aea
[DEBUG] 04-03-2024 16:14:45.053 [main] BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@73e4bb60
[DEBUG] 04-03-2024 16:14:45.054 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@9a9aa68
[DEBUG] 04-03-2024 16:14:45.054 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@9a9aa68
[DEBUG] 04-03-2024 16:14:45.055 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@9a9aa68
[DEBUG] 04-03-2024 16:14:45.055 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@3a3883c4
[DEBUG] 04-03-2024 16:14:45.056 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@3a3883c4
[DEBUG] 04-03-2024 16:14:45.056 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@3a3883c4
[DEBUG] 04-03-2024 16:14:45.057 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@1537e43
[DEBUG] 04-03-2024 16:14:45.057 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@1537e43
[DEBUG] 04-03-2024 16:14:45.058 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@1537e43
[DEBUG] 04-03-2024 16:14:45.058 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@573aeab2
[DEBUG] 04-03-2024 16:14:45.059 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@573aeab2
[DEBUG] 04-03-2024 16:14:45.059 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@573aeab2
[DEBUG] 04-03-2024 16:14:45.059 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@1304e0d7
[DEBUG] 04-03-2024 16:14:45.060 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@1304e0d7
[DEBUG] 04-03-2024 16:14:45.060 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@1304e0d7
[DEBUG] 04-03-2024 16:14:45.061 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@6ddc67d0
[DEBUG] 04-03-2024 16:14:45.061 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@6ddc67d0
[DEBUG] 04-03-2024 16:14:45.062 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@7767bd4e
[DEBUG] 04-03-2024 16:14:45.062 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@7767bd4e
[DEBUG] 04-03-2024 16:14:45.063 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@7708b66a
[DEBUG] 04-03-2024 16:14:45.063 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@7708b66a
[DEBUG] 04-03-2024 16:14:45.064 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@7708b66a
[DEBUG] 04-03-2024 16:14:45.064 [main] BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@433ef204
[DEBUG] 04-03-2024 16:14:45.064 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@4dd2ef54
[DEBUG] 04-03-2024 16:14:45.065 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@4dd2ef54
[DEBUG] 04-03-2024 16:14:45.065 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@795b66d
[DEBUG] 04-03-2024 16:14:45.066 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@359ceb13
[DEBUG] 04-03-2024 16:14:45.066 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@359ceb13
[DEBUG] 04-03-2024 16:14:45.067 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@359ceb13
[DEBUG] 04-03-2024 16:14:45.067 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@1068176
[DEBUG] 04-03-2024 16:14:45.067 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@5bf4764d
[DEBUG] 04-03-2024 16:14:45.068 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@71789580
[DEBUG] 04-03-2024 16:14:45.068 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@23ee2ccf
[DEBUG] 04-03-2024 16:14:45.069 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@23ee2ccf
[DEBUG] 04-03-2024 16:14:45.069 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@165614f5
[DEBUG] 04-03-2024 16:14:45.069 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@165614f5
[DEBUG] 04-03-2024 16:14:45.070 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@6e685e6c
[DEBUG] 04-03-2024 16:14:45.070 [main] BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@5b0902b4
[DEBUG] 04-03-2024 16:14:45.071 [main] BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@9d3d54e
[DEBUG] 04-03-2024 16:14:45.071 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@2f04993d
[DEBUG] 04-03-2024 16:14:45.072 [main] BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@333398f
[DEBUG] 04-03-2024 16:14:45.072 [main] BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@103c97ff
[DEBUG] 04-03-2024 16:14:45.073 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@7d25913
[DEBUG] 04-03-2024 16:14:45.073 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@7d25913
[DEBUG] 04-03-2024 16:14:45.073 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@c14e5a5
[DEBUG] 04-03-2024 16:14:45.074 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@c14e5a5
[DEBUG] 04-03-2024 16:14:45.074 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@16f15ae9
[DEBUG] 04-03-2024 16:14:45.075 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@16f15ae9
[DEBUG] 04-03-2024 16:14:45.075 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@6206b4a7
[DEBUG] 04-03-2024 16:14:45.075 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@6206b4a7
[DEBUG] 04-03-2024 16:14:45.076 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@77896335
[DEBUG] 04-03-2024 16:14:45.076 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@77896335
[DEBUG] 04-03-2024 16:14:45.077 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@5c1b89ac
[DEBUG] 04-03-2024 16:14:45.077 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@40a1b6d4
[DEBUG] 04-03-2024 16:14:45.077 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@175581eb
[DEBUG] 04-03-2024 16:14:45.078 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@175581eb
[DEBUG] 04-03-2024 16:14:45.078 [main] BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@2b79c8ff
[DEBUG] 04-03-2024 16:14:45.078 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2baf72d5
[DEBUG] 04-03-2024 16:14:45.079 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@66756662
[DEBUG] 04-03-2024 16:14:45.079 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@5d14e99e
[DEBUG] 04-03-2024 16:14:45.080 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@5d14e99e
[DEBUG] 04-03-2024 16:14:45.080 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@38cfecf3
[DEBUG] 04-03-2024 16:14:45.081 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@682618e5
[DEBUG] 04-03-2024 16:14:45.081 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@25ad25f5
[DEBUG] 04-03-2024 16:14:45.081 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@25ad25f5
[DEBUG] 04-03-2024 16:14:45.082 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@5f0f70c7
[DEBUG] 04-03-2024 16:14:45.082 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@5f0f70c7
[DEBUG] 04-03-2024 16:14:45.082 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@1860a7a1
[DEBUG] 04-03-2024 16:14:45.083 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@1860a7a1
[DEBUG] 04-03-2024 16:14:45.084 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@1860a7a1
[DEBUG] 04-03-2024 16:14:45.084 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@40d96578
[DEBUG] 04-03-2024 16:14:45.084 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@40d96578
[DEBUG] 04-03-2024 16:14:45.085 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@40d96578
[DEBUG] 04-03-2024 16:14:45.085 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@c97721b
[DEBUG] 04-03-2024 16:14:45.086 [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@283ab206
[DEBUG] 04-03-2024 16:14:45.086 [main] BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@35fa450f
[DEBUG] 04-03-2024 16:14:45.087 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@35fa450f
[DEBUG] 04-03-2024 16:14:45.087 [main] BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@3e03046d
[DEBUG] 04-03-2024 16:14:45.088 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@3e03046d
[DEBUG] 04-03-2024 16:14:45.089 [main] BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@3e03046d
[DEBUG] 04-03-2024 16:14:45.089 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@9b3be1c
[DEBUG] 04-03-2024 16:14:45.090 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@74e497ae
[DEBUG] 04-03-2024 16:14:45.090 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@13516600
[DEBUG] 04-03-2024 16:14:45.091 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@13516600
[DEBUG] 04-03-2024 16:14:45.091 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@35d7386b
[DEBUG] 04-03-2024 16:14:45.091 [main] BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@35d7386b
[DEBUG] 04-03-2024 16:14:45.092 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@35d7386b
[DEBUG] 04-03-2024 16:14:45.092 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@21002393
[DEBUG] 04-03-2024 16:14:45.092 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@21002393
[DEBUG] 04-03-2024 16:14:45.093 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@718989fa
[DEBUG] 04-03-2024 16:14:45.093 [main] BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@718989fa
[DEBUG] 04-03-2024 16:14:45.094 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@69f080ad
[DEBUG] 04-03-2024 16:14:45.095 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@69f080ad
[DEBUG] 04-03-2024 16:14:45.095 [main] BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@6568f998
[DEBUG] 04-03-2024 16:14:45.096 [main] BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@6568f998
[DEBUG] 04-03-2024 16:14:45.096 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@45d4421d
[DEBUG] 04-03-2024 16:14:45.096 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@45d4421d
[DEBUG] 04-03-2024 16:14:45.097 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@782fd504
[DEBUG] 04-03-2024 16:14:45.112 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@8f57e4c
[DEBUG] 04-03-2024 16:14:45.112 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@8f57e4c
[DEBUG] 04-03-2024 16:14:45.115 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@5882b202
[DEBUG] 04-03-2024 16:14:45.116 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@120df990
[DEBUG] 04-03-2024 16:14:45.116 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@b506ed0
[DEBUG] 04-03-2024 16:14:45.117 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@282c4da0
[DEBUG] 04-03-2024 16:14:45.117 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@65f3e805
[DEBUG] 04-03-2024 16:14:45.118 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@18cf5c52
[DEBUG] 04-03-2024 16:14:45.118 [main] BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@10618775
[DEBUG] 04-03-2024 16:14:45.118 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@5aea8994
[DEBUG] 04-03-2024 16:14:45.119 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@20a3e10c
[DEBUG] 04-03-2024 16:14:46.745 [main] DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7eae55) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5d84e363)
[DEBUG] 04-03-2024 16:14:46.751 [main] JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
[DEBUG] 04-03-2024 16:14:46.751 [main] JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 04-03-2024 16:14:46.770 [main] BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@438aaa9f
[DEBUG] 04-03-2024 16:14:46.771 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@438aaa9f
[DEBUG] 04-03-2024 16:14:46.771 [main] BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@8f57e4c`
[DEBUG] 04-03-2024 16:14:46.775 [main] JdbcTypeRegistry - addDescriptor(3100, NumericTypeDescriptor) replaced previous registration(org.hibernate.dialect.PostgreSQLIntervalSecondJdbcType@40cf6254)
[DEBUG] 04-03-2024 16:14:46.793 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 04-03-2024 16:14:46.794 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 04-03-2024 16:14:46.794 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 04-03-2024 16:14:46.795 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 04-03-2024 16:14:46.795 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 04-03-2024 16:14:46.795 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 04-03-2024 16:14:46.797 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 04-03-2024 16:14:46.798 [main] BasicTypeRegistry - Adding type registration OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 04-03-2024 16:14:46.798 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 04-03-2024 16:14:46.801 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@25b74370] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@15e8c040]
[WARN ] 04-03-2024 16:14:47.298 [main] InFlightMetadataCollectorImpl - HHH000069: Duplicate generator name generator
[INFO ] 04-03-2024 16:14:47.482 [main] BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
[INFO ] 04-03-2024 16:14:50.472 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 04-03-2024 16:14:50.473 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@25b74370] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@72406594]
[TRACE] 04-03-2024 16:14:50.480 [main] TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@72406594] for TypeConfiguration
[WARN ] 04-03-2024 16:14:50.862 [main] JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[INFO ] 04-03-2024 16:14:52.167 [main] Http11NioProtocol - Starting ProtocolHandler ["http-nio-8300"]
[INFO ] 04-03-2024 16:14:52.274 [main] TomcatWebServer - Tomcat started on port(s): 8300 (http) with context path '/users_products_api'
[INFO ] 04-03-2024 16:14:52.313 [main] TestSpringBootApplication - Started TestSpringBootApplication in 15.884 seconds (process running for 19.479)
[INFO ] 04-03-2024 16:15:02.613 [http-nio-8300-exec-1] [/users_products_api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[INFO ] 04-03-2024 16:15:02.614 [http-nio-8300-exec-1] DispatcherServlet - Initializing Servlet 'dispatcherServlet'
[INFO ] 04-03-2024 16:15:02.617 [http-nio-8300-exec-1] DispatcherServlet - Completed initialization in 3 ms
[DEBUG] 04-03-2024 16:15:03.032 [http-nio-8300-exec-1] SQL - select e1_0.id,e1_0.email,e1_0.login,e1_0.name,e1_0.password,p1_0.id_user,p1_0.id,p1_0.name,p1_0.page_image,p1_0.price,p1_0.raiting,p1_0.year_issue from users e1_0 left join products p1_0 on e1_0.id=p1_0.id_user where e1_0.id=?
[TRACE] 04-03-2024 16:19:38.345 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@72406594] for TypeConfiguration
[DEBUG] 04-03-2024 16:19:38.348 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@4876cc38] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@72406594]
[INFO ] 04-03-2024 16:19:56.028 [background-preinit] Version - HV000001: Hibernate Validator 8.0.1.Final
[INFO ] 04-03-2024 16:19:56.184 [main] TestSpringBootApplication - Starting TestSpringBootApplication using Java 17.0.10 with PID 2317460 (/home/dima/backend_microservice/UserProductsMicroService/target/classes started by dima in /home/dima/backend_microservice/UserProductsMicroService)
[INFO ] 04-03-2024 16:19:56.197 [main] TestSpringBootApplication - No active profile set, falling back to 1 default profile: "default"
[INFO ] 04-03-2024 16:19:59.273 [main] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
[INFO ] 04-03-2024 16:19:59.278 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO ] 04-03-2024 16:19:59.361 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 33 ms. Found 0 JPA repository interfaces.
[INFO ] 04-03-2024 16:19:59.396 [main] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
[INFO ] 04-03-2024 16:19:59.397 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data R2DBC repositories in DEFAULT mode.
[INFO ] 04-03-2024 16:19:59.401 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 2 ms. Found 0 R2DBC repository interfaces.
[ERROR] 04-03-2024 16:20:00.872 [main] AprLifecycleListener - An incompatible version [1.2.23] of the Apache Tomcat Native library is installed, while Tomcat requires version [1.2.34]
[INFO ] 04-03-2024 16:20:01.686 [main] TomcatWebServer - Tomcat initialized with port(s): 8300 (http)
[INFO ] 04-03-2024 16:20:01.708 [main] Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8300"]
[INFO ] 04-03-2024 16:20:01.715 [main] StandardService - Starting service [Tomcat]
[INFO ] 04-03-2024 16:20:01.716 [main] StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.11]
[INFO ] 04-03-2024 16:20:02.926 [main] TldScanner - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
[INFO ] 04-03-2024 16:20:02.956 [main] [/users_products_api] - Initializing Spring embedded WebApplicationContext
[INFO ] 04-03-2024 16:20:02.961 [main] ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 6624 ms
[WARN ] 04-03-2024 16:20:03.115 [main] AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'CRUDUserProducts': Unsatisfied dependency expressed through field 'dao': Error creating bean with name 'DAOUserProducts': Unsatisfied dependency expressed through field 'rep': No qualifying bean of type 'repository.CustomizedUserProductsCrudRepository' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
[INFO ] 04-03-2024 16:20:03.124 [main] StandardService - Stopping service [Tomcat]
[INFO ] 04-03-2024 16:20:03.225 [main] ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
[ERROR] 04-03-2024 16:20:03.292 [main] LoggingFailureAnalysisReporter - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Field rep in DAO.DAOUserProducts required a bean of type 'repository.CustomizedUserProductsCrudRepository' that could not be found.

The injection point has the following annotations:
	- @org.springframework.beans.factory.annotation.Autowired(required=true)


Action:

Consider defining a bean of type 'repository.CustomizedUserProductsCrudRepository' in your configuration.

[INFO ] 04-03-2024 16:23:16.583 [background-preinit] Version - HV000001: Hibernate Validator 8.0.1.Final
[INFO ] 04-03-2024 16:23:17.007 [main] TestSpringBootApplication - Starting TestSpringBootApplication using Java 17.0.10 with PID 2319167 (/home/dima/backend_microservice/UserProductsMicroService/target/classes started by dima in /home/dima/backend_microservice/UserProductsMicroService)
[INFO ] 04-03-2024 16:23:17.019 [main] TestSpringBootApplication - No active profile set, falling back to 1 default profile: "default"
[INFO ] 04-03-2024 16:23:19.315 [main] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
[INFO ] 04-03-2024 16:23:19.317 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data R2DBC repositories in DEFAULT mode.
[INFO ] 04-03-2024 16:23:19.362 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 27 ms. Found 0 R2DBC repository interfaces.
[INFO ] 04-03-2024 16:23:20.080 [main] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
[INFO ] 04-03-2024 16:23:20.087 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO ] 04-03-2024 16:23:20.159 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 30 ms. Found 0 JPA repository interfaces.
[INFO ] 04-03-2024 16:23:20.184 [main] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
[INFO ] 04-03-2024 16:23:20.185 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data R2DBC repositories in DEFAULT mode.
[INFO ] 04-03-2024 16:23:20.188 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 2 ms. Found 0 R2DBC repository interfaces.
[ERROR] 04-03-2024 16:23:21.523 [main] AprLifecycleListener - An incompatible version [1.2.23] of the Apache Tomcat Native library is installed, while Tomcat requires version [1.2.34]
[INFO ] 04-03-2024 16:23:22.505 [main] TomcatWebServer - Tomcat initialized with port(s): 8300 (http)
[INFO ] 04-03-2024 16:23:22.623 [main] Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8300"]
[INFO ] 04-03-2024 16:23:22.650 [main] StandardService - Starting service [Tomcat]
[INFO ] 04-03-2024 16:23:22.651 [main] StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.11]
[INFO ] 04-03-2024 16:23:23.887 [main] TldScanner - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
[INFO ] 04-03-2024 16:23:23.909 [main] [/users_products_api] - Initializing Spring embedded WebApplicationContext
[INFO ] 04-03-2024 16:23:23.913 [main] ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 6600 ms
[WARN ] 04-03-2024 16:23:24.106 [main] AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'CRUDUserProducts': Unsatisfied dependency expressed through field 'dao': Error creating bean with name 'DAOUserProducts': Unsatisfied dependency expressed through field 'rep': No qualifying bean of type 'repository.CustomizedUserProductsCrudRepository' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
[INFO ] 04-03-2024 16:23:24.115 [main] StandardService - Stopping service [Tomcat]
[INFO ] 04-03-2024 16:23:24.189 [main] ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
[ERROR] 04-03-2024 16:23:24.249 [main] LoggingFailureAnalysisReporter - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Field rep in DAO.DAOUserProducts required a bean of type 'repository.CustomizedUserProductsCrudRepository' that could not be found.

The injection point has the following annotations:
	- @org.springframework.beans.factory.annotation.Autowired(required=true)


Action:

Consider defining a bean of type 'repository.CustomizedUserProductsCrudRepository' in your configuration.

[INFO ] 04-03-2024 16:24:53.015 [background-preinit] Version - HV000001: Hibernate Validator 8.0.1.Final
[INFO ] 04-03-2024 16:24:53.123 [main] TestSpringBootApplication - Starting TestSpringBootApplication using Java 17.0.10 with PID 2320067 (/home/dima/backend_microservice/UserProductsMicroService/target/classes started by dima in /home/dima/backend_microservice/UserProductsMicroService)
[INFO ] 04-03-2024 16:24:53.139 [main] TestSpringBootApplication - No active profile set, falling back to 1 default profile: "default"
[INFO ] 04-03-2024 16:24:55.545 [main] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
[INFO ] 04-03-2024 16:24:55.548 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data R2DBC repositories in DEFAULT mode.
[INFO ] 04-03-2024 16:24:56.337 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 777 ms. Found 1 R2DBC repository interfaces.
[INFO ] 04-03-2024 16:24:56.925 [main] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
[INFO ] 04-03-2024 16:24:56.928 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO ] 04-03-2024 16:24:56.955 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 18 ms. Found 0 JPA repository interfaces.
[ERROR] 04-03-2024 16:24:58.489 [main] AprLifecycleListener - An incompatible version [1.2.23] of the Apache Tomcat Native library is installed, while Tomcat requires version [1.2.34]
[INFO ] 04-03-2024 16:24:59.401 [main] TomcatWebServer - Tomcat initialized with port(s): 8300 (http)
[INFO ] 04-03-2024 16:24:59.425 [main] Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8300"]
[INFO ] 04-03-2024 16:24:59.434 [main] StandardService - Starting service [Tomcat]
[INFO ] 04-03-2024 16:24:59.435 [main] StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.11]
[INFO ] 04-03-2024 16:25:00.649 [main] TldScanner - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
[INFO ] 04-03-2024 16:25:00.677 [main] [/users_products_api] - Initializing Spring embedded WebApplicationContext
[INFO ] 04-03-2024 16:25:00.682 [main] ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 7295 ms
[INFO ] 04-03-2024 16:25:02.106 [main] Version - HHH000412: Hibernate ORM core version 6.2.6.Final
[INFO ] 04-03-2024 16:25:02.118 [main] Environment - HHH000406: Using bytecode reflection optimizer
[DEBUG] 04-03-2024 16:25:02.594 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@150f41b9
[DEBUG] 04-03-2024 16:25:02.595 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@150f41b9
[DEBUG] 04-03-2024 16:25:02.595 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@150f41b9
[DEBUG] 04-03-2024 16:25:02.596 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@6e364f1f
[DEBUG] 04-03-2024 16:25:02.596 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@6e364f1f
[DEBUG] 04-03-2024 16:25:02.596 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@429e7914
[DEBUG] 04-03-2024 16:25:02.597 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@429e7914
[DEBUG] 04-03-2024 16:25:02.597 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@298263fa
[DEBUG] 04-03-2024 16:25:02.598 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@298263fa
[DEBUG] 04-03-2024 16:25:02.599 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@466fedfa
[DEBUG] 04-03-2024 16:25:02.599 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@466fedfa
[DEBUG] 04-03-2024 16:25:02.600 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@466fedfa
[DEBUG] 04-03-2024 16:25:02.600 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@1a7d0c9f
[DEBUG] 04-03-2024 16:25:02.601 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@1a7d0c9f
[DEBUG] 04-03-2024 16:25:02.601 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@1a7d0c9f
[DEBUG] 04-03-2024 16:25:02.602 [main] BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@2b1a901d
[DEBUG] 04-03-2024 16:25:02.602 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@2b1a901d
[DEBUG] 04-03-2024 16:25:02.603 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@11bdab37
[DEBUG] 04-03-2024 16:25:02.603 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@280484c7
[DEBUG] 04-03-2024 16:25:02.603 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@280484c7
[DEBUG] 04-03-2024 16:25:02.604 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@5a6f6cac
[DEBUG] 04-03-2024 16:25:02.604 [main] BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@258a8584
[DEBUG] 04-03-2024 16:25:02.605 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@59127611
[DEBUG] 04-03-2024 16:25:02.605 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@59127611
[DEBUG] 04-03-2024 16:25:02.606 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@59127611
[DEBUG] 04-03-2024 16:25:02.606 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@553ce348
[DEBUG] 04-03-2024 16:25:02.607 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@553ce348
[DEBUG] 04-03-2024 16:25:02.607 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@553ce348
[DEBUG] 04-03-2024 16:25:02.608 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@7417ef4f
[DEBUG] 04-03-2024 16:25:02.608 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@7417ef4f
[DEBUG] 04-03-2024 16:25:02.608 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@7417ef4f
[DEBUG] 04-03-2024 16:25:02.609 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@5c0e2ec
[DEBUG] 04-03-2024 16:25:02.609 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@5c0e2ec
[DEBUG] 04-03-2024 16:25:02.610 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@5c0e2ec
[DEBUG] 04-03-2024 16:25:02.610 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@4fa8bebb
[DEBUG] 04-03-2024 16:25:02.610 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@4fa8bebb
[DEBUG] 04-03-2024 16:25:02.611 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@4fa8bebb
[DEBUG] 04-03-2024 16:25:02.611 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@7d3c22a5
[DEBUG] 04-03-2024 16:25:02.612 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@7d3c22a5
[DEBUG] 04-03-2024 16:25:02.612 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@369ad7da
[DEBUG] 04-03-2024 16:25:02.613 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@369ad7da
[DEBUG] 04-03-2024 16:25:02.613 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@344f9467
[DEBUG] 04-03-2024 16:25:02.613 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@344f9467
[DEBUG] 04-03-2024 16:25:02.614 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@344f9467
[DEBUG] 04-03-2024 16:25:02.614 [main] BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@3e98b933
[DEBUG] 04-03-2024 16:25:02.615 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@222d9d4f
[DEBUG] 04-03-2024 16:25:02.615 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@222d9d4f
[DEBUG] 04-03-2024 16:25:02.615 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@4269aad7
[DEBUG] 04-03-2024 16:25:02.616 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@a4df251
[DEBUG] 04-03-2024 16:25:02.616 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@a4df251
[DEBUG] 04-03-2024 16:25:02.616 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@a4df251
[DEBUG] 04-03-2024 16:25:02.617 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@71e7830a
[DEBUG] 04-03-2024 16:25:02.617 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@3feebf9c
[DEBUG] 04-03-2024 16:25:02.617 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@305e95a4
[DEBUG] 04-03-2024 16:25:02.618 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@55e42684
[DEBUG] 04-03-2024 16:25:02.618 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@55e42684
[DEBUG] 04-03-2024 16:25:02.618 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@18d610e1
[DEBUG] 04-03-2024 16:25:02.619 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@18d610e1
[DEBUG] 04-03-2024 16:25:02.619 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@528e5e38
[DEBUG] 04-03-2024 16:25:02.619 [main] BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@16391278
[DEBUG] 04-03-2024 16:25:02.620 [main] BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@621dc63d
[DEBUG] 04-03-2024 16:25:02.620 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@4ae49387
[DEBUG] 04-03-2024 16:25:02.620 [main] BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@6abb7b7d
[DEBUG] 04-03-2024 16:25:02.621 [main] BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@34cf0e80
[DEBUG] 04-03-2024 16:25:02.621 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@38ef1a0a
[DEBUG] 04-03-2024 16:25:02.621 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@38ef1a0a
[DEBUG] 04-03-2024 16:25:02.622 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@56f9de3b
[DEBUG] 04-03-2024 16:25:02.622 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@56f9de3b
[DEBUG] 04-03-2024 16:25:02.623 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@6728370a
[DEBUG] 04-03-2024 16:25:02.623 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@6728370a
[DEBUG] 04-03-2024 16:25:02.623 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@2b5f8e61
[DEBUG] 04-03-2024 16:25:02.624 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@2b5f8e61
[DEBUG] 04-03-2024 16:25:02.624 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@6ba0ee4a
[DEBUG] 04-03-2024 16:25:02.624 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@6ba0ee4a
[DEBUG] 04-03-2024 16:25:02.624 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@73b0ed03
[DEBUG] 04-03-2024 16:25:02.625 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@55061418
[DEBUG] 04-03-2024 16:25:02.625 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@27db45f
[DEBUG] 04-03-2024 16:25:02.625 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@27db45f
[DEBUG] 04-03-2024 16:25:02.626 [main] BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@6ec3d8e4
[DEBUG] 04-03-2024 16:25:02.626 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@1aeff8ca
[DEBUG] 04-03-2024 16:25:02.626 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@7f2c995b
[DEBUG] 04-03-2024 16:25:02.627 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@101c15ad
[DEBUG] 04-03-2024 16:25:02.627 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@101c15ad
[DEBUG] 04-03-2024 16:25:02.627 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@6068ebb2
[DEBUG] 04-03-2024 16:25:02.627 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@5a466dd
[DEBUG] 04-03-2024 16:25:02.628 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@1ed9d173
[DEBUG] 04-03-2024 16:25:02.628 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@1ed9d173
[DEBUG] 04-03-2024 16:25:02.629 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@6e981e78
[DEBUG] 04-03-2024 16:25:02.629 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@6e981e78
[DEBUG] 04-03-2024 16:25:02.629 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@498a4d62
[DEBUG] 04-03-2024 16:25:02.630 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@498a4d62
[DEBUG] 04-03-2024 16:25:02.630 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@498a4d62
[DEBUG] 04-03-2024 16:25:02.631 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@6fbe4800
[DEBUG] 04-03-2024 16:25:02.631 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@6fbe4800
[DEBUG] 04-03-2024 16:25:02.631 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@6fbe4800
[DEBUG] 04-03-2024 16:25:02.631 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@3f3c5ecd
[DEBUG] 04-03-2024 16:25:02.632 [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@1179fc8c
[DEBUG] 04-03-2024 16:25:02.632 [main] BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@a03529c
[DEBUG] 04-03-2024 16:25:02.632 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@a03529c
[DEBUG] 04-03-2024 16:25:02.633 [main] BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@1760e594
[DEBUG] 04-03-2024 16:25:02.633 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@1760e594
[DEBUG] 04-03-2024 16:25:02.633 [main] BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@1760e594
[DEBUG] 04-03-2024 16:25:02.634 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@4af70b83
[DEBUG] 04-03-2024 16:25:02.634 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@143413cd
[DEBUG] 04-03-2024 16:25:02.634 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@4b32465
[DEBUG] 04-03-2024 16:25:02.635 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@4b32465
[DEBUG] 04-03-2024 16:25:02.635 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@146f3d22
[DEBUG] 04-03-2024 16:25:02.635 [main] BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@146f3d22
[DEBUG] 04-03-2024 16:25:02.636 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@146f3d22
[DEBUG] 04-03-2024 16:25:02.636 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@66b6873f
[DEBUG] 04-03-2024 16:25:02.636 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@66b6873f
[DEBUG] 04-03-2024 16:25:02.637 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@52285a5f
[DEBUG] 04-03-2024 16:25:02.637 [main] BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@52285a5f
[DEBUG] 04-03-2024 16:25:02.637 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@4fa5cc73
[DEBUG] 04-03-2024 16:25:02.637 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@4fa5cc73
[DEBUG] 04-03-2024 16:25:02.638 [main] BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@224e6e88
[DEBUG] 04-03-2024 16:25:02.638 [main] BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@224e6e88
[DEBUG] 04-03-2024 16:25:02.638 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@70139a81
[DEBUG] 04-03-2024 16:25:02.639 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@70139a81
[DEBUG] 04-03-2024 16:25:02.639 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@60f9dc7e
[DEBUG] 04-03-2024 16:25:02.653 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@399f5daf
[DEBUG] 04-03-2024 16:25:02.654 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@399f5daf
[DEBUG] 04-03-2024 16:25:02.657 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@38054d01
[DEBUG] 04-03-2024 16:25:02.657 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@28ce75ec
[DEBUG] 04-03-2024 16:25:02.658 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@778113f2
[DEBUG] 04-03-2024 16:25:02.658 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@9dc782d
[DEBUG] 04-03-2024 16:25:02.658 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@1ba35152
[DEBUG] 04-03-2024 16:25:02.659 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@401926df
[DEBUG] 04-03-2024 16:25:02.659 [main] BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@3ff8a3ad
[DEBUG] 04-03-2024 16:25:02.659 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@550fa96f
[DEBUG] 04-03-2024 16:25:02.660 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@54275b5d
[DEBUG] 04-03-2024 16:25:04.085 [main] DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@270b8c2a) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7b9c2387)
[DEBUG] 04-03-2024 16:25:04.090 [main] JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
[DEBUG] 04-03-2024 16:25:04.090 [main] JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 04-03-2024 16:25:04.111 [main] BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@1aa59698
[DEBUG] 04-03-2024 16:25:04.111 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@1aa59698
[DEBUG] 04-03-2024 16:25:04.112 [main] BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@399f5daf`
[DEBUG] 04-03-2024 16:25:04.132 [main] JdbcTypeRegistry - addDescriptor(3100, NumericTypeDescriptor) replaced previous registration(org.hibernate.dialect.PostgreSQLIntervalSecondJdbcType@45e69324)
[DEBUG] 04-03-2024 16:25:04.147 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 04-03-2024 16:25:04.148 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 04-03-2024 16:25:04.148 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 04-03-2024 16:25:04.148 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 04-03-2024 16:25:04.149 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 04-03-2024 16:25:04.149 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 04-03-2024 16:25:04.151 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 04-03-2024 16:25:04.151 [main] BasicTypeRegistry - Adding type registration OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 04-03-2024 16:25:04.152 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 04-03-2024 16:25:04.155 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3eb0fd88] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@adc3344]
[WARN ] 04-03-2024 16:25:04.519 [main] InFlightMetadataCollectorImpl - HHH000069: Duplicate generator name generator
[INFO ] 04-03-2024 16:25:04.721 [main] BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
[INFO ] 04-03-2024 16:25:07.688 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 04-03-2024 16:25:07.691 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3eb0fd88] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@70a91d72]
[TRACE] 04-03-2024 16:25:07.698 [main] TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@70a91d72] for TypeConfiguration
[WARN ] 04-03-2024 16:25:08.113 [main] JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[INFO ] 04-03-2024 16:25:09.421 [main] Http11NioProtocol - Starting ProtocolHandler ["http-nio-8300"]
[INFO ] 04-03-2024 16:25:09.490 [main] TomcatWebServer - Tomcat started on port(s): 8300 (http) with context path '/users_products_api'
[INFO ] 04-03-2024 16:25:09.526 [main] TestSpringBootApplication - Started TestSpringBootApplication in 17.475 seconds (process running for 20.561)
[INFO ] 04-03-2024 16:25:20.620 [http-nio-8300-exec-1] [/users_products_api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[INFO ] 04-03-2024 16:25:20.621 [http-nio-8300-exec-1] DispatcherServlet - Initializing Servlet 'dispatcherServlet'
[INFO ] 04-03-2024 16:25:20.625 [http-nio-8300-exec-1] DispatcherServlet - Completed initialization in 4 ms
[DEBUG] 04-03-2024 16:25:21.008 [http-nio-8300-exec-1] SQL - select e1_0.id,e1_0.email,e1_0.login,e1_0.name,e1_0.password,p1_0.id_user,p1_0.id,p1_0.name,p1_0.page_image,p1_0.price,p1_0.raiting,p1_0.year_issue from users e1_0 left join products p1_0 on e1_0.id=p1_0.id_user where e1_0.id=?
[TRACE] 04-03-2024 17:18:36.756 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@70a91d72] for TypeConfiguration
[DEBUG] 04-03-2024 17:18:36.759 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@15dfffcd] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@70a91d72]
[INFO ] 04-03-2024 17:18:49.392 [background-preinit] Version - HV000001: Hibernate Validator 8.0.1.Final
[INFO ] 04-03-2024 17:18:49.776 [main] TestSpringBootApplication - Starting TestSpringBootApplication using Java 17.0.10 with PID 2346903 (/home/dima/backend_microservice/UserProductsMicroService/target/classes started by dima in /home/dima/backend_microservice/UserProductsMicroService)
[INFO ] 04-03-2024 17:18:49.791 [main] TestSpringBootApplication - No active profile set, falling back to 1 default profile: "default"
[INFO ] 04-03-2024 17:18:52.132 [main] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
[INFO ] 04-03-2024 17:18:52.135 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data R2DBC repositories in DEFAULT mode.
[INFO ] 04-03-2024 17:18:52.651 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 502 ms. Found 1 R2DBC repository interfaces.
[INFO ] 04-03-2024 17:18:53.427 [main] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
[INFO ] 04-03-2024 17:18:53.432 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO ] 04-03-2024 17:18:53.464 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 19 ms. Found 0 JPA repository interfaces.
[ERROR] 04-03-2024 17:18:55.449 [main] AprLifecycleListener - An incompatible version [1.2.23] of the Apache Tomcat Native library is installed, while Tomcat requires version [1.2.34]
[INFO ] 04-03-2024 17:18:56.340 [main] TomcatWebServer - Tomcat initialized with port(s): 8300 (http)
[INFO ] 04-03-2024 17:18:56.361 [main] Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8300"]
[INFO ] 04-03-2024 17:18:56.370 [main] StandardService - Starting service [Tomcat]
[INFO ] 04-03-2024 17:18:56.371 [main] StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.11]
[INFO ] 04-03-2024 17:18:57.411 [main] TldScanner - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
[INFO ] 04-03-2024 17:18:57.430 [main] [/users_products_api] - Initializing Spring embedded WebApplicationContext
[INFO ] 04-03-2024 17:18:57.434 [main] ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 7180 ms
[INFO ] 04-03-2024 17:18:59.014 [main] Version - HHH000412: Hibernate ORM core version 6.2.6.Final
[INFO ] 04-03-2024 17:18:59.023 [main] Environment - HHH000406: Using bytecode reflection optimizer
[DEBUG] 04-03-2024 17:18:59.514 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@14656be5
[DEBUG] 04-03-2024 17:18:59.515 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@14656be5
[DEBUG] 04-03-2024 17:18:59.516 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@14656be5
[DEBUG] 04-03-2024 17:18:59.517 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@20be890d
[DEBUG] 04-03-2024 17:18:59.517 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@20be890d
[DEBUG] 04-03-2024 17:18:59.518 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@5db9f51f
[DEBUG] 04-03-2024 17:18:59.519 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@5db9f51f
[DEBUG] 04-03-2024 17:18:59.519 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@534762ed
[DEBUG] 04-03-2024 17:18:59.520 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@534762ed
[DEBUG] 04-03-2024 17:18:59.520 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@6c421123
[DEBUG] 04-03-2024 17:18:59.521 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@6c421123
[DEBUG] 04-03-2024 17:18:59.522 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@6c421123
[DEBUG] 04-03-2024 17:18:59.523 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@38e00b47
[DEBUG] 04-03-2024 17:18:59.523 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@38e00b47
[DEBUG] 04-03-2024 17:18:59.524 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@38e00b47
[DEBUG] 04-03-2024 17:18:59.524 [main] BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@2a631049
[DEBUG] 04-03-2024 17:18:59.525 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@2a631049
[DEBUG] 04-03-2024 17:18:59.525 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@425b5fe2
[DEBUG] 04-03-2024 17:18:59.526 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@3eec8583
[DEBUG] 04-03-2024 17:18:59.527 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@3eec8583
[DEBUG] 04-03-2024 17:18:59.527 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@66e1b2a
[DEBUG] 04-03-2024 17:18:59.528 [main] BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@343db2f6
[DEBUG] 04-03-2024 17:18:59.528 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@2c815fdc
[DEBUG] 04-03-2024 17:18:59.529 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@2c815fdc
[DEBUG] 04-03-2024 17:18:59.529 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@2c815fdc
[DEBUG] 04-03-2024 17:18:59.530 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@769b0752
[DEBUG] 04-03-2024 17:18:59.530 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@769b0752
[DEBUG] 04-03-2024 17:18:59.531 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@769b0752
[DEBUG] 04-03-2024 17:18:59.531 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@dae5e0
[DEBUG] 04-03-2024 17:18:59.531 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@dae5e0
[DEBUG] 04-03-2024 17:18:59.532 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@dae5e0
[DEBUG] 04-03-2024 17:18:59.532 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@59a94d0f
[DEBUG] 04-03-2024 17:18:59.533 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@59a94d0f
[DEBUG] 04-03-2024 17:18:59.533 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@59a94d0f
[DEBUG] 04-03-2024 17:18:59.534 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@7ff09659
[DEBUG] 04-03-2024 17:18:59.534 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@7ff09659
[DEBUG] 04-03-2024 17:18:59.535 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@7ff09659
[DEBUG] 04-03-2024 17:18:59.535 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@517fbf62
[DEBUG] 04-03-2024 17:18:59.535 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@517fbf62
[DEBUG] 04-03-2024 17:18:59.536 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@65db548
[DEBUG] 04-03-2024 17:18:59.536 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@65db548
[DEBUG] 04-03-2024 17:18:59.537 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@150f41b9
[DEBUG] 04-03-2024 17:18:59.537 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@150f41b9
[DEBUG] 04-03-2024 17:18:59.538 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@150f41b9
[DEBUG] 04-03-2024 17:18:59.538 [main] BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@6e364f1f
[DEBUG] 04-03-2024 17:18:59.539 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@429e7914
[DEBUG] 04-03-2024 17:18:59.539 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@429e7914
[DEBUG] 04-03-2024 17:18:59.540 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@298263fa
[DEBUG] 04-03-2024 17:18:59.540 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@466fedfa
[DEBUG] 04-03-2024 17:18:59.541 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@466fedfa
[DEBUG] 04-03-2024 17:18:59.541 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@466fedfa
[DEBUG] 04-03-2024 17:18:59.541 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@1a7d0c9f
[DEBUG] 04-03-2024 17:18:59.542 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@2b1a901d
[DEBUG] 04-03-2024 17:18:59.542 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@11bdab37
[DEBUG] 04-03-2024 17:18:59.542 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@280484c7
[DEBUG] 04-03-2024 17:18:59.543 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@280484c7
[DEBUG] 04-03-2024 17:18:59.544 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@5a6f6cac
[DEBUG] 04-03-2024 17:18:59.544 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@5a6f6cac
[DEBUG] 04-03-2024 17:18:59.544 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@258a8584
[DEBUG] 04-03-2024 17:18:59.545 [main] BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@59127611
[DEBUG] 04-03-2024 17:18:59.545 [main] BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@553ce348
[DEBUG] 04-03-2024 17:18:59.546 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@7417ef4f
[DEBUG] 04-03-2024 17:18:59.547 [main] BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@5c0e2ec
[DEBUG] 04-03-2024 17:18:59.547 [main] BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@4fa8bebb
[DEBUG] 04-03-2024 17:18:59.547 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@7d3c22a5
[DEBUG] 04-03-2024 17:18:59.548 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@7d3c22a5
[DEBUG] 04-03-2024 17:18:59.548 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@369ad7da
[DEBUG] 04-03-2024 17:18:59.549 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@369ad7da
[DEBUG] 04-03-2024 17:18:59.549 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@344f9467
[DEBUG] 04-03-2024 17:18:59.549 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@344f9467
[DEBUG] 04-03-2024 17:18:59.550 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@3e98b933
[DEBUG] 04-03-2024 17:18:59.550 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@3e98b933
[DEBUG] 04-03-2024 17:18:59.550 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@222d9d4f
[DEBUG] 04-03-2024 17:18:59.551 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@222d9d4f
[DEBUG] 04-03-2024 17:18:59.551 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@4269aad7
[DEBUG] 04-03-2024 17:18:59.552 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@a4df251
[DEBUG] 04-03-2024 17:18:59.552 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@71e7830a
[DEBUG] 04-03-2024 17:18:59.553 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@71e7830a
[DEBUG] 04-03-2024 17:18:59.553 [main] BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@3feebf9c
[DEBUG] 04-03-2024 17:18:59.553 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@305e95a4
[DEBUG] 04-03-2024 17:18:59.554 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@55e42684
[DEBUG] 04-03-2024 17:18:59.554 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@18d610e1
[DEBUG] 04-03-2024 17:18:59.555 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@18d610e1
[DEBUG] 04-03-2024 17:18:59.555 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@528e5e38
[DEBUG] 04-03-2024 17:18:59.555 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@16391278
[DEBUG] 04-03-2024 17:18:59.556 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@621dc63d
[DEBUG] 04-03-2024 17:18:59.556 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@621dc63d
[DEBUG] 04-03-2024 17:18:59.557 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@4ae49387
[DEBUG] 04-03-2024 17:18:59.557 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@4ae49387
[DEBUG] 04-03-2024 17:18:59.557 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@6abb7b7d
[DEBUG] 04-03-2024 17:18:59.558 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@6abb7b7d
[DEBUG] 04-03-2024 17:18:59.558 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@6abb7b7d
[DEBUG] 04-03-2024 17:18:59.559 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@34cf0e80
[DEBUG] 04-03-2024 17:18:59.559 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@34cf0e80
[DEBUG] 04-03-2024 17:18:59.560 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@34cf0e80
[DEBUG] 04-03-2024 17:18:59.560 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@38ef1a0a
[DEBUG] 04-03-2024 17:18:59.560 [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@56f9de3b
[DEBUG] 04-03-2024 17:18:59.561 [main] BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@6728370a
[DEBUG] 04-03-2024 17:18:59.561 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@6728370a
[DEBUG] 04-03-2024 17:18:59.561 [main] BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@2b5f8e61
[DEBUG] 04-03-2024 17:18:59.562 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@2b5f8e61
[DEBUG] 04-03-2024 17:18:59.562 [main] BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@2b5f8e61
[DEBUG] 04-03-2024 17:18:59.563 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@6ba0ee4a
[DEBUG] 04-03-2024 17:18:59.563 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@73b0ed03
[DEBUG] 04-03-2024 17:18:59.563 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@55061418
[DEBUG] 04-03-2024 17:18:59.564 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@55061418
[DEBUG] 04-03-2024 17:18:59.564 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@27db45f
[DEBUG] 04-03-2024 17:18:59.564 [main] BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@27db45f
[DEBUG] 04-03-2024 17:18:59.565 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@27db45f
[DEBUG] 04-03-2024 17:18:59.565 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@6ec3d8e4
[DEBUG] 04-03-2024 17:18:59.566 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@6ec3d8e4
[DEBUG] 04-03-2024 17:18:59.566 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@1aeff8ca
[DEBUG] 04-03-2024 17:18:59.566 [main] BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@1aeff8ca
[DEBUG] 04-03-2024 17:18:59.567 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@7f2c995b
[DEBUG] 04-03-2024 17:18:59.567 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@7f2c995b
[DEBUG] 04-03-2024 17:18:59.568 [main] BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@101c15ad
[DEBUG] 04-03-2024 17:18:59.568 [main] BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@101c15ad
[DEBUG] 04-03-2024 17:18:59.568 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@6068ebb2
[DEBUG] 04-03-2024 17:18:59.569 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@6068ebb2
[DEBUG] 04-03-2024 17:18:59.569 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@5a466dd
[DEBUG] 04-03-2024 17:18:59.586 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@52657d5f
[DEBUG] 04-03-2024 17:18:59.586 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@52657d5f
[DEBUG] 04-03-2024 17:18:59.589 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@19d27c27
[DEBUG] 04-03-2024 17:18:59.590 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@6181bc4a
[DEBUG] 04-03-2024 17:18:59.590 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@70485aa
[DEBUG] 04-03-2024 17:18:59.591 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@4bf8b77
[DEBUG] 04-03-2024 17:18:59.591 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@e06ec83
[DEBUG] 04-03-2024 17:18:59.591 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@628962e5
[DEBUG] 04-03-2024 17:18:59.592 [main] BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@410382cb
[DEBUG] 04-03-2024 17:18:59.592 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@399f5daf
[DEBUG] 04-03-2024 17:18:59.592 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@c4cceb
[DEBUG] 04-03-2024 17:19:01.378 [main] DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2c154508) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@395eb363)
[DEBUG] 04-03-2024 17:19:01.386 [main] JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
[DEBUG] 04-03-2024 17:19:01.388 [main] JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 04-03-2024 17:19:01.412 [main] BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@6b64429e
[DEBUG] 04-03-2024 17:19:01.412 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@6b64429e
[DEBUG] 04-03-2024 17:19:01.413 [main] BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@52657d5f`
[DEBUG] 04-03-2024 17:19:01.415 [main] JdbcTypeRegistry - addDescriptor(3100, NumericTypeDescriptor) replaced previous registration(org.hibernate.dialect.PostgreSQLIntervalSecondJdbcType@3df04fa1)
[DEBUG] 04-03-2024 17:19:01.431 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 04-03-2024 17:19:01.431 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 04-03-2024 17:19:01.431 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 04-03-2024 17:19:01.432 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 04-03-2024 17:19:01.432 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 04-03-2024 17:19:01.432 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 04-03-2024 17:19:01.434 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 04-03-2024 17:19:01.434 [main] BasicTypeRegistry - Adding type registration OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 04-03-2024 17:19:01.435 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 04-03-2024 17:19:01.438 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@391dfe7c] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@702cfbde]
[WARN ] 04-03-2024 17:19:01.820 [main] InFlightMetadataCollectorImpl - HHH000069: Duplicate generator name generator
[INFO ] 04-03-2024 17:19:02.083 [main] BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
[INFO ] 04-03-2024 17:19:04.708 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 04-03-2024 17:19:04.711 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@391dfe7c] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@2e60d4f4]
[TRACE] 04-03-2024 17:19:04.721 [main] TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@2e60d4f4] for TypeConfiguration
[WARN ] 04-03-2024 17:19:05.157 [main] JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[INFO ] 04-03-2024 17:19:06.418 [main] Http11NioProtocol - Starting ProtocolHandler ["http-nio-8300"]
[INFO ] 04-03-2024 17:19:06.561 [main] TomcatWebServer - Tomcat started on port(s): 8300 (http) with context path '/users_products_api'
[INFO ] 04-03-2024 17:19:06.597 [main] TestSpringBootApplication - Started TestSpringBootApplication in 18.293 seconds (process running for 21.383)
[INFO ] 04-03-2024 17:19:24.544 [http-nio-8300-exec-1] [/users_products_api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[INFO ] 04-03-2024 17:19:24.545 [http-nio-8300-exec-1] DispatcherServlet - Initializing Servlet 'dispatcherServlet'
[INFO ] 04-03-2024 17:19:24.549 [http-nio-8300-exec-1] DispatcherServlet - Completed initialization in 4 ms
[DEBUG] 04-03-2024 17:19:46.303 [http-nio-8300-exec-3] SQL - select e1_0.id,e1_0.email,e1_0.login,e1_0.name,e1_0.password,p1_0.id_user,p1_0.id,p1_0.name,p1_0.page_image,p1_0.price,p1_0.raiting,p1_0.year_issue from users e1_0 left join products p1_0 on e1_0.id=p1_0.id_user where e1_0.id=?
[TRACE] 04-03-2024 17:29:17.938 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@2e60d4f4] for TypeConfiguration
[DEBUG] 04-03-2024 17:29:17.940 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@6ae496e1] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@2e60d4f4]
[INFO ] 04-03-2024 17:29:30.938 [background-preinit] Version - HV000001: Hibernate Validator 8.0.1.Final
[INFO ] 04-03-2024 17:29:31.085 [main] TestSpringBootApplication - Starting TestSpringBootApplication using Java 17.0.10 with PID 2352348 (/home/dima/backend_microservice/UserProductsMicroService/target/classes started by dima in /home/dima/backend_microservice/UserProductsMicroService)
[INFO ] 04-03-2024 17:29:31.096 [main] TestSpringBootApplication - No active profile set, falling back to 1 default profile: "default"
[INFO ] 04-03-2024 17:29:33.143 [main] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
[INFO ] 04-03-2024 17:29:33.146 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data R2DBC repositories in DEFAULT mode.
[INFO ] 04-03-2024 17:29:33.675 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 513 ms. Found 1 R2DBC repository interfaces.
[INFO ] 04-03-2024 17:29:34.440 [main] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
[INFO ] 04-03-2024 17:29:34.443 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO ] 04-03-2024 17:29:34.474 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 21 ms. Found 0 JPA repository interfaces.
[ERROR] 04-03-2024 17:29:35.767 [main] AprLifecycleListener - An incompatible version [1.2.23] of the Apache Tomcat Native library is installed, while Tomcat requires version [1.2.34]
[INFO ] 04-03-2024 17:29:36.596 [main] TomcatWebServer - Tomcat initialized with port(s): 8300 (http)
[INFO ] 04-03-2024 17:29:36.617 [main] Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8300"]
[INFO ] 04-03-2024 17:29:36.624 [main] StandardService - Starting service [Tomcat]
[INFO ] 04-03-2024 17:29:36.625 [main] StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.11]
[INFO ] 04-03-2024 17:29:38.081 [main] TldScanner - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
[INFO ] 04-03-2024 17:29:38.102 [main] [/users_products_api] - Initializing Spring embedded WebApplicationContext
[INFO ] 04-03-2024 17:29:38.106 [main] ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 6820 ms
[INFO ] 04-03-2024 17:29:39.338 [main] Version - HHH000412: Hibernate ORM core version 6.2.6.Final
[INFO ] 04-03-2024 17:29:39.347 [main] Environment - HHH000406: Using bytecode reflection optimizer
[DEBUG] 04-03-2024 17:29:39.837 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@20be890d
[DEBUG] 04-03-2024 17:29:39.837 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@20be890d
[DEBUG] 04-03-2024 17:29:39.838 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@20be890d
[DEBUG] 04-03-2024 17:29:39.838 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@5db9f51f
[DEBUG] 04-03-2024 17:29:39.839 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@5db9f51f
[DEBUG] 04-03-2024 17:29:39.839 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@534762ed
[DEBUG] 04-03-2024 17:29:39.840 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@534762ed
[DEBUG] 04-03-2024 17:29:39.841 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@6c421123
[DEBUG] 04-03-2024 17:29:39.841 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@6c421123
[DEBUG] 04-03-2024 17:29:39.842 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@38e00b47
[DEBUG] 04-03-2024 17:29:39.842 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@38e00b47
[DEBUG] 04-03-2024 17:29:39.843 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@38e00b47
[DEBUG] 04-03-2024 17:29:39.843 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@2a631049
[DEBUG] 04-03-2024 17:29:39.844 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@2a631049
[DEBUG] 04-03-2024 17:29:39.844 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@2a631049
[DEBUG] 04-03-2024 17:29:39.844 [main] BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@425b5fe2
[DEBUG] 04-03-2024 17:29:39.845 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@425b5fe2
[DEBUG] 04-03-2024 17:29:39.845 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@3eec8583
[DEBUG] 04-03-2024 17:29:39.846 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@66e1b2a
[DEBUG] 04-03-2024 17:29:39.846 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@66e1b2a
[DEBUG] 04-03-2024 17:29:39.847 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@343db2f6
[DEBUG] 04-03-2024 17:29:39.847 [main] BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@2c815fdc
[DEBUG] 04-03-2024 17:29:39.848 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@769b0752
[DEBUG] 04-03-2024 17:29:39.848 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@769b0752
[DEBUG] 04-03-2024 17:29:39.848 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@769b0752
[DEBUG] 04-03-2024 17:29:39.849 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@dae5e0
[DEBUG] 04-03-2024 17:29:39.849 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@dae5e0
[DEBUG] 04-03-2024 17:29:39.850 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@dae5e0
[DEBUG] 04-03-2024 17:29:39.850 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@59a94d0f
[DEBUG] 04-03-2024 17:29:39.851 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@59a94d0f
[DEBUG] 04-03-2024 17:29:39.851 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@59a94d0f
[DEBUG] 04-03-2024 17:29:39.852 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@7ff09659
[DEBUG] 04-03-2024 17:29:39.852 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@7ff09659
[DEBUG] 04-03-2024 17:29:39.853 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@7ff09659
[DEBUG] 04-03-2024 17:29:39.853 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@517fbf62
[DEBUG] 04-03-2024 17:29:39.853 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@517fbf62
[DEBUG] 04-03-2024 17:29:39.854 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@517fbf62
[DEBUG] 04-03-2024 17:29:39.854 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@65db548
[DEBUG] 04-03-2024 17:29:39.855 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@65db548
[DEBUG] 04-03-2024 17:29:39.855 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@150f41b9
[DEBUG] 04-03-2024 17:29:39.855 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@150f41b9
[DEBUG] 04-03-2024 17:29:39.856 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@6e364f1f
[DEBUG] 04-03-2024 17:29:39.856 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@6e364f1f
[DEBUG] 04-03-2024 17:29:39.857 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@6e364f1f
[DEBUG] 04-03-2024 17:29:39.857 [main] BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@429e7914
[DEBUG] 04-03-2024 17:29:39.858 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@298263fa
[DEBUG] 04-03-2024 17:29:39.858 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@298263fa
[DEBUG] 04-03-2024 17:29:39.858 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@466fedfa
[DEBUG] 04-03-2024 17:29:39.859 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@1a7d0c9f
[DEBUG] 04-03-2024 17:29:39.859 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@1a7d0c9f
[DEBUG] 04-03-2024 17:29:39.859 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@1a7d0c9f
[DEBUG] 04-03-2024 17:29:39.860 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@2b1a901d
[DEBUG] 04-03-2024 17:29:39.860 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@11bdab37
[DEBUG] 04-03-2024 17:29:39.860 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@280484c7
[DEBUG] 04-03-2024 17:29:39.861 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@5a6f6cac
[DEBUG] 04-03-2024 17:29:39.861 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@5a6f6cac
[DEBUG] 04-03-2024 17:29:39.861 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@258a8584
[DEBUG] 04-03-2024 17:29:39.862 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@258a8584
[DEBUG] 04-03-2024 17:29:39.863 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@59127611
[DEBUG] 04-03-2024 17:29:39.863 [main] BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@553ce348
[DEBUG] 04-03-2024 17:29:39.864 [main] BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@7417ef4f
[DEBUG] 04-03-2024 17:29:39.864 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@5c0e2ec
[DEBUG] 04-03-2024 17:29:39.864 [main] BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@4fa8bebb
[DEBUG] 04-03-2024 17:29:39.865 [main] BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@7d3c22a5
[DEBUG] 04-03-2024 17:29:39.865 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@369ad7da
[DEBUG] 04-03-2024 17:29:39.866 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@369ad7da
[DEBUG] 04-03-2024 17:29:39.866 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@344f9467
[DEBUG] 04-03-2024 17:29:39.867 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@344f9467
[DEBUG] 04-03-2024 17:29:39.867 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@3e98b933
[DEBUG] 04-03-2024 17:29:39.867 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@3e98b933
[DEBUG] 04-03-2024 17:29:39.868 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@222d9d4f
[DEBUG] 04-03-2024 17:29:39.868 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@222d9d4f
[DEBUG] 04-03-2024 17:29:39.868 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@4269aad7
[DEBUG] 04-03-2024 17:29:39.868 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@4269aad7
[DEBUG] 04-03-2024 17:29:39.869 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@a4df251
[DEBUG] 04-03-2024 17:29:39.869 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@71e7830a
[DEBUG] 04-03-2024 17:29:39.869 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@3feebf9c
[DEBUG] 04-03-2024 17:29:39.870 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@3feebf9c
[DEBUG] 04-03-2024 17:29:39.870 [main] BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@305e95a4
[DEBUG] 04-03-2024 17:29:39.871 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@55e42684
[DEBUG] 04-03-2024 17:29:39.871 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@18d610e1
[DEBUG] 04-03-2024 17:29:39.871 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@528e5e38
[DEBUG] 04-03-2024 17:29:39.872 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@528e5e38
[DEBUG] 04-03-2024 17:29:39.872 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@16391278
[DEBUG] 04-03-2024 17:29:39.872 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@621dc63d
[DEBUG] 04-03-2024 17:29:39.872 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@4ae49387
[DEBUG] 04-03-2024 17:29:39.873 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@4ae49387
[DEBUG] 04-03-2024 17:29:39.874 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@6abb7b7d
[DEBUG] 04-03-2024 17:29:39.874 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@6abb7b7d
[DEBUG] 04-03-2024 17:29:39.874 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@34cf0e80
[DEBUG] 04-03-2024 17:29:39.875 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@34cf0e80
[DEBUG] 04-03-2024 17:29:39.875 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@34cf0e80
[DEBUG] 04-03-2024 17:29:39.875 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@38ef1a0a
[DEBUG] 04-03-2024 17:29:39.876 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@38ef1a0a
[DEBUG] 04-03-2024 17:29:39.876 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@38ef1a0a
[DEBUG] 04-03-2024 17:29:39.876 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@56f9de3b
[DEBUG] 04-03-2024 17:29:39.877 [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@6728370a
[DEBUG] 04-03-2024 17:29:39.877 [main] BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@2b5f8e61
[DEBUG] 04-03-2024 17:29:39.877 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@2b5f8e61
[DEBUG] 04-03-2024 17:29:39.878 [main] BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@6ba0ee4a
[DEBUG] 04-03-2024 17:29:39.878 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@6ba0ee4a
[DEBUG] 04-03-2024 17:29:39.879 [main] BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@6ba0ee4a
[DEBUG] 04-03-2024 17:29:39.879 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@73b0ed03
[DEBUG] 04-03-2024 17:29:39.879 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@55061418
[DEBUG] 04-03-2024 17:29:39.880 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@27db45f
[DEBUG] 04-03-2024 17:29:39.880 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@27db45f
[DEBUG] 04-03-2024 17:29:39.880 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@6ec3d8e4
[DEBUG] 04-03-2024 17:29:39.881 [main] BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@6ec3d8e4
[DEBUG] 04-03-2024 17:29:39.881 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@6ec3d8e4
[DEBUG] 04-03-2024 17:29:39.881 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@1aeff8ca
[DEBUG] 04-03-2024 17:29:39.882 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@1aeff8ca
[DEBUG] 04-03-2024 17:29:39.882 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@7f2c995b
[DEBUG] 04-03-2024 17:29:39.882 [main] BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@7f2c995b
[DEBUG] 04-03-2024 17:29:39.883 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@101c15ad
[DEBUG] 04-03-2024 17:29:39.883 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@101c15ad
[DEBUG] 04-03-2024 17:29:39.884 [main] BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@6068ebb2
[DEBUG] 04-03-2024 17:29:39.884 [main] BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@6068ebb2
[DEBUG] 04-03-2024 17:29:39.884 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@5a466dd
[DEBUG] 04-03-2024 17:29:39.884 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@5a466dd
[DEBUG] 04-03-2024 17:29:39.885 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@1ed9d173
[DEBUG] 04-03-2024 17:29:39.900 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@43d3995f
[DEBUG] 04-03-2024 17:29:39.901 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@43d3995f
[DEBUG] 04-03-2024 17:29:39.904 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@6181bc4a
[DEBUG] 04-03-2024 17:29:39.904 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@70485aa
[DEBUG] 04-03-2024 17:29:39.905 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@4bf8b77
[DEBUG] 04-03-2024 17:29:39.905 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@e06ec83
[DEBUG] 04-03-2024 17:29:39.905 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@628962e5
[DEBUG] 04-03-2024 17:29:39.906 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@410382cb
[DEBUG] 04-03-2024 17:29:39.907 [main] BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@399f5daf
[DEBUG] 04-03-2024 17:29:39.907 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@c4cceb
[DEBUG] 04-03-2024 17:29:39.907 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@29f3185c
[DEBUG] 04-03-2024 17:29:41.220 [main] DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@395eb363) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1e194966)
[DEBUG] 04-03-2024 17:29:41.226 [main] JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
[DEBUG] 04-03-2024 17:29:41.227 [main] JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 04-03-2024 17:29:41.248 [main] BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@48aa0813
[DEBUG] 04-03-2024 17:29:41.248 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@48aa0813
[DEBUG] 04-03-2024 17:29:41.248 [main] BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@43d3995f`
[DEBUG] 04-03-2024 17:29:41.251 [main] JdbcTypeRegistry - addDescriptor(3100, NumericTypeDescriptor) replaced previous registration(org.hibernate.dialect.PostgreSQLIntervalSecondJdbcType@5c25daad)
[DEBUG] 04-03-2024 17:29:41.264 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 04-03-2024 17:29:41.265 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 04-03-2024 17:29:41.265 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 04-03-2024 17:29:41.265 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 04-03-2024 17:29:41.265 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 04-03-2024 17:29:41.266 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 04-03-2024 17:29:41.268 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 04-03-2024 17:29:41.268 [main] BasicTypeRegistry - Adding type registration OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 04-03-2024 17:29:41.269 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 04-03-2024 17:29:41.273 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@702cfbde] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@7d3bcd3]
[WARN ] 04-03-2024 17:29:41.687 [main] InFlightMetadataCollectorImpl - HHH000069: Duplicate generator name generator
[INFO ] 04-03-2024 17:29:41.854 [main] BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
[INFO ] 04-03-2024 17:29:44.481 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 04-03-2024 17:29:44.482 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@702cfbde] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@14091e24]
[TRACE] 04-03-2024 17:29:44.489 [main] TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@14091e24] for TypeConfiguration
[WARN ] 04-03-2024 17:29:44.852 [main] JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[INFO ] 04-03-2024 17:29:46.196 [main] Http11NioProtocol - Starting ProtocolHandler ["http-nio-8300"]
[INFO ] 04-03-2024 17:29:46.269 [main] TomcatWebServer - Tomcat started on port(s): 8300 (http) with context path '/users_products_api'
[INFO ] 04-03-2024 17:29:46.303 [main] TestSpringBootApplication - Started TestSpringBootApplication in 16.422 seconds (process running for 19.462)
[INFO ] 04-03-2024 17:30:07.598 [http-nio-8300-exec-1] [/users_products_api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[INFO ] 04-03-2024 17:30:07.599 [http-nio-8300-exec-1] DispatcherServlet - Initializing Servlet 'dispatcherServlet'
[INFO ] 04-03-2024 17:30:07.607 [http-nio-8300-exec-1] DispatcherServlet - Completed initialization in 6 ms
[TRACE] 04-03-2024 17:30:35.665 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@14091e24] for TypeConfiguration
[DEBUG] 04-03-2024 17:30:35.666 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@48bcb51a] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@14091e24]
[INFO ] 04-03-2024 17:30:47.877 [background-preinit] Version - HV000001: Hibernate Validator 8.0.1.Final
[INFO ] 04-03-2024 17:30:48.084 [main] TestSpringBootApplication - Starting TestSpringBootApplication using Java 17.0.10 with PID 2353064 (/home/dima/backend_microservice/UserProductsMicroService/target/classes started by dima in /home/dima/backend_microservice/UserProductsMicroService)
[INFO ] 04-03-2024 17:30:48.104 [main] TestSpringBootApplication - No active profile set, falling back to 1 default profile: "default"
[INFO ] 04-03-2024 17:30:50.568 [main] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
[INFO ] 04-03-2024 17:30:50.571 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data R2DBC repositories in DEFAULT mode.
[INFO ] 04-03-2024 17:30:51.175 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 588 ms. Found 1 R2DBC repository interfaces.
[INFO ] 04-03-2024 17:30:51.806 [main] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
[INFO ] 04-03-2024 17:30:51.810 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO ] 04-03-2024 17:30:51.846 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 21 ms. Found 0 JPA repository interfaces.
[ERROR] 04-03-2024 17:30:52.916 [main] AprLifecycleListener - An incompatible version [1.2.23] of the Apache Tomcat Native library is installed, while Tomcat requires version [1.2.34]
[INFO ] 04-03-2024 17:30:53.699 [main] TomcatWebServer - Tomcat initialized with port(s): 8300 (http)
[INFO ] 04-03-2024 17:30:53.724 [main] Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8300"]
[INFO ] 04-03-2024 17:30:53.738 [main] StandardService - Starting service [Tomcat]
[INFO ] 04-03-2024 17:30:53.739 [main] StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.11]
[INFO ] 04-03-2024 17:30:54.828 [main] TldScanner - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
[INFO ] 04-03-2024 17:30:54.847 [main] [/users_products_api] - Initializing Spring embedded WebApplicationContext
[INFO ] 04-03-2024 17:30:54.852 [main] ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 6367 ms
[INFO ] 04-03-2024 17:30:56.479 [main] Version - HHH000412: Hibernate ORM core version 6.2.6.Final
[INFO ] 04-03-2024 17:30:56.489 [main] Environment - HHH000406: Using bytecode reflection optimizer
[DEBUG] 04-03-2024 17:30:56.941 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@cae2a97
[DEBUG] 04-03-2024 17:30:56.942 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@cae2a97
[DEBUG] 04-03-2024 17:30:56.943 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@cae2a97
[DEBUG] 04-03-2024 17:30:56.943 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@7d12429
[DEBUG] 04-03-2024 17:30:56.944 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@7d12429
[DEBUG] 04-03-2024 17:30:56.944 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@14656be5
[DEBUG] 04-03-2024 17:30:56.945 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@14656be5
[DEBUG] 04-03-2024 17:30:56.945 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@20be890d
[DEBUG] 04-03-2024 17:30:56.945 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@20be890d
[DEBUG] 04-03-2024 17:30:56.946 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@5db9f51f
[DEBUG] 04-03-2024 17:30:56.946 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@5db9f51f
[DEBUG] 04-03-2024 17:30:56.947 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@5db9f51f
[DEBUG] 04-03-2024 17:30:56.947 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@534762ed
[DEBUG] 04-03-2024 17:30:56.948 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@534762ed
[DEBUG] 04-03-2024 17:30:56.948 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@534762ed
[DEBUG] 04-03-2024 17:30:56.949 [main] BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@6c421123
[DEBUG] 04-03-2024 17:30:56.949 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@6c421123
[DEBUG] 04-03-2024 17:30:56.950 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@38e00b47
[DEBUG] 04-03-2024 17:30:56.950 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@2a631049
[DEBUG] 04-03-2024 17:30:56.950 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@2a631049
[DEBUG] 04-03-2024 17:30:56.951 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@425b5fe2
[DEBUG] 04-03-2024 17:30:56.951 [main] BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@3eec8583
[DEBUG] 04-03-2024 17:30:56.952 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@66e1b2a
[DEBUG] 04-03-2024 17:30:56.952 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@66e1b2a
[DEBUG] 04-03-2024 17:30:56.953 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@66e1b2a
[DEBUG] 04-03-2024 17:30:56.953 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@343db2f6
[DEBUG] 04-03-2024 17:30:56.954 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@343db2f6
[DEBUG] 04-03-2024 17:30:56.954 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@343db2f6
[DEBUG] 04-03-2024 17:30:56.954 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@2c815fdc
[DEBUG] 04-03-2024 17:30:56.955 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@2c815fdc
[DEBUG] 04-03-2024 17:30:56.955 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@2c815fdc
[DEBUG] 04-03-2024 17:30:56.956 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@769b0752
[DEBUG] 04-03-2024 17:30:56.956 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@769b0752
[DEBUG] 04-03-2024 17:30:56.956 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@769b0752
[DEBUG] 04-03-2024 17:30:56.957 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@dae5e0
[DEBUG] 04-03-2024 17:30:56.957 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@dae5e0
[DEBUG] 04-03-2024 17:30:56.957 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@dae5e0
[DEBUG] 04-03-2024 17:30:56.958 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@59a94d0f
[DEBUG] 04-03-2024 17:30:56.958 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@59a94d0f
[DEBUG] 04-03-2024 17:30:56.959 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@7ff09659
[DEBUG] 04-03-2024 17:30:56.959 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@7ff09659
[DEBUG] 04-03-2024 17:30:56.959 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@517fbf62
[DEBUG] 04-03-2024 17:30:56.959 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@517fbf62
[DEBUG] 04-03-2024 17:30:56.960 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@517fbf62
[DEBUG] 04-03-2024 17:30:56.960 [main] BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@65db548
[DEBUG] 04-03-2024 17:30:56.961 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@150f41b9
[DEBUG] 04-03-2024 17:30:56.961 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@150f41b9
[DEBUG] 04-03-2024 17:30:56.962 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@6e364f1f
[DEBUG] 04-03-2024 17:30:56.962 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@429e7914
[DEBUG] 04-03-2024 17:30:56.962 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@429e7914
[DEBUG] 04-03-2024 17:30:56.963 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@429e7914
[DEBUG] 04-03-2024 17:30:56.963 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@298263fa
[DEBUG] 04-03-2024 17:30:56.963 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@466fedfa
[DEBUG] 04-03-2024 17:30:56.964 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@1a7d0c9f
[DEBUG] 04-03-2024 17:30:56.964 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@2b1a901d
[DEBUG] 04-03-2024 17:30:56.964 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@2b1a901d
[DEBUG] 04-03-2024 17:30:56.965 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@11bdab37
[DEBUG] 04-03-2024 17:30:56.965 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@11bdab37
[DEBUG] 04-03-2024 17:30:56.965 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@280484c7
[DEBUG] 04-03-2024 17:30:56.966 [main] BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@5a6f6cac
[DEBUG] 04-03-2024 17:30:56.966 [main] BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@258a8584
[DEBUG] 04-03-2024 17:30:56.967 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@59127611
[DEBUG] 04-03-2024 17:30:56.967 [main] BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@553ce348
[DEBUG] 04-03-2024 17:30:56.968 [main] BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@7417ef4f
[DEBUG] 04-03-2024 17:30:56.968 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@5c0e2ec
[DEBUG] 04-03-2024 17:30:56.968 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@5c0e2ec
[DEBUG] 04-03-2024 17:30:56.969 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@4fa8bebb
[DEBUG] 04-03-2024 17:30:56.969 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@4fa8bebb
[DEBUG] 04-03-2024 17:30:56.970 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@7d3c22a5
[DEBUG] 04-03-2024 17:30:56.970 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@7d3c22a5
[DEBUG] 04-03-2024 17:30:56.970 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@369ad7da
[DEBUG] 04-03-2024 17:30:56.971 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@369ad7da
[DEBUG] 04-03-2024 17:30:56.971 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@344f9467
[DEBUG] 04-03-2024 17:30:56.971 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@344f9467
[DEBUG] 04-03-2024 17:30:56.972 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@3e98b933
[DEBUG] 04-03-2024 17:30:56.972 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@222d9d4f
[DEBUG] 04-03-2024 17:30:56.972 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@4269aad7
[DEBUG] 04-03-2024 17:30:56.973 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@4269aad7
[DEBUG] 04-03-2024 17:30:56.973 [main] BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@a4df251
[DEBUG] 04-03-2024 17:30:56.974 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@71e7830a
[DEBUG] 04-03-2024 17:30:56.974 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3feebf9c
[DEBUG] 04-03-2024 17:30:56.974 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@305e95a4
[DEBUG] 04-03-2024 17:30:56.974 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@305e95a4
[DEBUG] 04-03-2024 17:30:56.975 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@55e42684
[DEBUG] 04-03-2024 17:30:56.975 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@18d610e1
[DEBUG] 04-03-2024 17:30:56.975 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@528e5e38
[DEBUG] 04-03-2024 17:30:56.976 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@528e5e38
[DEBUG] 04-03-2024 17:30:56.976 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@16391278
[DEBUG] 04-03-2024 17:30:56.976 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@16391278
[DEBUG] 04-03-2024 17:30:56.977 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@621dc63d
[DEBUG] 04-03-2024 17:30:56.977 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@621dc63d
[DEBUG] 04-03-2024 17:30:56.977 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@621dc63d
[DEBUG] 04-03-2024 17:30:56.978 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@4ae49387
[DEBUG] 04-03-2024 17:30:56.978 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@4ae49387
[DEBUG] 04-03-2024 17:30:56.979 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@4ae49387
[DEBUG] 04-03-2024 17:30:56.979 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@6abb7b7d
[DEBUG] 04-03-2024 17:30:56.979 [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@34cf0e80
[DEBUG] 04-03-2024 17:30:56.980 [main] BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@38ef1a0a
[DEBUG] 04-03-2024 17:30:56.980 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@38ef1a0a
[DEBUG] 04-03-2024 17:30:56.980 [main] BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@56f9de3b
[DEBUG] 04-03-2024 17:30:56.980 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@56f9de3b
[DEBUG] 04-03-2024 17:30:56.981 [main] BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@56f9de3b
[DEBUG] 04-03-2024 17:30:56.981 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@6728370a
[DEBUG] 04-03-2024 17:30:56.981 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@2b5f8e61
[DEBUG] 04-03-2024 17:30:56.982 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@6ba0ee4a
[DEBUG] 04-03-2024 17:30:56.982 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@6ba0ee4a
[DEBUG] 04-03-2024 17:30:56.983 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@73b0ed03
[DEBUG] 04-03-2024 17:30:56.983 [main] BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@73b0ed03
[DEBUG] 04-03-2024 17:30:56.983 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@73b0ed03
[DEBUG] 04-03-2024 17:30:56.984 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@55061418
[DEBUG] 04-03-2024 17:30:56.984 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@55061418
[DEBUG] 04-03-2024 17:30:56.984 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@27db45f
[DEBUG] 04-03-2024 17:30:56.985 [main] BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@27db45f
[DEBUG] 04-03-2024 17:30:56.986 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@6ec3d8e4
[DEBUG] 04-03-2024 17:30:56.986 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@6ec3d8e4
[DEBUG] 04-03-2024 17:30:56.986 [main] BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@1aeff8ca
[DEBUG] 04-03-2024 17:30:56.987 [main] BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@1aeff8ca
[DEBUG] 04-03-2024 17:30:56.987 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@7f2c995b
[DEBUG] 04-03-2024 17:30:56.987 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@7f2c995b
[DEBUG] 04-03-2024 17:30:56.987 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@101c15ad
[DEBUG] 04-03-2024 17:30:57.003 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@6210666c
[DEBUG] 04-03-2024 17:30:57.004 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@6210666c
[DEBUG] 04-03-2024 17:30:57.007 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@7d537616
[DEBUG] 04-03-2024 17:30:57.007 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@604c7e9b
[DEBUG] 04-03-2024 17:30:57.008 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@19d27c27
[DEBUG] 04-03-2024 17:30:57.008 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@6181bc4a
[DEBUG] 04-03-2024 17:30:57.008 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@70485aa
[DEBUG] 04-03-2024 17:30:57.009 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@4bf8b77
[DEBUG] 04-03-2024 17:30:57.009 [main] BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@e06ec83
[DEBUG] 04-03-2024 17:30:57.009 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@628962e5
[DEBUG] 04-03-2024 17:30:57.010 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@410382cb
[DEBUG] 04-03-2024 17:30:58.471 [main] DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4f4d05b3) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2bd4780c)
[DEBUG] 04-03-2024 17:30:58.477 [main] JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
[DEBUG] 04-03-2024 17:30:58.478 [main] JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 04-03-2024 17:30:58.502 [main] BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@398694a6
[DEBUG] 04-03-2024 17:30:58.503 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@398694a6
[DEBUG] 04-03-2024 17:30:58.504 [main] BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@6210666c`
[DEBUG] 04-03-2024 17:30:58.507 [main] JdbcTypeRegistry - addDescriptor(3100, NumericTypeDescriptor) replaced previous registration(org.hibernate.dialect.PostgreSQLIntervalSecondJdbcType@6cbbfe29)
[DEBUG] 04-03-2024 17:30:58.524 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 04-03-2024 17:30:58.532 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 04-03-2024 17:30:58.533 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 04-03-2024 17:30:58.533 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 04-03-2024 17:30:58.533 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 04-03-2024 17:30:58.534 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 04-03-2024 17:30:58.536 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 04-03-2024 17:30:58.536 [main] BasicTypeRegistry - Adding type registration OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 04-03-2024 17:30:58.537 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 04-03-2024 17:30:58.545 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@474619d9] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@bb5f9d]
[WARN ] 04-03-2024 17:30:59.219 [main] InFlightMetadataCollectorImpl - HHH000069: Duplicate generator name generator
[INFO ] 04-03-2024 17:30:59.405 [main] BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
[INFO ] 04-03-2024 17:31:03.113 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 04-03-2024 17:31:03.116 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@474619d9] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@2a9f7572]
[TRACE] 04-03-2024 17:31:03.123 [main] TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@2a9f7572] for TypeConfiguration
[WARN ] 04-03-2024 17:31:03.578 [main] JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[INFO ] 04-03-2024 17:31:04.875 [main] Http11NioProtocol - Starting ProtocolHandler ["http-nio-8300"]
[INFO ] 04-03-2024 17:31:04.941 [main] TomcatWebServer - Tomcat started on port(s): 8300 (http) with context path '/users_products_api'
[INFO ] 04-03-2024 17:31:04.971 [main] TestSpringBootApplication - Started TestSpringBootApplication in 18.145 seconds (process running for 21.242)
[INFO ] 04-03-2024 17:31:10.404 [http-nio-8300-exec-2] [/users_products_api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[INFO ] 04-03-2024 17:31:10.405 [http-nio-8300-exec-2] DispatcherServlet - Initializing Servlet 'dispatcherServlet'
[INFO ] 04-03-2024 17:31:10.408 [http-nio-8300-exec-2] DispatcherServlet - Completed initialization in 3 ms
[TRACE] 04-03-2024 17:40:26.318 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@2a9f7572] for TypeConfiguration
[DEBUG] 04-03-2024 17:40:26.324 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@6dd08ffe] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@2a9f7572]
[INFO ] 04-03-2024 17:40:39.190 [background-preinit] Version - HV000001: Hibernate Validator 8.0.1.Final
[INFO ] 04-03-2024 17:40:39.316 [main] TestSpringBootApplication - Starting TestSpringBootApplication using Java 17.0.10 with PID 2358132 (/home/dima/backend_microservice/UserProductsMicroService/target/classes started by dima in /home/dima/backend_microservice/UserProductsMicroService)
[INFO ] 04-03-2024 17:40:39.333 [main] TestSpringBootApplication - No active profile set, falling back to 1 default profile: "default"
[INFO ] 04-03-2024 17:40:41.402 [main] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
[INFO ] 04-03-2024 17:40:41.405 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data R2DBC repositories in DEFAULT mode.
[INFO ] 04-03-2024 17:40:42.284 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 845 ms. Found 1 R2DBC repository interfaces.
[INFO ] 04-03-2024 17:40:42.909 [main] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
[INFO ] 04-03-2024 17:40:42.912 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO ] 04-03-2024 17:40:42.941 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 19 ms. Found 0 JPA repository interfaces.
[ERROR] 04-03-2024 17:40:44.034 [main] AprLifecycleListener - An incompatible version [1.2.23] of the Apache Tomcat Native library is installed, while Tomcat requires version [1.2.34]
[INFO ] 04-03-2024 17:40:44.844 [main] TomcatWebServer - Tomcat initialized with port(s): 8300 (http)
[INFO ] 04-03-2024 17:40:44.865 [main] Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8300"]
[INFO ] 04-03-2024 17:40:44.873 [main] StandardService - Starting service [Tomcat]
[INFO ] 04-03-2024 17:40:44.874 [main] StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.11]
[INFO ] 04-03-2024 17:40:46.200 [main] TldScanner - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
[INFO ] 04-03-2024 17:40:46.224 [main] [/users_products_api] - Initializing Spring embedded WebApplicationContext
[INFO ] 04-03-2024 17:40:46.232 [main] ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 6698 ms
[INFO ] 04-03-2024 17:40:47.704 [main] Version - HHH000412: Hibernate ORM core version 6.2.6.Final
[INFO ] 04-03-2024 17:40:47.713 [main] Environment - HHH000406: Using bytecode reflection optimizer
[DEBUG] 04-03-2024 17:40:48.354 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@53ba7997
[DEBUG] 04-03-2024 17:40:48.355 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@53ba7997
[DEBUG] 04-03-2024 17:40:48.355 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@53ba7997
[DEBUG] 04-03-2024 17:40:48.355 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@3f6f9cef
[DEBUG] 04-03-2024 17:40:48.356 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@3f6f9cef
[DEBUG] 04-03-2024 17:40:48.357 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@61dd1c3d
[DEBUG] 04-03-2024 17:40:48.357 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@61dd1c3d
[DEBUG] 04-03-2024 17:40:48.357 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@7858d31d
[DEBUG] 04-03-2024 17:40:48.358 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@7858d31d
[DEBUG] 04-03-2024 17:40:48.358 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@782e6b40
[DEBUG] 04-03-2024 17:40:48.359 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@782e6b40
[DEBUG] 04-03-2024 17:40:48.359 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@782e6b40
[DEBUG] 04-03-2024 17:40:48.361 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@3b65084e
[DEBUG] 04-03-2024 17:40:48.363 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@3b65084e
[DEBUG] 04-03-2024 17:40:48.364 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@3b65084e
[DEBUG] 04-03-2024 17:40:48.364 [main] BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@32d0d7eb
[DEBUG] 04-03-2024 17:40:48.365 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@32d0d7eb
[DEBUG] 04-03-2024 17:40:48.365 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@cae2a97
[DEBUG] 04-03-2024 17:40:48.366 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@7d12429
[DEBUG] 04-03-2024 17:40:48.366 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@7d12429
[DEBUG] 04-03-2024 17:40:48.367 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@14656be5
[DEBUG] 04-03-2024 17:40:48.369 [main] BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@20be890d
[DEBUG] 04-03-2024 17:40:48.370 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@5db9f51f
[DEBUG] 04-03-2024 17:40:48.370 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@5db9f51f
[DEBUG] 04-03-2024 17:40:48.371 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@5db9f51f
[DEBUG] 04-03-2024 17:40:48.371 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@534762ed
[DEBUG] 04-03-2024 17:40:48.371 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@534762ed
[DEBUG] 04-03-2024 17:40:48.372 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@534762ed
[DEBUG] 04-03-2024 17:40:48.372 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@6c421123
[DEBUG] 04-03-2024 17:40:48.373 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@6c421123
[DEBUG] 04-03-2024 17:40:48.373 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@6c421123
[DEBUG] 04-03-2024 17:40:48.375 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@38e00b47
[DEBUG] 04-03-2024 17:40:48.375 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@38e00b47
[DEBUG] 04-03-2024 17:40:48.375 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@38e00b47
[DEBUG] 04-03-2024 17:40:48.376 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@2a631049
[DEBUG] 04-03-2024 17:40:48.378 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@2a631049
[DEBUG] 04-03-2024 17:40:48.378 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@2a631049
[DEBUG] 04-03-2024 17:40:48.379 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@425b5fe2
[DEBUG] 04-03-2024 17:40:48.380 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@425b5fe2
[DEBUG] 04-03-2024 17:40:48.380 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@3eec8583
[DEBUG] 04-03-2024 17:40:48.380 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@3eec8583
[DEBUG] 04-03-2024 17:40:48.381 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@66e1b2a
[DEBUG] 04-03-2024 17:40:48.381 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@66e1b2a
[DEBUG] 04-03-2024 17:40:48.382 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@66e1b2a
[DEBUG] 04-03-2024 17:40:48.382 [main] BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@343db2f6
[DEBUG] 04-03-2024 17:40:48.383 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@2c815fdc
[DEBUG] 04-03-2024 17:40:48.383 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@2c815fdc
[DEBUG] 04-03-2024 17:40:48.384 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@769b0752
[DEBUG] 04-03-2024 17:40:48.384 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@dae5e0
[DEBUG] 04-03-2024 17:40:48.385 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@dae5e0
[DEBUG] 04-03-2024 17:40:48.386 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@dae5e0
[DEBUG] 04-03-2024 17:40:48.386 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@59a94d0f
[DEBUG] 04-03-2024 17:40:48.386 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@7ff09659
[DEBUG] 04-03-2024 17:40:48.387 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@517fbf62
[DEBUG] 04-03-2024 17:40:48.387 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@65db548
[DEBUG] 04-03-2024 17:40:48.388 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@65db548
[DEBUG] 04-03-2024 17:40:48.388 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@150f41b9
[DEBUG] 04-03-2024 17:40:48.388 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@150f41b9
[DEBUG] 04-03-2024 17:40:48.389 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@6e364f1f
[DEBUG] 04-03-2024 17:40:48.389 [main] BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@429e7914
[DEBUG] 04-03-2024 17:40:48.390 [main] BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@298263fa
[DEBUG] 04-03-2024 17:40:48.391 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@466fedfa
[DEBUG] 04-03-2024 17:40:48.391 [main] BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@1a7d0c9f
[DEBUG] 04-03-2024 17:40:48.391 [main] BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@2b1a901d
[DEBUG] 04-03-2024 17:40:48.392 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@11bdab37
[DEBUG] 04-03-2024 17:40:48.392 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@11bdab37
[DEBUG] 04-03-2024 17:40:48.393 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@280484c7
[DEBUG] 04-03-2024 17:40:48.393 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@280484c7
[DEBUG] 04-03-2024 17:40:48.393 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@5a6f6cac
[DEBUG] 04-03-2024 17:40:48.394 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@5a6f6cac
[DEBUG] 04-03-2024 17:40:48.395 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@258a8584
[DEBUG] 04-03-2024 17:40:48.395 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@258a8584
[DEBUG] 04-03-2024 17:40:48.395 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@59127611
[DEBUG] 04-03-2024 17:40:48.396 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@59127611
[DEBUG] 04-03-2024 17:40:48.397 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@553ce348
[DEBUG] 04-03-2024 17:40:48.397 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@7417ef4f
[DEBUG] 04-03-2024 17:40:48.398 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@5c0e2ec
[DEBUG] 04-03-2024 17:40:48.398 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@5c0e2ec
[DEBUG] 04-03-2024 17:40:48.398 [main] BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@4fa8bebb
[DEBUG] 04-03-2024 17:40:48.399 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@7d3c22a5
[DEBUG] 04-03-2024 17:40:48.400 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@369ad7da
[DEBUG] 04-03-2024 17:40:48.401 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@344f9467
[DEBUG] 04-03-2024 17:40:48.401 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@344f9467
[DEBUG] 04-03-2024 17:40:48.401 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@3e98b933
[DEBUG] 04-03-2024 17:40:48.402 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@222d9d4f
[DEBUG] 04-03-2024 17:40:48.402 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@4269aad7
[DEBUG] 04-03-2024 17:40:48.403 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@4269aad7
[DEBUG] 04-03-2024 17:40:48.403 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@a4df251
[DEBUG] 04-03-2024 17:40:48.404 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@a4df251
[DEBUG] 04-03-2024 17:40:48.404 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@71e7830a
[DEBUG] 04-03-2024 17:40:48.404 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@71e7830a
[DEBUG] 04-03-2024 17:40:48.405 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@71e7830a
[DEBUG] 04-03-2024 17:40:48.406 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@3feebf9c
[DEBUG] 04-03-2024 17:40:48.406 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@3feebf9c
[DEBUG] 04-03-2024 17:40:48.406 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@3feebf9c
[DEBUG] 04-03-2024 17:40:48.407 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@305e95a4
[DEBUG] 04-03-2024 17:40:48.407 [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@55e42684
[DEBUG] 04-03-2024 17:40:48.408 [main] BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@18d610e1
[DEBUG] 04-03-2024 17:40:48.408 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@18d610e1
[DEBUG] 04-03-2024 17:40:48.408 [main] BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@528e5e38
[DEBUG] 04-03-2024 17:40:48.409 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@528e5e38
[DEBUG] 04-03-2024 17:40:48.409 [main] BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@528e5e38
[DEBUG] 04-03-2024 17:40:48.410 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@16391278
[DEBUG] 04-03-2024 17:40:48.410 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@621dc63d
[DEBUG] 04-03-2024 17:40:48.410 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@4ae49387
[DEBUG] 04-03-2024 17:40:48.411 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@4ae49387
[DEBUG] 04-03-2024 17:40:48.411 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@6abb7b7d
[DEBUG] 04-03-2024 17:40:48.412 [main] BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@6abb7b7d
[DEBUG] 04-03-2024 17:40:48.412 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@6abb7b7d
[DEBUG] 04-03-2024 17:40:48.413 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@34cf0e80
[DEBUG] 04-03-2024 17:40:48.413 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@34cf0e80
[DEBUG] 04-03-2024 17:40:48.414 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@38ef1a0a
[DEBUG] 04-03-2024 17:40:48.414 [main] BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@38ef1a0a
[DEBUG] 04-03-2024 17:40:48.415 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@56f9de3b
[DEBUG] 04-03-2024 17:40:48.415 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@56f9de3b
[DEBUG] 04-03-2024 17:40:48.415 [main] BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@6728370a
[DEBUG] 04-03-2024 17:40:48.416 [main] BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@6728370a
[DEBUG] 04-03-2024 17:40:48.416 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@2b5f8e61
[DEBUG] 04-03-2024 17:40:48.417 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@2b5f8e61
[DEBUG] 04-03-2024 17:40:48.417 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@6ba0ee4a
[DEBUG] 04-03-2024 17:40:48.455 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@280ecc33
[DEBUG] 04-03-2024 17:40:48.457 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@280ecc33
[DEBUG] 04-03-2024 17:40:48.469 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@2211b44f
[DEBUG] 04-03-2024 17:40:48.471 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@6c830ebd
[DEBUG] 04-03-2024 17:40:48.472 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@15f519f7
[DEBUG] 04-03-2024 17:40:48.473 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@4a336377
[DEBUG] 04-03-2024 17:40:48.475 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@65af05b2
[DEBUG] 04-03-2024 17:40:48.476 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@11ad095c
[DEBUG] 04-03-2024 17:40:48.492 [main] BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@2c2a903f
[DEBUG] 04-03-2024 17:40:48.493 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@7d537616
[DEBUG] 04-03-2024 17:40:48.493 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@604c7e9b
[DEBUG] 04-03-2024 17:40:50.193 [main] DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@33eab2e8) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@34bf66af)
[DEBUG] 04-03-2024 17:40:50.198 [main] JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
[DEBUG] 04-03-2024 17:40:50.199 [main] JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 04-03-2024 17:40:50.219 [main] BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@76220ef1
[DEBUG] 04-03-2024 17:40:50.220 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@76220ef1
[DEBUG] 04-03-2024 17:40:50.221 [main] BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@280ecc33`
[DEBUG] 04-03-2024 17:40:50.226 [main] JdbcTypeRegistry - addDescriptor(3100, NumericTypeDescriptor) replaced previous registration(org.hibernate.dialect.PostgreSQLIntervalSecondJdbcType@2419fe6f)
[DEBUG] 04-03-2024 17:40:50.245 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 04-03-2024 17:40:50.247 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 04-03-2024 17:40:50.247 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 04-03-2024 17:40:50.247 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 04-03-2024 17:40:50.247 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 04-03-2024 17:40:50.247 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 04-03-2024 17:40:50.250 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 04-03-2024 17:40:50.250 [main] BasicTypeRegistry - Adding type registration OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 04-03-2024 17:40:50.251 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 04-03-2024 17:40:50.254 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2f8f40cc] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@14d81f2c]
[WARN ] 04-03-2024 17:40:50.720 [main] InFlightMetadataCollectorImpl - HHH000069: Duplicate generator name generator
[INFO ] 04-03-2024 17:40:50.991 [main] BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
[INFO ] 04-03-2024 17:40:54.499 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 04-03-2024 17:40:54.502 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2f8f40cc] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@4bd1b07d]
[TRACE] 04-03-2024 17:40:54.509 [main] TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@4bd1b07d] for TypeConfiguration
[WARN ] 04-03-2024 17:40:54.915 [main] JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[INFO ] 04-03-2024 17:40:55.940 [main] Http11NioProtocol - Starting ProtocolHandler ["http-nio-8300"]
[INFO ] 04-03-2024 17:40:56.006 [main] TomcatWebServer - Tomcat started on port(s): 8300 (http) with context path '/users_products_api'
[INFO ] 04-03-2024 17:40:56.044 [main] TestSpringBootApplication - Started TestSpringBootApplication in 17.947 seconds (process running for 21.003)
[INFO ] 04-03-2024 17:41:02.461 [http-nio-8300-exec-1] [/users_products_api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[INFO ] 04-03-2024 17:41:02.462 [http-nio-8300-exec-1] DispatcherServlet - Initializing Servlet 'dispatcherServlet'
[INFO ] 04-03-2024 17:41:02.466 [http-nio-8300-exec-1] DispatcherServlet - Completed initialization in 3 ms
[INFO ] 05-03-2024 16:39:33.145 [background-preinit] Version - HV000001: Hibernate Validator 8.0.1.Final
[INFO ] 05-03-2024 16:39:33.263 [main] TestSpringBootApplication - Starting TestSpringBootApplication using Java 17.0.10 with PID 13555 (/home/dima/backend_microservice/UserProductsMicroService/target/classes started by dima in /home/dima/backend_microservice/UserProductsMicroService)
[INFO ] 05-03-2024 16:39:33.273 [main] TestSpringBootApplication - No active profile set, falling back to 1 default profile: "default"
[INFO ] 05-03-2024 16:39:34.975 [main] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
[INFO ] 05-03-2024 16:39:34.977 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data R2DBC repositories in DEFAULT mode.
[INFO ] 05-03-2024 16:39:35.395 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 408 ms. Found 1 R2DBC repository interfaces.
[INFO ] 05-03-2024 16:39:35.957 [main] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
[INFO ] 05-03-2024 16:39:35.959 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO ] 05-03-2024 16:39:35.988 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 18 ms. Found 0 JPA repository interfaces.
[ERROR] 05-03-2024 16:39:37.030 [main] AprLifecycleListener - An incompatible version [1.2.23] of the Apache Tomcat Native library is installed, while Tomcat requires version [1.2.34]
[INFO ] 05-03-2024 16:39:37.859 [main] TomcatWebServer - Tomcat initialized with port(s): 8300 (http)
[INFO ] 05-03-2024 16:39:37.887 [main] Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8300"]
[INFO ] 05-03-2024 16:39:37.894 [main] StandardService - Starting service [Tomcat]
[INFO ] 05-03-2024 16:39:37.896 [main] StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.11]
[INFO ] 05-03-2024 16:39:38.850 [main] TldScanner - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
[INFO ] 05-03-2024 16:39:38.867 [main] [/users_products_api] - Initializing Spring embedded WebApplicationContext
[INFO ] 05-03-2024 16:39:38.872 [main] ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 5371 ms
[INFO ] 05-03-2024 16:39:39.866 [main] Version - HHH000412: Hibernate ORM core version 6.2.6.Final
[INFO ] 05-03-2024 16:39:39.871 [main] Environment - HHH000406: Using bytecode reflection optimizer
[DEBUG] 05-03-2024 16:39:40.166 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@280484c7
[DEBUG] 05-03-2024 16:39:40.167 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@280484c7
[DEBUG] 05-03-2024 16:39:40.167 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@280484c7
[DEBUG] 05-03-2024 16:39:40.168 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@5a6f6cac
[DEBUG] 05-03-2024 16:39:40.168 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@5a6f6cac
[DEBUG] 05-03-2024 16:39:40.169 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@258a8584
[DEBUG] 05-03-2024 16:39:40.169 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@258a8584
[DEBUG] 05-03-2024 16:39:40.170 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@59127611
[DEBUG] 05-03-2024 16:39:40.170 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@59127611
[DEBUG] 05-03-2024 16:39:40.171 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@553ce348
[DEBUG] 05-03-2024 16:39:40.171 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@553ce348
[DEBUG] 05-03-2024 16:39:40.172 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@553ce348
[DEBUG] 05-03-2024 16:39:40.172 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@7417ef4f
[DEBUG] 05-03-2024 16:39:40.173 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@7417ef4f
[DEBUG] 05-03-2024 16:39:40.173 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@7417ef4f
[DEBUG] 05-03-2024 16:39:40.173 [main] BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@5c0e2ec
[DEBUG] 05-03-2024 16:39:40.174 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@5c0e2ec
[DEBUG] 05-03-2024 16:39:40.174 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@4fa8bebb
[DEBUG] 05-03-2024 16:39:40.175 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@7d3c22a5
[DEBUG] 05-03-2024 16:39:40.175 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@7d3c22a5
[DEBUG] 05-03-2024 16:39:40.176 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@369ad7da
[DEBUG] 05-03-2024 16:39:40.176 [main] BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@344f9467
[DEBUG] 05-03-2024 16:39:40.176 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@3e98b933
[DEBUG] 05-03-2024 16:39:40.177 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@3e98b933
[DEBUG] 05-03-2024 16:39:40.177 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@3e98b933
[DEBUG] 05-03-2024 16:39:40.178 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@222d9d4f
[DEBUG] 05-03-2024 16:39:40.178 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@222d9d4f
[DEBUG] 05-03-2024 16:39:40.179 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@222d9d4f
[DEBUG] 05-03-2024 16:39:40.179 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@4269aad7
[DEBUG] 05-03-2024 16:39:40.179 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@4269aad7
[DEBUG] 05-03-2024 16:39:40.180 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@4269aad7
[DEBUG] 05-03-2024 16:39:40.180 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@a4df251
[DEBUG] 05-03-2024 16:39:40.180 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@a4df251
[DEBUG] 05-03-2024 16:39:40.181 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@a4df251
[DEBUG] 05-03-2024 16:39:40.181 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@71e7830a
[DEBUG] 05-03-2024 16:39:40.181 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@71e7830a
[DEBUG] 05-03-2024 16:39:40.182 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@71e7830a
[DEBUG] 05-03-2024 16:39:40.182 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@3feebf9c
[DEBUG] 05-03-2024 16:39:40.182 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@3feebf9c
[DEBUG] 05-03-2024 16:39:40.183 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@305e95a4
[DEBUG] 05-03-2024 16:39:40.183 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@305e95a4
[DEBUG] 05-03-2024 16:39:40.183 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@55e42684
[DEBUG] 05-03-2024 16:39:40.184 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@55e42684
[DEBUG] 05-03-2024 16:39:40.184 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@55e42684
[DEBUG] 05-03-2024 16:39:40.184 [main] BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@18d610e1
[DEBUG] 05-03-2024 16:39:40.185 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@528e5e38
[DEBUG] 05-03-2024 16:39:40.185 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@528e5e38
[DEBUG] 05-03-2024 16:39:40.186 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@16391278
[DEBUG] 05-03-2024 16:39:40.186 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@621dc63d
[DEBUG] 05-03-2024 16:39:40.186 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@621dc63d
[DEBUG] 05-03-2024 16:39:40.186 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@621dc63d
[DEBUG] 05-03-2024 16:39:40.187 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@4ae49387
[DEBUG] 05-03-2024 16:39:40.187 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@6abb7b7d
[DEBUG] 05-03-2024 16:39:40.187 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@34cf0e80
[DEBUG] 05-03-2024 16:39:40.188 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@38ef1a0a
[DEBUG] 05-03-2024 16:39:40.188 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@38ef1a0a
[DEBUG] 05-03-2024 16:39:40.188 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@56f9de3b
[DEBUG] 05-03-2024 16:39:40.189 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@56f9de3b
[DEBUG] 05-03-2024 16:39:40.189 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@6728370a
[DEBUG] 05-03-2024 16:39:40.189 [main] BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@2b5f8e61
[DEBUG] 05-03-2024 16:39:40.190 [main] BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@6ba0ee4a
[DEBUG] 05-03-2024 16:39:40.190 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@73b0ed03
[DEBUG] 05-03-2024 16:39:40.190 [main] BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@55061418
[DEBUG] 05-03-2024 16:39:40.191 [main] BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@27db45f
[DEBUG] 05-03-2024 16:39:40.191 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@6ec3d8e4
[DEBUG] 05-03-2024 16:39:40.191 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@6ec3d8e4
[DEBUG] 05-03-2024 16:39:40.191 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@1aeff8ca
[DEBUG] 05-03-2024 16:39:40.192 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@1aeff8ca
[DEBUG] 05-03-2024 16:39:40.192 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@7f2c995b
[DEBUG] 05-03-2024 16:39:40.192 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@7f2c995b
[DEBUG] 05-03-2024 16:39:40.193 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@101c15ad
[DEBUG] 05-03-2024 16:39:40.193 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@101c15ad
[DEBUG] 05-03-2024 16:39:40.193 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@6068ebb2
[DEBUG] 05-03-2024 16:39:40.194 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@6068ebb2
[DEBUG] 05-03-2024 16:39:40.194 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@5a466dd
[DEBUG] 05-03-2024 16:39:40.194 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@1ed9d173
[DEBUG] 05-03-2024 16:39:40.195 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@6e981e78
[DEBUG] 05-03-2024 16:39:40.195 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@6e981e78
[DEBUG] 05-03-2024 16:39:40.195 [main] BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@498a4d62
[DEBUG] 05-03-2024 16:39:40.195 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@6fbe4800
[DEBUG] 05-03-2024 16:39:40.196 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3f3c5ecd
[DEBUG] 05-03-2024 16:39:40.196 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@1179fc8c
[DEBUG] 05-03-2024 16:39:40.196 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@1179fc8c
[DEBUG] 05-03-2024 16:39:40.197 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@a03529c
[DEBUG] 05-03-2024 16:39:40.197 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@1760e594
[DEBUG] 05-03-2024 16:39:40.197 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@4af70b83
[DEBUG] 05-03-2024 16:39:40.197 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@4af70b83
[DEBUG] 05-03-2024 16:39:40.198 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@143413cd
[DEBUG] 05-03-2024 16:39:40.198 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@143413cd
[DEBUG] 05-03-2024 16:39:40.198 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@4b32465
[DEBUG] 05-03-2024 16:39:40.199 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@4b32465
[DEBUG] 05-03-2024 16:39:40.199 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@4b32465
[DEBUG] 05-03-2024 16:39:40.199 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@146f3d22
[DEBUG] 05-03-2024 16:39:40.200 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@146f3d22
[DEBUG] 05-03-2024 16:39:40.200 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@146f3d22
[DEBUG] 05-03-2024 16:39:40.200 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@66b6873f
[DEBUG] 05-03-2024 16:39:40.201 [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@52285a5f
[DEBUG] 05-03-2024 16:39:40.201 [main] BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@4fa5cc73
[DEBUG] 05-03-2024 16:39:40.201 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@4fa5cc73
[DEBUG] 05-03-2024 16:39:40.202 [main] BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@224e6e88
[DEBUG] 05-03-2024 16:39:40.202 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@224e6e88
[DEBUG] 05-03-2024 16:39:40.202 [main] BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@224e6e88
[DEBUG] 05-03-2024 16:39:40.203 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@70139a81
[DEBUG] 05-03-2024 16:39:40.203 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@60f9dc7e
[DEBUG] 05-03-2024 16:39:40.203 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@15e5246
[DEBUG] 05-03-2024 16:39:40.203 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@15e5246
[DEBUG] 05-03-2024 16:39:40.204 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@503556cb
[DEBUG] 05-03-2024 16:39:40.204 [main] BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@503556cb
[DEBUG] 05-03-2024 16:39:40.204 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@503556cb
[DEBUG] 05-03-2024 16:39:40.205 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@3c9e19de
[DEBUG] 05-03-2024 16:39:40.205 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@3c9e19de
[DEBUG] 05-03-2024 16:39:40.205 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@12aa381f
[DEBUG] 05-03-2024 16:39:40.206 [main] BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@12aa381f
[DEBUG] 05-03-2024 16:39:40.206 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@6115846e
[DEBUG] 05-03-2024 16:39:40.206 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@6115846e
[DEBUG] 05-03-2024 16:39:40.207 [main] BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@1bec1589
[DEBUG] 05-03-2024 16:39:40.207 [main] BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@1bec1589
[DEBUG] 05-03-2024 16:39:40.207 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@57f0bfc3
[DEBUG] 05-03-2024 16:39:40.208 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@57f0bfc3
[DEBUG] 05-03-2024 16:39:40.209 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@14590fe2
[DEBUG] 05-03-2024 16:39:40.226 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@693f2c89
[DEBUG] 05-03-2024 16:39:40.227 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@693f2c89
[DEBUG] 05-03-2024 16:39:40.230 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@54275b5d
[DEBUG] 05-03-2024 16:39:40.230 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@5d01b0d8
[DEBUG] 05-03-2024 16:39:40.231 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@271e851e
[DEBUG] 05-03-2024 16:39:40.231 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@ff21443
[DEBUG] 05-03-2024 16:39:40.232 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@61e14b53
[DEBUG] 05-03-2024 16:39:40.232 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@31b6b0c7
[DEBUG] 05-03-2024 16:39:40.232 [main] BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@6253e59a
[DEBUG] 05-03-2024 16:39:40.232 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@7d1cb59f
[DEBUG] 05-03-2024 16:39:40.233 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@16ccd2bc
[DEBUG] 05-03-2024 16:39:41.225 [main] DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@69c1ea07) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5cbe72b9)
[DEBUG] 05-03-2024 16:39:41.229 [main] JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
[DEBUG] 05-03-2024 16:39:41.230 [main] JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 05-03-2024 16:39:41.246 [main] BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@3400d6fa
[DEBUG] 05-03-2024 16:39:41.247 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@3400d6fa
[DEBUG] 05-03-2024 16:39:41.247 [main] BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@693f2c89`
[DEBUG] 05-03-2024 16:39:41.250 [main] JdbcTypeRegistry - addDescriptor(3100, NumericTypeDescriptor) replaced previous registration(org.hibernate.dialect.PostgreSQLIntervalSecondJdbcType@3639b04)
[DEBUG] 05-03-2024 16:39:41.262 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 05-03-2024 16:39:41.262 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 05-03-2024 16:39:41.263 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 05-03-2024 16:39:41.263 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 05-03-2024 16:39:41.264 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 05-03-2024 16:39:41.264 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 05-03-2024 16:39:41.266 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 05-03-2024 16:39:41.266 [main] BasicTypeRegistry - Adding type registration OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 05-03-2024 16:39:41.267 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 05-03-2024 16:39:41.269 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@21d8da75] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@5a1c7619]
[WARN ] 05-03-2024 16:39:41.539 [main] InFlightMetadataCollectorImpl - HHH000069: Duplicate generator name generator
[INFO ] 05-03-2024 16:39:41.708 [main] BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
[INFO ] 05-03-2024 16:39:44.389 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 05-03-2024 16:39:44.391 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@21d8da75] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@62a6a47e]
[TRACE] 05-03-2024 16:39:44.400 [main] TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@62a6a47e] for TypeConfiguration
[WARN ] 05-03-2024 16:39:45.155 [main] JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[INFO ] 05-03-2024 16:39:46.692 [main] Http11NioProtocol - Starting ProtocolHandler ["http-nio-8300"]
[INFO ] 05-03-2024 16:39:46.969 [main] TomcatWebServer - Tomcat started on port(s): 8300 (http) with context path '/users_products_api'
[INFO ] 05-03-2024 16:39:47.036 [main] TestSpringBootApplication - Started TestSpringBootApplication in 14.922 seconds (process running for 17.628)
[INFO ] 05-03-2024 16:40:14.256 [http-nio-8300-exec-1] [/users_products_api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[INFO ] 05-03-2024 16:40:14.257 [http-nio-8300-exec-1] DispatcherServlet - Initializing Servlet 'dispatcherServlet'
[INFO ] 05-03-2024 16:40:14.261 [http-nio-8300-exec-1] DispatcherServlet - Completed initialization in 2 ms
[TRACE] 05-03-2024 16:42:22.983 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@62a6a47e] for TypeConfiguration
[DEBUG] 05-03-2024 16:42:22.984 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@2529dddc] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@62a6a47e]
[INFO ] 05-03-2024 16:42:30.975 [background-preinit] Version - HV000001: Hibernate Validator 8.0.1.Final
[INFO ] 05-03-2024 16:42:30.996 [main] TestSpringBootApplication - Starting TestSpringBootApplication using Java 17.0.10 with PID 13949 (/home/dima/backend_microservice/UserProductsMicroService/target/classes started by dima in /home/dima/backend_microservice/UserProductsMicroService)
[INFO ] 05-03-2024 16:42:31.010 [main] TestSpringBootApplication - No active profile set, falling back to 1 default profile: "default"
[INFO ] 05-03-2024 16:42:32.907 [main] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
[INFO ] 05-03-2024 16:42:32.909 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data R2DBC repositories in DEFAULT mode.
[INFO ] 05-03-2024 16:42:33.317 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 398 ms. Found 1 R2DBC repository interfaces.
[INFO ] 05-03-2024 16:42:33.835 [main] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
[INFO ] 05-03-2024 16:42:33.838 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO ] 05-03-2024 16:42:33.862 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 17 ms. Found 0 JPA repository interfaces.
[ERROR] 05-03-2024 16:42:34.768 [main] AprLifecycleListener - An incompatible version [1.2.23] of the Apache Tomcat Native library is installed, while Tomcat requires version [1.2.34]
[INFO ] 05-03-2024 16:42:35.532 [main] TomcatWebServer - Tomcat initialized with port(s): 8300 (http)
[INFO ] 05-03-2024 16:42:35.579 [main] Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8300"]
[INFO ] 05-03-2024 16:42:35.610 [main] StandardService - Starting service [Tomcat]
[INFO ] 05-03-2024 16:42:35.611 [main] StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.11]
[INFO ] 05-03-2024 16:42:36.499 [main] TldScanner - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
[INFO ] 05-03-2024 16:42:36.514 [main] [/users_products_api] - Initializing Spring embedded WebApplicationContext
[INFO ] 05-03-2024 16:42:36.518 [main] ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 5274 ms
[INFO ] 05-03-2024 16:42:37.497 [main] Version - HHH000412: Hibernate ORM core version 6.2.6.Final
[INFO ] 05-03-2024 16:42:37.502 [main] Environment - HHH000406: Using bytecode reflection optimizer
[DEBUG] 05-03-2024 16:42:37.789 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@59a94d0f
[DEBUG] 05-03-2024 16:42:37.790 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@59a94d0f
[DEBUG] 05-03-2024 16:42:37.791 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@59a94d0f
[DEBUG] 05-03-2024 16:42:37.791 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@7ff09659
[DEBUG] 05-03-2024 16:42:37.792 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@7ff09659
[DEBUG] 05-03-2024 16:42:37.792 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@517fbf62
[DEBUG] 05-03-2024 16:42:37.793 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@517fbf62
[DEBUG] 05-03-2024 16:42:37.794 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@65db548
[DEBUG] 05-03-2024 16:42:37.794 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@65db548
[DEBUG] 05-03-2024 16:42:37.795 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@150f41b9
[DEBUG] 05-03-2024 16:42:37.795 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@150f41b9
[DEBUG] 05-03-2024 16:42:37.795 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@150f41b9
[DEBUG] 05-03-2024 16:42:37.796 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@6e364f1f
[DEBUG] 05-03-2024 16:42:37.796 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@6e364f1f
[DEBUG] 05-03-2024 16:42:37.797 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@6e364f1f
[DEBUG] 05-03-2024 16:42:37.798 [main] BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@429e7914
[DEBUG] 05-03-2024 16:42:37.798 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@429e7914
[DEBUG] 05-03-2024 16:42:37.798 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@298263fa
[DEBUG] 05-03-2024 16:42:37.799 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@466fedfa
[DEBUG] 05-03-2024 16:42:37.799 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@466fedfa
[DEBUG] 05-03-2024 16:42:37.800 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@1a7d0c9f
[DEBUG] 05-03-2024 16:42:37.800 [main] BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@2b1a901d
[DEBUG] 05-03-2024 16:42:37.801 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@11bdab37
[DEBUG] 05-03-2024 16:42:37.801 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@11bdab37
[DEBUG] 05-03-2024 16:42:37.802 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@11bdab37
[DEBUG] 05-03-2024 16:42:37.802 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@280484c7
[DEBUG] 05-03-2024 16:42:37.803 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@280484c7
[DEBUG] 05-03-2024 16:42:37.803 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@280484c7
[DEBUG] 05-03-2024 16:42:37.804 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@5a6f6cac
[DEBUG] 05-03-2024 16:42:37.804 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@5a6f6cac
[DEBUG] 05-03-2024 16:42:37.805 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@5a6f6cac
[DEBUG] 05-03-2024 16:42:37.805 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@258a8584
[DEBUG] 05-03-2024 16:42:37.806 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@258a8584
[DEBUG] 05-03-2024 16:42:37.806 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@258a8584
[DEBUG] 05-03-2024 16:42:37.806 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@59127611
[DEBUG] 05-03-2024 16:42:37.807 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@59127611
[DEBUG] 05-03-2024 16:42:37.807 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@59127611
[DEBUG] 05-03-2024 16:42:37.808 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@553ce348
[DEBUG] 05-03-2024 16:42:37.808 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@553ce348
[DEBUG] 05-03-2024 16:42:37.809 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@7417ef4f
[DEBUG] 05-03-2024 16:42:37.809 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@7417ef4f
[DEBUG] 05-03-2024 16:42:37.810 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@5c0e2ec
[DEBUG] 05-03-2024 16:42:37.810 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@5c0e2ec
[DEBUG] 05-03-2024 16:42:37.810 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@5c0e2ec
[DEBUG] 05-03-2024 16:42:37.811 [main] BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@4fa8bebb
[DEBUG] 05-03-2024 16:42:37.811 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@7d3c22a5
[DEBUG] 05-03-2024 16:42:37.812 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@7d3c22a5
[DEBUG] 05-03-2024 16:42:37.812 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@369ad7da
[DEBUG] 05-03-2024 16:42:37.812 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@344f9467
[DEBUG] 05-03-2024 16:42:37.813 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@344f9467
[DEBUG] 05-03-2024 16:42:37.813 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@344f9467
[DEBUG] 05-03-2024 16:42:37.813 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@3e98b933
[DEBUG] 05-03-2024 16:42:37.814 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@222d9d4f
[DEBUG] 05-03-2024 16:42:37.814 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@4269aad7
[DEBUG] 05-03-2024 16:42:37.814 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@a4df251
[DEBUG] 05-03-2024 16:42:37.815 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@a4df251
[DEBUG] 05-03-2024 16:42:37.815 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@71e7830a
[DEBUG] 05-03-2024 16:42:37.815 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@71e7830a
[DEBUG] 05-03-2024 16:42:37.816 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@3feebf9c
[DEBUG] 05-03-2024 16:42:37.816 [main] BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@305e95a4
[DEBUG] 05-03-2024 16:42:37.816 [main] BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@55e42684
[DEBUG] 05-03-2024 16:42:37.817 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@18d610e1
[DEBUG] 05-03-2024 16:42:37.817 [main] BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@528e5e38
[DEBUG] 05-03-2024 16:42:37.818 [main] BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@16391278
[DEBUG] 05-03-2024 16:42:37.818 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@621dc63d
[DEBUG] 05-03-2024 16:42:37.818 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@621dc63d
[DEBUG] 05-03-2024 16:42:37.818 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@4ae49387
[DEBUG] 05-03-2024 16:42:37.819 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@4ae49387
[DEBUG] 05-03-2024 16:42:37.819 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@6abb7b7d
[DEBUG] 05-03-2024 16:42:37.819 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@6abb7b7d
[DEBUG] 05-03-2024 16:42:37.820 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@34cf0e80
[DEBUG] 05-03-2024 16:42:37.820 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@34cf0e80
[DEBUG] 05-03-2024 16:42:37.820 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@38ef1a0a
[DEBUG] 05-03-2024 16:42:37.821 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@38ef1a0a
[DEBUG] 05-03-2024 16:42:37.821 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@56f9de3b
[DEBUG] 05-03-2024 16:42:37.821 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@6728370a
[DEBUG] 05-03-2024 16:42:37.822 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@2b5f8e61
[DEBUG] 05-03-2024 16:42:37.822 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@2b5f8e61
[DEBUG] 05-03-2024 16:42:37.822 [main] BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@6ba0ee4a
[DEBUG] 05-03-2024 16:42:37.823 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@73b0ed03
[DEBUG] 05-03-2024 16:42:37.823 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@55061418
[DEBUG] 05-03-2024 16:42:37.823 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@27db45f
[DEBUG] 05-03-2024 16:42:37.823 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@27db45f
[DEBUG] 05-03-2024 16:42:37.824 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@6ec3d8e4
[DEBUG] 05-03-2024 16:42:37.824 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@1aeff8ca
[DEBUG] 05-03-2024 16:42:37.824 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@7f2c995b
[DEBUG] 05-03-2024 16:42:37.825 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@7f2c995b
[DEBUG] 05-03-2024 16:42:37.825 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@101c15ad
[DEBUG] 05-03-2024 16:42:37.825 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@101c15ad
[DEBUG] 05-03-2024 16:42:37.826 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@6068ebb2
[DEBUG] 05-03-2024 16:42:37.826 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@6068ebb2
[DEBUG] 05-03-2024 16:42:37.826 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@6068ebb2
[DEBUG] 05-03-2024 16:42:37.826 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@5a466dd
[DEBUG] 05-03-2024 16:42:37.827 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@5a466dd
[DEBUG] 05-03-2024 16:42:37.827 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@5a466dd
[DEBUG] 05-03-2024 16:42:37.827 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@1ed9d173
[DEBUG] 05-03-2024 16:42:37.828 [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@6e981e78
[DEBUG] 05-03-2024 16:42:37.828 [main] BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@498a4d62
[DEBUG] 05-03-2024 16:42:37.828 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@498a4d62
[DEBUG] 05-03-2024 16:42:37.828 [main] BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@6fbe4800
[DEBUG] 05-03-2024 16:42:37.829 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@6fbe4800
[DEBUG] 05-03-2024 16:42:37.829 [main] BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@6fbe4800
[DEBUG] 05-03-2024 16:42:37.829 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@3f3c5ecd
[DEBUG] 05-03-2024 16:42:37.829 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@1179fc8c
[DEBUG] 05-03-2024 16:42:37.830 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@a03529c
[DEBUG] 05-03-2024 16:42:37.830 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@a03529c
[DEBUG] 05-03-2024 16:42:37.830 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@1760e594
[DEBUG] 05-03-2024 16:42:37.830 [main] BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@1760e594
[DEBUG] 05-03-2024 16:42:37.831 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@1760e594
[DEBUG] 05-03-2024 16:42:37.831 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@4af70b83
[DEBUG] 05-03-2024 16:42:37.831 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@4af70b83
[DEBUG] 05-03-2024 16:42:37.832 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@143413cd
[DEBUG] 05-03-2024 16:42:37.832 [main] BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@143413cd
[DEBUG] 05-03-2024 16:42:37.832 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@4b32465
[DEBUG] 05-03-2024 16:42:37.832 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@4b32465
[DEBUG] 05-03-2024 16:42:37.833 [main] BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@146f3d22
[DEBUG] 05-03-2024 16:42:37.833 [main] BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@146f3d22
[DEBUG] 05-03-2024 16:42:37.833 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@66b6873f
[DEBUG] 05-03-2024 16:42:37.833 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@66b6873f
[DEBUG] 05-03-2024 16:42:37.834 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@52285a5f
[DEBUG] 05-03-2024 16:42:37.845 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@4bf8b77
[DEBUG] 05-03-2024 16:42:37.846 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@4bf8b77
[DEBUG] 05-03-2024 16:42:37.848 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@a0d875d
[DEBUG] 05-03-2024 16:42:37.849 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@693f2c89
[DEBUG] 05-03-2024 16:42:37.849 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@50b4364
[DEBUG] 05-03-2024 16:42:37.850 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@5e541ef9
[DEBUG] 05-03-2024 16:42:37.850 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@38054d01
[DEBUG] 05-03-2024 16:42:37.850 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@28ce75ec
[DEBUG] 05-03-2024 16:42:37.851 [main] BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@778113f2
[DEBUG] 05-03-2024 16:42:37.851 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@9dc782d
[DEBUG] 05-03-2024 16:42:37.851 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@1ba35152
[DEBUG] 05-03-2024 16:42:38.781 [main] DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@b6136eb) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2cce10bc)
[DEBUG] 05-03-2024 16:42:38.786 [main] JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
[DEBUG] 05-03-2024 16:42:38.787 [main] JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 05-03-2024 16:42:38.804 [main] BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@4641f66c
[DEBUG] 05-03-2024 16:42:38.805 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@4641f66c
[DEBUG] 05-03-2024 16:42:38.805 [main] BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@4bf8b77`
[DEBUG] 05-03-2024 16:42:38.808 [main] JdbcTypeRegistry - addDescriptor(3100, NumericTypeDescriptor) replaced previous registration(org.hibernate.dialect.PostgreSQLIntervalSecondJdbcType@2cacb445)
[DEBUG] 05-03-2024 16:42:38.820 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 05-03-2024 16:42:38.820 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 05-03-2024 16:42:38.821 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 05-03-2024 16:42:38.821 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 05-03-2024 16:42:38.822 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 05-03-2024 16:42:38.822 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 05-03-2024 16:42:38.823 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 05-03-2024 16:42:38.824 [main] BasicTypeRegistry - Adding type registration OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 05-03-2024 16:42:38.824 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 05-03-2024 16:42:38.827 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@eebc0db] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@1214c98b]
[WARN ] 05-03-2024 16:42:39.125 [main] InFlightMetadataCollectorImpl - HHH000069: Duplicate generator name generator
[INFO ] 05-03-2024 16:42:39.282 [main] BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
[INFO ] 05-03-2024 16:42:41.522 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 05-03-2024 16:42:41.524 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@eebc0db] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@2512155e]
[TRACE] 05-03-2024 16:42:41.530 [main] TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@2512155e] for TypeConfiguration
[WARN ] 05-03-2024 16:42:41.840 [main] JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[INFO ] 05-03-2024 16:42:42.622 [main] Http11NioProtocol - Starting ProtocolHandler ["http-nio-8300"]
[INFO ] 05-03-2024 16:42:42.741 [main] TomcatWebServer - Tomcat started on port(s): 8300 (http) with context path '/users_products_api'
[INFO ] 05-03-2024 16:42:42.769 [main] TestSpringBootApplication - Started TestSpringBootApplication in 12.634 seconds (process running for 14.889)
[INFO ] 05-03-2024 16:42:53.096 [http-nio-8300-exec-1] [/users_products_api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[INFO ] 05-03-2024 16:42:53.098 [http-nio-8300-exec-1] DispatcherServlet - Initializing Servlet 'dispatcherServlet'
[INFO ] 05-03-2024 16:42:53.114 [http-nio-8300-exec-1] DispatcherServlet - Completed initialization in 16 ms
[TRACE] 05-03-2024 16:45:31.459 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@2512155e] for TypeConfiguration
[DEBUG] 05-03-2024 16:45:31.459 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@42f3cc0d] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@2512155e]
[INFO ] 05-03-2024 16:45:39.758 [background-preinit] Version - HV000001: Hibernate Validator 8.0.1.Final
[INFO ] 05-03-2024 16:45:39.820 [main] TestSpringBootApplication - Starting TestSpringBootApplication using Java 17.0.10 with PID 14371 (/home/dima/backend_microservice/UserProductsMicroService/target/classes started by dima in /home/dima/backend_microservice/UserProductsMicroService)
[INFO ] 05-03-2024 16:45:39.830 [main] TestSpringBootApplication - No active profile set, falling back to 1 default profile: "default"
[INFO ] 05-03-2024 16:45:41.492 [main] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
[INFO ] 05-03-2024 16:45:41.494 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data R2DBC repositories in DEFAULT mode.
[INFO ] 05-03-2024 16:45:41.847 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 343 ms. Found 1 R2DBC repository interfaces.
[INFO ] 05-03-2024 16:45:42.410 [main] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
[INFO ] 05-03-2024 16:45:42.412 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO ] 05-03-2024 16:45:42.460 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 22 ms. Found 0 JPA repository interfaces.
[ERROR] 05-03-2024 16:45:43.434 [main] AprLifecycleListener - An incompatible version [1.2.23] of the Apache Tomcat Native library is installed, while Tomcat requires version [1.2.34]
[INFO ] 05-03-2024 16:45:44.092 [main] TomcatWebServer - Tomcat initialized with port(s): 8300 (http)
[INFO ] 05-03-2024 16:45:44.113 [main] Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8300"]
[INFO ] 05-03-2024 16:45:44.119 [main] StandardService - Starting service [Tomcat]
[INFO ] 05-03-2024 16:45:44.120 [main] StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.11]
[INFO ] 05-03-2024 16:45:45.334 [main] TldScanner - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
[INFO ] 05-03-2024 16:45:45.358 [main] [/users_products_api] - Initializing Spring embedded WebApplicationContext
[INFO ] 05-03-2024 16:45:45.365 [main] ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 5270 ms
[INFO ] 05-03-2024 16:45:46.634 [main] Version - HHH000412: Hibernate ORM core version 6.2.6.Final
[INFO ] 05-03-2024 16:45:46.639 [main] Environment - HHH000406: Using bytecode reflection optimizer
[DEBUG] 05-03-2024 16:45:47.006 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@dae5e0
[DEBUG] 05-03-2024 16:45:47.006 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@dae5e0
[DEBUG] 05-03-2024 16:45:47.007 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@dae5e0
[DEBUG] 05-03-2024 16:45:47.007 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@59a94d0f
[DEBUG] 05-03-2024 16:45:47.008 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@59a94d0f
[DEBUG] 05-03-2024 16:45:47.009 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@7ff09659
[DEBUG] 05-03-2024 16:45:47.009 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@7ff09659
[DEBUG] 05-03-2024 16:45:47.010 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@517fbf62
[DEBUG] 05-03-2024 16:45:47.010 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@517fbf62
[DEBUG] 05-03-2024 16:45:47.011 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@65db548
[DEBUG] 05-03-2024 16:45:47.011 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@65db548
[DEBUG] 05-03-2024 16:45:47.011 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@65db548
[DEBUG] 05-03-2024 16:45:47.012 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@150f41b9
[DEBUG] 05-03-2024 16:45:47.012 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@150f41b9
[DEBUG] 05-03-2024 16:45:47.013 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@150f41b9
[DEBUG] 05-03-2024 16:45:47.013 [main] BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@6e364f1f
[DEBUG] 05-03-2024 16:45:47.013 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@6e364f1f
[DEBUG] 05-03-2024 16:45:47.014 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@429e7914
[DEBUG] 05-03-2024 16:45:47.014 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@298263fa
[DEBUG] 05-03-2024 16:45:47.015 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@298263fa
[DEBUG] 05-03-2024 16:45:47.015 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@466fedfa
[DEBUG] 05-03-2024 16:45:47.015 [main] BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@1a7d0c9f
[DEBUG] 05-03-2024 16:45:47.016 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@2b1a901d
[DEBUG] 05-03-2024 16:45:47.016 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@2b1a901d
[DEBUG] 05-03-2024 16:45:47.017 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@2b1a901d
[DEBUG] 05-03-2024 16:45:47.017 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@11bdab37
[DEBUG] 05-03-2024 16:45:47.018 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@11bdab37
[DEBUG] 05-03-2024 16:45:47.018 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@11bdab37
[DEBUG] 05-03-2024 16:45:47.018 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@280484c7
[DEBUG] 05-03-2024 16:45:47.019 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@280484c7
[DEBUG] 05-03-2024 16:45:47.019 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@280484c7
[DEBUG] 05-03-2024 16:45:47.020 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@5a6f6cac
[DEBUG] 05-03-2024 16:45:47.020 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@5a6f6cac
[DEBUG] 05-03-2024 16:45:47.020 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@5a6f6cac
[DEBUG] 05-03-2024 16:45:47.020 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@258a8584
[DEBUG] 05-03-2024 16:45:47.021 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@258a8584
[DEBUG] 05-03-2024 16:45:47.021 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@258a8584
[DEBUG] 05-03-2024 16:45:47.022 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@59127611
[DEBUG] 05-03-2024 16:45:47.022 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@59127611
[DEBUG] 05-03-2024 16:45:47.022 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@553ce348
[DEBUG] 05-03-2024 16:45:47.023 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@553ce348
[DEBUG] 05-03-2024 16:45:47.023 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@7417ef4f
[DEBUG] 05-03-2024 16:45:47.023 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@7417ef4f
[DEBUG] 05-03-2024 16:45:47.024 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@7417ef4f
[DEBUG] 05-03-2024 16:45:47.024 [main] BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@5c0e2ec
[DEBUG] 05-03-2024 16:45:47.025 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@4fa8bebb
[DEBUG] 05-03-2024 16:45:47.025 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@4fa8bebb
[DEBUG] 05-03-2024 16:45:47.025 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@7d3c22a5
[DEBUG] 05-03-2024 16:45:47.026 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@369ad7da
[DEBUG] 05-03-2024 16:45:47.026 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@369ad7da
[DEBUG] 05-03-2024 16:45:47.026 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@369ad7da
[DEBUG] 05-03-2024 16:45:47.027 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@344f9467
[DEBUG] 05-03-2024 16:45:47.027 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@3e98b933
[DEBUG] 05-03-2024 16:45:47.027 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@222d9d4f
[DEBUG] 05-03-2024 16:45:47.027 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@4269aad7
[DEBUG] 05-03-2024 16:45:47.028 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@4269aad7
[DEBUG] 05-03-2024 16:45:47.028 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@a4df251
[DEBUG] 05-03-2024 16:45:47.028 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@a4df251
[DEBUG] 05-03-2024 16:45:47.029 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@71e7830a
[DEBUG] 05-03-2024 16:45:47.029 [main] BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@3feebf9c
[DEBUG] 05-03-2024 16:45:47.029 [main] BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@305e95a4
[DEBUG] 05-03-2024 16:45:47.030 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@55e42684
[DEBUG] 05-03-2024 16:45:47.030 [main] BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@18d610e1
[DEBUG] 05-03-2024 16:45:47.030 [main] BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@528e5e38
[DEBUG] 05-03-2024 16:45:47.031 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@16391278
[DEBUG] 05-03-2024 16:45:47.031 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@16391278
[DEBUG] 05-03-2024 16:45:47.031 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@621dc63d
[DEBUG] 05-03-2024 16:45:47.032 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@621dc63d
[DEBUG] 05-03-2024 16:45:47.032 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@4ae49387
[DEBUG] 05-03-2024 16:45:47.032 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@4ae49387
[DEBUG] 05-03-2024 16:45:47.033 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@6abb7b7d
[DEBUG] 05-03-2024 16:45:47.033 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@6abb7b7d
[DEBUG] 05-03-2024 16:45:47.033 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@34cf0e80
[DEBUG] 05-03-2024 16:45:47.033 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@34cf0e80
[DEBUG] 05-03-2024 16:45:47.034 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@38ef1a0a
[DEBUG] 05-03-2024 16:45:47.034 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@56f9de3b
[DEBUG] 05-03-2024 16:45:47.034 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@6728370a
[DEBUG] 05-03-2024 16:45:47.035 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@6728370a
[DEBUG] 05-03-2024 16:45:47.035 [main] BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@2b5f8e61
[DEBUG] 05-03-2024 16:45:47.036 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@6ba0ee4a
[DEBUG] 05-03-2024 16:45:47.036 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@73b0ed03
[DEBUG] 05-03-2024 16:45:47.036 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@55061418
[DEBUG] 05-03-2024 16:45:47.036 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@55061418
[DEBUG] 05-03-2024 16:45:47.037 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@27db45f
[DEBUG] 05-03-2024 16:45:47.037 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@6ec3d8e4
[DEBUG] 05-03-2024 16:45:47.037 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@1aeff8ca
[DEBUG] 05-03-2024 16:45:47.038 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@1aeff8ca
[DEBUG] 05-03-2024 16:45:47.038 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@7f2c995b
[DEBUG] 05-03-2024 16:45:47.038 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@7f2c995b
[DEBUG] 05-03-2024 16:45:47.039 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@101c15ad
[DEBUG] 05-03-2024 16:45:47.039 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@101c15ad
[DEBUG] 05-03-2024 16:45:47.039 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@101c15ad
[DEBUG] 05-03-2024 16:45:47.040 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@6068ebb2
[DEBUG] 05-03-2024 16:45:47.040 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@6068ebb2
[DEBUG] 05-03-2024 16:45:47.040 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@6068ebb2
[DEBUG] 05-03-2024 16:45:47.040 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@5a466dd
[DEBUG] 05-03-2024 16:45:47.041 [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@1ed9d173
[DEBUG] 05-03-2024 16:45:47.041 [main] BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@6e981e78
[DEBUG] 05-03-2024 16:45:47.041 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@6e981e78
[DEBUG] 05-03-2024 16:45:47.042 [main] BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@498a4d62
[DEBUG] 05-03-2024 16:45:47.042 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@498a4d62
[DEBUG] 05-03-2024 16:45:47.042 [main] BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@498a4d62
[DEBUG] 05-03-2024 16:45:47.043 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@6fbe4800
[DEBUG] 05-03-2024 16:45:47.043 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@3f3c5ecd
[DEBUG] 05-03-2024 16:45:47.043 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@1179fc8c
[DEBUG] 05-03-2024 16:45:47.043 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@1179fc8c
[DEBUG] 05-03-2024 16:45:47.044 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@a03529c
[DEBUG] 05-03-2024 16:45:47.044 [main] BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@a03529c
[DEBUG] 05-03-2024 16:45:47.044 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@a03529c
[DEBUG] 05-03-2024 16:45:47.045 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@1760e594
[DEBUG] 05-03-2024 16:45:47.045 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@1760e594
[DEBUG] 05-03-2024 16:45:47.046 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@4af70b83
[DEBUG] 05-03-2024 16:45:47.046 [main] BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@4af70b83
[DEBUG] 05-03-2024 16:45:47.046 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@143413cd
[DEBUG] 05-03-2024 16:45:47.046 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@143413cd
[DEBUG] 05-03-2024 16:45:47.047 [main] BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@4b32465
[DEBUG] 05-03-2024 16:45:47.047 [main] BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@4b32465
[DEBUG] 05-03-2024 16:45:47.047 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@146f3d22
[DEBUG] 05-03-2024 16:45:47.047 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@146f3d22
[DEBUG] 05-03-2024 16:45:47.048 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@66b6873f
[DEBUG] 05-03-2024 16:45:47.067 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@70485aa
[DEBUG] 05-03-2024 16:45:47.067 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@70485aa
[DEBUG] 05-03-2024 16:45:47.070 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@208f7165
[DEBUG] 05-03-2024 16:45:47.071 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@a0d875d
[DEBUG] 05-03-2024 16:45:47.072 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@693f2c89
[DEBUG] 05-03-2024 16:45:47.072 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@50b4364
[DEBUG] 05-03-2024 16:45:47.073 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@5e541ef9
[DEBUG] 05-03-2024 16:45:47.073 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@38054d01
[DEBUG] 05-03-2024 16:45:47.073 [main] BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@28ce75ec
[DEBUG] 05-03-2024 16:45:47.073 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@778113f2
[DEBUG] 05-03-2024 16:45:47.074 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@9dc782d
[DEBUG] 05-03-2024 16:45:48.564 [main] DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2cff5aa3) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@b6136eb)
[DEBUG] 05-03-2024 16:45:48.569 [main] JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
[DEBUG] 05-03-2024 16:45:48.570 [main] JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 05-03-2024 16:45:48.590 [main] BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@178dc733
[DEBUG] 05-03-2024 16:45:48.591 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@178dc733
[DEBUG] 05-03-2024 16:45:48.591 [main] BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@70485aa`
[DEBUG] 05-03-2024 16:45:48.594 [main] JdbcTypeRegistry - addDescriptor(3100, NumericTypeDescriptor) replaced previous registration(org.hibernate.dialect.PostgreSQLIntervalSecondJdbcType@1aa59698)
[DEBUG] 05-03-2024 16:45:48.606 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 05-03-2024 16:45:48.607 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 05-03-2024 16:45:48.607 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 05-03-2024 16:45:48.608 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 05-03-2024 16:45:48.608 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 05-03-2024 16:45:48.608 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 05-03-2024 16:45:48.611 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 05-03-2024 16:45:48.611 [main] BasicTypeRegistry - Adding type registration OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 05-03-2024 16:45:48.612 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 05-03-2024 16:45:48.617 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1f3361e9] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@eebc0db]
[WARN ] 05-03-2024 16:45:48.979 [main] InFlightMetadataCollectorImpl - HHH000069: Duplicate generator name generator
[INFO ] 05-03-2024 16:45:49.134 [main] BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
[INFO ] 05-03-2024 16:45:51.449 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 05-03-2024 16:45:51.451 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1f3361e9] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@92775a3]
[TRACE] 05-03-2024 16:45:51.463 [main] TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@92775a3] for TypeConfiguration
[WARN ] 05-03-2024 16:45:51.882 [main] JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[INFO ] 05-03-2024 16:45:52.918 [main] Http11NioProtocol - Starting ProtocolHandler ["http-nio-8300"]
[INFO ] 05-03-2024 16:45:52.993 [main] TomcatWebServer - Tomcat started on port(s): 8300 (http) with context path '/users_products_api'
[INFO ] 05-03-2024 16:45:53.025 [main] TestSpringBootApplication - Started TestSpringBootApplication in 14.064 seconds (process running for 16.362)
[INFO ] 05-03-2024 16:46:00.084 [http-nio-8300-exec-1] [/users_products_api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[INFO ] 05-03-2024 16:46:00.086 [http-nio-8300-exec-1] DispatcherServlet - Initializing Servlet 'dispatcherServlet'
[INFO ] 05-03-2024 16:46:00.089 [http-nio-8300-exec-1] DispatcherServlet - Completed initialization in 3 ms
[TRACE] 05-03-2024 16:47:35.258 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@92775a3] for TypeConfiguration
[DEBUG] 05-03-2024 16:47:35.259 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@1974b6a1] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@92775a3]
[INFO ] 05-03-2024 16:47:43.313 [background-preinit] Version - HV000001: Hibernate Validator 8.0.1.Final
[INFO ] 05-03-2024 16:47:43.394 [main] TestSpringBootApplication - Starting TestSpringBootApplication using Java 17.0.10 with PID 14674 (/home/dima/backend_microservice/UserProductsMicroService/target/classes started by dima in /home/dima/backend_microservice/UserProductsMicroService)
[INFO ] 05-03-2024 16:47:43.411 [main] TestSpringBootApplication - No active profile set, falling back to 1 default profile: "default"
[INFO ] 05-03-2024 16:47:45.335 [main] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
[INFO ] 05-03-2024 16:47:45.339 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data R2DBC repositories in DEFAULT mode.
[INFO ] 05-03-2024 16:47:45.842 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 494 ms. Found 1 R2DBC repository interfaces.
[INFO ] 05-03-2024 16:47:46.524 [main] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
[INFO ] 05-03-2024 16:47:46.526 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO ] 05-03-2024 16:47:46.553 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 19 ms. Found 0 JPA repository interfaces.
[ERROR] 05-03-2024 16:47:47.526 [main] AprLifecycleListener - An incompatible version [1.2.23] of the Apache Tomcat Native library is installed, while Tomcat requires version [1.2.34]
[INFO ] 05-03-2024 16:47:48.165 [main] TomcatWebServer - Tomcat initialized with port(s): 8300 (http)
[INFO ] 05-03-2024 16:47:48.184 [main] Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8300"]
[INFO ] 05-03-2024 16:47:48.191 [main] StandardService - Starting service [Tomcat]
[INFO ] 05-03-2024 16:47:48.192 [main] StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.11]
[INFO ] 05-03-2024 16:47:49.277 [main] TldScanner - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
[INFO ] 05-03-2024 16:47:49.294 [main] [/users_products_api] - Initializing Spring embedded WebApplicationContext
[INFO ] 05-03-2024 16:47:49.301 [main] ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 5678 ms
[INFO ] 05-03-2024 16:47:50.377 [main] Version - HHH000412: Hibernate ORM core version 6.2.6.Final
[INFO ] 05-03-2024 16:47:50.382 [main] Environment - HHH000406: Using bytecode reflection optimizer
[DEBUG] 05-03-2024 16:47:50.705 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@298263fa
[DEBUG] 05-03-2024 16:47:50.706 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@298263fa
[DEBUG] 05-03-2024 16:47:50.707 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@298263fa
[DEBUG] 05-03-2024 16:47:50.707 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@466fedfa
[DEBUG] 05-03-2024 16:47:50.708 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@466fedfa
[DEBUG] 05-03-2024 16:47:50.708 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@1a7d0c9f
[DEBUG] 05-03-2024 16:47:50.709 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@1a7d0c9f
[DEBUG] 05-03-2024 16:47:50.709 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@2b1a901d
[DEBUG] 05-03-2024 16:47:50.710 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@2b1a901d
[DEBUG] 05-03-2024 16:47:50.711 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@11bdab37
[DEBUG] 05-03-2024 16:47:50.711 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@11bdab37
[DEBUG] 05-03-2024 16:47:50.711 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@11bdab37
[DEBUG] 05-03-2024 16:47:50.712 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@280484c7
[DEBUG] 05-03-2024 16:47:50.712 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@280484c7
[DEBUG] 05-03-2024 16:47:50.713 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@280484c7
[DEBUG] 05-03-2024 16:47:50.713 [main] BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@5a6f6cac
[DEBUG] 05-03-2024 16:47:50.714 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@5a6f6cac
[DEBUG] 05-03-2024 16:47:50.715 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@258a8584
[DEBUG] 05-03-2024 16:47:50.715 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@59127611
[DEBUG] 05-03-2024 16:47:50.716 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@59127611
[DEBUG] 05-03-2024 16:47:50.716 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@553ce348
[DEBUG] 05-03-2024 16:47:50.717 [main] BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@7417ef4f
[DEBUG] 05-03-2024 16:47:50.717 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@5c0e2ec
[DEBUG] 05-03-2024 16:47:50.718 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@5c0e2ec
[DEBUG] 05-03-2024 16:47:50.718 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@5c0e2ec
[DEBUG] 05-03-2024 16:47:50.718 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@4fa8bebb
[DEBUG] 05-03-2024 16:47:50.719 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@4fa8bebb
[DEBUG] 05-03-2024 16:47:50.719 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@4fa8bebb
[DEBUG] 05-03-2024 16:47:50.720 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@7d3c22a5
[DEBUG] 05-03-2024 16:47:50.720 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@7d3c22a5
[DEBUG] 05-03-2024 16:47:50.721 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@7d3c22a5
[DEBUG] 05-03-2024 16:47:50.721 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@369ad7da
[DEBUG] 05-03-2024 16:47:50.721 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@369ad7da
[DEBUG] 05-03-2024 16:47:50.722 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@369ad7da
[DEBUG] 05-03-2024 16:47:50.722 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@344f9467
[DEBUG] 05-03-2024 16:47:50.722 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@344f9467
[DEBUG] 05-03-2024 16:47:50.723 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@344f9467
[DEBUG] 05-03-2024 16:47:50.723 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@3e98b933
[DEBUG] 05-03-2024 16:47:50.723 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@3e98b933
[DEBUG] 05-03-2024 16:47:50.724 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@222d9d4f
[DEBUG] 05-03-2024 16:47:50.724 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@222d9d4f
[DEBUG] 05-03-2024 16:47:50.724 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@4269aad7
[DEBUG] 05-03-2024 16:47:50.725 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@4269aad7
[DEBUG] 05-03-2024 16:47:50.725 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@4269aad7
[DEBUG] 05-03-2024 16:47:50.725 [main] BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@a4df251
[DEBUG] 05-03-2024 16:47:50.726 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@71e7830a
[DEBUG] 05-03-2024 16:47:50.742 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@71e7830a
[DEBUG] 05-03-2024 16:47:50.742 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@3feebf9c
[DEBUG] 05-03-2024 16:47:50.743 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@305e95a4
[DEBUG] 05-03-2024 16:47:50.743 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@305e95a4
[DEBUG] 05-03-2024 16:47:50.744 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@305e95a4
[DEBUG] 05-03-2024 16:47:50.744 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@55e42684
[DEBUG] 05-03-2024 16:47:50.744 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@18d610e1
[DEBUG] 05-03-2024 16:47:50.745 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@528e5e38
[DEBUG] 05-03-2024 16:47:50.745 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@16391278
[DEBUG] 05-03-2024 16:47:50.745 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@16391278
[DEBUG] 05-03-2024 16:47:50.746 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@621dc63d
[DEBUG] 05-03-2024 16:47:50.746 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@621dc63d
[DEBUG] 05-03-2024 16:47:50.746 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@4ae49387
[DEBUG] 05-03-2024 16:47:50.746 [main] BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@6abb7b7d
[DEBUG] 05-03-2024 16:47:50.747 [main] BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@34cf0e80
[DEBUG] 05-03-2024 16:47:50.747 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@38ef1a0a
[DEBUG] 05-03-2024 16:47:50.747 [main] BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@56f9de3b
[DEBUG] 05-03-2024 16:47:50.748 [main] BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@6728370a
[DEBUG] 05-03-2024 16:47:50.748 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@2b5f8e61
[DEBUG] 05-03-2024 16:47:50.748 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@2b5f8e61
[DEBUG] 05-03-2024 16:47:50.748 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@6ba0ee4a
[DEBUG] 05-03-2024 16:47:50.749 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@6ba0ee4a
[DEBUG] 05-03-2024 16:47:50.749 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@73b0ed03
[DEBUG] 05-03-2024 16:47:50.749 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@73b0ed03
[DEBUG] 05-03-2024 16:47:50.750 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@55061418
[DEBUG] 05-03-2024 16:47:50.750 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@55061418
[DEBUG] 05-03-2024 16:47:50.750 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@27db45f
[DEBUG] 05-03-2024 16:47:50.751 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@27db45f
[DEBUG] 05-03-2024 16:47:50.751 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@6ec3d8e4
[DEBUG] 05-03-2024 16:47:50.751 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@1aeff8ca
[DEBUG] 05-03-2024 16:47:50.752 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@7f2c995b
[DEBUG] 05-03-2024 16:47:50.752 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@7f2c995b
[DEBUG] 05-03-2024 16:47:50.752 [main] BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@101c15ad
[DEBUG] 05-03-2024 16:47:50.752 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@6068ebb2
[DEBUG] 05-03-2024 16:47:50.753 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@5a466dd
[DEBUG] 05-03-2024 16:47:50.753 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@1ed9d173
[DEBUG] 05-03-2024 16:47:50.753 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@1ed9d173
[DEBUG] 05-03-2024 16:47:50.753 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@6e981e78
[DEBUG] 05-03-2024 16:47:50.755 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@498a4d62
[DEBUG] 05-03-2024 16:47:50.755 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@6fbe4800
[DEBUG] 05-03-2024 16:47:50.756 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@6fbe4800
[DEBUG] 05-03-2024 16:47:50.756 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@3f3c5ecd
[DEBUG] 05-03-2024 16:47:50.756 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@3f3c5ecd
[DEBUG] 05-03-2024 16:47:50.757 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@1179fc8c
[DEBUG] 05-03-2024 16:47:50.757 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@1179fc8c
[DEBUG] 05-03-2024 16:47:50.757 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@1179fc8c
[DEBUG] 05-03-2024 16:47:50.758 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@a03529c
[DEBUG] 05-03-2024 16:47:50.758 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@a03529c
[DEBUG] 05-03-2024 16:47:50.758 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@a03529c
[DEBUG] 05-03-2024 16:47:50.759 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@1760e594
[DEBUG] 05-03-2024 16:47:50.759 [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@4af70b83
[DEBUG] 05-03-2024 16:47:50.759 [main] BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@143413cd
[DEBUG] 05-03-2024 16:47:50.759 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@143413cd
[DEBUG] 05-03-2024 16:47:50.759 [main] BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@4b32465
[DEBUG] 05-03-2024 16:47:50.760 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@4b32465
[DEBUG] 05-03-2024 16:47:50.760 [main] BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@4b32465
[DEBUG] 05-03-2024 16:47:50.760 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@146f3d22
[DEBUG] 05-03-2024 16:47:50.761 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@66b6873f
[DEBUG] 05-03-2024 16:47:50.761 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@52285a5f
[DEBUG] 05-03-2024 16:47:50.762 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@52285a5f
[DEBUG] 05-03-2024 16:47:50.762 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@4fa5cc73
[DEBUG] 05-03-2024 16:47:50.762 [main] BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@4fa5cc73
[DEBUG] 05-03-2024 16:47:50.763 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@4fa5cc73
[DEBUG] 05-03-2024 16:47:50.763 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@224e6e88
[DEBUG] 05-03-2024 16:47:50.763 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@224e6e88
[DEBUG] 05-03-2024 16:47:50.764 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@70139a81
[DEBUG] 05-03-2024 16:47:50.764 [main] BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@70139a81
[DEBUG] 05-03-2024 16:47:50.764 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@60f9dc7e
[DEBUG] 05-03-2024 16:47:50.764 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@60f9dc7e
[DEBUG] 05-03-2024 16:47:50.765 [main] BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@15e5246
[DEBUG] 05-03-2024 16:47:50.765 [main] BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@15e5246
[DEBUG] 05-03-2024 16:47:50.765 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@503556cb
[DEBUG] 05-03-2024 16:47:50.765 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@503556cb
[DEBUG] 05-03-2024 16:47:50.765 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@3c9e19de
[DEBUG] 05-03-2024 16:47:50.777 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@74bbc273
[DEBUG] 05-03-2024 16:47:50.777 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@74bbc273
[DEBUG] 05-03-2024 16:47:50.779 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@9dc782d
[DEBUG] 05-03-2024 16:47:50.780 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@1ba35152
[DEBUG] 05-03-2024 16:47:50.781 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@401926df
[DEBUG] 05-03-2024 16:47:50.781 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@3ff8a3ad
[DEBUG] 05-03-2024 16:47:50.782 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@550fa96f
[DEBUG] 05-03-2024 16:47:50.782 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@54275b5d
[DEBUG] 05-03-2024 16:47:50.782 [main] BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@5d01b0d8
[DEBUG] 05-03-2024 16:47:50.783 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@271e851e
[DEBUG] 05-03-2024 16:47:50.783 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@ff21443
[DEBUG] 05-03-2024 16:47:51.813 [main] DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@12e2f5ab) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4e61a863)
[DEBUG] 05-03-2024 16:47:51.818 [main] JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
[DEBUG] 05-03-2024 16:47:51.819 [main] JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 05-03-2024 16:47:51.838 [main] BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@1e7cfd49
[DEBUG] 05-03-2024 16:47:51.838 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@1e7cfd49
[DEBUG] 05-03-2024 16:47:51.839 [main] BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@74bbc273`
[DEBUG] 05-03-2024 16:47:51.842 [main] JdbcTypeRegistry - addDescriptor(3100, NumericTypeDescriptor) replaced previous registration(org.hibernate.dialect.PostgreSQLIntervalSecondJdbcType@3400d6fa)
[DEBUG] 05-03-2024 16:47:51.854 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 05-03-2024 16:47:51.855 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 05-03-2024 16:47:51.855 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 05-03-2024 16:47:51.856 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 05-03-2024 16:47:51.856 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 05-03-2024 16:47:51.856 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 05-03-2024 16:47:51.865 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 05-03-2024 16:47:51.866 [main] BasicTypeRegistry - Adding type registration OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 05-03-2024 16:47:51.866 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 05-03-2024 16:47:51.869 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@484302ee] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@4e647f39]
[WARN ] 05-03-2024 16:47:52.334 [main] InFlightMetadataCollectorImpl - HHH000069: Duplicate generator name generator
[INFO ] 05-03-2024 16:47:52.549 [main] BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
[INFO ] 05-03-2024 16:47:54.820 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 05-03-2024 16:47:54.821 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@484302ee] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@402d76c7]
[TRACE] 05-03-2024 16:47:54.827 [main] TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@402d76c7] for TypeConfiguration
[WARN ] 05-03-2024 16:47:55.193 [main] JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[INFO ] 05-03-2024 16:47:56.043 [main] Http11NioProtocol - Starting ProtocolHandler ["http-nio-8300"]
[INFO ] 05-03-2024 16:47:56.107 [main] TomcatWebServer - Tomcat started on port(s): 8300 (http) with context path '/users_products_api'
[INFO ] 05-03-2024 16:47:56.135 [main] TestSpringBootApplication - Started TestSpringBootApplication in 13.574 seconds (process running for 15.952)
[INFO ] 05-03-2024 16:48:47.003 [http-nio-8300-exec-1] [/users_products_api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[INFO ] 05-03-2024 16:48:47.005 [http-nio-8300-exec-1] DispatcherServlet - Initializing Servlet 'dispatcherServlet'
[INFO ] 05-03-2024 16:48:47.009 [http-nio-8300-exec-1] DispatcherServlet - Completed initialization in 3 ms
[TRACE] 05-03-2024 16:56:00.870 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@402d76c7] for TypeConfiguration
[DEBUG] 05-03-2024 16:56:00.871 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@69925c3f] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@402d76c7]
[INFO ] 05-03-2024 16:56:08.767 [background-preinit] Version - HV000001: Hibernate Validator 8.0.1.Final
[INFO ] 05-03-2024 16:56:08.841 [main] TestSpringBootApplication - Starting TestSpringBootApplication using Java 17.0.10 with PID 15544 (/home/dima/backend_microservice/UserProductsMicroService/target/classes started by dima in /home/dima/backend_microservice/UserProductsMicroService)
[INFO ] 05-03-2024 16:56:08.850 [main] TestSpringBootApplication - No active profile set, falling back to 1 default profile: "default"
[INFO ] 05-03-2024 16:56:10.867 [main] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
[INFO ] 05-03-2024 16:56:10.868 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data R2DBC repositories in DEFAULT mode.
[INFO ] 05-03-2024 16:56:11.323 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 436 ms. Found 1 R2DBC repository interfaces.
[INFO ] 05-03-2024 16:56:11.887 [main] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
[INFO ] 05-03-2024 16:56:11.889 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO ] 05-03-2024 16:56:11.922 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 25 ms. Found 0 JPA repository interfaces.
[ERROR] 05-03-2024 16:56:12.880 [main] AprLifecycleListener - An incompatible version [1.2.23] of the Apache Tomcat Native library is installed, while Tomcat requires version [1.2.34]
[INFO ] 05-03-2024 16:56:13.588 [main] TomcatWebServer - Tomcat initialized with port(s): 8300 (http)
[INFO ] 05-03-2024 16:56:13.608 [main] Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8300"]
[INFO ] 05-03-2024 16:56:13.614 [main] StandardService - Starting service [Tomcat]
[INFO ] 05-03-2024 16:56:13.616 [main] StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.11]
[INFO ] 05-03-2024 16:56:14.672 [main] TldScanner - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
[INFO ] 05-03-2024 16:56:14.690 [main] [/users_products_api] - Initializing Spring embedded WebApplicationContext
[INFO ] 05-03-2024 16:56:14.694 [main] ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 5650 ms
[INFO ] 05-03-2024 16:56:15.787 [main] Version - HHH000412: Hibernate ORM core version 6.2.6.Final
[INFO ] 05-03-2024 16:56:15.792 [main] Environment - HHH000406: Using bytecode reflection optimizer
[DEBUG] 05-03-2024 16:56:16.173 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@150f41b9
[DEBUG] 05-03-2024 16:56:16.174 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@150f41b9
[DEBUG] 05-03-2024 16:56:16.175 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@150f41b9
[DEBUG] 05-03-2024 16:56:16.175 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@6e364f1f
[DEBUG] 05-03-2024 16:56:16.177 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@6e364f1f
[DEBUG] 05-03-2024 16:56:16.180 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@429e7914
[DEBUG] 05-03-2024 16:56:16.181 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@429e7914
[DEBUG] 05-03-2024 16:56:16.183 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@298263fa
[DEBUG] 05-03-2024 16:56:16.183 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@298263fa
[DEBUG] 05-03-2024 16:56:16.184 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@466fedfa
[DEBUG] 05-03-2024 16:56:16.185 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@466fedfa
[DEBUG] 05-03-2024 16:56:16.186 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@466fedfa
[DEBUG] 05-03-2024 16:56:16.187 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@1a7d0c9f
[DEBUG] 05-03-2024 16:56:16.187 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@1a7d0c9f
[DEBUG] 05-03-2024 16:56:16.188 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@1a7d0c9f
[DEBUG] 05-03-2024 16:56:16.188 [main] BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@2b1a901d
[DEBUG] 05-03-2024 16:56:16.189 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@2b1a901d
[DEBUG] 05-03-2024 16:56:16.190 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@11bdab37
[DEBUG] 05-03-2024 16:56:16.190 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@280484c7
[DEBUG] 05-03-2024 16:56:16.191 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@280484c7
[DEBUG] 05-03-2024 16:56:16.191 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@5a6f6cac
[DEBUG] 05-03-2024 16:56:16.192 [main] BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@258a8584
[DEBUG] 05-03-2024 16:56:16.192 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@59127611
[DEBUG] 05-03-2024 16:56:16.193 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@59127611
[DEBUG] 05-03-2024 16:56:16.194 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@59127611
[DEBUG] 05-03-2024 16:56:16.195 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@553ce348
[DEBUG] 05-03-2024 16:56:16.196 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@553ce348
[DEBUG] 05-03-2024 16:56:16.197 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@553ce348
[DEBUG] 05-03-2024 16:56:16.197 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@7417ef4f
[DEBUG] 05-03-2024 16:56:16.198 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@7417ef4f
[DEBUG] 05-03-2024 16:56:16.199 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@7417ef4f
[DEBUG] 05-03-2024 16:56:16.200 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@5c0e2ec
[DEBUG] 05-03-2024 16:56:16.201 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@5c0e2ec
[DEBUG] 05-03-2024 16:56:16.201 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@5c0e2ec
[DEBUG] 05-03-2024 16:56:16.202 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@4fa8bebb
[DEBUG] 05-03-2024 16:56:16.204 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@4fa8bebb
[DEBUG] 05-03-2024 16:56:16.204 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@4fa8bebb
[DEBUG] 05-03-2024 16:56:16.204 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@7d3c22a5
[DEBUG] 05-03-2024 16:56:16.205 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@7d3c22a5
[DEBUG] 05-03-2024 16:56:16.205 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@369ad7da
[DEBUG] 05-03-2024 16:56:16.205 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@369ad7da
[DEBUG] 05-03-2024 16:56:16.206 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@344f9467
[DEBUG] 05-03-2024 16:56:16.206 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@344f9467
[DEBUG] 05-03-2024 16:56:16.208 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@344f9467
[DEBUG] 05-03-2024 16:56:16.209 [main] BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@3e98b933
[DEBUG] 05-03-2024 16:56:16.211 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@222d9d4f
[DEBUG] 05-03-2024 16:56:16.215 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@222d9d4f
[DEBUG] 05-03-2024 16:56:16.215 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@4269aad7
[DEBUG] 05-03-2024 16:56:16.215 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@a4df251
[DEBUG] 05-03-2024 16:56:16.216 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@a4df251
[DEBUG] 05-03-2024 16:56:16.222 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@a4df251
[DEBUG] 05-03-2024 16:56:16.222 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@71e7830a
[DEBUG] 05-03-2024 16:56:16.222 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@3feebf9c
[DEBUG] 05-03-2024 16:56:16.223 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@305e95a4
[DEBUG] 05-03-2024 16:56:16.223 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@55e42684
[DEBUG] 05-03-2024 16:56:16.223 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@55e42684
[DEBUG] 05-03-2024 16:56:16.224 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@18d610e1
[DEBUG] 05-03-2024 16:56:16.227 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@18d610e1
[DEBUG] 05-03-2024 16:56:16.227 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@528e5e38
[DEBUG] 05-03-2024 16:56:16.228 [main] BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@16391278
[DEBUG] 05-03-2024 16:56:16.228 [main] BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@621dc63d
[DEBUG] 05-03-2024 16:56:16.228 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@4ae49387
[DEBUG] 05-03-2024 16:56:16.229 [main] BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@6abb7b7d
[DEBUG] 05-03-2024 16:56:16.229 [main] BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@34cf0e80
[DEBUG] 05-03-2024 16:56:16.229 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@38ef1a0a
[DEBUG] 05-03-2024 16:56:16.230 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@38ef1a0a
[DEBUG] 05-03-2024 16:56:16.230 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@56f9de3b
[DEBUG] 05-03-2024 16:56:16.230 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@56f9de3b
[DEBUG] 05-03-2024 16:56:16.230 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@6728370a
[DEBUG] 05-03-2024 16:56:16.231 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@6728370a
[DEBUG] 05-03-2024 16:56:16.231 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@2b5f8e61
[DEBUG] 05-03-2024 16:56:16.231 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@2b5f8e61
[DEBUG] 05-03-2024 16:56:16.232 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@6ba0ee4a
[DEBUG] 05-03-2024 16:56:16.232 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@6ba0ee4a
[DEBUG] 05-03-2024 16:56:16.232 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@73b0ed03
[DEBUG] 05-03-2024 16:56:16.232 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@55061418
[DEBUG] 05-03-2024 16:56:16.235 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@27db45f
[DEBUG] 05-03-2024 16:56:16.236 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@27db45f
[DEBUG] 05-03-2024 16:56:16.236 [main] BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@6ec3d8e4
[DEBUG] 05-03-2024 16:56:16.238 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@1aeff8ca
[DEBUG] 05-03-2024 16:56:16.238 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@7f2c995b
[DEBUG] 05-03-2024 16:56:16.238 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@101c15ad
[DEBUG] 05-03-2024 16:56:16.239 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@101c15ad
[DEBUG] 05-03-2024 16:56:16.239 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@6068ebb2
[DEBUG] 05-03-2024 16:56:16.239 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@5a466dd
[DEBUG] 05-03-2024 16:56:16.240 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@1ed9d173
[DEBUG] 05-03-2024 16:56:16.240 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@1ed9d173
[DEBUG] 05-03-2024 16:56:16.241 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@6e981e78
[DEBUG] 05-03-2024 16:56:16.242 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@6e981e78
[DEBUG] 05-03-2024 16:56:16.242 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@498a4d62
[DEBUG] 05-03-2024 16:56:16.242 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@498a4d62
[DEBUG] 05-03-2024 16:56:16.243 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@498a4d62
[DEBUG] 05-03-2024 16:56:16.246 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@6fbe4800
[DEBUG] 05-03-2024 16:56:16.247 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@6fbe4800
[DEBUG] 05-03-2024 16:56:16.248 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@6fbe4800
[DEBUG] 05-03-2024 16:56:16.249 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@3f3c5ecd
[DEBUG] 05-03-2024 16:56:16.252 [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@1179fc8c
[DEBUG] 05-03-2024 16:56:16.253 [main] BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@a03529c
[DEBUG] 05-03-2024 16:56:16.253 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@a03529c
[DEBUG] 05-03-2024 16:56:16.254 [main] BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@1760e594
[DEBUG] 05-03-2024 16:56:16.256 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@1760e594
[DEBUG] 05-03-2024 16:56:16.256 [main] BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@1760e594
[DEBUG] 05-03-2024 16:56:16.256 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@4af70b83
[DEBUG] 05-03-2024 16:56:16.261 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@143413cd
[DEBUG] 05-03-2024 16:56:16.261 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@4b32465
[DEBUG] 05-03-2024 16:56:16.262 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@4b32465
[DEBUG] 05-03-2024 16:56:16.262 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@146f3d22
[DEBUG] 05-03-2024 16:56:16.262 [main] BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@146f3d22
[DEBUG] 05-03-2024 16:56:16.263 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@146f3d22
[DEBUG] 05-03-2024 16:56:16.263 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@66b6873f
[DEBUG] 05-03-2024 16:56:16.263 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@66b6873f
[DEBUG] 05-03-2024 16:56:16.264 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@52285a5f
[DEBUG] 05-03-2024 16:56:16.264 [main] BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@52285a5f
[DEBUG] 05-03-2024 16:56:16.264 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@4fa5cc73
[DEBUG] 05-03-2024 16:56:16.265 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@4fa5cc73
[DEBUG] 05-03-2024 16:56:16.265 [main] BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@224e6e88
[DEBUG] 05-03-2024 16:56:16.265 [main] BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@224e6e88
[DEBUG] 05-03-2024 16:56:16.265 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@70139a81
[DEBUG] 05-03-2024 16:56:16.266 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@70139a81
[DEBUG] 05-03-2024 16:56:16.266 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@60f9dc7e
[DEBUG] 05-03-2024 16:56:16.284 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@399f5daf
[DEBUG] 05-03-2024 16:56:16.286 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@399f5daf
[DEBUG] 05-03-2024 16:56:16.288 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@38054d01
[DEBUG] 05-03-2024 16:56:16.289 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@28ce75ec
[DEBUG] 05-03-2024 16:56:16.290 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@778113f2
[DEBUG] 05-03-2024 16:56:16.291 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@9dc782d
[DEBUG] 05-03-2024 16:56:16.292 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@1ba35152
[DEBUG] 05-03-2024 16:56:16.298 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@401926df
[DEBUG] 05-03-2024 16:56:16.298 [main] BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@3ff8a3ad
[DEBUG] 05-03-2024 16:56:16.298 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@550fa96f
[DEBUG] 05-03-2024 16:56:16.298 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@54275b5d
[DEBUG] 05-03-2024 16:56:17.341 [main] DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@25df2014) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@270b8c2a)
[DEBUG] 05-03-2024 16:56:17.345 [main] JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
[DEBUG] 05-03-2024 16:56:17.346 [main] JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 05-03-2024 16:56:17.369 [main] BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@539ee811
[DEBUG] 05-03-2024 16:56:17.369 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@539ee811
[DEBUG] 05-03-2024 16:56:17.370 [main] BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@399f5daf`
[DEBUG] 05-03-2024 16:56:17.372 [main] JdbcTypeRegistry - addDescriptor(3100, NumericTypeDescriptor) replaced previous registration(org.hibernate.dialect.PostgreSQLIntervalSecondJdbcType@ca10069)
[DEBUG] 05-03-2024 16:56:17.385 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 05-03-2024 16:56:17.385 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 05-03-2024 16:56:17.385 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 05-03-2024 16:56:17.386 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 05-03-2024 16:56:17.386 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 05-03-2024 16:56:17.386 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 05-03-2024 16:56:17.388 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 05-03-2024 16:56:17.388 [main] BasicTypeRegistry - Adding type registration OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 05-03-2024 16:56:17.388 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 05-03-2024 16:56:17.391 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6e0d058a] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@3eb0fd88]
[WARN ] 05-03-2024 16:56:17.685 [main] InFlightMetadataCollectorImpl - HHH000069: Duplicate generator name generator
[INFO ] 05-03-2024 16:56:17.848 [main] BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
[INFO ] 05-03-2024 16:56:20.034 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 05-03-2024 16:56:20.035 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6e0d058a] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@45a4587d]
[TRACE] 05-03-2024 16:56:20.045 [main] TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@45a4587d] for TypeConfiguration
[WARN ] 05-03-2024 16:56:20.372 [main] JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[INFO ] 05-03-2024 16:56:21.186 [main] Http11NioProtocol - Starting ProtocolHandler ["http-nio-8300"]
[INFO ] 05-03-2024 16:56:21.278 [main] TomcatWebServer - Tomcat started on port(s): 8300 (http) with context path '/users_products_api'
[INFO ] 05-03-2024 16:56:21.309 [main] TestSpringBootApplication - Started TestSpringBootApplication in 13.308 seconds (process running for 15.573)
[INFO ] 05-03-2024 16:56:25.262 [http-nio-8300-exec-1] [/users_products_api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[INFO ] 05-03-2024 16:56:25.263 [http-nio-8300-exec-1] DispatcherServlet - Initializing Servlet 'dispatcherServlet'
[INFO ] 05-03-2024 16:56:25.266 [http-nio-8300-exec-1] DispatcherServlet - Completed initialization in 3 ms
[INFO ] 05-03-2024 16:57:09.115 [SpringApplicationShutdownHook] Http11NioProtocol - Pausing ProtocolHandler ["http-nio-8300"]
[INFO ] 05-03-2024 16:57:09.116 [SpringApplicationShutdownHook] StandardService - Stopping service [Tomcat]
[INFO ] 05-03-2024 16:57:09.119 [SpringApplicationShutdownHook] [/users_products_api] - Destroying Spring FrameworkServlet 'dispatcherServlet'
[TRACE] 05-03-2024 16:57:09.150 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@45a4587d] for TypeConfiguration
[DEBUG] 05-03-2024 16:57:09.150 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@10173c72] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@45a4587d]
[INFO ] 05-03-2024 16:57:17.291 [background-preinit] Version - HV000001: Hibernate Validator 8.0.1.Final
[INFO ] 05-03-2024 16:57:17.364 [main] TestSpringBootApplication - Starting TestSpringBootApplication using Java 17.0.10 with PID 15787 (/home/dima/backend_microservice/UserProductsMicroService/target/classes started by dima in /home/dima/backend_microservice/UserProductsMicroService)
[INFO ] 05-03-2024 16:57:17.374 [main] TestSpringBootApplication - No active profile set, falling back to 1 default profile: "default"
[INFO ] 05-03-2024 16:57:19.000 [main] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
[INFO ] 05-03-2024 16:57:19.002 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data R2DBC repositories in DEFAULT mode.
[INFO ] 05-03-2024 16:57:19.396 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 383 ms. Found 1 R2DBC repository interfaces.
[INFO ] 05-03-2024 16:57:19.956 [main] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
[INFO ] 05-03-2024 16:57:19.958 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO ] 05-03-2024 16:57:19.985 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 19 ms. Found 0 JPA repository interfaces.
[ERROR] 05-03-2024 16:57:21.101 [main] AprLifecycleListener - An incompatible version [1.2.23] of the Apache Tomcat Native library is installed, while Tomcat requires version [1.2.34]
[INFO ] 05-03-2024 16:57:21.804 [main] TomcatWebServer - Tomcat initialized with port(s): 8300 (http)
[INFO ] 05-03-2024 16:57:21.823 [main] Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8300"]
[INFO ] 05-03-2024 16:57:21.829 [main] StandardService - Starting service [Tomcat]
[INFO ] 05-03-2024 16:57:21.831 [main] StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.11]
[INFO ] 05-03-2024 16:57:22.805 [main] TldScanner - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
[INFO ] 05-03-2024 16:57:22.824 [main] [/users_products_api] - Initializing Spring embedded WebApplicationContext
[INFO ] 05-03-2024 16:57:22.830 [main] ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 5303 ms
[INFO ] 05-03-2024 16:57:23.973 [main] Version - HHH000412: Hibernate ORM core version 6.2.6.Final
[INFO ] 05-03-2024 16:57:23.980 [main] Environment - HHH000406: Using bytecode reflection optimizer
[DEBUG] 05-03-2024 16:57:24.281 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@5c0e2ec
[DEBUG] 05-03-2024 16:57:24.282 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@5c0e2ec
[DEBUG] 05-03-2024 16:57:24.282 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@5c0e2ec
[DEBUG] 05-03-2024 16:57:24.283 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@4fa8bebb
[DEBUG] 05-03-2024 16:57:24.283 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@4fa8bebb
[DEBUG] 05-03-2024 16:57:24.284 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@7d3c22a5
[DEBUG] 05-03-2024 16:57:24.284 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@7d3c22a5
[DEBUG] 05-03-2024 16:57:24.285 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@369ad7da
[DEBUG] 05-03-2024 16:57:24.286 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@369ad7da
[DEBUG] 05-03-2024 16:57:24.286 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@344f9467
[DEBUG] 05-03-2024 16:57:24.287 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@344f9467
[DEBUG] 05-03-2024 16:57:24.287 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@344f9467
[DEBUG] 05-03-2024 16:57:24.288 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@3e98b933
[DEBUG] 05-03-2024 16:57:24.288 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@3e98b933
[DEBUG] 05-03-2024 16:57:24.289 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@3e98b933
[DEBUG] 05-03-2024 16:57:24.289 [main] BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@222d9d4f
[DEBUG] 05-03-2024 16:57:24.290 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@222d9d4f
[DEBUG] 05-03-2024 16:57:24.290 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@4269aad7
[DEBUG] 05-03-2024 16:57:24.291 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@a4df251
[DEBUG] 05-03-2024 16:57:24.291 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@a4df251
[DEBUG] 05-03-2024 16:57:24.292 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@71e7830a
[DEBUG] 05-03-2024 16:57:24.292 [main] BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@3feebf9c
[DEBUG] 05-03-2024 16:57:24.293 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@305e95a4
[DEBUG] 05-03-2024 16:57:24.293 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@305e95a4
[DEBUG] 05-03-2024 16:57:24.294 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@305e95a4
[DEBUG] 05-03-2024 16:57:24.294 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@55e42684
[DEBUG] 05-03-2024 16:57:24.294 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@55e42684
[DEBUG] 05-03-2024 16:57:24.295 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@55e42684
[DEBUG] 05-03-2024 16:57:24.296 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@18d610e1
[DEBUG] 05-03-2024 16:57:24.296 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@18d610e1
[DEBUG] 05-03-2024 16:57:24.296 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@18d610e1
[DEBUG] 05-03-2024 16:57:24.297 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@528e5e38
[DEBUG] 05-03-2024 16:57:24.297 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@528e5e38
[DEBUG] 05-03-2024 16:57:24.298 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@528e5e38
[DEBUG] 05-03-2024 16:57:24.298 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@16391278
[DEBUG] 05-03-2024 16:57:24.299 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@16391278
[DEBUG] 05-03-2024 16:57:24.299 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@16391278
[DEBUG] 05-03-2024 16:57:24.299 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@621dc63d
[DEBUG] 05-03-2024 16:57:24.300 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@621dc63d
[DEBUG] 05-03-2024 16:57:24.300 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@4ae49387
[DEBUG] 05-03-2024 16:57:24.300 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@4ae49387
[DEBUG] 05-03-2024 16:57:24.302 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@6abb7b7d
[DEBUG] 05-03-2024 16:57:24.302 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@6abb7b7d
[DEBUG] 05-03-2024 16:57:24.302 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@6abb7b7d
[DEBUG] 05-03-2024 16:57:24.303 [main] BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@34cf0e80
[DEBUG] 05-03-2024 16:57:24.303 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@38ef1a0a
[DEBUG] 05-03-2024 16:57:24.304 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@38ef1a0a
[DEBUG] 05-03-2024 16:57:24.304 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@56f9de3b
[DEBUG] 05-03-2024 16:57:24.304 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@6728370a
[DEBUG] 05-03-2024 16:57:24.305 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@6728370a
[DEBUG] 05-03-2024 16:57:24.305 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@6728370a
[DEBUG] 05-03-2024 16:57:24.305 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@2b5f8e61
[DEBUG] 05-03-2024 16:57:24.306 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@6ba0ee4a
[DEBUG] 05-03-2024 16:57:24.306 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@73b0ed03
[DEBUG] 05-03-2024 16:57:24.306 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@55061418
[DEBUG] 05-03-2024 16:57:24.307 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@55061418
[DEBUG] 05-03-2024 16:57:24.307 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@27db45f
[DEBUG] 05-03-2024 16:57:24.307 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@27db45f
[DEBUG] 05-03-2024 16:57:24.308 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@6ec3d8e4
[DEBUG] 05-03-2024 16:57:24.308 [main] BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@1aeff8ca
[DEBUG] 05-03-2024 16:57:24.308 [main] BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@7f2c995b
[DEBUG] 05-03-2024 16:57:24.309 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@101c15ad
[DEBUG] 05-03-2024 16:57:24.309 [main] BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@6068ebb2
[DEBUG] 05-03-2024 16:57:24.309 [main] BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@5a466dd
[DEBUG] 05-03-2024 16:57:24.310 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@1ed9d173
[DEBUG] 05-03-2024 16:57:24.310 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@1ed9d173
[DEBUG] 05-03-2024 16:57:24.310 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@6e981e78
[DEBUG] 05-03-2024 16:57:24.311 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@6e981e78
[DEBUG] 05-03-2024 16:57:24.311 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@498a4d62
[DEBUG] 05-03-2024 16:57:24.311 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@498a4d62
[DEBUG] 05-03-2024 16:57:24.311 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@6fbe4800
[DEBUG] 05-03-2024 16:57:24.312 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@6fbe4800
[DEBUG] 05-03-2024 16:57:24.312 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@3f3c5ecd
[DEBUG] 05-03-2024 16:57:24.312 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@3f3c5ecd
[DEBUG] 05-03-2024 16:57:24.313 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@1179fc8c
[DEBUG] 05-03-2024 16:57:24.313 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@a03529c
[DEBUG] 05-03-2024 16:57:24.313 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@1760e594
[DEBUG] 05-03-2024 16:57:24.314 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@1760e594
[DEBUG] 05-03-2024 16:57:24.314 [main] BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@4af70b83
[DEBUG] 05-03-2024 16:57:24.314 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@143413cd
[DEBUG] 05-03-2024 16:57:24.315 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4b32465
[DEBUG] 05-03-2024 16:57:24.315 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@146f3d22
[DEBUG] 05-03-2024 16:57:24.315 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@146f3d22
[DEBUG] 05-03-2024 16:57:24.316 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@66b6873f
[DEBUG] 05-03-2024 16:57:24.316 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@52285a5f
[DEBUG] 05-03-2024 16:57:24.316 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@4fa5cc73
[DEBUG] 05-03-2024 16:57:24.317 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@4fa5cc73
[DEBUG] 05-03-2024 16:57:24.317 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@224e6e88
[DEBUG] 05-03-2024 16:57:24.317 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@224e6e88
[DEBUG] 05-03-2024 16:57:24.318 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@70139a81
[DEBUG] 05-03-2024 16:57:24.318 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@70139a81
[DEBUG] 05-03-2024 16:57:24.318 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@70139a81
[DEBUG] 05-03-2024 16:57:24.319 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@60f9dc7e
[DEBUG] 05-03-2024 16:57:24.319 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@60f9dc7e
[DEBUG] 05-03-2024 16:57:24.319 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@60f9dc7e
[DEBUG] 05-03-2024 16:57:24.320 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@15e5246
[DEBUG] 05-03-2024 16:57:24.320 [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@503556cb
[DEBUG] 05-03-2024 16:57:24.320 [main] BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@3c9e19de
[DEBUG] 05-03-2024 16:57:24.321 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@3c9e19de
[DEBUG] 05-03-2024 16:57:24.321 [main] BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@12aa381f
[DEBUG] 05-03-2024 16:57:24.321 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@12aa381f
[DEBUG] 05-03-2024 16:57:24.322 [main] BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@12aa381f
[DEBUG] 05-03-2024 16:57:24.322 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@6115846e
[DEBUG] 05-03-2024 16:57:24.322 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@1bec1589
[DEBUG] 05-03-2024 16:57:24.322 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@57f0bfc3
[DEBUG] 05-03-2024 16:57:24.323 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@57f0bfc3
[DEBUG] 05-03-2024 16:57:24.323 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@14590fe2
[DEBUG] 05-03-2024 16:57:24.323 [main] BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@14590fe2
[DEBUG] 05-03-2024 16:57:24.324 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@14590fe2
[DEBUG] 05-03-2024 16:57:24.324 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@5922cff3
[DEBUG] 05-03-2024 16:57:24.325 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@5922cff3
[DEBUG] 05-03-2024 16:57:24.325 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@2299d903
[DEBUG] 05-03-2024 16:57:24.326 [main] BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@2299d903
[DEBUG] 05-03-2024 16:57:24.326 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@70c56434
[DEBUG] 05-03-2024 16:57:24.326 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@70c56434
[DEBUG] 05-03-2024 16:57:24.326 [main] BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@2c3f43d1
[DEBUG] 05-03-2024 16:57:24.327 [main] BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@2c3f43d1
[DEBUG] 05-03-2024 16:57:24.327 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@632d4cf2
[DEBUG] 05-03-2024 16:57:24.327 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@632d4cf2
[DEBUG] 05-03-2024 16:57:24.328 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@f10d055
[DEBUG] 05-03-2024 16:57:24.339 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@9dc782d
[DEBUG] 05-03-2024 16:57:24.339 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@9dc782d
[DEBUG] 05-03-2024 16:57:24.342 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@6253e59a
[DEBUG] 05-03-2024 16:57:24.343 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@7d1cb59f
[DEBUG] 05-03-2024 16:57:24.343 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@16ccd2bc
[DEBUG] 05-03-2024 16:57:24.344 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@12f8682a
[DEBUG] 05-03-2024 16:57:24.344 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@6f7a20da
[DEBUG] 05-03-2024 16:57:24.344 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@7752c0e7
[DEBUG] 05-03-2024 16:57:24.344 [main] BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@77ba583
[DEBUG] 05-03-2024 16:57:24.345 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@5613247e
[DEBUG] 05-03-2024 16:57:24.345 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@6851b296
[DEBUG] 05-03-2024 16:57:25.397 [main] DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@472719df) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5cfa2ac5)
[DEBUG] 05-03-2024 16:57:25.402 [main] JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
[DEBUG] 05-03-2024 16:57:25.402 [main] JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 05-03-2024 16:57:25.439 [main] BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@2ca1e49a
[DEBUG] 05-03-2024 16:57:25.440 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@2ca1e49a
[DEBUG] 05-03-2024 16:57:25.440 [main] BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@9dc782d`
[DEBUG] 05-03-2024 16:57:25.443 [main] JdbcTypeRegistry - addDescriptor(3100, NumericTypeDescriptor) replaced previous registration(org.hibernate.dialect.PostgreSQLIntervalSecondJdbcType@163df259)
[DEBUG] 05-03-2024 16:57:25.454 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 05-03-2024 16:57:25.455 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 05-03-2024 16:57:25.455 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 05-03-2024 16:57:25.455 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 05-03-2024 16:57:25.455 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 05-03-2024 16:57:25.456 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 05-03-2024 16:57:25.457 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 05-03-2024 16:57:25.458 [main] BasicTypeRegistry - Adding type registration OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 05-03-2024 16:57:25.458 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 05-03-2024 16:57:25.460 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@396f2724] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@1b465fa9]
[WARN ] 05-03-2024 16:57:25.745 [main] InFlightMetadataCollectorImpl - HHH000069: Duplicate generator name generator
[INFO ] 05-03-2024 16:57:25.912 [main] BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
[INFO ] 05-03-2024 16:57:28.161 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 05-03-2024 16:57:28.162 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@396f2724] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@16e3d6d0]
[TRACE] 05-03-2024 16:57:28.171 [main] TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@16e3d6d0] for TypeConfiguration
[WARN ] 05-03-2024 16:57:28.466 [main] JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[INFO ] 05-03-2024 16:57:29.283 [main] Http11NioProtocol - Starting ProtocolHandler ["http-nio-8300"]
[INFO ] 05-03-2024 16:57:29.342 [main] TomcatWebServer - Tomcat started on port(s): 8300 (http) with context path '/users_products_api'
[INFO ] 05-03-2024 16:57:29.372 [main] TestSpringBootApplication - Started TestSpringBootApplication in 12.861 seconds (process running for 15.096)
[INFO ] 05-03-2024 16:57:35.735 [http-nio-8300-exec-1] [/users_products_api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[INFO ] 05-03-2024 16:57:35.736 [http-nio-8300-exec-1] DispatcherServlet - Initializing Servlet 'dispatcherServlet'
[INFO ] 05-03-2024 16:57:35.742 [http-nio-8300-exec-1] DispatcherServlet - Completed initialization in 5 ms
[TRACE] 05-03-2024 16:58:58.432 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@16e3d6d0] for TypeConfiguration
[DEBUG] 05-03-2024 16:58:58.434 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@731ea5d1] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@16e3d6d0]
[INFO ] 05-03-2024 16:59:06.863 [background-preinit] Version - HV000001: Hibernate Validator 8.0.1.Final
[INFO ] 05-03-2024 16:59:06.946 [main] TestSpringBootApplication - Starting TestSpringBootApplication using Java 17.0.10 with PID 16036 (/home/dima/backend_microservice/UserProductsMicroService/target/classes started by dima in /home/dima/backend_microservice/UserProductsMicroService)
[INFO ] 05-03-2024 16:59:06.962 [main] TestSpringBootApplication - No active profile set, falling back to 1 default profile: "default"
[INFO ] 05-03-2024 16:59:08.485 [main] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
[INFO ] 05-03-2024 16:59:08.486 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data R2DBC repositories in DEFAULT mode.
[INFO ] 05-03-2024 16:59:08.960 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 463 ms. Found 1 R2DBC repository interfaces.
[INFO ] 05-03-2024 16:59:09.459 [main] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
[INFO ] 05-03-2024 16:59:09.461 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO ] 05-03-2024 16:59:09.490 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 21 ms. Found 0 JPA repository interfaces.
[ERROR] 05-03-2024 16:59:10.412 [main] AprLifecycleListener - An incompatible version [1.2.23] of the Apache Tomcat Native library is installed, while Tomcat requires version [1.2.34]
[INFO ] 05-03-2024 16:59:11.187 [main] TomcatWebServer - Tomcat initialized with port(s): 8300 (http)
[INFO ] 05-03-2024 16:59:11.207 [main] Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8300"]
[INFO ] 05-03-2024 16:59:11.213 [main] StandardService - Starting service [Tomcat]
[INFO ] 05-03-2024 16:59:11.214 [main] StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.11]
[INFO ] 05-03-2024 16:59:12.102 [main] TldScanner - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
[INFO ] 05-03-2024 16:59:12.122 [main] [/users_products_api] - Initializing Spring embedded WebApplicationContext
[INFO ] 05-03-2024 16:59:12.126 [main] ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 4954 ms
[INFO ] 05-03-2024 16:59:13.544 [main] Version - HHH000412: Hibernate ORM core version 6.2.6.Final
[INFO ] 05-03-2024 16:59:13.549 [main] Environment - HHH000406: Using bytecode reflection optimizer
[DEBUG] 05-03-2024 16:59:13.850 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@66e1b2a
[DEBUG] 05-03-2024 16:59:13.851 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@66e1b2a
[DEBUG] 05-03-2024 16:59:13.852 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@66e1b2a
[DEBUG] 05-03-2024 16:59:13.852 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@343db2f6
[DEBUG] 05-03-2024 16:59:13.853 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@343db2f6
[DEBUG] 05-03-2024 16:59:13.853 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@2c815fdc
[DEBUG] 05-03-2024 16:59:13.854 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@2c815fdc
[DEBUG] 05-03-2024 16:59:13.854 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@769b0752
[DEBUG] 05-03-2024 16:59:13.854 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@769b0752
[DEBUG] 05-03-2024 16:59:13.855 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@dae5e0
[DEBUG] 05-03-2024 16:59:13.855 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@dae5e0
[DEBUG] 05-03-2024 16:59:13.856 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@dae5e0
[DEBUG] 05-03-2024 16:59:13.856 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@59a94d0f
[DEBUG] 05-03-2024 16:59:13.856 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@59a94d0f
[DEBUG] 05-03-2024 16:59:13.857 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@59a94d0f
[DEBUG] 05-03-2024 16:59:13.857 [main] BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@7ff09659
[DEBUG] 05-03-2024 16:59:13.858 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@7ff09659
[DEBUG] 05-03-2024 16:59:13.858 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@517fbf62
[DEBUG] 05-03-2024 16:59:13.859 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@65db548
[DEBUG] 05-03-2024 16:59:13.859 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@65db548
[DEBUG] 05-03-2024 16:59:13.860 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@150f41b9
[DEBUG] 05-03-2024 16:59:13.860 [main] BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@6e364f1f
[DEBUG] 05-03-2024 16:59:13.860 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@429e7914
[DEBUG] 05-03-2024 16:59:13.861 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@429e7914
[DEBUG] 05-03-2024 16:59:13.861 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@429e7914
[DEBUG] 05-03-2024 16:59:13.862 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@298263fa
[DEBUG] 05-03-2024 16:59:13.862 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@298263fa
[DEBUG] 05-03-2024 16:59:13.863 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@298263fa
[DEBUG] 05-03-2024 16:59:13.863 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@466fedfa
[DEBUG] 05-03-2024 16:59:13.863 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@466fedfa
[DEBUG] 05-03-2024 16:59:13.864 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@466fedfa
[DEBUG] 05-03-2024 16:59:13.864 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@1a7d0c9f
[DEBUG] 05-03-2024 16:59:13.864 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@1a7d0c9f
[DEBUG] 05-03-2024 16:59:13.865 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@1a7d0c9f
[DEBUG] 05-03-2024 16:59:13.865 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@2b1a901d
[DEBUG] 05-03-2024 16:59:13.865 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@2b1a901d
[DEBUG] 05-03-2024 16:59:13.866 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@2b1a901d
[DEBUG] 05-03-2024 16:59:13.866 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@11bdab37
[DEBUG] 05-03-2024 16:59:13.866 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@11bdab37
[DEBUG] 05-03-2024 16:59:13.867 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@280484c7
[DEBUG] 05-03-2024 16:59:13.867 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@280484c7
[DEBUG] 05-03-2024 16:59:13.867 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@5a6f6cac
[DEBUG] 05-03-2024 16:59:13.867 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@5a6f6cac
[DEBUG] 05-03-2024 16:59:13.868 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@5a6f6cac
[DEBUG] 05-03-2024 16:59:13.868 [main] BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@258a8584
[DEBUG] 05-03-2024 16:59:13.869 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@59127611
[DEBUG] 05-03-2024 16:59:13.869 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@59127611
[DEBUG] 05-03-2024 16:59:13.869 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@553ce348
[DEBUG] 05-03-2024 16:59:13.870 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@7417ef4f
[DEBUG] 05-03-2024 16:59:13.870 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@7417ef4f
[DEBUG] 05-03-2024 16:59:13.870 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@7417ef4f
[DEBUG] 05-03-2024 16:59:13.871 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@5c0e2ec
[DEBUG] 05-03-2024 16:59:13.871 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@4fa8bebb
[DEBUG] 05-03-2024 16:59:13.871 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@7d3c22a5
[DEBUG] 05-03-2024 16:59:13.872 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@369ad7da
[DEBUG] 05-03-2024 16:59:13.872 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@369ad7da
[DEBUG] 05-03-2024 16:59:13.872 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@344f9467
[DEBUG] 05-03-2024 16:59:13.872 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@344f9467
[DEBUG] 05-03-2024 16:59:13.875 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@3e98b933
[DEBUG] 05-03-2024 16:59:13.875 [main] BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@222d9d4f
[DEBUG] 05-03-2024 16:59:13.875 [main] BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@4269aad7
[DEBUG] 05-03-2024 16:59:13.876 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@a4df251
[DEBUG] 05-03-2024 16:59:13.876 [main] BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@71e7830a
[DEBUG] 05-03-2024 16:59:13.876 [main] BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@3feebf9c
[DEBUG] 05-03-2024 16:59:13.877 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@305e95a4
[DEBUG] 05-03-2024 16:59:13.877 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@305e95a4
[DEBUG] 05-03-2024 16:59:13.877 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@55e42684
[DEBUG] 05-03-2024 16:59:13.878 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@55e42684
[DEBUG] 05-03-2024 16:59:13.878 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@18d610e1
[DEBUG] 05-03-2024 16:59:13.878 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@18d610e1
[DEBUG] 05-03-2024 16:59:13.879 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@528e5e38
[DEBUG] 05-03-2024 16:59:13.879 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@528e5e38
[DEBUG] 05-03-2024 16:59:13.880 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@16391278
[DEBUG] 05-03-2024 16:59:13.880 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@16391278
[DEBUG] 05-03-2024 16:59:13.880 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@621dc63d
[DEBUG] 05-03-2024 16:59:13.880 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4ae49387
[DEBUG] 05-03-2024 16:59:13.881 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@6abb7b7d
[DEBUG] 05-03-2024 16:59:13.881 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@6abb7b7d
[DEBUG] 05-03-2024 16:59:13.882 [main] BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@34cf0e80
[DEBUG] 05-03-2024 16:59:13.882 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@38ef1a0a
[DEBUG] 05-03-2024 16:59:13.882 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@56f9de3b
[DEBUG] 05-03-2024 16:59:13.882 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@6728370a
[DEBUG] 05-03-2024 16:59:13.883 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@6728370a
[DEBUG] 05-03-2024 16:59:13.883 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2b5f8e61
[DEBUG] 05-03-2024 16:59:13.883 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@6ba0ee4a
[DEBUG] 05-03-2024 16:59:13.884 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@73b0ed03
[DEBUG] 05-03-2024 16:59:13.884 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@73b0ed03
[DEBUG] 05-03-2024 16:59:13.884 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@55061418
[DEBUG] 05-03-2024 16:59:13.885 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@55061418
[DEBUG] 05-03-2024 16:59:13.885 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@27db45f
[DEBUG] 05-03-2024 16:59:13.885 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@27db45f
[DEBUG] 05-03-2024 16:59:13.885 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@27db45f
[DEBUG] 05-03-2024 16:59:13.886 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@6ec3d8e4
[DEBUG] 05-03-2024 16:59:13.886 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@6ec3d8e4
[DEBUG] 05-03-2024 16:59:13.887 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@6ec3d8e4
[DEBUG] 05-03-2024 16:59:13.887 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@1aeff8ca
[DEBUG] 05-03-2024 16:59:13.887 [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@7f2c995b
[DEBUG] 05-03-2024 16:59:13.887 [main] BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@101c15ad
[DEBUG] 05-03-2024 16:59:13.888 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@101c15ad
[DEBUG] 05-03-2024 16:59:13.888 [main] BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@6068ebb2
[DEBUG] 05-03-2024 16:59:13.888 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@6068ebb2
[DEBUG] 05-03-2024 16:59:13.889 [main] BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@6068ebb2
[DEBUG] 05-03-2024 16:59:13.889 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@5a466dd
[DEBUG] 05-03-2024 16:59:13.889 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@1ed9d173
[DEBUG] 05-03-2024 16:59:13.889 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@6e981e78
[DEBUG] 05-03-2024 16:59:13.890 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@6e981e78
[DEBUG] 05-03-2024 16:59:13.890 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@498a4d62
[DEBUG] 05-03-2024 16:59:13.890 [main] BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@498a4d62
[DEBUG] 05-03-2024 16:59:13.891 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@498a4d62
[DEBUG] 05-03-2024 16:59:13.891 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@6fbe4800
[DEBUG] 05-03-2024 16:59:13.891 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@6fbe4800
[DEBUG] 05-03-2024 16:59:13.892 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@3f3c5ecd
[DEBUG] 05-03-2024 16:59:13.892 [main] BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@3f3c5ecd
[DEBUG] 05-03-2024 16:59:13.892 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@1179fc8c
[DEBUG] 05-03-2024 16:59:13.893 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@1179fc8c
[DEBUG] 05-03-2024 16:59:13.893 [main] BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@a03529c
[DEBUG] 05-03-2024 16:59:13.893 [main] BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@a03529c
[DEBUG] 05-03-2024 16:59:13.894 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@1760e594
[DEBUG] 05-03-2024 16:59:13.894 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@1760e594
[DEBUG] 05-03-2024 16:59:13.894 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@4af70b83
[DEBUG] 05-03-2024 16:59:13.905 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@7d537616
[DEBUG] 05-03-2024 16:59:13.905 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@7d537616
[DEBUG] 05-03-2024 16:59:13.908 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@29f3185c
[DEBUG] 05-03-2024 16:59:13.908 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@74bbc273
[DEBUG] 05-03-2024 16:59:13.908 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@370a8b6e
[DEBUG] 05-03-2024 16:59:13.909 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@118fbaf0
[DEBUG] 05-03-2024 16:59:13.909 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@208f7165
[DEBUG] 05-03-2024 16:59:13.909 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@a0d875d
[DEBUG] 05-03-2024 16:59:13.910 [main] BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@693f2c89
[DEBUG] 05-03-2024 16:59:13.910 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@50b4364
[DEBUG] 05-03-2024 16:59:13.911 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@5e541ef9
[DEBUG] 05-03-2024 16:59:14.960 [main] DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3355b8ff) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@32646ecf)
[DEBUG] 05-03-2024 16:59:14.964 [main] JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
[DEBUG] 05-03-2024 16:59:14.965 [main] JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 05-03-2024 16:59:14.984 [main] BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@64544ee4
[DEBUG] 05-03-2024 16:59:14.984 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@64544ee4
[DEBUG] 05-03-2024 16:59:14.985 [main] BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@7d537616`
[DEBUG] 05-03-2024 16:59:14.987 [main] JdbcTypeRegistry - addDescriptor(3100, NumericTypeDescriptor) replaced previous registration(org.hibernate.dialect.PostgreSQLIntervalSecondJdbcType@178dc733)
[DEBUG] 05-03-2024 16:59:15.000 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 05-03-2024 16:59:15.000 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 05-03-2024 16:59:15.000 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 05-03-2024 16:59:15.001 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 05-03-2024 16:59:15.001 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 05-03-2024 16:59:15.001 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 05-03-2024 16:59:15.003 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 05-03-2024 16:59:15.003 [main] BasicTypeRegistry - Adding type registration OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 05-03-2024 16:59:15.003 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 05-03-2024 16:59:15.006 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@112530c3] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@75959b0c]
[WARN ] 05-03-2024 16:59:15.325 [main] InFlightMetadataCollectorImpl - HHH000069: Duplicate generator name generator
[INFO ] 05-03-2024 16:59:15.492 [main] BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
[INFO ] 05-03-2024 16:59:17.680 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 05-03-2024 16:59:17.682 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@112530c3] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@61627c9d]
[TRACE] 05-03-2024 16:59:17.688 [main] TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@61627c9d] for TypeConfiguration
[WARN ] 05-03-2024 16:59:18.017 [main] JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[INFO ] 05-03-2024 16:59:18.912 [main] Http11NioProtocol - Starting ProtocolHandler ["http-nio-8300"]
[INFO ] 05-03-2024 16:59:19.007 [main] TomcatWebServer - Tomcat started on port(s): 8300 (http) with context path '/users_products_api'
[INFO ] 05-03-2024 16:59:19.040 [main] TestSpringBootApplication - Started TestSpringBootApplication in 13.01 seconds (process running for 15.261)
[INFO ] 05-03-2024 16:59:30.095 [http-nio-8300-exec-1] [/users_products_api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[INFO ] 05-03-2024 16:59:30.096 [http-nio-8300-exec-1] DispatcherServlet - Initializing Servlet 'dispatcherServlet'
[INFO ] 05-03-2024 16:59:30.099 [http-nio-8300-exec-1] DispatcherServlet - Completed initialization in 3 ms
[TRACE] 05-03-2024 17:13:31.809 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@61627c9d] for TypeConfiguration
[DEBUG] 05-03-2024 17:13:31.810 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@7f8c746a] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@61627c9d]
[INFO ] 05-03-2024 17:13:53.180 [background-preinit] Version - HV000001: Hibernate Validator 8.0.1.Final
[INFO ] 05-03-2024 17:13:53.239 [main] TestSpringBootApplication - Starting TestSpringBootApplication using Java 17.0.10 with PID 17630 (/home/dima/backend_microservice/UserProductsMicroService/target/classes started by dima in /home/dima/backend_microservice/UserProductsMicroService)
[INFO ] 05-03-2024 17:13:53.250 [main] TestSpringBootApplication - No active profile set, falling back to 1 default profile: "default"
[INFO ] 05-03-2024 17:13:55.853 [main] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
[INFO ] 05-03-2024 17:13:55.855 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data R2DBC repositories in DEFAULT mode.
[INFO ] 05-03-2024 17:13:56.372 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 504 ms. Found 1 R2DBC repository interfaces.
[INFO ] 05-03-2024 17:13:57.091 [main] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
[INFO ] 05-03-2024 17:13:57.094 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO ] 05-03-2024 17:13:57.152 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 22 ms. Found 0 JPA repository interfaces.
[ERROR] 05-03-2024 17:13:58.360 [main] AprLifecycleListener - An incompatible version [1.2.23] of the Apache Tomcat Native library is installed, while Tomcat requires version [1.2.34]
[INFO ] 05-03-2024 17:14:00.011 [main] TomcatWebServer - Tomcat initialized with port(s): 8300 (http)
[INFO ] 05-03-2024 17:14:00.031 [main] Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8300"]
[INFO ] 05-03-2024 17:14:00.037 [main] StandardService - Starting service [Tomcat]
[INFO ] 05-03-2024 17:14:00.038 [main] StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.11]
[INFO ] 05-03-2024 17:14:01.272 [main] TldScanner - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
[INFO ] 05-03-2024 17:14:01.290 [main] [/users_products_api] - Initializing Spring embedded WebApplicationContext
[INFO ] 05-03-2024 17:14:01.312 [main] ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 7659 ms
[INFO ] 05-03-2024 17:14:02.640 [main] Version - HHH000412: Hibernate ORM core version 6.2.6.Final
[INFO ] 05-03-2024 17:14:02.650 [main] Environment - HHH000406: Using bytecode reflection optimizer
[DEBUG] 05-03-2024 17:14:03.051 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@4fa8bebb
[DEBUG] 05-03-2024 17:14:03.052 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@4fa8bebb
[DEBUG] 05-03-2024 17:14:03.053 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@4fa8bebb
[DEBUG] 05-03-2024 17:14:03.053 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@7d3c22a5
[DEBUG] 05-03-2024 17:14:03.054 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@7d3c22a5
[DEBUG] 05-03-2024 17:14:03.054 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@369ad7da
[DEBUG] 05-03-2024 17:14:03.055 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@369ad7da
[DEBUG] 05-03-2024 17:14:03.055 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@344f9467
[DEBUG] 05-03-2024 17:14:03.055 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@344f9467
[DEBUG] 05-03-2024 17:14:03.056 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@3e98b933
[DEBUG] 05-03-2024 17:14:03.056 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@3e98b933
[DEBUG] 05-03-2024 17:14:03.057 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@3e98b933
[DEBUG] 05-03-2024 17:14:03.057 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@222d9d4f
[DEBUG] 05-03-2024 17:14:03.058 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@222d9d4f
[DEBUG] 05-03-2024 17:14:03.058 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@222d9d4f
[DEBUG] 05-03-2024 17:14:03.059 [main] BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@4269aad7
[DEBUG] 05-03-2024 17:14:03.059 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@4269aad7
[DEBUG] 05-03-2024 17:14:03.059 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@a4df251
[DEBUG] 05-03-2024 17:14:03.060 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@71e7830a
[DEBUG] 05-03-2024 17:14:03.060 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@71e7830a
[DEBUG] 05-03-2024 17:14:03.061 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@3feebf9c
[DEBUG] 05-03-2024 17:14:03.061 [main] BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@305e95a4
[DEBUG] 05-03-2024 17:14:03.061 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@55e42684
[DEBUG] 05-03-2024 17:14:03.062 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@55e42684
[DEBUG] 05-03-2024 17:14:03.062 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@55e42684
[DEBUG] 05-03-2024 17:14:03.063 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@18d610e1
[DEBUG] 05-03-2024 17:14:03.063 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@18d610e1
[DEBUG] 05-03-2024 17:14:03.064 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@18d610e1
[DEBUG] 05-03-2024 17:14:03.065 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@528e5e38
[DEBUG] 05-03-2024 17:14:03.065 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@528e5e38
[DEBUG] 05-03-2024 17:14:03.066 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@528e5e38
[DEBUG] 05-03-2024 17:14:03.066 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@16391278
[DEBUG] 05-03-2024 17:14:03.066 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@16391278
[DEBUG] 05-03-2024 17:14:03.067 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@16391278
[DEBUG] 05-03-2024 17:14:03.067 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@621dc63d
[DEBUG] 05-03-2024 17:14:03.067 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@621dc63d
[DEBUG] 05-03-2024 17:14:03.068 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@621dc63d
[DEBUG] 05-03-2024 17:14:03.068 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@4ae49387
[DEBUG] 05-03-2024 17:14:03.068 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@4ae49387
[DEBUG] 05-03-2024 17:14:03.068 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@6abb7b7d
[DEBUG] 05-03-2024 17:14:03.069 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@6abb7b7d
[DEBUG] 05-03-2024 17:14:03.069 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@34cf0e80
[DEBUG] 05-03-2024 17:14:03.069 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@34cf0e80
[DEBUG] 05-03-2024 17:14:03.070 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@34cf0e80
[DEBUG] 05-03-2024 17:14:03.070 [main] BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@38ef1a0a
[DEBUG] 05-03-2024 17:14:03.071 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@56f9de3b
[DEBUG] 05-03-2024 17:14:03.071 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@56f9de3b
[DEBUG] 05-03-2024 17:14:03.071 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@6728370a
[DEBUG] 05-03-2024 17:14:03.072 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@2b5f8e61
[DEBUG] 05-03-2024 17:14:03.072 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@2b5f8e61
[DEBUG] 05-03-2024 17:14:03.072 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@2b5f8e61
[DEBUG] 05-03-2024 17:14:03.072 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@6ba0ee4a
[DEBUG] 05-03-2024 17:14:03.073 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@73b0ed03
[DEBUG] 05-03-2024 17:14:03.073 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@55061418
[DEBUG] 05-03-2024 17:14:03.074 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@27db45f
[DEBUG] 05-03-2024 17:14:03.074 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@27db45f
[DEBUG] 05-03-2024 17:14:03.074 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@6ec3d8e4
[DEBUG] 05-03-2024 17:14:03.075 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@6ec3d8e4
[DEBUG] 05-03-2024 17:14:03.075 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@1aeff8ca
[DEBUG] 05-03-2024 17:14:03.075 [main] BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@7f2c995b
[DEBUG] 05-03-2024 17:14:03.076 [main] BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@101c15ad
[DEBUG] 05-03-2024 17:14:03.076 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@6068ebb2
[DEBUG] 05-03-2024 17:14:03.076 [main] BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@5a466dd
[DEBUG] 05-03-2024 17:14:03.077 [main] BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@1ed9d173
[DEBUG] 05-03-2024 17:14:03.077 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@6e981e78
[DEBUG] 05-03-2024 17:14:03.077 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@6e981e78
[DEBUG] 05-03-2024 17:14:03.078 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@498a4d62
[DEBUG] 05-03-2024 17:14:03.078 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@498a4d62
[DEBUG] 05-03-2024 17:14:03.078 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@6fbe4800
[DEBUG] 05-03-2024 17:14:03.079 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@6fbe4800
[DEBUG] 05-03-2024 17:14:03.079 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@3f3c5ecd
[DEBUG] 05-03-2024 17:14:03.079 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@3f3c5ecd
[DEBUG] 05-03-2024 17:14:03.080 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@1179fc8c
[DEBUG] 05-03-2024 17:14:03.080 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@1179fc8c
[DEBUG] 05-03-2024 17:14:03.080 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@a03529c
[DEBUG] 05-03-2024 17:14:03.081 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@1760e594
[DEBUG] 05-03-2024 17:14:03.081 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@4af70b83
[DEBUG] 05-03-2024 17:14:03.081 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@4af70b83
[DEBUG] 05-03-2024 17:14:03.082 [main] BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@143413cd
[DEBUG] 05-03-2024 17:14:03.082 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@4b32465
[DEBUG] 05-03-2024 17:14:03.082 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@146f3d22
[DEBUG] 05-03-2024 17:14:03.083 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@66b6873f
[DEBUG] 05-03-2024 17:14:03.083 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@66b6873f
[DEBUG] 05-03-2024 17:14:03.083 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@52285a5f
[DEBUG] 05-03-2024 17:14:03.083 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4fa5cc73
[DEBUG] 05-03-2024 17:14:03.084 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@224e6e88
[DEBUG] 05-03-2024 17:14:03.084 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@224e6e88
[DEBUG] 05-03-2024 17:14:03.084 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@70139a81
[DEBUG] 05-03-2024 17:14:03.085 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@70139a81
[DEBUG] 05-03-2024 17:14:03.085 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@60f9dc7e
[DEBUG] 05-03-2024 17:14:03.085 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@60f9dc7e
[DEBUG] 05-03-2024 17:14:03.086 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@60f9dc7e
[DEBUG] 05-03-2024 17:14:03.086 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@15e5246
[DEBUG] 05-03-2024 17:14:03.086 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@15e5246
[DEBUG] 05-03-2024 17:14:03.087 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@15e5246
[DEBUG] 05-03-2024 17:14:03.087 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@503556cb
[DEBUG] 05-03-2024 17:14:03.087 [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@3c9e19de
[DEBUG] 05-03-2024 17:14:03.088 [main] BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@12aa381f
[DEBUG] 05-03-2024 17:14:03.088 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@12aa381f
[DEBUG] 05-03-2024 17:14:03.088 [main] BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@6115846e
[DEBUG] 05-03-2024 17:14:03.089 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@6115846e
[DEBUG] 05-03-2024 17:14:03.089 [main] BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@6115846e
[DEBUG] 05-03-2024 17:14:03.090 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@1bec1589
[DEBUG] 05-03-2024 17:14:03.090 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@57f0bfc3
[DEBUG] 05-03-2024 17:14:03.090 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@14590fe2
[DEBUG] 05-03-2024 17:14:03.091 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@14590fe2
[DEBUG] 05-03-2024 17:14:03.091 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@5922cff3
[DEBUG] 05-03-2024 17:14:03.091 [main] BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@5922cff3
[DEBUG] 05-03-2024 17:14:03.092 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@5922cff3
[DEBUG] 05-03-2024 17:14:03.092 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@2299d903
[DEBUG] 05-03-2024 17:14:03.092 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@2299d903
[DEBUG] 05-03-2024 17:14:03.093 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@70c56434
[DEBUG] 05-03-2024 17:14:03.093 [main] BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@70c56434
[DEBUG] 05-03-2024 17:14:03.093 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@2c3f43d1
[DEBUG] 05-03-2024 17:14:03.094 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@2c3f43d1
[DEBUG] 05-03-2024 17:14:03.094 [main] BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@632d4cf2
[DEBUG] 05-03-2024 17:14:03.094 [main] BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@632d4cf2
[DEBUG] 05-03-2024 17:14:03.095 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@f10d055
[DEBUG] 05-03-2024 17:14:03.095 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@f10d055
[DEBUG] 05-03-2024 17:14:03.095 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@542ff147
[DEBUG] 05-03-2024 17:14:03.109 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@1ba35152
[DEBUG] 05-03-2024 17:14:03.110 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@1ba35152
[DEBUG] 05-03-2024 17:14:03.114 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@7d1cb59f
[DEBUG] 05-03-2024 17:14:03.114 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@16ccd2bc
[DEBUG] 05-03-2024 17:14:03.115 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@12f8682a
[DEBUG] 05-03-2024 17:14:03.115 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@6f7a20da
[DEBUG] 05-03-2024 17:14:03.116 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@7752c0e7
[DEBUG] 05-03-2024 17:14:03.116 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@77ba583
[DEBUG] 05-03-2024 17:14:03.116 [main] BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@5613247e
[DEBUG] 05-03-2024 17:14:03.117 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@6851b296
[DEBUG] 05-03-2024 17:14:03.117 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@9e50283
[DEBUG] 05-03-2024 17:14:04.580 [main] DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5cfa2ac5) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4cc89246)
[DEBUG] 05-03-2024 17:14:04.588 [main] JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
[DEBUG] 05-03-2024 17:14:04.589 [main] JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 05-03-2024 17:14:04.615 [main] BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@1aee6d14
[DEBUG] 05-03-2024 17:14:04.616 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@1aee6d14
[DEBUG] 05-03-2024 17:14:04.616 [main] BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@1ba35152`
[DEBUG] 05-03-2024 17:14:04.619 [main] JdbcTypeRegistry - addDescriptor(3100, NumericTypeDescriptor) replaced previous registration(org.hibernate.dialect.PostgreSQLIntervalSecondJdbcType@405603b6)
[DEBUG] 05-03-2024 17:14:04.631 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 05-03-2024 17:14:04.632 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 05-03-2024 17:14:04.633 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 05-03-2024 17:14:04.633 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 05-03-2024 17:14:04.634 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 05-03-2024 17:14:04.634 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 05-03-2024 17:14:04.637 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 05-03-2024 17:14:04.638 [main] BasicTypeRegistry - Adding type registration OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 05-03-2024 17:14:04.638 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 05-03-2024 17:14:04.641 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1b465fa9] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@28b2e4d8]
[WARN ] 05-03-2024 17:14:05.056 [main] InFlightMetadataCollectorImpl - HHH000069: Duplicate generator name generator
[INFO ] 05-03-2024 17:14:05.251 [main] BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
[INFO ] 05-03-2024 17:14:08.066 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 05-03-2024 17:14:08.068 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1b465fa9] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@406d922]
[TRACE] 05-03-2024 17:14:08.074 [main] TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@406d922] for TypeConfiguration
[WARN ] 05-03-2024 17:14:08.403 [main] JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[INFO ] 05-03-2024 17:14:09.636 [main] Http11NioProtocol - Starting ProtocolHandler ["http-nio-8300"]
[INFO ] 05-03-2024 17:14:09.722 [main] TomcatWebServer - Tomcat started on port(s): 8300 (http) with context path '/users_products_api'
[INFO ] 05-03-2024 17:14:09.794 [main] TestSpringBootApplication - Started TestSpringBootApplication in 17.778 seconds (process running for 21.124)
[INFO ] 05-03-2024 17:14:14.988 [http-nio-8300-exec-1] [/users_products_api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[INFO ] 05-03-2024 17:14:14.989 [http-nio-8300-exec-1] DispatcherServlet - Initializing Servlet 'dispatcherServlet'
[INFO ] 05-03-2024 17:14:14.992 [http-nio-8300-exec-1] DispatcherServlet - Completed initialization in 2 ms
[TRACE] 05-03-2024 17:19:35.061 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@406d922] for TypeConfiguration
[DEBUG] 05-03-2024 17:19:35.061 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@65e8c347] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@406d922]
[INFO ] 05-03-2024 17:19:45.058 [background-preinit] Version - HV000001: Hibernate Validator 8.0.1.Final
[INFO ] 05-03-2024 17:19:45.275 [main] TestSpringBootApplication - Starting TestSpringBootApplication using Java 17.0.10 with PID 18306 (/home/dima/backend_microservice/UserProductsMicroService/target/classes started by dima in /home/dima/backend_microservice/UserProductsMicroService)
[INFO ] 05-03-2024 17:19:45.295 [main] TestSpringBootApplication - No active profile set, falling back to 1 default profile: "default"
[INFO ] 05-03-2024 17:19:47.432 [main] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
[INFO ] 05-03-2024 17:19:47.433 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data R2DBC repositories in DEFAULT mode.
[INFO ] 05-03-2024 17:19:47.874 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 430 ms. Found 1 R2DBC repository interfaces.
[INFO ] 05-03-2024 17:19:48.436 [main] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
[INFO ] 05-03-2024 17:19:48.438 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO ] 05-03-2024 17:19:48.464 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 19 ms. Found 0 JPA repository interfaces.
[ERROR] 05-03-2024 17:19:49.585 [main] AprLifecycleListener - An incompatible version [1.2.23] of the Apache Tomcat Native library is installed, while Tomcat requires version [1.2.34]
[INFO ] 05-03-2024 17:19:50.226 [main] TomcatWebServer - Tomcat initialized with port(s): 8300 (http)
[INFO ] 05-03-2024 17:19:50.245 [main] Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8300"]
[INFO ] 05-03-2024 17:19:50.251 [main] StandardService - Starting service [Tomcat]
[INFO ] 05-03-2024 17:19:50.252 [main] StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.11]
[INFO ] 05-03-2024 17:19:51.323 [main] TldScanner - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
[INFO ] 05-03-2024 17:19:51.341 [main] [/users_products_api] - Initializing Spring embedded WebApplicationContext
[INFO ] 05-03-2024 17:19:51.347 [main] ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 5793 ms
[INFO ] 05-03-2024 17:19:52.466 [main] Version - HHH000412: Hibernate ORM core version 6.2.6.Final
[INFO ] 05-03-2024 17:19:52.479 [main] Environment - HHH000406: Using bytecode reflection optimizer
[DEBUG] 05-03-2024 17:19:52.813 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@6abb7b7d
[DEBUG] 05-03-2024 17:19:52.814 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@6abb7b7d
[DEBUG] 05-03-2024 17:19:52.814 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@6abb7b7d
[DEBUG] 05-03-2024 17:19:52.815 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@34cf0e80
[DEBUG] 05-03-2024 17:19:52.815 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@34cf0e80
[DEBUG] 05-03-2024 17:19:52.816 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@38ef1a0a
[DEBUG] 05-03-2024 17:19:52.816 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@38ef1a0a
[DEBUG] 05-03-2024 17:19:52.817 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@56f9de3b
[DEBUG] 05-03-2024 17:19:52.818 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@56f9de3b
[DEBUG] 05-03-2024 17:19:52.818 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@6728370a
[DEBUG] 05-03-2024 17:19:52.818 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@6728370a
[DEBUG] 05-03-2024 17:19:52.819 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@6728370a
[DEBUG] 05-03-2024 17:19:52.820 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@2b5f8e61
[DEBUG] 05-03-2024 17:19:52.820 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@2b5f8e61
[DEBUG] 05-03-2024 17:19:52.820 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@2b5f8e61
[DEBUG] 05-03-2024 17:19:52.821 [main] BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@6ba0ee4a
[DEBUG] 05-03-2024 17:19:52.821 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@6ba0ee4a
[DEBUG] 05-03-2024 17:19:52.822 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@73b0ed03
[DEBUG] 05-03-2024 17:19:52.822 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@55061418
[DEBUG] 05-03-2024 17:19:52.823 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@55061418
[DEBUG] 05-03-2024 17:19:52.823 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@27db45f
[DEBUG] 05-03-2024 17:19:52.824 [main] BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@6ec3d8e4
[DEBUG] 05-03-2024 17:19:52.824 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@1aeff8ca
[DEBUG] 05-03-2024 17:19:52.825 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@1aeff8ca
[DEBUG] 05-03-2024 17:19:52.825 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@1aeff8ca
[DEBUG] 05-03-2024 17:19:52.826 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@7f2c995b
[DEBUG] 05-03-2024 17:19:52.826 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@7f2c995b
[DEBUG] 05-03-2024 17:19:52.826 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@7f2c995b
[DEBUG] 05-03-2024 17:19:52.827 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@101c15ad
[DEBUG] 05-03-2024 17:19:52.827 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@101c15ad
[DEBUG] 05-03-2024 17:19:52.828 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@101c15ad
[DEBUG] 05-03-2024 17:19:52.828 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@6068ebb2
[DEBUG] 05-03-2024 17:19:52.828 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@6068ebb2
[DEBUG] 05-03-2024 17:19:52.829 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@6068ebb2
[DEBUG] 05-03-2024 17:19:52.829 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@5a466dd
[DEBUG] 05-03-2024 17:19:52.829 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@5a466dd
[DEBUG] 05-03-2024 17:19:52.830 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@5a466dd
[DEBUG] 05-03-2024 17:19:52.830 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@1ed9d173
[DEBUG] 05-03-2024 17:19:52.830 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@1ed9d173
[DEBUG] 05-03-2024 17:19:52.831 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@6e981e78
[DEBUG] 05-03-2024 17:19:52.831 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@6e981e78
[DEBUG] 05-03-2024 17:19:52.831 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@498a4d62
[DEBUG] 05-03-2024 17:19:52.832 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@498a4d62
[DEBUG] 05-03-2024 17:19:52.832 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@498a4d62
[DEBUG] 05-03-2024 17:19:52.832 [main] BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@6fbe4800
[DEBUG] 05-03-2024 17:19:52.833 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@3f3c5ecd
[DEBUG] 05-03-2024 17:19:52.834 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@3f3c5ecd
[DEBUG] 05-03-2024 17:19:52.834 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@1179fc8c
[DEBUG] 05-03-2024 17:19:52.834 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@a03529c
[DEBUG] 05-03-2024 17:19:52.835 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@a03529c
[DEBUG] 05-03-2024 17:19:52.835 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@a03529c
[DEBUG] 05-03-2024 17:19:52.835 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@1760e594
[DEBUG] 05-03-2024 17:19:52.836 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@4af70b83
[DEBUG] 05-03-2024 17:19:52.836 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@143413cd
[DEBUG] 05-03-2024 17:19:52.836 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@4b32465
[DEBUG] 05-03-2024 17:19:52.837 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@4b32465
[DEBUG] 05-03-2024 17:19:52.837 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@146f3d22
[DEBUG] 05-03-2024 17:19:52.837 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@146f3d22
[DEBUG] 05-03-2024 17:19:52.838 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@66b6873f
[DEBUG] 05-03-2024 17:19:52.838 [main] BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@52285a5f
[DEBUG] 05-03-2024 17:19:52.838 [main] BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@4fa5cc73
[DEBUG] 05-03-2024 17:19:52.839 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@224e6e88
[DEBUG] 05-03-2024 17:19:52.839 [main] BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@70139a81
[DEBUG] 05-03-2024 17:19:52.839 [main] BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@60f9dc7e
[DEBUG] 05-03-2024 17:19:52.840 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@15e5246
[DEBUG] 05-03-2024 17:19:52.840 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@15e5246
[DEBUG] 05-03-2024 17:19:52.840 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@503556cb
[DEBUG] 05-03-2024 17:19:52.841 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@503556cb
[DEBUG] 05-03-2024 17:19:52.841 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@3c9e19de
[DEBUG] 05-03-2024 17:19:52.841 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@3c9e19de
[DEBUG] 05-03-2024 17:19:52.842 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@12aa381f
[DEBUG] 05-03-2024 17:19:52.842 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@12aa381f
[DEBUG] 05-03-2024 17:19:52.842 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@6115846e
[DEBUG] 05-03-2024 17:19:52.843 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@6115846e
[DEBUG] 05-03-2024 17:19:52.843 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@1bec1589
[DEBUG] 05-03-2024 17:19:52.843 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@57f0bfc3
[DEBUG] 05-03-2024 17:19:52.844 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@14590fe2
[DEBUG] 05-03-2024 17:19:52.844 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@14590fe2
[DEBUG] 05-03-2024 17:19:52.844 [main] BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@5922cff3
[DEBUG] 05-03-2024 17:19:52.845 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2299d903
[DEBUG] 05-03-2024 17:19:52.845 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@70c56434
[DEBUG] 05-03-2024 17:19:52.845 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@2c3f43d1
[DEBUG] 05-03-2024 17:19:52.846 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@2c3f43d1
[DEBUG] 05-03-2024 17:19:52.846 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@632d4cf2
[DEBUG] 05-03-2024 17:19:52.846 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@f10d055
[DEBUG] 05-03-2024 17:19:52.847 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@542ff147
[DEBUG] 05-03-2024 17:19:52.847 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@542ff147
[DEBUG] 05-03-2024 17:19:52.847 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@2d801d8
[DEBUG] 05-03-2024 17:19:52.848 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@2d801d8
[DEBUG] 05-03-2024 17:19:52.848 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@b9b97ad
[DEBUG] 05-03-2024 17:19:52.848 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@b9b97ad
[DEBUG] 05-03-2024 17:19:52.849 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@b9b97ad
[DEBUG] 05-03-2024 17:19:52.849 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@2807cf3
[DEBUG] 05-03-2024 17:19:52.849 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@2807cf3
[DEBUG] 05-03-2024 17:19:52.850 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@2807cf3
[DEBUG] 05-03-2024 17:19:52.850 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@298e002d
[DEBUG] 05-03-2024 17:19:52.850 [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@6b9a1205
[DEBUG] 05-03-2024 17:19:52.851 [main] BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@3c6bd624
[DEBUG] 05-03-2024 17:19:52.851 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@3c6bd624
[DEBUG] 05-03-2024 17:19:52.851 [main] BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@3d8d52be
[DEBUG] 05-03-2024 17:19:52.851 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@3d8d52be
[DEBUG] 05-03-2024 17:19:52.852 [main] BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@3d8d52be
[DEBUG] 05-03-2024 17:19:52.853 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@645ba24a
[DEBUG] 05-03-2024 17:19:52.853 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@5f6a8efe
[DEBUG] 05-03-2024 17:19:52.854 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@3dd2b9c1
[DEBUG] 05-03-2024 17:19:52.854 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@3dd2b9c1
[DEBUG] 05-03-2024 17:19:52.854 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@6a1d1467
[DEBUG] 05-03-2024 17:19:52.855 [main] BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@6a1d1467
[DEBUG] 05-03-2024 17:19:52.855 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@6a1d1467
[DEBUG] 05-03-2024 17:19:52.855 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@536da29c
[DEBUG] 05-03-2024 17:19:52.856 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@536da29c
[DEBUG] 05-03-2024 17:19:52.856 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@58fbcb71
[DEBUG] 05-03-2024 17:19:52.856 [main] BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@58fbcb71
[DEBUG] 05-03-2024 17:19:52.857 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@70cf7d1e
[DEBUG] 05-03-2024 17:19:52.857 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@70cf7d1e
[DEBUG] 05-03-2024 17:19:52.857 [main] BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@72f3f14c
[DEBUG] 05-03-2024 17:19:52.858 [main] BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@72f3f14c
[DEBUG] 05-03-2024 17:19:52.858 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@4cb4c4cc
[DEBUG] 05-03-2024 17:19:52.858 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@4cb4c4cc
[DEBUG] 05-03-2024 17:19:52.859 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@4a122e68
[DEBUG] 05-03-2024 17:19:52.876 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@5613247e
[DEBUG] 05-03-2024 17:19:52.876 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@5613247e
[DEBUG] 05-03-2024 17:19:52.879 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@3de56885
[DEBUG] 05-03-2024 17:19:52.880 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@2673487b
[DEBUG] 05-03-2024 17:19:52.881 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@2d07aacc
[DEBUG] 05-03-2024 17:19:52.881 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@ff5d4f1
[DEBUG] 05-03-2024 17:19:52.882 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@194224ca
[DEBUG] 05-03-2024 17:19:52.882 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@254e9709
[DEBUG] 05-03-2024 17:19:52.883 [main] BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@350f18a6
[DEBUG] 05-03-2024 17:19:52.883 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@147c00aa
[DEBUG] 05-03-2024 17:19:52.883 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@1c90029b
[DEBUG] 05-03-2024 17:19:53.989 [main] DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@26d24d7a) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5a78b52b)
[DEBUG] 05-03-2024 17:19:53.993 [main] JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
[DEBUG] 05-03-2024 17:19:53.994 [main] JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 05-03-2024 17:19:54.018 [main] BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@4f2fdf3d
[DEBUG] 05-03-2024 17:19:54.018 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@4f2fdf3d
[DEBUG] 05-03-2024 17:19:54.018 [main] BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@5613247e`
[DEBUG] 05-03-2024 17:19:54.021 [main] JdbcTypeRegistry - addDescriptor(3100, NumericTypeDescriptor) replaced previous registration(org.hibernate.dialect.PostgreSQLIntervalSecondJdbcType@71ee2fff)
[DEBUG] 05-03-2024 17:19:54.032 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 05-03-2024 17:19:54.033 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 05-03-2024 17:19:54.033 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 05-03-2024 17:19:54.034 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 05-03-2024 17:19:54.034 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 05-03-2024 17:19:54.034 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 05-03-2024 17:19:54.036 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 05-03-2024 17:19:54.036 [main] BasicTypeRegistry - Adding type registration OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 05-03-2024 17:19:54.036 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 05-03-2024 17:19:54.039 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@41f40dfa] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@2548fc01]
[WARN ] 05-03-2024 17:19:54.338 [main] InFlightMetadataCollectorImpl - HHH000069: Duplicate generator name generator
[INFO ] 05-03-2024 17:19:54.583 [main] BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
[INFO ] 05-03-2024 17:19:56.835 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 05-03-2024 17:19:56.837 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@41f40dfa] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@21fa19e4]
[TRACE] 05-03-2024 17:19:56.843 [main] TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@21fa19e4] for TypeConfiguration
[WARN ] 05-03-2024 17:19:57.183 [main] JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[INFO ] 05-03-2024 17:19:58.012 [main] Http11NioProtocol - Starting ProtocolHandler ["http-nio-8300"]
[INFO ] 05-03-2024 17:19:58.084 [main] TomcatWebServer - Tomcat started on port(s): 8300 (http) with context path '/users_products_api'
[INFO ] 05-03-2024 17:19:58.119 [main] TestSpringBootApplication - Started TestSpringBootApplication in 14.154 seconds (process running for 16.657)
[INFO ] 05-03-2024 17:21:02.523 [http-nio-8300-exec-1] [/users_products_api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[INFO ] 05-03-2024 17:21:02.524 [http-nio-8300-exec-1] DispatcherServlet - Initializing Servlet 'dispatcherServlet'
[INFO ] 05-03-2024 17:21:02.527 [http-nio-8300-exec-1] DispatcherServlet - Completed initialization in 3 ms
[TRACE] 05-03-2024 17:21:58.852 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@21fa19e4] for TypeConfiguration
[DEBUG] 05-03-2024 17:21:58.853 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@42f3cc0d] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@21fa19e4]
[INFO ] 05-03-2024 17:22:07.434 [background-preinit] Version - HV000001: Hibernate Validator 8.0.1.Final
[INFO ] 05-03-2024 17:22:07.557 [main] TestSpringBootApplication - Starting TestSpringBootApplication using Java 17.0.10 with PID 18625 (/home/dima/backend_microservice/UserProductsMicroService/target/classes started by dima in /home/dima/backend_microservice/UserProductsMicroService)
[INFO ] 05-03-2024 17:22:07.591 [main] TestSpringBootApplication - No active profile set, falling back to 1 default profile: "default"
[INFO ] 05-03-2024 17:22:09.239 [main] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
[INFO ] 05-03-2024 17:22:09.241 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data R2DBC repositories in DEFAULT mode.
[INFO ] 05-03-2024 17:22:09.694 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 443 ms. Found 1 R2DBC repository interfaces.
[INFO ] 05-03-2024 17:22:10.292 [main] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
[INFO ] 05-03-2024 17:22:10.295 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO ] 05-03-2024 17:22:10.330 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 27 ms. Found 0 JPA repository interfaces.
[ERROR] 05-03-2024 17:22:11.470 [main] AprLifecycleListener - An incompatible version [1.2.23] of the Apache Tomcat Native library is installed, while Tomcat requires version [1.2.34]
[INFO ] 05-03-2024 17:22:12.122 [main] TomcatWebServer - Tomcat initialized with port(s): 8300 (http)
[INFO ] 05-03-2024 17:22:12.141 [main] Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8300"]
[INFO ] 05-03-2024 17:22:12.146 [main] StandardService - Starting service [Tomcat]
[INFO ] 05-03-2024 17:22:12.147 [main] StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.11]
[INFO ] 05-03-2024 17:22:13.094 [main] TldScanner - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
[INFO ] 05-03-2024 17:22:13.111 [main] [/users_products_api] - Initializing Spring embedded WebApplicationContext
[INFO ] 05-03-2024 17:22:13.118 [main] ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 5386 ms
[INFO ] 05-03-2024 17:22:14.188 [main] Version - HHH000412: Hibernate ORM core version 6.2.6.Final
[INFO ] 05-03-2024 17:22:14.194 [main] Environment - HHH000406: Using bytecode reflection optimizer
[DEBUG] 05-03-2024 17:22:14.501 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@4fa8bebb
[DEBUG] 05-03-2024 17:22:14.502 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@4fa8bebb
[DEBUG] 05-03-2024 17:22:14.502 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@4fa8bebb
[DEBUG] 05-03-2024 17:22:14.503 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@7d3c22a5
[DEBUG] 05-03-2024 17:22:14.503 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@7d3c22a5
[DEBUG] 05-03-2024 17:22:14.504 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@369ad7da
[DEBUG] 05-03-2024 17:22:14.504 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@369ad7da
[DEBUG] 05-03-2024 17:22:14.505 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@344f9467
[DEBUG] 05-03-2024 17:22:14.505 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@344f9467
[DEBUG] 05-03-2024 17:22:14.506 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@3e98b933
[DEBUG] 05-03-2024 17:22:14.506 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@3e98b933
[DEBUG] 05-03-2024 17:22:14.507 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@3e98b933
[DEBUG] 05-03-2024 17:22:14.507 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@222d9d4f
[DEBUG] 05-03-2024 17:22:14.507 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@222d9d4f
[DEBUG] 05-03-2024 17:22:14.508 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@222d9d4f
[DEBUG] 05-03-2024 17:22:14.508 [main] BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@4269aad7
[DEBUG] 05-03-2024 17:22:14.509 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@4269aad7
[DEBUG] 05-03-2024 17:22:14.509 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@a4df251
[DEBUG] 05-03-2024 17:22:14.510 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@71e7830a
[DEBUG] 05-03-2024 17:22:14.510 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@71e7830a
[DEBUG] 05-03-2024 17:22:14.510 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@3feebf9c
[DEBUG] 05-03-2024 17:22:14.511 [main] BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@305e95a4
[DEBUG] 05-03-2024 17:22:14.511 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@55e42684
[DEBUG] 05-03-2024 17:22:14.512 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@55e42684
[DEBUG] 05-03-2024 17:22:14.512 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@55e42684
[DEBUG] 05-03-2024 17:22:14.513 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@18d610e1
[DEBUG] 05-03-2024 17:22:14.513 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@18d610e1
[DEBUG] 05-03-2024 17:22:14.514 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@18d610e1
[DEBUG] 05-03-2024 17:22:14.514 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@528e5e38
[DEBUG] 05-03-2024 17:22:14.515 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@528e5e38
[DEBUG] 05-03-2024 17:22:14.515 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@528e5e38
[DEBUG] 05-03-2024 17:22:14.515 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@16391278
[DEBUG] 05-03-2024 17:22:14.516 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@16391278
[DEBUG] 05-03-2024 17:22:14.516 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@16391278
[DEBUG] 05-03-2024 17:22:14.516 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@621dc63d
[DEBUG] 05-03-2024 17:22:14.517 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@621dc63d
[DEBUG] 05-03-2024 17:22:14.517 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@621dc63d
[DEBUG] 05-03-2024 17:22:14.517 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@4ae49387
[DEBUG] 05-03-2024 17:22:14.518 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@4ae49387
[DEBUG] 05-03-2024 17:22:14.518 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@6abb7b7d
[DEBUG] 05-03-2024 17:22:14.518 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@6abb7b7d
[DEBUG] 05-03-2024 17:22:14.519 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@34cf0e80
[DEBUG] 05-03-2024 17:22:14.519 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@34cf0e80
[DEBUG] 05-03-2024 17:22:14.519 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@34cf0e80
[DEBUG] 05-03-2024 17:22:14.520 [main] BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@38ef1a0a
[DEBUG] 05-03-2024 17:22:14.520 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@56f9de3b
[DEBUG] 05-03-2024 17:22:14.521 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@56f9de3b
[DEBUG] 05-03-2024 17:22:14.521 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@6728370a
[DEBUG] 05-03-2024 17:22:14.521 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@2b5f8e61
[DEBUG] 05-03-2024 17:22:14.522 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@2b5f8e61
[DEBUG] 05-03-2024 17:22:14.522 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@2b5f8e61
[DEBUG] 05-03-2024 17:22:14.522 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@6ba0ee4a
[DEBUG] 05-03-2024 17:22:14.523 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@73b0ed03
[DEBUG] 05-03-2024 17:22:14.523 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@55061418
[DEBUG] 05-03-2024 17:22:14.523 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@27db45f
[DEBUG] 05-03-2024 17:22:14.524 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@27db45f
[DEBUG] 05-03-2024 17:22:14.524 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@6ec3d8e4
[DEBUG] 05-03-2024 17:22:14.524 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@6ec3d8e4
[DEBUG] 05-03-2024 17:22:14.525 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@1aeff8ca
[DEBUG] 05-03-2024 17:22:14.525 [main] BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@7f2c995b
[DEBUG] 05-03-2024 17:22:14.525 [main] BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@101c15ad
[DEBUG] 05-03-2024 17:22:14.526 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@6068ebb2
[DEBUG] 05-03-2024 17:22:14.527 [main] BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@5a466dd
[DEBUG] 05-03-2024 17:22:14.527 [main] BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@1ed9d173
[DEBUG] 05-03-2024 17:22:14.527 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@6e981e78
[DEBUG] 05-03-2024 17:22:14.527 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@6e981e78
[DEBUG] 05-03-2024 17:22:14.528 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@498a4d62
[DEBUG] 05-03-2024 17:22:14.528 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@498a4d62
[DEBUG] 05-03-2024 17:22:14.528 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@6fbe4800
[DEBUG] 05-03-2024 17:22:14.529 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@6fbe4800
[DEBUG] 05-03-2024 17:22:14.531 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@3f3c5ecd
[DEBUG] 05-03-2024 17:22:14.533 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@3f3c5ecd
[DEBUG] 05-03-2024 17:22:14.533 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@1179fc8c
[DEBUG] 05-03-2024 17:22:14.534 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@1179fc8c
[DEBUG] 05-03-2024 17:22:14.534 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@a03529c
[DEBUG] 05-03-2024 17:22:14.535 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@1760e594
[DEBUG] 05-03-2024 17:22:14.535 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@4af70b83
[DEBUG] 05-03-2024 17:22:14.536 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@4af70b83
[DEBUG] 05-03-2024 17:22:14.536 [main] BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@143413cd
[DEBUG] 05-03-2024 17:22:14.536 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@4b32465
[DEBUG] 05-03-2024 17:22:14.540 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@146f3d22
[DEBUG] 05-03-2024 17:22:14.541 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@66b6873f
[DEBUG] 05-03-2024 17:22:14.541 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@66b6873f
[DEBUG] 05-03-2024 17:22:14.542 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@52285a5f
[DEBUG] 05-03-2024 17:22:14.542 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4fa5cc73
[DEBUG] 05-03-2024 17:22:14.542 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@224e6e88
[DEBUG] 05-03-2024 17:22:14.542 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@224e6e88
[DEBUG] 05-03-2024 17:22:14.543 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@70139a81
[DEBUG] 05-03-2024 17:22:14.543 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@70139a81
[DEBUG] 05-03-2024 17:22:14.543 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@60f9dc7e
[DEBUG] 05-03-2024 17:22:14.544 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@60f9dc7e
[DEBUG] 05-03-2024 17:22:14.544 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@60f9dc7e
[DEBUG] 05-03-2024 17:22:14.544 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@15e5246
[DEBUG] 05-03-2024 17:22:14.545 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@15e5246
[DEBUG] 05-03-2024 17:22:14.545 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@15e5246
[DEBUG] 05-03-2024 17:22:14.545 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@503556cb
[DEBUG] 05-03-2024 17:22:14.546 [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@3c9e19de
[DEBUG] 05-03-2024 17:22:14.546 [main] BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@12aa381f
[DEBUG] 05-03-2024 17:22:14.546 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@12aa381f
[DEBUG] 05-03-2024 17:22:14.547 [main] BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@6115846e
[DEBUG] 05-03-2024 17:22:14.547 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@6115846e
[DEBUG] 05-03-2024 17:22:14.547 [main] BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@6115846e
[DEBUG] 05-03-2024 17:22:14.548 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@1bec1589
[DEBUG] 05-03-2024 17:22:14.548 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@57f0bfc3
[DEBUG] 05-03-2024 17:22:14.548 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@14590fe2
[DEBUG] 05-03-2024 17:22:14.549 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@14590fe2
[DEBUG] 05-03-2024 17:22:14.549 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@5922cff3
[DEBUG] 05-03-2024 17:22:14.549 [main] BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@5922cff3
[DEBUG] 05-03-2024 17:22:14.550 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@5922cff3
[DEBUG] 05-03-2024 17:22:14.550 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@2299d903
[DEBUG] 05-03-2024 17:22:14.550 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@2299d903
[DEBUG] 05-03-2024 17:22:14.551 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@70c56434
[DEBUG] 05-03-2024 17:22:14.551 [main] BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@70c56434
[DEBUG] 05-03-2024 17:22:14.551 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@2c3f43d1
[DEBUG] 05-03-2024 17:22:14.551 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@2c3f43d1
[DEBUG] 05-03-2024 17:22:14.552 [main] BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@632d4cf2
[DEBUG] 05-03-2024 17:22:14.552 [main] BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@632d4cf2
[DEBUG] 05-03-2024 17:22:14.552 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@f10d055
[DEBUG] 05-03-2024 17:22:14.553 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@f10d055
[DEBUG] 05-03-2024 17:22:14.553 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@542ff147
[DEBUG] 05-03-2024 17:22:14.563 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@1ba35152
[DEBUG] 05-03-2024 17:22:14.564 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@1ba35152
[DEBUG] 05-03-2024 17:22:14.567 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@7d1cb59f
[DEBUG] 05-03-2024 17:22:14.567 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@16ccd2bc
[DEBUG] 05-03-2024 17:22:14.568 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@12f8682a
[DEBUG] 05-03-2024 17:22:14.568 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@6f7a20da
[DEBUG] 05-03-2024 17:22:14.569 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@7752c0e7
[DEBUG] 05-03-2024 17:22:14.569 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@77ba583
[DEBUG] 05-03-2024 17:22:14.569 [main] BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@5613247e
[DEBUG] 05-03-2024 17:22:14.570 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@6851b296
[DEBUG] 05-03-2024 17:22:14.570 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@9e50283
[DEBUG] 05-03-2024 17:22:15.935 [main] DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@472719df) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5cfa2ac5)
[DEBUG] 05-03-2024 17:22:15.942 [main] JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
[DEBUG] 05-03-2024 17:22:15.943 [main] JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 05-03-2024 17:22:15.976 [main] BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@2ca1e49a
[DEBUG] 05-03-2024 17:22:15.976 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@2ca1e49a
[DEBUG] 05-03-2024 17:22:15.977 [main] BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@1ba35152`
[DEBUG] 05-03-2024 17:22:15.979 [main] JdbcTypeRegistry - addDescriptor(3100, NumericTypeDescriptor) replaced previous registration(org.hibernate.dialect.PostgreSQLIntervalSecondJdbcType@163df259)
[DEBUG] 05-03-2024 17:22:15.998 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 05-03-2024 17:22:15.999 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 05-03-2024 17:22:15.999 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 05-03-2024 17:22:16.000 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 05-03-2024 17:22:16.000 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 05-03-2024 17:22:16.000 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 05-03-2024 17:22:16.003 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 05-03-2024 17:22:16.005 [main] BasicTypeRegistry - Adding type registration OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 05-03-2024 17:22:16.006 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 05-03-2024 17:22:16.012 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@396f2724] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@1b465fa9]
[WARN ] 05-03-2024 17:22:16.417 [main] InFlightMetadataCollectorImpl - HHH000069: Duplicate generator name generator
[INFO ] 05-03-2024 17:22:16.556 [main] BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
[INFO ] 05-03-2024 17:22:18.982 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 05-03-2024 17:22:18.984 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@396f2724] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@16e3d6d0]
[TRACE] 05-03-2024 17:22:18.991 [main] TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@16e3d6d0] for TypeConfiguration
[WARN ] 05-03-2024 17:22:19.368 [main] JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[INFO ] 05-03-2024 17:22:20.159 [main] Http11NioProtocol - Starting ProtocolHandler ["http-nio-8300"]
[INFO ] 05-03-2024 17:22:20.298 [main] TomcatWebServer - Tomcat started on port(s): 8300 (http) with context path '/users_products_api'
[INFO ] 05-03-2024 17:22:20.338 [main] TestSpringBootApplication - Started TestSpringBootApplication in 13.723 seconds (process running for 15.967)
[INFO ] 05-03-2024 17:22:24.226 [http-nio-8300-exec-1] [/users_products_api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[INFO ] 05-03-2024 17:22:24.227 [http-nio-8300-exec-1] DispatcherServlet - Initializing Servlet 'dispatcherServlet'
[INFO ] 05-03-2024 17:22:24.230 [http-nio-8300-exec-1] DispatcherServlet - Completed initialization in 3 ms
[TRACE] 05-03-2024 17:23:08.180 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@16e3d6d0] for TypeConfiguration
[DEBUG] 05-03-2024 17:23:08.181 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@702b3fd2] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@16e3d6d0]
[INFO ] 05-03-2024 17:23:16.793 [background-preinit] Version - HV000001: Hibernate Validator 8.0.1.Final
[INFO ] 05-03-2024 17:23:16.957 [main] TestSpringBootApplication - Starting TestSpringBootApplication using Java 17.0.10 with PID 18824 (/home/dima/backend_microservice/UserProductsMicroService/target/classes started by dima in /home/dima/backend_microservice/UserProductsMicroService)
[INFO ] 05-03-2024 17:23:16.974 [main] TestSpringBootApplication - No active profile set, falling back to 1 default profile: "default"
[INFO ] 05-03-2024 17:23:19.055 [main] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
[INFO ] 05-03-2024 17:23:19.058 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data R2DBC repositories in DEFAULT mode.
[INFO ] 05-03-2024 17:23:19.454 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 385 ms. Found 1 R2DBC repository interfaces.
[INFO ] 05-03-2024 17:23:19.978 [main] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
[INFO ] 05-03-2024 17:23:19.980 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO ] 05-03-2024 17:23:20.022 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 19 ms. Found 0 JPA repository interfaces.
[ERROR] 05-03-2024 17:23:21.054 [main] AprLifecycleListener - An incompatible version [1.2.23] of the Apache Tomcat Native library is installed, while Tomcat requires version [1.2.34]
[INFO ] 05-03-2024 17:23:21.776 [main] TomcatWebServer - Tomcat initialized with port(s): 8300 (http)
[INFO ] 05-03-2024 17:23:21.795 [main] Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8300"]
[INFO ] 05-03-2024 17:23:21.801 [main] StandardService - Starting service [Tomcat]
[INFO ] 05-03-2024 17:23:21.802 [main] StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.11]
[INFO ] 05-03-2024 17:23:22.737 [main] TldScanner - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
[INFO ] 05-03-2024 17:23:22.752 [main] [/users_products_api] - Initializing Spring embedded WebApplicationContext
[INFO ] 05-03-2024 17:23:22.758 [main] ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 5545 ms
[INFO ] 05-03-2024 17:23:23.805 [main] Version - HHH000412: Hibernate ORM core version 6.2.6.Final
[INFO ] 05-03-2024 17:23:23.810 [main] Environment - HHH000406: Using bytecode reflection optimizer
[DEBUG] 05-03-2024 17:23:24.120 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@425b5fe2
[DEBUG] 05-03-2024 17:23:24.121 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@425b5fe2
[DEBUG] 05-03-2024 17:23:24.122 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@425b5fe2
[DEBUG] 05-03-2024 17:23:24.123 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@3eec8583
[DEBUG] 05-03-2024 17:23:24.123 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@3eec8583
[DEBUG] 05-03-2024 17:23:24.124 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@66e1b2a
[DEBUG] 05-03-2024 17:23:24.125 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@66e1b2a
[DEBUG] 05-03-2024 17:23:24.125 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@343db2f6
[DEBUG] 05-03-2024 17:23:24.126 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@343db2f6
[DEBUG] 05-03-2024 17:23:24.126 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@2c815fdc
[DEBUG] 05-03-2024 17:23:24.126 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@2c815fdc
[DEBUG] 05-03-2024 17:23:24.127 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@2c815fdc
[DEBUG] 05-03-2024 17:23:24.127 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@769b0752
[DEBUG] 05-03-2024 17:23:24.128 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@769b0752
[DEBUG] 05-03-2024 17:23:24.128 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@769b0752
[DEBUG] 05-03-2024 17:23:24.129 [main] BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@dae5e0
[DEBUG] 05-03-2024 17:23:24.129 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@dae5e0
[DEBUG] 05-03-2024 17:23:24.130 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@59a94d0f
[DEBUG] 05-03-2024 17:23:24.130 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@7ff09659
[DEBUG] 05-03-2024 17:23:24.130 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@7ff09659
[DEBUG] 05-03-2024 17:23:24.131 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@517fbf62
[DEBUG] 05-03-2024 17:23:24.131 [main] BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@65db548
[DEBUG] 05-03-2024 17:23:24.132 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@150f41b9
[DEBUG] 05-03-2024 17:23:24.134 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@150f41b9
[DEBUG] 05-03-2024 17:23:24.135 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@150f41b9
[DEBUG] 05-03-2024 17:23:24.135 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@6e364f1f
[DEBUG] 05-03-2024 17:23:24.135 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@6e364f1f
[DEBUG] 05-03-2024 17:23:24.136 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@6e364f1f
[DEBUG] 05-03-2024 17:23:24.136 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@429e7914
[DEBUG] 05-03-2024 17:23:24.137 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@429e7914
[DEBUG] 05-03-2024 17:23:24.137 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@429e7914
[DEBUG] 05-03-2024 17:23:24.138 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@298263fa
[DEBUG] 05-03-2024 17:23:24.138 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@298263fa
[DEBUG] 05-03-2024 17:23:24.138 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@298263fa
[DEBUG] 05-03-2024 17:23:24.139 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@466fedfa
[DEBUG] 05-03-2024 17:23:24.139 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@466fedfa
[DEBUG] 05-03-2024 17:23:24.139 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@466fedfa
[DEBUG] 05-03-2024 17:23:24.140 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@1a7d0c9f
[DEBUG] 05-03-2024 17:23:24.140 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@1a7d0c9f
[DEBUG] 05-03-2024 17:23:24.140 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@2b1a901d
[DEBUG] 05-03-2024 17:23:24.141 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@2b1a901d
[DEBUG] 05-03-2024 17:23:24.141 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@11bdab37
[DEBUG] 05-03-2024 17:23:24.141 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@11bdab37
[DEBUG] 05-03-2024 17:23:24.142 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@11bdab37
[DEBUG] 05-03-2024 17:23:24.142 [main] BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@280484c7
[DEBUG] 05-03-2024 17:23:24.143 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@5a6f6cac
[DEBUG] 05-03-2024 17:23:24.143 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@5a6f6cac
[DEBUG] 05-03-2024 17:23:24.148 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@258a8584
[DEBUG] 05-03-2024 17:23:24.149 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@59127611
[DEBUG] 05-03-2024 17:23:24.150 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@59127611
[DEBUG] 05-03-2024 17:23:24.150 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@59127611
[DEBUG] 05-03-2024 17:23:24.150 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@553ce348
[DEBUG] 05-03-2024 17:23:24.150 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@7417ef4f
[DEBUG] 05-03-2024 17:23:24.151 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@5c0e2ec
[DEBUG] 05-03-2024 17:23:24.151 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@4fa8bebb
[DEBUG] 05-03-2024 17:23:24.151 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@4fa8bebb
[DEBUG] 05-03-2024 17:23:24.151 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@7d3c22a5
[DEBUG] 05-03-2024 17:23:24.151 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@7d3c22a5
[DEBUG] 05-03-2024 17:23:24.152 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@369ad7da
[DEBUG] 05-03-2024 17:23:24.152 [main] BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@344f9467
[DEBUG] 05-03-2024 17:23:24.152 [main] BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@3e98b933
[DEBUG] 05-03-2024 17:23:24.152 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@222d9d4f
[DEBUG] 05-03-2024 17:23:24.152 [main] BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@4269aad7
[DEBUG] 05-03-2024 17:23:24.153 [main] BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@a4df251
[DEBUG] 05-03-2024 17:23:24.153 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@71e7830a
[DEBUG] 05-03-2024 17:23:24.153 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@71e7830a
[DEBUG] 05-03-2024 17:23:24.154 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@3feebf9c
[DEBUG] 05-03-2024 17:23:24.154 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@3feebf9c
[DEBUG] 05-03-2024 17:23:24.155 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@305e95a4
[DEBUG] 05-03-2024 17:23:24.155 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@305e95a4
[DEBUG] 05-03-2024 17:23:24.155 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@55e42684
[DEBUG] 05-03-2024 17:23:24.156 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@55e42684
[DEBUG] 05-03-2024 17:23:24.156 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@18d610e1
[DEBUG] 05-03-2024 17:23:24.156 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@18d610e1
[DEBUG] 05-03-2024 17:23:24.157 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@528e5e38
[DEBUG] 05-03-2024 17:23:24.157 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@16391278
[DEBUG] 05-03-2024 17:23:24.157 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@621dc63d
[DEBUG] 05-03-2024 17:23:24.158 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@621dc63d
[DEBUG] 05-03-2024 17:23:24.158 [main] BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@4ae49387
[DEBUG] 05-03-2024 17:23:24.159 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@6abb7b7d
[DEBUG] 05-03-2024 17:23:24.159 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@34cf0e80
[DEBUG] 05-03-2024 17:23:24.159 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@38ef1a0a
[DEBUG] 05-03-2024 17:23:24.159 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@38ef1a0a
[DEBUG] 05-03-2024 17:23:24.160 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@56f9de3b
[DEBUG] 05-03-2024 17:23:24.160 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@6728370a
[DEBUG] 05-03-2024 17:23:24.160 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@2b5f8e61
[DEBUG] 05-03-2024 17:23:24.161 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@2b5f8e61
[DEBUG] 05-03-2024 17:23:24.161 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@6ba0ee4a
[DEBUG] 05-03-2024 17:23:24.161 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@6ba0ee4a
[DEBUG] 05-03-2024 17:23:24.162 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@73b0ed03
[DEBUG] 05-03-2024 17:23:24.162 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@73b0ed03
[DEBUG] 05-03-2024 17:23:24.162 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@73b0ed03
[DEBUG] 05-03-2024 17:23:24.163 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@55061418
[DEBUG] 05-03-2024 17:23:24.163 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@55061418
[DEBUG] 05-03-2024 17:23:24.163 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@55061418
[DEBUG] 05-03-2024 17:23:24.163 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@27db45f
[DEBUG] 05-03-2024 17:23:24.164 [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@6ec3d8e4
[DEBUG] 05-03-2024 17:23:24.164 [main] BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@1aeff8ca
[DEBUG] 05-03-2024 17:23:24.164 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@1aeff8ca
[DEBUG] 05-03-2024 17:23:24.165 [main] BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@7f2c995b
[DEBUG] 05-03-2024 17:23:24.165 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@7f2c995b
[DEBUG] 05-03-2024 17:23:24.165 [main] BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@7f2c995b
[DEBUG] 05-03-2024 17:23:24.166 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@101c15ad
[DEBUG] 05-03-2024 17:23:24.166 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@6068ebb2
[DEBUG] 05-03-2024 17:23:24.166 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@5a466dd
[DEBUG] 05-03-2024 17:23:24.166 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@5a466dd
[DEBUG] 05-03-2024 17:23:24.167 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@1ed9d173
[DEBUG] 05-03-2024 17:23:24.167 [main] BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@1ed9d173
[DEBUG] 05-03-2024 17:23:24.167 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@1ed9d173
[DEBUG] 05-03-2024 17:23:24.168 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@6e981e78
[DEBUG] 05-03-2024 17:23:24.168 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@6e981e78
[DEBUG] 05-03-2024 17:23:24.169 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@498a4d62
[DEBUG] 05-03-2024 17:23:24.169 [main] BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@498a4d62
[DEBUG] 05-03-2024 17:23:24.169 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@6fbe4800
[DEBUG] 05-03-2024 17:23:24.170 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@6fbe4800
[DEBUG] 05-03-2024 17:23:24.170 [main] BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@3f3c5ecd
[DEBUG] 05-03-2024 17:23:24.170 [main] BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@3f3c5ecd
[DEBUG] 05-03-2024 17:23:24.170 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@1179fc8c
[DEBUG] 05-03-2024 17:23:24.171 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@1179fc8c
[DEBUG] 05-03-2024 17:23:24.171 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@a03529c
[DEBUG] 05-03-2024 17:23:24.187 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@11ad095c
[DEBUG] 05-03-2024 17:23:24.187 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@11ad095c
[DEBUG] 05-03-2024 17:23:24.190 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@399f5daf
[DEBUG] 05-03-2024 17:23:24.193 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@c4cceb
[DEBUG] 05-03-2024 17:23:24.194 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@29f3185c
[DEBUG] 05-03-2024 17:23:24.194 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@74bbc273
[DEBUG] 05-03-2024 17:23:24.194 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@370a8b6e
[DEBUG] 05-03-2024 17:23:24.195 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@118fbaf0
[DEBUG] 05-03-2024 17:23:24.195 [main] BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@208f7165
[DEBUG] 05-03-2024 17:23:24.195 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@a0d875d
[DEBUG] 05-03-2024 17:23:24.195 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@693f2c89
[DEBUG] 05-03-2024 17:23:25.252 [main] DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@57839834) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3355b8ff)
[DEBUG] 05-03-2024 17:23:25.257 [main] JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
[DEBUG] 05-03-2024 17:23:25.258 [main] JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 05-03-2024 17:23:25.277 [main] BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@5be69f7e
[DEBUG] 05-03-2024 17:23:25.278 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@5be69f7e
[DEBUG] 05-03-2024 17:23:25.279 [main] BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@11ad095c`
[DEBUG] 05-03-2024 17:23:25.283 [main] JdbcTypeRegistry - addDescriptor(3100, NumericTypeDescriptor) replaced previous registration(org.hibernate.dialect.PostgreSQLIntervalSecondJdbcType@31fe0ce5)
[DEBUG] 05-03-2024 17:23:25.298 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 05-03-2024 17:23:25.303 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 05-03-2024 17:23:25.304 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 05-03-2024 17:23:25.305 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 05-03-2024 17:23:25.306 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 05-03-2024 17:23:25.307 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 05-03-2024 17:23:25.309 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 05-03-2024 17:23:25.309 [main] BasicTypeRegistry - Adding type registration OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 05-03-2024 17:23:25.309 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 05-03-2024 17:23:25.312 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@174b8d0e] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@112530c3]
[WARN ] 05-03-2024 17:23:25.691 [main] InFlightMetadataCollectorImpl - HHH000069: Duplicate generator name generator
[INFO ] 05-03-2024 17:23:25.859 [main] BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
[INFO ] 05-03-2024 17:23:28.462 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 05-03-2024 17:23:28.463 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@174b8d0e] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@4202bfe8]
[TRACE] 05-03-2024 17:23:28.470 [main] TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@4202bfe8] for TypeConfiguration
[WARN ] 05-03-2024 17:23:28.962 [main] JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[INFO ] 05-03-2024 17:23:30.005 [main] Http11NioProtocol - Starting ProtocolHandler ["http-nio-8300"]
[INFO ] 05-03-2024 17:23:30.104 [main] TomcatWebServer - Tomcat started on port(s): 8300 (http) with context path '/users_products_api'
[INFO ] 05-03-2024 17:23:30.139 [main] TestSpringBootApplication - Started TestSpringBootApplication in 14.275 seconds (process running for 16.533)
[INFO ] 05-03-2024 17:23:32.236 [http-nio-8300-exec-1] [/users_products_api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[INFO ] 05-03-2024 17:23:32.237 [http-nio-8300-exec-1] DispatcherServlet - Initializing Servlet 'dispatcherServlet'
[INFO ] 05-03-2024 17:23:32.240 [http-nio-8300-exec-1] DispatcherServlet - Completed initialization in 3 ms
[TRACE] 05-03-2024 17:24:23.162 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@4202bfe8] for TypeConfiguration
[DEBUG] 05-03-2024 17:24:23.163 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@133a0dfa] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@4202bfe8]
[INFO ] 05-03-2024 17:24:31.975 [background-preinit] Version - HV000001: Hibernate Validator 8.0.1.Final
[INFO ] 05-03-2024 17:24:32.029 [main] TestSpringBootApplication - Starting TestSpringBootApplication using Java 17.0.10 with PID 19075 (/home/dima/backend_microservice/UserProductsMicroService/target/classes started by dima in /home/dima/backend_microservice/UserProductsMicroService)
[INFO ] 05-03-2024 17:24:32.038 [main] TestSpringBootApplication - No active profile set, falling back to 1 default profile: "default"
[INFO ] 05-03-2024 17:24:33.818 [main] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
[INFO ] 05-03-2024 17:24:33.820 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data R2DBC repositories in DEFAULT mode.
[INFO ] 05-03-2024 17:24:34.268 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 437 ms. Found 1 R2DBC repository interfaces.
[INFO ] 05-03-2024 17:24:34.849 [main] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
[INFO ] 05-03-2024 17:24:34.852 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO ] 05-03-2024 17:24:34.879 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 18 ms. Found 0 JPA repository interfaces.
[ERROR] 05-03-2024 17:24:36.077 [main] AprLifecycleListener - An incompatible version [1.2.23] of the Apache Tomcat Native library is installed, while Tomcat requires version [1.2.34]
[INFO ] 05-03-2024 17:24:36.834 [main] TomcatWebServer - Tomcat initialized with port(s): 8300 (http)
[INFO ] 05-03-2024 17:24:36.867 [main] Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8300"]
[INFO ] 05-03-2024 17:24:36.873 [main] StandardService - Starting service [Tomcat]
[INFO ] 05-03-2024 17:24:36.874 [main] StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.11]
[INFO ] 05-03-2024 17:24:37.796 [main] TldScanner - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
[INFO ] 05-03-2024 17:24:37.814 [main] [/users_products_api] - Initializing Spring embedded WebApplicationContext
[INFO ] 05-03-2024 17:24:37.818 [main] ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 5603 ms
[INFO ] 05-03-2024 17:24:38.962 [main] Version - HHH000412: Hibernate ORM core version 6.2.6.Final
[INFO ] 05-03-2024 17:24:38.967 [main] Environment - HHH000406: Using bytecode reflection optimizer
[DEBUG] 05-03-2024 17:24:39.279 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@1a7d0c9f
[DEBUG] 05-03-2024 17:24:39.280 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@1a7d0c9f
[DEBUG] 05-03-2024 17:24:39.280 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@1a7d0c9f
[DEBUG] 05-03-2024 17:24:39.281 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@2b1a901d
[DEBUG] 05-03-2024 17:24:39.282 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@2b1a901d
[DEBUG] 05-03-2024 17:24:39.282 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@11bdab37
[DEBUG] 05-03-2024 17:24:39.283 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@11bdab37
[DEBUG] 05-03-2024 17:24:39.283 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@280484c7
[DEBUG] 05-03-2024 17:24:39.284 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@280484c7
[DEBUG] 05-03-2024 17:24:39.284 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@5a6f6cac
[DEBUG] 05-03-2024 17:24:39.285 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@5a6f6cac
[DEBUG] 05-03-2024 17:24:39.285 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@5a6f6cac
[DEBUG] 05-03-2024 17:24:39.286 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@258a8584
[DEBUG] 05-03-2024 17:24:39.286 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@258a8584
[DEBUG] 05-03-2024 17:24:39.286 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@258a8584
[DEBUG] 05-03-2024 17:24:39.287 [main] BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@59127611
[DEBUG] 05-03-2024 17:24:39.287 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@59127611
[DEBUG] 05-03-2024 17:24:39.288 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@553ce348
[DEBUG] 05-03-2024 17:24:39.288 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@7417ef4f
[DEBUG] 05-03-2024 17:24:39.295 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@7417ef4f
[DEBUG] 05-03-2024 17:24:39.296 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@5c0e2ec
[DEBUG] 05-03-2024 17:24:39.298 [main] BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@4fa8bebb
[DEBUG] 05-03-2024 17:24:39.300 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@7d3c22a5
[DEBUG] 05-03-2024 17:24:39.301 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@7d3c22a5
[DEBUG] 05-03-2024 17:24:39.301 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@7d3c22a5
[DEBUG] 05-03-2024 17:24:39.302 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@369ad7da
[DEBUG] 05-03-2024 17:24:39.302 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@369ad7da
[DEBUG] 05-03-2024 17:24:39.303 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@369ad7da
[DEBUG] 05-03-2024 17:24:39.303 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@344f9467
[DEBUG] 05-03-2024 17:24:39.304 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@344f9467
[DEBUG] 05-03-2024 17:24:39.304 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@344f9467
[DEBUG] 05-03-2024 17:24:39.304 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@3e98b933
[DEBUG] 05-03-2024 17:24:39.305 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@3e98b933
[DEBUG] 05-03-2024 17:24:39.305 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@3e98b933
[DEBUG] 05-03-2024 17:24:39.306 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@222d9d4f
[DEBUG] 05-03-2024 17:24:39.306 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@222d9d4f
[DEBUG] 05-03-2024 17:24:39.306 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@222d9d4f
[DEBUG] 05-03-2024 17:24:39.307 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@4269aad7
[DEBUG] 05-03-2024 17:24:39.307 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@4269aad7
[DEBUG] 05-03-2024 17:24:39.307 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@a4df251
[DEBUG] 05-03-2024 17:24:39.308 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@a4df251
[DEBUG] 05-03-2024 17:24:39.308 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@71e7830a
[DEBUG] 05-03-2024 17:24:39.308 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@71e7830a
[DEBUG] 05-03-2024 17:24:39.309 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@71e7830a
[DEBUG] 05-03-2024 17:24:39.309 [main] BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@3feebf9c
[DEBUG] 05-03-2024 17:24:39.310 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@305e95a4
[DEBUG] 05-03-2024 17:24:39.310 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@305e95a4
[DEBUG] 05-03-2024 17:24:39.310 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@55e42684
[DEBUG] 05-03-2024 17:24:39.311 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@18d610e1
[DEBUG] 05-03-2024 17:24:39.311 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@18d610e1
[DEBUG] 05-03-2024 17:24:39.311 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@18d610e1
[DEBUG] 05-03-2024 17:24:39.312 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@528e5e38
[DEBUG] 05-03-2024 17:24:39.312 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@16391278
[DEBUG] 05-03-2024 17:24:39.312 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@621dc63d
[DEBUG] 05-03-2024 17:24:39.313 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@4ae49387
[DEBUG] 05-03-2024 17:24:39.313 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@4ae49387
[DEBUG] 05-03-2024 17:24:39.314 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@6abb7b7d
[DEBUG] 05-03-2024 17:24:39.314 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@6abb7b7d
[DEBUG] 05-03-2024 17:24:39.314 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@34cf0e80
[DEBUG] 05-03-2024 17:24:39.315 [main] BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@38ef1a0a
[DEBUG] 05-03-2024 17:24:39.315 [main] BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@56f9de3b
[DEBUG] 05-03-2024 17:24:39.315 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@6728370a
[DEBUG] 05-03-2024 17:24:39.316 [main] BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@2b5f8e61
[DEBUG] 05-03-2024 17:24:39.316 [main] BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@6ba0ee4a
[DEBUG] 05-03-2024 17:24:39.316 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@73b0ed03
[DEBUG] 05-03-2024 17:24:39.316 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@73b0ed03
[DEBUG] 05-03-2024 17:24:39.317 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@55061418
[DEBUG] 05-03-2024 17:24:39.317 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@55061418
[DEBUG] 05-03-2024 17:24:39.318 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@27db45f
[DEBUG] 05-03-2024 17:24:39.318 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@27db45f
[DEBUG] 05-03-2024 17:24:39.318 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@6ec3d8e4
[DEBUG] 05-03-2024 17:24:39.319 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@6ec3d8e4
[DEBUG] 05-03-2024 17:24:39.319 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@1aeff8ca
[DEBUG] 05-03-2024 17:24:39.319 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@1aeff8ca
[DEBUG] 05-03-2024 17:24:39.319 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@7f2c995b
[DEBUG] 05-03-2024 17:24:39.319 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@101c15ad
[DEBUG] 05-03-2024 17:24:39.320 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@6068ebb2
[DEBUG] 05-03-2024 17:24:39.320 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@6068ebb2
[DEBUG] 05-03-2024 17:24:39.320 [main] BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@5a466dd
[DEBUG] 05-03-2024 17:24:39.320 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@1ed9d173
[DEBUG] 05-03-2024 17:24:39.321 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@6e981e78
[DEBUG] 05-03-2024 17:24:39.321 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@498a4d62
[DEBUG] 05-03-2024 17:24:39.321 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@498a4d62
[DEBUG] 05-03-2024 17:24:39.322 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@6fbe4800
[DEBUG] 05-03-2024 17:24:39.322 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3f3c5ecd
[DEBUG] 05-03-2024 17:24:39.322 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@1179fc8c
[DEBUG] 05-03-2024 17:24:39.322 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@1179fc8c
[DEBUG] 05-03-2024 17:24:39.323 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@a03529c
[DEBUG] 05-03-2024 17:24:39.323 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@a03529c
[DEBUG] 05-03-2024 17:24:39.323 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@1760e594
[DEBUG] 05-03-2024 17:24:39.324 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@1760e594
[DEBUG] 05-03-2024 17:24:39.324 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@1760e594
[DEBUG] 05-03-2024 17:24:39.324 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@4af70b83
[DEBUG] 05-03-2024 17:24:39.325 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@4af70b83
[DEBUG] 05-03-2024 17:24:39.325 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@4af70b83
[DEBUG] 05-03-2024 17:24:39.325 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@143413cd
[DEBUG] 05-03-2024 17:24:39.326 [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@4b32465
[DEBUG] 05-03-2024 17:24:39.326 [main] BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@146f3d22
[DEBUG] 05-03-2024 17:24:39.326 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@146f3d22
[DEBUG] 05-03-2024 17:24:39.326 [main] BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@66b6873f
[DEBUG] 05-03-2024 17:24:39.331 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@66b6873f
[DEBUG] 05-03-2024 17:24:39.332 [main] BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@66b6873f
[DEBUG] 05-03-2024 17:24:39.332 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@52285a5f
[DEBUG] 05-03-2024 17:24:39.333 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@4fa5cc73
[DEBUG] 05-03-2024 17:24:39.333 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@224e6e88
[DEBUG] 05-03-2024 17:24:39.334 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@224e6e88
[DEBUG] 05-03-2024 17:24:39.334 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@70139a81
[DEBUG] 05-03-2024 17:24:39.335 [main] BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@70139a81
[DEBUG] 05-03-2024 17:24:39.335 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@70139a81
[DEBUG] 05-03-2024 17:24:39.335 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@60f9dc7e
[DEBUG] 05-03-2024 17:24:39.336 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@60f9dc7e
[DEBUG] 05-03-2024 17:24:39.336 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@15e5246
[DEBUG] 05-03-2024 17:24:39.337 [main] BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@15e5246
[DEBUG] 05-03-2024 17:24:39.337 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@503556cb
[DEBUG] 05-03-2024 17:24:39.337 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@503556cb
[DEBUG] 05-03-2024 17:24:39.338 [main] BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@3c9e19de
[DEBUG] 05-03-2024 17:24:39.338 [main] BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@3c9e19de
[DEBUG] 05-03-2024 17:24:39.338 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@12aa381f
[DEBUG] 05-03-2024 17:24:39.338 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@12aa381f
[DEBUG] 05-03-2024 17:24:39.339 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@6115846e
[DEBUG] 05-03-2024 17:24:39.350 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@118fbaf0
[DEBUG] 05-03-2024 17:24:39.351 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@118fbaf0
[DEBUG] 05-03-2024 17:24:39.354 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@401926df
[DEBUG] 05-03-2024 17:24:39.354 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@3ff8a3ad
[DEBUG] 05-03-2024 17:24:39.355 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@550fa96f
[DEBUG] 05-03-2024 17:24:39.355 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@54275b5d
[DEBUG] 05-03-2024 17:24:39.356 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@5d01b0d8
[DEBUG] 05-03-2024 17:24:39.356 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@271e851e
[DEBUG] 05-03-2024 17:24:39.357 [main] BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@ff21443
[DEBUG] 05-03-2024 17:24:39.357 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@61e14b53
[DEBUG] 05-03-2024 17:24:39.357 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@31b6b0c7
[DEBUG] 05-03-2024 17:24:40.459 [main] DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@35f01759) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2fea9a7b)
[DEBUG] 05-03-2024 17:24:40.465 [main] JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
[DEBUG] 05-03-2024 17:24:40.466 [main] JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 05-03-2024 17:24:40.488 [main] BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@ca10069
[DEBUG] 05-03-2024 17:24:40.488 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@ca10069
[DEBUG] 05-03-2024 17:24:40.489 [main] BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@118fbaf0`
[DEBUG] 05-03-2024 17:24:40.491 [main] JdbcTypeRegistry - addDescriptor(3100, NumericTypeDescriptor) replaced previous registration(org.hibernate.dialect.PostgreSQLIntervalSecondJdbcType@41a8f0d8)
[DEBUG] 05-03-2024 17:24:40.504 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 05-03-2024 17:24:40.504 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 05-03-2024 17:24:40.505 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 05-03-2024 17:24:40.505 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 05-03-2024 17:24:40.505 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 05-03-2024 17:24:40.506 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 05-03-2024 17:24:40.507 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 05-03-2024 17:24:40.508 [main] BasicTypeRegistry - Adding type registration OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 05-03-2024 17:24:40.508 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 05-03-2024 17:24:40.511 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@778197c0] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@1c2cdc67]
[WARN ] 05-03-2024 17:24:41.061 [main] InFlightMetadataCollectorImpl - HHH000069: Duplicate generator name generator
[INFO ] 05-03-2024 17:24:41.195 [main] BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
[INFO ] 05-03-2024 17:24:44.080 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 05-03-2024 17:24:44.081 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@778197c0] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@1fd77205]
[TRACE] 05-03-2024 17:24:44.091 [main] TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@1fd77205] for TypeConfiguration
[WARN ] 05-03-2024 17:24:44.541 [main] JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[INFO ] 05-03-2024 17:24:45.463 [main] Http11NioProtocol - Starting ProtocolHandler ["http-nio-8300"]
[INFO ] 05-03-2024 17:24:45.531 [main] TomcatWebServer - Tomcat started on port(s): 8300 (http) with context path '/users_products_api'
[INFO ] 05-03-2024 17:24:45.578 [main] TestSpringBootApplication - Started TestSpringBootApplication in 14.496 seconds (process running for 17.108)
[INFO ] 05-03-2024 17:24:47.324 [http-nio-8300-exec-1] [/users_products_api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[INFO ] 05-03-2024 17:24:47.325 [http-nio-8300-exec-1] DispatcherServlet - Initializing Servlet 'dispatcherServlet'
[INFO ] 05-03-2024 17:24:47.329 [http-nio-8300-exec-1] DispatcherServlet - Completed initialization in 4 ms
[TRACE] 05-03-2024 17:25:26.845 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@1fd77205] for TypeConfiguration
[DEBUG] 05-03-2024 17:25:26.845 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@5ffb8d0f] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@1fd77205]
[INFO ] 05-03-2024 17:25:35.684 [background-preinit] Version - HV000001: Hibernate Validator 8.0.1.Final
[INFO ] 05-03-2024 17:25:35.791 [main] TestSpringBootApplication - Starting TestSpringBootApplication using Java 17.0.10 with PID 19306 (/home/dima/backend_microservice/UserProductsMicroService/target/classes started by dima in /home/dima/backend_microservice/UserProductsMicroService)
[INFO ] 05-03-2024 17:25:35.807 [main] TestSpringBootApplication - No active profile set, falling back to 1 default profile: "default"
[INFO ] 05-03-2024 17:25:37.558 [main] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
[INFO ] 05-03-2024 17:25:37.560 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data R2DBC repositories in DEFAULT mode.
[INFO ] 05-03-2024 17:25:37.979 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 408 ms. Found 1 R2DBC repository interfaces.
[INFO ] 05-03-2024 17:25:38.575 [main] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
[INFO ] 05-03-2024 17:25:38.580 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO ] 05-03-2024 17:25:38.630 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 39 ms. Found 0 JPA repository interfaces.
[ERROR] 05-03-2024 17:25:39.711 [main] AprLifecycleListener - An incompatible version [1.2.23] of the Apache Tomcat Native library is installed, while Tomcat requires version [1.2.34]
[INFO ] 05-03-2024 17:25:40.432 [main] TomcatWebServer - Tomcat initialized with port(s): 8300 (http)
[INFO ] 05-03-2024 17:25:40.450 [main] Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8300"]
[INFO ] 05-03-2024 17:25:40.461 [main] StandardService - Starting service [Tomcat]
[INFO ] 05-03-2024 17:25:40.463 [main] StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.11]
[INFO ] 05-03-2024 17:25:41.443 [main] TldScanner - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
[INFO ] 05-03-2024 17:25:41.459 [main] [/users_products_api] - Initializing Spring embedded WebApplicationContext
[INFO ] 05-03-2024 17:25:41.463 [main] ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 5475 ms
[INFO ] 05-03-2024 17:25:42.586 [main] Version - HHH000412: Hibernate ORM core version 6.2.6.Final
[INFO ] 05-03-2024 17:25:42.591 [main] Environment - HHH000406: Using bytecode reflection optimizer
[DEBUG] 05-03-2024 17:25:42.953 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@dae5e0
[DEBUG] 05-03-2024 17:25:42.954 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@dae5e0
[DEBUG] 05-03-2024 17:25:42.954 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@dae5e0
[DEBUG] 05-03-2024 17:25:42.954 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@59a94d0f
[DEBUG] 05-03-2024 17:25:42.962 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@59a94d0f
[DEBUG] 05-03-2024 17:25:42.966 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@7ff09659
[DEBUG] 05-03-2024 17:25:42.967 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@7ff09659
[DEBUG] 05-03-2024 17:25:42.968 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@517fbf62
[DEBUG] 05-03-2024 17:25:42.968 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@517fbf62
[DEBUG] 05-03-2024 17:25:42.969 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@65db548
[DEBUG] 05-03-2024 17:25:42.969 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@65db548
[DEBUG] 05-03-2024 17:25:42.969 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@65db548
[DEBUG] 05-03-2024 17:25:42.969 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@150f41b9
[DEBUG] 05-03-2024 17:25:42.970 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@150f41b9
[DEBUG] 05-03-2024 17:25:42.970 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@150f41b9
[DEBUG] 05-03-2024 17:25:42.971 [main] BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@6e364f1f
[DEBUG] 05-03-2024 17:25:42.971 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@6e364f1f
[DEBUG] 05-03-2024 17:25:42.972 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@429e7914
[DEBUG] 05-03-2024 17:25:42.972 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@298263fa
[DEBUG] 05-03-2024 17:25:42.972 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@298263fa
[DEBUG] 05-03-2024 17:25:42.973 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@466fedfa
[DEBUG] 05-03-2024 17:25:42.973 [main] BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@1a7d0c9f
[DEBUG] 05-03-2024 17:25:42.974 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@2b1a901d
[DEBUG] 05-03-2024 17:25:42.974 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@2b1a901d
[DEBUG] 05-03-2024 17:25:42.974 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@2b1a901d
[DEBUG] 05-03-2024 17:25:42.975 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@11bdab37
[DEBUG] 05-03-2024 17:25:42.975 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@11bdab37
[DEBUG] 05-03-2024 17:25:42.975 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@11bdab37
[DEBUG] 05-03-2024 17:25:42.976 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@280484c7
[DEBUG] 05-03-2024 17:25:42.976 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@280484c7
[DEBUG] 05-03-2024 17:25:42.977 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@280484c7
[DEBUG] 05-03-2024 17:25:42.977 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@5a6f6cac
[DEBUG] 05-03-2024 17:25:42.978 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@5a6f6cac
[DEBUG] 05-03-2024 17:25:42.978 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@5a6f6cac
[DEBUG] 05-03-2024 17:25:42.978 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@258a8584
[DEBUG] 05-03-2024 17:25:42.979 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@258a8584
[DEBUG] 05-03-2024 17:25:42.981 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@258a8584
[DEBUG] 05-03-2024 17:25:42.981 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@59127611
[DEBUG] 05-03-2024 17:25:42.982 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@59127611
[DEBUG] 05-03-2024 17:25:42.982 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@553ce348
[DEBUG] 05-03-2024 17:25:42.982 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@553ce348
[DEBUG] 05-03-2024 17:25:42.983 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@7417ef4f
[DEBUG] 05-03-2024 17:25:42.983 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@7417ef4f
[DEBUG] 05-03-2024 17:25:42.983 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@7417ef4f
[DEBUG] 05-03-2024 17:25:42.984 [main] BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@5c0e2ec
[DEBUG] 05-03-2024 17:25:42.984 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@4fa8bebb
[DEBUG] 05-03-2024 17:25:42.985 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@4fa8bebb
[DEBUG] 05-03-2024 17:25:42.985 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@7d3c22a5
[DEBUG] 05-03-2024 17:25:42.985 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@369ad7da
[DEBUG] 05-03-2024 17:25:42.986 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@369ad7da
[DEBUG] 05-03-2024 17:25:42.986 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@369ad7da
[DEBUG] 05-03-2024 17:25:42.986 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@344f9467
[DEBUG] 05-03-2024 17:25:42.987 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@3e98b933
[DEBUG] 05-03-2024 17:25:42.987 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@222d9d4f
[DEBUG] 05-03-2024 17:25:42.988 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@4269aad7
[DEBUG] 05-03-2024 17:25:42.988 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@4269aad7
[DEBUG] 05-03-2024 17:25:42.988 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@a4df251
[DEBUG] 05-03-2024 17:25:42.989 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@a4df251
[DEBUG] 05-03-2024 17:25:42.989 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@71e7830a
[DEBUG] 05-03-2024 17:25:42.989 [main] BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@3feebf9c
[DEBUG] 05-03-2024 17:25:42.990 [main] BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@305e95a4
[DEBUG] 05-03-2024 17:25:42.990 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@55e42684
[DEBUG] 05-03-2024 17:25:42.990 [main] BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@18d610e1
[DEBUG] 05-03-2024 17:25:42.991 [main] BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@528e5e38
[DEBUG] 05-03-2024 17:25:42.991 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@16391278
[DEBUG] 05-03-2024 17:25:42.991 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@16391278
[DEBUG] 05-03-2024 17:25:42.991 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@621dc63d
[DEBUG] 05-03-2024 17:25:42.992 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@621dc63d
[DEBUG] 05-03-2024 17:25:42.992 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@4ae49387
[DEBUG] 05-03-2024 17:25:42.992 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@4ae49387
[DEBUG] 05-03-2024 17:25:42.993 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@6abb7b7d
[DEBUG] 05-03-2024 17:25:42.993 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@6abb7b7d
[DEBUG] 05-03-2024 17:25:42.993 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@34cf0e80
[DEBUG] 05-03-2024 17:25:42.994 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@34cf0e80
[DEBUG] 05-03-2024 17:25:42.994 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@38ef1a0a
[DEBUG] 05-03-2024 17:25:42.994 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@56f9de3b
[DEBUG] 05-03-2024 17:25:42.994 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@6728370a
[DEBUG] 05-03-2024 17:25:42.995 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@6728370a
[DEBUG] 05-03-2024 17:25:42.995 [main] BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@2b5f8e61
[DEBUG] 05-03-2024 17:25:42.995 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@6ba0ee4a
[DEBUG] 05-03-2024 17:25:42.996 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@73b0ed03
[DEBUG] 05-03-2024 17:25:42.996 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@55061418
[DEBUG] 05-03-2024 17:25:42.997 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@55061418
[DEBUG] 05-03-2024 17:25:42.997 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@27db45f
[DEBUG] 05-03-2024 17:25:42.997 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@6ec3d8e4
[DEBUG] 05-03-2024 17:25:42.998 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@1aeff8ca
[DEBUG] 05-03-2024 17:25:42.998 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@1aeff8ca
[DEBUG] 05-03-2024 17:25:42.998 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@7f2c995b
[DEBUG] 05-03-2024 17:25:42.999 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@7f2c995b
[DEBUG] 05-03-2024 17:25:42.999 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@101c15ad
[DEBUG] 05-03-2024 17:25:42.999 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@101c15ad
[DEBUG] 05-03-2024 17:25:43.000 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@101c15ad
[DEBUG] 05-03-2024 17:25:43.000 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@6068ebb2
[DEBUG] 05-03-2024 17:25:43.000 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@6068ebb2
[DEBUG] 05-03-2024 17:25:43.001 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@6068ebb2
[DEBUG] 05-03-2024 17:25:43.001 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@5a466dd
[DEBUG] 05-03-2024 17:25:43.001 [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@1ed9d173
[DEBUG] 05-03-2024 17:25:43.001 [main] BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@6e981e78
[DEBUG] 05-03-2024 17:25:43.002 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@6e981e78
[DEBUG] 05-03-2024 17:25:43.002 [main] BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@498a4d62
[DEBUG] 05-03-2024 17:25:43.002 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@498a4d62
[DEBUG] 05-03-2024 17:25:43.003 [main] BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@498a4d62
[DEBUG] 05-03-2024 17:25:43.003 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@6fbe4800
[DEBUG] 05-03-2024 17:25:43.003 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@3f3c5ecd
[DEBUG] 05-03-2024 17:25:43.003 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@1179fc8c
[DEBUG] 05-03-2024 17:25:43.004 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@1179fc8c
[DEBUG] 05-03-2024 17:25:43.004 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@a03529c
[DEBUG] 05-03-2024 17:25:43.004 [main] BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@a03529c
[DEBUG] 05-03-2024 17:25:43.005 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@a03529c
[DEBUG] 05-03-2024 17:25:43.005 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@1760e594
[DEBUG] 05-03-2024 17:25:43.006 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@1760e594
[DEBUG] 05-03-2024 17:25:43.006 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@4af70b83
[DEBUG] 05-03-2024 17:25:43.006 [main] BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@4af70b83
[DEBUG] 05-03-2024 17:25:43.007 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@143413cd
[DEBUG] 05-03-2024 17:25:43.007 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@143413cd
[DEBUG] 05-03-2024 17:25:43.007 [main] BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@4b32465
[DEBUG] 05-03-2024 17:25:43.008 [main] BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@4b32465
[DEBUG] 05-03-2024 17:25:43.008 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@146f3d22
[DEBUG] 05-03-2024 17:25:43.008 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@146f3d22
[DEBUG] 05-03-2024 17:25:43.009 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@66b6873f
[DEBUG] 05-03-2024 17:25:43.020 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@70485aa
[DEBUG] 05-03-2024 17:25:43.020 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@70485aa
[DEBUG] 05-03-2024 17:25:43.023 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@208f7165
[DEBUG] 05-03-2024 17:25:43.024 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@a0d875d
[DEBUG] 05-03-2024 17:25:43.024 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@693f2c89
[DEBUG] 05-03-2024 17:25:43.025 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@50b4364
[DEBUG] 05-03-2024 17:25:43.025 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@5e541ef9
[DEBUG] 05-03-2024 17:25:43.026 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@38054d01
[DEBUG] 05-03-2024 17:25:43.026 [main] BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@28ce75ec
[DEBUG] 05-03-2024 17:25:43.026 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@778113f2
[DEBUG] 05-03-2024 17:25:43.026 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@9dc782d
[DEBUG] 05-03-2024 17:25:44.072 [main] DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3dfc59c5) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2cff5aa3)
[DEBUG] 05-03-2024 17:25:44.077 [main] JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
[DEBUG] 05-03-2024 17:25:44.078 [main] JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 05-03-2024 17:25:44.097 [main] BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@31fe0ce5
[DEBUG] 05-03-2024 17:25:44.097 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@31fe0ce5
[DEBUG] 05-03-2024 17:25:44.099 [main] BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@70485aa`
[DEBUG] 05-03-2024 17:25:44.102 [main] JdbcTypeRegistry - addDescriptor(3100, NumericTypeDescriptor) replaced previous registration(org.hibernate.dialect.PostgreSQLIntervalSecondJdbcType@539ee811)
[DEBUG] 05-03-2024 17:25:44.117 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 05-03-2024 17:25:44.119 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 05-03-2024 17:25:44.120 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 05-03-2024 17:25:44.120 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 05-03-2024 17:25:44.121 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 05-03-2024 17:25:44.121 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 05-03-2024 17:25:44.123 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 05-03-2024 17:25:44.123 [main] BasicTypeRegistry - Adding type registration OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 05-03-2024 17:25:44.124 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 05-03-2024 17:25:44.126 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4627dfda] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@1f3361e9]
[WARN ] 05-03-2024 17:25:44.511 [main] InFlightMetadataCollectorImpl - HHH000069: Duplicate generator name generator
[INFO ] 05-03-2024 17:25:44.741 [main] BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
[INFO ] 05-03-2024 17:25:47.121 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 05-03-2024 17:25:47.123 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4627dfda] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@4a467ada]
[TRACE] 05-03-2024 17:25:47.129 [main] TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@4a467ada] for TypeConfiguration
[WARN ] 05-03-2024 17:25:47.460 [main] JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[INFO ] 05-03-2024 17:25:48.293 [main] Http11NioProtocol - Starting ProtocolHandler ["http-nio-8300"]
[INFO ] 05-03-2024 17:25:48.396 [main] TomcatWebServer - Tomcat started on port(s): 8300 (http) with context path '/users_products_api'
[INFO ] 05-03-2024 17:25:48.429 [main] TestSpringBootApplication - Started TestSpringBootApplication in 13.576 seconds (process running for 15.947)
[INFO ] 05-03-2024 17:25:59.705 [http-nio-8300-exec-1] [/users_products_api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[INFO ] 05-03-2024 17:25:59.713 [http-nio-8300-exec-1] DispatcherServlet - Initializing Servlet 'dispatcherServlet'
[INFO ] 05-03-2024 17:25:59.716 [http-nio-8300-exec-1] DispatcherServlet - Completed initialization in 3 ms
[TRACE] 05-03-2024 17:36:23.153 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@4a467ada] for TypeConfiguration
[DEBUG] 05-03-2024 17:36:23.171 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@23ad762b] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@4a467ada]
[INFO ] 05-03-2024 17:36:32.280 [background-preinit] Version - HV000001: Hibernate Validator 8.0.1.Final
[INFO ] 05-03-2024 17:36:32.457 [main] TestSpringBootApplication - Starting TestSpringBootApplication using Java 17.0.10 with PID 20479 (/home/dima/backend_microservice/UserProductsMicroService/target/classes started by dima in /home/dima/backend_microservice/UserProductsMicroService)
[INFO ] 05-03-2024 17:36:32.478 [main] TestSpringBootApplication - No active profile set, falling back to 1 default profile: "default"
[INFO ] 05-03-2024 17:36:34.276 [main] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
[INFO ] 05-03-2024 17:36:34.278 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data R2DBC repositories in DEFAULT mode.
[INFO ] 05-03-2024 17:36:34.812 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 509 ms. Found 1 R2DBC repository interfaces.
[INFO ] 05-03-2024 17:36:35.457 [main] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
[INFO ] 05-03-2024 17:36:35.459 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO ] 05-03-2024 17:36:35.496 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 28 ms. Found 0 JPA repository interfaces.
[ERROR] 05-03-2024 17:36:36.509 [main] AprLifecycleListener - An incompatible version [1.2.23] of the Apache Tomcat Native library is installed, while Tomcat requires version [1.2.34]
[INFO ] 05-03-2024 17:36:37.173 [main] TomcatWebServer - Tomcat initialized with port(s): 8300 (http)
[INFO ] 05-03-2024 17:36:37.190 [main] Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8300"]
[INFO ] 05-03-2024 17:36:37.196 [main] StandardService - Starting service [Tomcat]
[INFO ] 05-03-2024 17:36:37.197 [main] StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.11]
[INFO ] 05-03-2024 17:36:38.324 [main] TldScanner - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
[INFO ] 05-03-2024 17:36:38.349 [main] [/users_products_api] - Initializing Spring embedded WebApplicationContext
[INFO ] 05-03-2024 17:36:38.354 [main] ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 5601 ms
[INFO ] 05-03-2024 17:36:40.018 [main] Version - HHH000412: Hibernate ORM core version 6.2.6.Final
[INFO ] 05-03-2024 17:36:40.025 [main] Environment - HHH000406: Using bytecode reflection optimizer
[DEBUG] 05-03-2024 17:36:40.367 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@2a631049
[DEBUG] 05-03-2024 17:36:40.368 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@2a631049
[DEBUG] 05-03-2024 17:36:40.369 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@2a631049
[DEBUG] 05-03-2024 17:36:40.369 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@425b5fe2
[DEBUG] 05-03-2024 17:36:40.370 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@425b5fe2
[DEBUG] 05-03-2024 17:36:40.370 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@3eec8583
[DEBUG] 05-03-2024 17:36:40.371 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@3eec8583
[DEBUG] 05-03-2024 17:36:40.372 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@66e1b2a
[DEBUG] 05-03-2024 17:36:40.372 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@66e1b2a
[DEBUG] 05-03-2024 17:36:40.372 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@343db2f6
[DEBUG] 05-03-2024 17:36:40.373 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@343db2f6
[DEBUG] 05-03-2024 17:36:40.374 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@343db2f6
[DEBUG] 05-03-2024 17:36:40.374 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@2c815fdc
[DEBUG] 05-03-2024 17:36:40.375 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@2c815fdc
[DEBUG] 05-03-2024 17:36:40.375 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@2c815fdc
[DEBUG] 05-03-2024 17:36:40.376 [main] BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@769b0752
[DEBUG] 05-03-2024 17:36:40.376 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@769b0752
[DEBUG] 05-03-2024 17:36:40.377 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@dae5e0
[DEBUG] 05-03-2024 17:36:40.377 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@59a94d0f
[DEBUG] 05-03-2024 17:36:40.378 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@59a94d0f
[DEBUG] 05-03-2024 17:36:40.379 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@7ff09659
[DEBUG] 05-03-2024 17:36:40.379 [main] BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@517fbf62
[DEBUG] 05-03-2024 17:36:40.380 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@65db548
[DEBUG] 05-03-2024 17:36:40.380 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@65db548
[DEBUG] 05-03-2024 17:36:40.381 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@65db548
[DEBUG] 05-03-2024 17:36:40.381 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@150f41b9
[DEBUG] 05-03-2024 17:36:40.382 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@150f41b9
[DEBUG] 05-03-2024 17:36:40.382 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@150f41b9
[DEBUG] 05-03-2024 17:36:40.383 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@6e364f1f
[DEBUG] 05-03-2024 17:36:40.383 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@6e364f1f
[DEBUG] 05-03-2024 17:36:40.384 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@6e364f1f
[DEBUG] 05-03-2024 17:36:40.384 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@429e7914
[DEBUG] 05-03-2024 17:36:40.385 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@429e7914
[DEBUG] 05-03-2024 17:36:40.385 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@429e7914
[DEBUG] 05-03-2024 17:36:40.386 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@298263fa
[DEBUG] 05-03-2024 17:36:40.386 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@298263fa
[DEBUG] 05-03-2024 17:36:40.387 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@298263fa
[DEBUG] 05-03-2024 17:36:40.388 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@466fedfa
[DEBUG] 05-03-2024 17:36:40.388 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@466fedfa
[DEBUG] 05-03-2024 17:36:40.389 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@1a7d0c9f
[DEBUG] 05-03-2024 17:36:40.389 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@1a7d0c9f
[DEBUG] 05-03-2024 17:36:40.390 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@2b1a901d
[DEBUG] 05-03-2024 17:36:40.390 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@2b1a901d
[DEBUG] 05-03-2024 17:36:40.391 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@2b1a901d
[DEBUG] 05-03-2024 17:36:40.391 [main] BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@11bdab37
[DEBUG] 05-03-2024 17:36:40.392 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@280484c7
[DEBUG] 05-03-2024 17:36:40.392 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@280484c7
[DEBUG] 05-03-2024 17:36:40.393 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@5a6f6cac
[DEBUG] 05-03-2024 17:36:40.394 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@258a8584
[DEBUG] 05-03-2024 17:36:40.394 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@258a8584
[DEBUG] 05-03-2024 17:36:40.394 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@258a8584
[DEBUG] 05-03-2024 17:36:40.395 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@59127611
[DEBUG] 05-03-2024 17:36:40.395 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@553ce348
[DEBUG] 05-03-2024 17:36:40.395 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@7417ef4f
[DEBUG] 05-03-2024 17:36:40.396 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@5c0e2ec
[DEBUG] 05-03-2024 17:36:40.396 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@5c0e2ec
[DEBUG] 05-03-2024 17:36:40.397 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@4fa8bebb
[DEBUG] 05-03-2024 17:36:40.397 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@4fa8bebb
[DEBUG] 05-03-2024 17:36:40.398 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@7d3c22a5
[DEBUG] 05-03-2024 17:36:40.398 [main] BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@369ad7da
[DEBUG] 05-03-2024 17:36:40.398 [main] BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@344f9467
[DEBUG] 05-03-2024 17:36:40.399 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@3e98b933
[DEBUG] 05-03-2024 17:36:40.399 [main] BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@222d9d4f
[DEBUG] 05-03-2024 17:36:40.399 [main] BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@4269aad7
[DEBUG] 05-03-2024 17:36:40.400 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@a4df251
[DEBUG] 05-03-2024 17:36:40.400 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@a4df251
[DEBUG] 05-03-2024 17:36:40.401 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@71e7830a
[DEBUG] 05-03-2024 17:36:40.401 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@71e7830a
[DEBUG] 05-03-2024 17:36:40.401 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@3feebf9c
[DEBUG] 05-03-2024 17:36:40.402 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@3feebf9c
[DEBUG] 05-03-2024 17:36:40.402 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@305e95a4
[DEBUG] 05-03-2024 17:36:40.403 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@305e95a4
[DEBUG] 05-03-2024 17:36:40.403 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@55e42684
[DEBUG] 05-03-2024 17:36:40.403 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@55e42684
[DEBUG] 05-03-2024 17:36:40.404 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@18d610e1
[DEBUG] 05-03-2024 17:36:40.404 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@528e5e38
[DEBUG] 05-03-2024 17:36:40.405 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@16391278
[DEBUG] 05-03-2024 17:36:40.405 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@16391278
[DEBUG] 05-03-2024 17:36:40.405 [main] BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@621dc63d
[DEBUG] 05-03-2024 17:36:40.406 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@4ae49387
[DEBUG] 05-03-2024 17:36:40.406 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@6abb7b7d
[DEBUG] 05-03-2024 17:36:40.407 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@34cf0e80
[DEBUG] 05-03-2024 17:36:40.407 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@34cf0e80
[DEBUG] 05-03-2024 17:36:40.407 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@38ef1a0a
[DEBUG] 05-03-2024 17:36:40.408 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@56f9de3b
[DEBUG] 05-03-2024 17:36:40.408 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@6728370a
[DEBUG] 05-03-2024 17:36:40.408 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@6728370a
[DEBUG] 05-03-2024 17:36:40.409 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@2b5f8e61
[DEBUG] 05-03-2024 17:36:40.409 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@2b5f8e61
[DEBUG] 05-03-2024 17:36:40.410 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@6ba0ee4a
[DEBUG] 05-03-2024 17:36:40.410 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@6ba0ee4a
[DEBUG] 05-03-2024 17:36:40.410 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@6ba0ee4a
[DEBUG] 05-03-2024 17:36:40.411 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@73b0ed03
[DEBUG] 05-03-2024 17:36:40.411 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@73b0ed03
[DEBUG] 05-03-2024 17:36:40.412 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@73b0ed03
[DEBUG] 05-03-2024 17:36:40.412 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@55061418
[DEBUG] 05-03-2024 17:36:40.412 [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@27db45f
[DEBUG] 05-03-2024 17:36:40.413 [main] BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@6ec3d8e4
[DEBUG] 05-03-2024 17:36:40.413 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@6ec3d8e4
[DEBUG] 05-03-2024 17:36:40.414 [main] BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@1aeff8ca
[DEBUG] 05-03-2024 17:36:40.414 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@1aeff8ca
[DEBUG] 05-03-2024 17:36:40.414 [main] BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@1aeff8ca
[DEBUG] 05-03-2024 17:36:40.415 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@7f2c995b
[DEBUG] 05-03-2024 17:36:40.415 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@101c15ad
[DEBUG] 05-03-2024 17:36:40.416 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@6068ebb2
[DEBUG] 05-03-2024 17:36:40.416 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@6068ebb2
[DEBUG] 05-03-2024 17:36:40.416 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@5a466dd
[DEBUG] 05-03-2024 17:36:40.417 [main] BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@5a466dd
[DEBUG] 05-03-2024 17:36:40.417 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@5a466dd
[DEBUG] 05-03-2024 17:36:40.418 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@1ed9d173
[DEBUG] 05-03-2024 17:36:40.419 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@1ed9d173
[DEBUG] 05-03-2024 17:36:40.419 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@6e981e78
[DEBUG] 05-03-2024 17:36:40.419 [main] BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@6e981e78
[DEBUG] 05-03-2024 17:36:40.420 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@498a4d62
[DEBUG] 05-03-2024 17:36:40.420 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@498a4d62
[DEBUG] 05-03-2024 17:36:40.421 [main] BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@6fbe4800
[DEBUG] 05-03-2024 17:36:40.421 [main] BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@6fbe4800
[DEBUG] 05-03-2024 17:36:40.421 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@3f3c5ecd
[DEBUG] 05-03-2024 17:36:40.422 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@3f3c5ecd
[DEBUG] 05-03-2024 17:36:40.422 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@1179fc8c
[DEBUG] 05-03-2024 17:36:40.438 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@65af05b2
[DEBUG] 05-03-2024 17:36:40.438 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@65af05b2
[DEBUG] 05-03-2024 17:36:40.441 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@410382cb
[DEBUG] 05-03-2024 17:36:40.442 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@399f5daf
[DEBUG] 05-03-2024 17:36:40.443 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@c4cceb
[DEBUG] 05-03-2024 17:36:40.443 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@29f3185c
[DEBUG] 05-03-2024 17:36:40.444 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@74bbc273
[DEBUG] 05-03-2024 17:36:40.444 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@370a8b6e
[DEBUG] 05-03-2024 17:36:40.445 [main] BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@118fbaf0
[DEBUG] 05-03-2024 17:36:40.445 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@208f7165
[DEBUG] 05-03-2024 17:36:40.446 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@a0d875d
[DEBUG] 05-03-2024 17:36:41.573 [main] DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@34bddf43) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@57839834)
[DEBUG] 05-03-2024 17:36:41.578 [main] JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
[DEBUG] 05-03-2024 17:36:41.579 [main] JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 05-03-2024 17:36:41.598 [main] BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@6fdc2db6
[DEBUG] 05-03-2024 17:36:41.599 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@6fdc2db6
[DEBUG] 05-03-2024 17:36:41.599 [main] BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@65af05b2`
[DEBUG] 05-03-2024 17:36:41.603 [main] JdbcTypeRegistry - addDescriptor(3100, NumericTypeDescriptor) replaced previous registration(org.hibernate.dialect.PostgreSQLIntervalSecondJdbcType@779b4f9c)
[DEBUG] 05-03-2024 17:36:41.616 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 05-03-2024 17:36:41.616 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 05-03-2024 17:36:41.617 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 05-03-2024 17:36:41.618 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 05-03-2024 17:36:41.618 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 05-03-2024 17:36:41.619 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 05-03-2024 17:36:41.620 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 05-03-2024 17:36:41.621 [main] BasicTypeRegistry - Adding type registration OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 05-03-2024 17:36:41.621 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 05-03-2024 17:36:41.624 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@29bd2796] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@174b8d0e]
[WARN ] 05-03-2024 17:36:41.957 [main] InFlightMetadataCollectorImpl - HHH000069: Duplicate generator name generator
[INFO ] 05-03-2024 17:36:42.105 [main] BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
[INFO ] 05-03-2024 17:36:44.288 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 05-03-2024 17:36:44.290 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@29bd2796] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@1be4f05c]
[TRACE] 05-03-2024 17:36:44.296 [main] TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@1be4f05c] for TypeConfiguration
[WARN ] 05-03-2024 17:36:44.649 [main] JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[INFO ] 05-03-2024 17:36:45.820 [main] Http11NioProtocol - Starting ProtocolHandler ["http-nio-8300"]
[INFO ] 05-03-2024 17:36:45.889 [main] TomcatWebServer - Tomcat started on port(s): 8300 (http) with context path '/users_products_api'
[INFO ] 05-03-2024 17:36:45.918 [main] TestSpringBootApplication - Started TestSpringBootApplication in 14.447 seconds (process running for 16.896)
[INFO ] 05-03-2024 17:36:59.396 [http-nio-8300-exec-1] [/users_products_api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[INFO ] 05-03-2024 17:36:59.397 [http-nio-8300-exec-1] DispatcherServlet - Initializing Servlet 'dispatcherServlet'
[INFO ] 05-03-2024 17:36:59.400 [http-nio-8300-exec-1] DispatcherServlet - Completed initialization in 2 ms
[TRACE] 05-03-2024 17:37:13.482 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@1be4f05c] for TypeConfiguration
[DEBUG] 05-03-2024 17:37:13.483 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@1974b6a1] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@1be4f05c]
[INFO ] 05-03-2024 17:37:22.542 [background-preinit] Version - HV000001: Hibernate Validator 8.0.1.Final
[INFO ] 05-03-2024 17:37:22.641 [main] TestSpringBootApplication - Starting TestSpringBootApplication using Java 17.0.10 with PID 20676 (/home/dima/backend_microservice/UserProductsMicroService/target/classes started by dima in /home/dima/backend_microservice/UserProductsMicroService)
[INFO ] 05-03-2024 17:37:22.666 [main] TestSpringBootApplication - No active profile set, falling back to 1 default profile: "default"
[INFO ] 05-03-2024 17:37:24.365 [main] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
[INFO ] 05-03-2024 17:37:24.367 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data R2DBC repositories in DEFAULT mode.
[INFO ] 05-03-2024 17:37:24.853 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 472 ms. Found 1 R2DBC repository interfaces.
[INFO ] 05-03-2024 17:37:25.431 [main] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
[INFO ] 05-03-2024 17:37:25.433 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO ] 05-03-2024 17:37:25.465 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 24 ms. Found 0 JPA repository interfaces.
[ERROR] 05-03-2024 17:37:26.618 [main] AprLifecycleListener - An incompatible version [1.2.23] of the Apache Tomcat Native library is installed, while Tomcat requires version [1.2.34]
[INFO ] 05-03-2024 17:37:27.512 [main] TomcatWebServer - Tomcat initialized with port(s): 8300 (http)
[INFO ] 05-03-2024 17:37:27.539 [main] Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8300"]
[INFO ] 05-03-2024 17:37:27.545 [main] StandardService - Starting service [Tomcat]
[INFO ] 05-03-2024 17:37:27.546 [main] StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.11]
[INFO ] 05-03-2024 17:37:28.635 [main] TldScanner - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
[INFO ] 05-03-2024 17:37:28.659 [main] [/users_products_api] - Initializing Spring embedded WebApplicationContext
[INFO ] 05-03-2024 17:37:28.666 [main] ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 5823 ms
[INFO ] 05-03-2024 17:37:30.072 [main] Version - HHH000412: Hibernate ORM core version 6.2.6.Final
[INFO ] 05-03-2024 17:37:30.078 [main] Environment - HHH000406: Using bytecode reflection optimizer
[DEBUG] 05-03-2024 17:37:30.446 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@7d12429
[DEBUG] 05-03-2024 17:37:30.447 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@7d12429
[DEBUG] 05-03-2024 17:37:30.448 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@7d12429
[DEBUG] 05-03-2024 17:37:30.448 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@14656be5
[DEBUG] 05-03-2024 17:37:30.448 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@14656be5
[DEBUG] 05-03-2024 17:37:30.449 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@20be890d
[DEBUG] 05-03-2024 17:37:30.449 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@20be890d
[DEBUG] 05-03-2024 17:37:30.450 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@5db9f51f
[DEBUG] 05-03-2024 17:37:30.450 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@5db9f51f
[DEBUG] 05-03-2024 17:37:30.451 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@534762ed
[DEBUG] 05-03-2024 17:37:30.451 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@534762ed
[DEBUG] 05-03-2024 17:37:30.452 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@534762ed
[DEBUG] 05-03-2024 17:37:30.452 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@6c421123
[DEBUG] 05-03-2024 17:37:30.452 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@6c421123
[DEBUG] 05-03-2024 17:37:30.453 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@6c421123
[DEBUG] 05-03-2024 17:37:30.453 [main] BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@38e00b47
[DEBUG] 05-03-2024 17:37:30.454 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@38e00b47
[DEBUG] 05-03-2024 17:37:30.454 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@2a631049
[DEBUG] 05-03-2024 17:37:30.455 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@425b5fe2
[DEBUG] 05-03-2024 17:37:30.455 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@425b5fe2
[DEBUG] 05-03-2024 17:37:30.455 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@3eec8583
[DEBUG] 05-03-2024 17:37:30.456 [main] BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@66e1b2a
[DEBUG] 05-03-2024 17:37:30.456 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@343db2f6
[DEBUG] 05-03-2024 17:37:30.457 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@343db2f6
[DEBUG] 05-03-2024 17:37:30.457 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@343db2f6
[DEBUG] 05-03-2024 17:37:30.458 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@2c815fdc
[DEBUG] 05-03-2024 17:37:30.458 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@2c815fdc
[DEBUG] 05-03-2024 17:37:30.458 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@2c815fdc
[DEBUG] 05-03-2024 17:37:30.459 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@769b0752
[DEBUG] 05-03-2024 17:37:30.459 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@769b0752
[DEBUG] 05-03-2024 17:37:30.460 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@769b0752
[DEBUG] 05-03-2024 17:37:30.460 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@dae5e0
[DEBUG] 05-03-2024 17:37:30.460 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@dae5e0
[DEBUG] 05-03-2024 17:37:30.461 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@dae5e0
[DEBUG] 05-03-2024 17:37:30.461 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@59a94d0f
[DEBUG] 05-03-2024 17:37:30.462 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@59a94d0f
[DEBUG] 05-03-2024 17:37:30.462 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@59a94d0f
[DEBUG] 05-03-2024 17:37:30.462 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@7ff09659
[DEBUG] 05-03-2024 17:37:30.463 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@7ff09659
[DEBUG] 05-03-2024 17:37:30.463 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@517fbf62
[DEBUG] 05-03-2024 17:37:30.463 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@517fbf62
[DEBUG] 05-03-2024 17:37:30.464 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@65db548
[DEBUG] 05-03-2024 17:37:30.464 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@65db548
[DEBUG] 05-03-2024 17:37:30.464 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@65db548
[DEBUG] 05-03-2024 17:37:30.465 [main] BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@150f41b9
[DEBUG] 05-03-2024 17:37:30.465 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@6e364f1f
[DEBUG] 05-03-2024 17:37:30.465 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@6e364f1f
[DEBUG] 05-03-2024 17:37:30.466 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@429e7914
[DEBUG] 05-03-2024 17:37:30.466 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@298263fa
[DEBUG] 05-03-2024 17:37:30.466 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@298263fa
[DEBUG] 05-03-2024 17:37:30.467 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@298263fa
[DEBUG] 05-03-2024 17:37:30.467 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@466fedfa
[DEBUG] 05-03-2024 17:37:30.467 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@1a7d0c9f
[DEBUG] 05-03-2024 17:37:30.468 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@2b1a901d
[DEBUG] 05-03-2024 17:37:30.468 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@11bdab37
[DEBUG] 05-03-2024 17:37:30.468 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@11bdab37
[DEBUG] 05-03-2024 17:37:30.469 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@280484c7
[DEBUG] 05-03-2024 17:37:30.469 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@280484c7
[DEBUG] 05-03-2024 17:37:30.469 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@5a6f6cac
[DEBUG] 05-03-2024 17:37:30.470 [main] BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@258a8584
[DEBUG] 05-03-2024 17:37:30.470 [main] BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@59127611
[DEBUG] 05-03-2024 17:37:30.470 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@553ce348
[DEBUG] 05-03-2024 17:37:30.470 [main] BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@7417ef4f
[DEBUG] 05-03-2024 17:37:30.470 [main] BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@5c0e2ec
[DEBUG] 05-03-2024 17:37:30.471 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@4fa8bebb
[DEBUG] 05-03-2024 17:37:30.471 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@4fa8bebb
[DEBUG] 05-03-2024 17:37:30.471 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@7d3c22a5
[DEBUG] 05-03-2024 17:37:30.472 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@7d3c22a5
[DEBUG] 05-03-2024 17:37:30.472 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@369ad7da
[DEBUG] 05-03-2024 17:37:30.472 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@369ad7da
[DEBUG] 05-03-2024 17:37:30.472 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@344f9467
[DEBUG] 05-03-2024 17:37:30.473 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@344f9467
[DEBUG] 05-03-2024 17:37:30.473 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@3e98b933
[DEBUG] 05-03-2024 17:37:30.473 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@3e98b933
[DEBUG] 05-03-2024 17:37:30.474 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@222d9d4f
[DEBUG] 05-03-2024 17:37:30.474 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4269aad7
[DEBUG] 05-03-2024 17:37:30.474 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@a4df251
[DEBUG] 05-03-2024 17:37:30.475 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@a4df251
[DEBUG] 05-03-2024 17:37:30.475 [main] BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@71e7830a
[DEBUG] 05-03-2024 17:37:30.475 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@3feebf9c
[DEBUG] 05-03-2024 17:37:30.476 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@305e95a4
[DEBUG] 05-03-2024 17:37:30.476 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@55e42684
[DEBUG] 05-03-2024 17:37:30.476 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@55e42684
[DEBUG] 05-03-2024 17:37:30.477 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@18d610e1
[DEBUG] 05-03-2024 17:37:30.477 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@528e5e38
[DEBUG] 05-03-2024 17:37:30.477 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@16391278
[DEBUG] 05-03-2024 17:37:30.478 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@16391278
[DEBUG] 05-03-2024 17:37:30.478 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@621dc63d
[DEBUG] 05-03-2024 17:37:30.478 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@621dc63d
[DEBUG] 05-03-2024 17:37:30.478 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@4ae49387
[DEBUG] 05-03-2024 17:37:30.479 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@4ae49387
[DEBUG] 05-03-2024 17:37:30.479 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@4ae49387
[DEBUG] 05-03-2024 17:37:30.480 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@6abb7b7d
[DEBUG] 05-03-2024 17:37:30.480 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@6abb7b7d
[DEBUG] 05-03-2024 17:37:30.480 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@6abb7b7d
[DEBUG] 05-03-2024 17:37:30.480 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@34cf0e80
[DEBUG] 05-03-2024 17:37:30.481 [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@38ef1a0a
[DEBUG] 05-03-2024 17:37:30.481 [main] BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@56f9de3b
[DEBUG] 05-03-2024 17:37:30.482 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@56f9de3b
[DEBUG] 05-03-2024 17:37:30.482 [main] BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@6728370a
[DEBUG] 05-03-2024 17:37:30.482 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@6728370a
[DEBUG] 05-03-2024 17:37:30.482 [main] BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@6728370a
[DEBUG] 05-03-2024 17:37:30.483 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@2b5f8e61
[DEBUG] 05-03-2024 17:37:30.483 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@6ba0ee4a
[DEBUG] 05-03-2024 17:37:30.483 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@73b0ed03
[DEBUG] 05-03-2024 17:37:30.484 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@73b0ed03
[DEBUG] 05-03-2024 17:37:30.484 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@55061418
[DEBUG] 05-03-2024 17:37:30.484 [main] BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@55061418
[DEBUG] 05-03-2024 17:37:30.485 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@55061418
[DEBUG] 05-03-2024 17:37:30.485 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@27db45f
[DEBUG] 05-03-2024 17:37:30.486 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@27db45f
[DEBUG] 05-03-2024 17:37:30.486 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@6ec3d8e4
[DEBUG] 05-03-2024 17:37:30.492 [main] BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@6ec3d8e4
[DEBUG] 05-03-2024 17:37:30.493 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@1aeff8ca
[DEBUG] 05-03-2024 17:37:30.493 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@1aeff8ca
[DEBUG] 05-03-2024 17:37:30.493 [main] BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@7f2c995b
[DEBUG] 05-03-2024 17:37:30.494 [main] BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@7f2c995b
[DEBUG] 05-03-2024 17:37:30.494 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@101c15ad
[DEBUG] 05-03-2024 17:37:30.494 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@101c15ad
[DEBUG] 05-03-2024 17:37:30.495 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@6068ebb2
[DEBUG] 05-03-2024 17:37:30.506 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@1dca62c2
[DEBUG] 05-03-2024 17:37:30.507 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@1dca62c2
[DEBUG] 05-03-2024 17:37:30.509 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@604c7e9b
[DEBUG] 05-03-2024 17:37:30.513 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@19d27c27
[DEBUG] 05-03-2024 17:37:30.514 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@6181bc4a
[DEBUG] 05-03-2024 17:37:30.514 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@70485aa
[DEBUG] 05-03-2024 17:37:30.514 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@4bf8b77
[DEBUG] 05-03-2024 17:37:30.515 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@e06ec83
[DEBUG] 05-03-2024 17:37:30.515 [main] BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@628962e5
[DEBUG] 05-03-2024 17:37:30.515 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@410382cb
[DEBUG] 05-03-2024 17:37:30.515 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@399f5daf
[DEBUG] 05-03-2024 17:37:31.572 [main] DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2c154508) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@395eb363)
[DEBUG] 05-03-2024 17:37:31.578 [main] JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
[DEBUG] 05-03-2024 17:37:31.579 [main] JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 05-03-2024 17:37:31.598 [main] BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@6b64429e
[DEBUG] 05-03-2024 17:37:31.599 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@6b64429e
[DEBUG] 05-03-2024 17:37:31.600 [main] BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@1dca62c2`
[DEBUG] 05-03-2024 17:37:31.602 [main] JdbcTypeRegistry - addDescriptor(3100, NumericTypeDescriptor) replaced previous registration(org.hibernate.dialect.PostgreSQLIntervalSecondJdbcType@3df04fa1)
[DEBUG] 05-03-2024 17:37:31.615 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 05-03-2024 17:37:31.616 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 05-03-2024 17:37:31.616 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 05-03-2024 17:37:31.617 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 05-03-2024 17:37:31.617 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 05-03-2024 17:37:31.618 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 05-03-2024 17:37:31.620 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 05-03-2024 17:37:31.621 [main] BasicTypeRegistry - Adding type registration OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 05-03-2024 17:37:31.622 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 05-03-2024 17:37:31.625 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@391dfe7c] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@702cfbde]
[WARN ] 05-03-2024 17:37:31.939 [main] InFlightMetadataCollectorImpl - HHH000069: Duplicate generator name generator
[INFO ] 05-03-2024 17:37:32.158 [main] BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
[INFO ] 05-03-2024 17:37:34.431 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 05-03-2024 17:37:34.434 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@391dfe7c] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@2e60d4f4]
[TRACE] 05-03-2024 17:37:34.441 [main] TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@2e60d4f4] for TypeConfiguration
[WARN ] 05-03-2024 17:37:34.834 [main] JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[INFO ] 05-03-2024 17:37:35.831 [main] Http11NioProtocol - Starting ProtocolHandler ["http-nio-8300"]
[INFO ] 05-03-2024 17:37:35.909 [main] TomcatWebServer - Tomcat started on port(s): 8300 (http) with context path '/users_products_api'
[INFO ] 05-03-2024 17:37:35.941 [main] TestSpringBootApplication - Started TestSpringBootApplication in 14.246 seconds (process running for 17.083)
[INFO ] 05-03-2024 17:37:39.449 [http-nio-8300-exec-1] [/users_products_api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[INFO ] 05-03-2024 17:37:39.450 [http-nio-8300-exec-1] DispatcherServlet - Initializing Servlet 'dispatcherServlet'
[INFO ] 05-03-2024 17:37:39.453 [http-nio-8300-exec-1] DispatcherServlet - Completed initialization in 3 ms
[TRACE] 05-03-2024 17:38:06.027 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@2e60d4f4] for TypeConfiguration
[DEBUG] 05-03-2024 17:38:06.028 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@50c27a3] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@2e60d4f4]

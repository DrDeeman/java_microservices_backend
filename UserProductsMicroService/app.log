[INFO ] 28-02-2024 12:04:55.451 [background-preinit] Version - HV000001: Hibernate Validator 8.0.1.Final
[INFO ] 28-02-2024 12:04:55.664 [main] TestSpringBootApplication - Starting TestSpringBootApplication using Java 17.0.10 with PID 1344403 (/home/dima/backend_microservice/UserProductsMicroService/target/classes started by dima in /home/dima/backend_microservice/UserProductsMicroService)
[INFO ] 28-02-2024 12:04:55.693 [main] TestSpringBootApplication - No active profile set, falling back to 1 default profile: "default"
[INFO ] 28-02-2024 12:04:57.632 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO ] 28-02-2024 12:04:57.688 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 18 ms. Found 0 JPA repository interfaces.
[ERROR] 28-02-2024 12:04:59.713 [main] AprLifecycleListener - An incompatible version [1.2.23] of the Apache Tomcat Native library is installed, while Tomcat requires version [1.2.34]
[INFO ] 28-02-2024 12:05:00.522 [main] TomcatWebServer - Tomcat initialized with port(s): 8300 (http)
[INFO ] 28-02-2024 12:05:00.557 [main] Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8300"]
[INFO ] 28-02-2024 12:05:00.565 [main] StandardService - Starting service [Tomcat]
[INFO ] 28-02-2024 12:05:00.566 [main] StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.11]
[INFO ] 28-02-2024 12:05:01.914 [main] TldScanner - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
[INFO ] 28-02-2024 12:05:01.946 [main] [/users_products_api] - Initializing Spring embedded WebApplicationContext
[INFO ] 28-02-2024 12:05:01.953 [main] ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 5864 ms
[INFO ] 28-02-2024 12:05:02.345 [main] Version - HHH000412: Hibernate ORM core version 6.2.6.Final
[INFO ] 28-02-2024 12:05:02.355 [main] Environment - HHH000406: Using bytecode reflection optimizer
[DEBUG] 28-02-2024 12:05:02.789 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@19ad75e5
[DEBUG] 28-02-2024 12:05:02.790 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@19ad75e5
[DEBUG] 28-02-2024 12:05:02.791 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@19ad75e5
[DEBUG] 28-02-2024 12:05:02.792 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@7cd5fcf4
[DEBUG] 28-02-2024 12:05:02.792 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@7cd5fcf4
[DEBUG] 28-02-2024 12:05:02.793 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@19cdc217
[DEBUG] 28-02-2024 12:05:02.793 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@19cdc217
[DEBUG] 28-02-2024 12:05:02.795 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@5f5297e3
[DEBUG] 28-02-2024 12:05:02.796 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@5f5297e3
[DEBUG] 28-02-2024 12:05:02.797 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@2d22d3b1
[DEBUG] 28-02-2024 12:05:02.797 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@2d22d3b1
[DEBUG] 28-02-2024 12:05:02.798 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@2d22d3b1
[DEBUG] 28-02-2024 12:05:02.798 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@7ec3a8bd
[DEBUG] 28-02-2024 12:05:02.799 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@7ec3a8bd
[DEBUG] 28-02-2024 12:05:02.799 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@7ec3a8bd
[DEBUG] 28-02-2024 12:05:02.800 [main] BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@9690008
[DEBUG] 28-02-2024 12:05:02.801 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@9690008
[DEBUG] 28-02-2024 12:05:02.802 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@42cf6349
[DEBUG] 28-02-2024 12:05:02.803 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@79cb8ffa
[DEBUG] 28-02-2024 12:05:02.805 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@79cb8ffa
[DEBUG] 28-02-2024 12:05:02.806 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@1a2e563e
[DEBUG] 28-02-2024 12:05:02.807 [main] BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@5b066c33
[DEBUG] 28-02-2024 12:05:02.808 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@62ea8931
[DEBUG] 28-02-2024 12:05:02.808 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@62ea8931
[DEBUG] 28-02-2024 12:05:02.809 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@62ea8931
[DEBUG] 28-02-2024 12:05:02.809 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@47fb7ec9
[DEBUG] 28-02-2024 12:05:02.810 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@47fb7ec9
[DEBUG] 28-02-2024 12:05:02.810 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@47fb7ec9
[DEBUG] 28-02-2024 12:05:02.811 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@2f8c4fae
[DEBUG] 28-02-2024 12:05:02.812 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@2f8c4fae
[DEBUG] 28-02-2024 12:05:02.812 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@2f8c4fae
[DEBUG] 28-02-2024 12:05:02.814 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@4703c998
[DEBUG] 28-02-2024 12:05:02.815 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@4703c998
[DEBUG] 28-02-2024 12:05:02.815 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@4703c998
[DEBUG] 28-02-2024 12:05:02.816 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@71166348
[DEBUG] 28-02-2024 12:05:02.821 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@71166348
[DEBUG] 28-02-2024 12:05:02.822 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@71166348
[DEBUG] 28-02-2024 12:05:02.822 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@6d874695
[DEBUG] 28-02-2024 12:05:02.823 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@6d874695
[DEBUG] 28-02-2024 12:05:02.823 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@20bb85b4
[DEBUG] 28-02-2024 12:05:02.824 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@20bb85b4
[DEBUG] 28-02-2024 12:05:02.827 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@79add732
[DEBUG] 28-02-2024 12:05:02.828 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@79add732
[DEBUG] 28-02-2024 12:05:02.828 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@79add732
[DEBUG] 28-02-2024 12:05:02.829 [main] BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@3be3e76c
[DEBUG] 28-02-2024 12:05:02.829 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@6c07ad6b
[DEBUG] 28-02-2024 12:05:02.830 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@6c07ad6b
[DEBUG] 28-02-2024 12:05:02.830 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@10ed037a
[DEBUG] 28-02-2024 12:05:02.831 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@76e4212
[DEBUG] 28-02-2024 12:05:02.831 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@76e4212
[DEBUG] 28-02-2024 12:05:02.832 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@76e4212
[DEBUG] 28-02-2024 12:05:02.832 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@23121d14
[DEBUG] 28-02-2024 12:05:02.833 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@72af90e8
[DEBUG] 28-02-2024 12:05:02.833 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@aa1bb14
[DEBUG] 28-02-2024 12:05:02.837 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@7faa0680
[DEBUG] 28-02-2024 12:05:02.838 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@7faa0680
[DEBUG] 28-02-2024 12:05:02.838 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@4c635edc
[DEBUG] 28-02-2024 12:05:02.839 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@4c635edc
[DEBUG] 28-02-2024 12:05:02.839 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@4245bf68
[DEBUG] 28-02-2024 12:05:02.840 [main] BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@45bbc52f
[DEBUG] 28-02-2024 12:05:02.840 [main] BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@6a8a551e
[DEBUG] 28-02-2024 12:05:02.841 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@3cc9632d
[DEBUG] 28-02-2024 12:05:02.841 [main] BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@53982523
[DEBUG] 28-02-2024 12:05:02.841 [main] BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@489110c2
[DEBUG] 28-02-2024 12:05:02.842 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@700b9e6b
[DEBUG] 28-02-2024 12:05:02.842 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@700b9e6b
[DEBUG] 28-02-2024 12:05:02.843 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@7ac5b4c
[DEBUG] 28-02-2024 12:05:02.843 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@7ac5b4c
[DEBUG] 28-02-2024 12:05:02.844 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@150fc7a7
[DEBUG] 28-02-2024 12:05:02.844 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@150fc7a7
[DEBUG] 28-02-2024 12:05:02.844 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@55d8c2c4
[DEBUG] 28-02-2024 12:05:02.846 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@55d8c2c4
[DEBUG] 28-02-2024 12:05:02.848 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@798cf6d2
[DEBUG] 28-02-2024 12:05:02.849 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@798cf6d2
[DEBUG] 28-02-2024 12:05:02.849 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@1c1fa494
[DEBUG] 28-02-2024 12:05:02.850 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@77c66a4f
[DEBUG] 28-02-2024 12:05:02.852 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@649b5891
[DEBUG] 28-02-2024 12:05:02.853 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@649b5891
[DEBUG] 28-02-2024 12:05:02.853 [main] BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@7a3f08b6
[DEBUG] 28-02-2024 12:05:02.854 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@1be52861
[DEBUG] 28-02-2024 12:05:02.854 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@5fb5ad40
[DEBUG] 28-02-2024 12:05:02.855 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@615439f7
[DEBUG] 28-02-2024 12:05:02.856 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@615439f7
[DEBUG] 28-02-2024 12:05:02.856 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@632cf7d3
[DEBUG] 28-02-2024 12:05:02.857 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@51b87df7
[DEBUG] 28-02-2024 12:05:02.857 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@2315052d
[DEBUG] 28-02-2024 12:05:02.857 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@2315052d
[DEBUG] 28-02-2024 12:05:02.858 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@634e1b39
[DEBUG] 28-02-2024 12:05:02.858 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@634e1b39
[DEBUG] 28-02-2024 12:05:02.859 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@67d8faec
[DEBUG] 28-02-2024 12:05:02.859 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@67d8faec
[DEBUG] 28-02-2024 12:05:02.861 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@67d8faec
[DEBUG] 28-02-2024 12:05:02.861 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@751d7425
[DEBUG] 28-02-2024 12:05:02.862 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@751d7425
[DEBUG] 28-02-2024 12:05:02.862 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@751d7425
[DEBUG] 28-02-2024 12:05:02.862 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@7eaa2bc6
[DEBUG] 28-02-2024 12:05:02.867 [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@6dae70f9
[DEBUG] 28-02-2024 12:05:02.868 [main] BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@4d81e83a
[DEBUG] 28-02-2024 12:05:02.868 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@4d81e83a
[DEBUG] 28-02-2024 12:05:02.869 [main] BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@53a301f3
[DEBUG] 28-02-2024 12:05:02.869 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@53a301f3
[DEBUG] 28-02-2024 12:05:02.870 [main] BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@53a301f3
[DEBUG] 28-02-2024 12:05:02.870 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@7cf8f45a
[DEBUG] 28-02-2024 12:05:02.870 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@62cf6a84
[DEBUG] 28-02-2024 12:05:02.871 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@204d9edf
[DEBUG] 28-02-2024 12:05:02.871 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@204d9edf
[DEBUG] 28-02-2024 12:05:02.872 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@6b2aafbc
[DEBUG] 28-02-2024 12:05:02.872 [main] BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@6b2aafbc
[DEBUG] 28-02-2024 12:05:02.872 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@6b2aafbc
[DEBUG] 28-02-2024 12:05:02.873 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@50cbcca7
[DEBUG] 28-02-2024 12:05:02.873 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@50cbcca7
[DEBUG] 28-02-2024 12:05:02.874 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@49491770
[DEBUG] 28-02-2024 12:05:02.874 [main] BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@49491770
[DEBUG] 28-02-2024 12:05:02.875 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@5bec3e0
[DEBUG] 28-02-2024 12:05:02.875 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@5bec3e0
[DEBUG] 28-02-2024 12:05:02.876 [main] BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@3b57dba4
[DEBUG] 28-02-2024 12:05:02.877 [main] BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@3b57dba4
[DEBUG] 28-02-2024 12:05:02.877 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@35f7969d
[DEBUG] 28-02-2024 12:05:02.877 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@35f7969d
[DEBUG] 28-02-2024 12:05:02.878 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@3404e5c4
[DEBUG] 28-02-2024 12:05:02.895 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@6ddc67d0
[DEBUG] 28-02-2024 12:05:02.896 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@6ddc67d0
[DEBUG] 28-02-2024 12:05:02.899 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@165614f5
[DEBUG] 28-02-2024 12:05:02.900 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@6e685e6c
[DEBUG] 28-02-2024 12:05:02.900 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@5b0902b4
[DEBUG] 28-02-2024 12:05:02.901 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@9d3d54e
[DEBUG] 28-02-2024 12:05:02.901 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@2f04993d
[DEBUG] 28-02-2024 12:05:02.902 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@333398f
[DEBUG] 28-02-2024 12:05:02.902 [main] BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@103c97ff
[DEBUG] 28-02-2024 12:05:02.903 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@7d25913
[DEBUG] 28-02-2024 12:05:02.903 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@c14e5a5
[DEBUG] 28-02-2024 12:05:04.256 [main] DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7ea3839e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@16b76858)
[DEBUG] 28-02-2024 12:05:04.263 [main] JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
[DEBUG] 28-02-2024 12:05:04.264 [main] JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 28-02-2024 12:05:04.286 [main] BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@17c53dfb
[DEBUG] 28-02-2024 12:05:04.286 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@17c53dfb
[DEBUG] 28-02-2024 12:05:04.287 [main] BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@6ddc67d0`
[DEBUG] 28-02-2024 12:05:04.294 [main] JdbcTypeRegistry - addDescriptor(3100, NumericTypeDescriptor) replaced previous registration(org.hibernate.dialect.PostgreSQLIntervalSecondJdbcType@247bbfba)
[DEBUG] 28-02-2024 12:05:04.309 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 28-02-2024 12:05:04.310 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 28-02-2024 12:05:04.310 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 28-02-2024 12:05:04.311 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 28-02-2024 12:05:04.311 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 28-02-2024 12:05:04.312 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 28-02-2024 12:05:04.314 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 28-02-2024 12:05:04.314 [main] BasicTypeRegistry - Adding type registration OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 28-02-2024 12:05:04.315 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 28-02-2024 12:05:04.320 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5a13f1f7] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@5dae5a70]
[INFO ] 28-02-2024 12:05:04.488 [main] BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
[INFO ] 28-02-2024 12:05:05.744 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 28-02-2024 12:05:05.748 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5a13f1f7] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@115ef673]
[TRACE] 28-02-2024 12:05:05.763 [main] TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@115ef673] for TypeConfiguration
[WARN ] 28-02-2024 12:05:06.405 [main] JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[INFO ] 28-02-2024 12:05:07.465 [main] Http11NioProtocol - Starting ProtocolHandler ["http-nio-8300"]
[INFO ] 28-02-2024 12:05:07.525 [main] TomcatWebServer - Tomcat started on port(s): 8300 (http) with context path '/users_products_api'
[INFO ] 28-02-2024 12:05:07.558 [main] TestSpringBootApplication - Started TestSpringBootApplication in 13.082 seconds (process running for 19.827)
[TRACE] 28-02-2024 12:06:22.594 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@115ef673] for TypeConfiguration
[DEBUG] 28-02-2024 12:06:22.595 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@33a98cf4] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@115ef673]
[INFO ] 28-02-2024 12:54:06.295 [background-preinit] Version - HV000001: Hibernate Validator 8.0.1.Final
[INFO ] 28-02-2024 12:54:06.644 [main] TestSpringBootApplication - Starting TestSpringBootApplication using Java 17.0.10 with PID 1370017 (/home/dima/backend_microservice/UserProductsMicroService/target/classes started by dima in /home/dima/backend_microservice/UserProductsMicroService)
[INFO ] 28-02-2024 12:54:06.669 [main] TestSpringBootApplication - No active profile set, falling back to 1 default profile: "default"
[INFO ] 28-02-2024 12:54:08.699 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO ] 28-02-2024 12:54:08.768 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 18 ms. Found 0 JPA repository interfaces.
[ERROR] 28-02-2024 12:54:11.037 [main] AprLifecycleListener - An incompatible version [1.2.23] of the Apache Tomcat Native library is installed, while Tomcat requires version [1.2.34]
[INFO ] 28-02-2024 12:54:11.790 [main] TomcatWebServer - Tomcat initialized with port(s): 8300 (http)
[INFO ] 28-02-2024 12:54:11.870 [main] Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8300"]
[INFO ] 28-02-2024 12:54:11.879 [main] StandardService - Starting service [Tomcat]
[INFO ] 28-02-2024 12:54:11.880 [main] StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.11]
[INFO ] 28-02-2024 12:54:12.851 [main] TldScanner - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
[INFO ] 28-02-2024 12:54:12.882 [main] [/users_products_api] - Initializing Spring embedded WebApplicationContext
[INFO ] 28-02-2024 12:54:12.888 [main] ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 5905 ms
[INFO ] 28-02-2024 12:54:13.265 [main] Version - HHH000412: Hibernate ORM core version 6.2.6.Final
[INFO ] 28-02-2024 12:54:13.277 [main] Environment - HHH000406: Using bytecode reflection optimizer
[DEBUG] 28-02-2024 12:54:13.740 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@79add732
[DEBUG] 28-02-2024 12:54:13.740 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@79add732
[DEBUG] 28-02-2024 12:54:13.741 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@79add732
[DEBUG] 28-02-2024 12:54:13.742 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@3be3e76c
[DEBUG] 28-02-2024 12:54:13.743 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@3be3e76c
[DEBUG] 28-02-2024 12:54:13.743 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@6c07ad6b
[DEBUG] 28-02-2024 12:54:13.744 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@6c07ad6b
[DEBUG] 28-02-2024 12:54:13.744 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@10ed037a
[DEBUG] 28-02-2024 12:54:13.745 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@10ed037a
[DEBUG] 28-02-2024 12:54:13.745 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@76e4212
[DEBUG] 28-02-2024 12:54:13.746 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@76e4212
[DEBUG] 28-02-2024 12:54:13.746 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@76e4212
[DEBUG] 28-02-2024 12:54:13.746 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@23121d14
[DEBUG] 28-02-2024 12:54:13.747 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@23121d14
[DEBUG] 28-02-2024 12:54:13.747 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@23121d14
[DEBUG] 28-02-2024 12:54:13.748 [main] BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@72af90e8
[DEBUG] 28-02-2024 12:54:13.748 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@72af90e8
[DEBUG] 28-02-2024 12:54:13.749 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@aa1bb14
[DEBUG] 28-02-2024 12:54:13.750 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@7faa0680
[DEBUG] 28-02-2024 12:54:13.750 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@7faa0680
[DEBUG] 28-02-2024 12:54:13.751 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@4c635edc
[DEBUG] 28-02-2024 12:54:13.751 [main] BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@4245bf68
[DEBUG] 28-02-2024 12:54:13.751 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@45bbc52f
[DEBUG] 28-02-2024 12:54:13.752 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@45bbc52f
[DEBUG] 28-02-2024 12:54:13.752 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@45bbc52f
[DEBUG] 28-02-2024 12:54:13.753 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@6a8a551e
[DEBUG] 28-02-2024 12:54:13.753 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@6a8a551e
[DEBUG] 28-02-2024 12:54:13.754 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@6a8a551e
[DEBUG] 28-02-2024 12:54:13.754 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@3cc9632d
[DEBUG] 28-02-2024 12:54:13.754 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@3cc9632d
[DEBUG] 28-02-2024 12:54:13.755 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@3cc9632d
[DEBUG] 28-02-2024 12:54:13.755 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@53982523
[DEBUG] 28-02-2024 12:54:13.757 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@53982523
[DEBUG] 28-02-2024 12:54:13.757 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@53982523
[DEBUG] 28-02-2024 12:54:13.757 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@489110c2
[DEBUG] 28-02-2024 12:54:13.758 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@489110c2
[DEBUG] 28-02-2024 12:54:13.758 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@489110c2
[DEBUG] 28-02-2024 12:54:13.759 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@700b9e6b
[DEBUG] 28-02-2024 12:54:13.759 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@700b9e6b
[DEBUG] 28-02-2024 12:54:13.760 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@7ac5b4c
[DEBUG] 28-02-2024 12:54:13.761 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@7ac5b4c
[DEBUG] 28-02-2024 12:54:13.761 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@150fc7a7
[DEBUG] 28-02-2024 12:54:13.762 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@150fc7a7
[DEBUG] 28-02-2024 12:54:13.762 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@150fc7a7
[DEBUG] 28-02-2024 12:54:13.763 [main] BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@55d8c2c4
[DEBUG] 28-02-2024 12:54:13.763 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@798cf6d2
[DEBUG] 28-02-2024 12:54:13.763 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@798cf6d2
[DEBUG] 28-02-2024 12:54:13.764 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@1c1fa494
[DEBUG] 28-02-2024 12:54:13.764 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@77c66a4f
[DEBUG] 28-02-2024 12:54:13.765 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@77c66a4f
[DEBUG] 28-02-2024 12:54:13.765 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@77c66a4f
[DEBUG] 28-02-2024 12:54:13.766 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@649b5891
[DEBUG] 28-02-2024 12:54:13.766 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@7a3f08b6
[DEBUG] 28-02-2024 12:54:13.766 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@1be52861
[DEBUG] 28-02-2024 12:54:13.767 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@5fb5ad40
[DEBUG] 28-02-2024 12:54:13.768 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@5fb5ad40
[DEBUG] 28-02-2024 12:54:13.768 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@615439f7
[DEBUG] 28-02-2024 12:54:13.769 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@615439f7
[DEBUG] 28-02-2024 12:54:13.769 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@632cf7d3
[DEBUG] 28-02-2024 12:54:13.769 [main] BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@51b87df7
[DEBUG] 28-02-2024 12:54:13.770 [main] BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@2315052d
[DEBUG] 28-02-2024 12:54:13.770 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@634e1b39
[DEBUG] 28-02-2024 12:54:13.771 [main] BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@67d8faec
[DEBUG] 28-02-2024 12:54:13.771 [main] BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@751d7425
[DEBUG] 28-02-2024 12:54:13.772 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@7eaa2bc6
[DEBUG] 28-02-2024 12:54:13.772 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@7eaa2bc6
[DEBUG] 28-02-2024 12:54:13.772 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@6dae70f9
[DEBUG] 28-02-2024 12:54:13.773 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@6dae70f9
[DEBUG] 28-02-2024 12:54:13.773 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@4d81e83a
[DEBUG] 28-02-2024 12:54:13.773 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@4d81e83a
[DEBUG] 28-02-2024 12:54:13.774 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@53a301f3
[DEBUG] 28-02-2024 12:54:13.774 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@53a301f3
[DEBUG] 28-02-2024 12:54:13.775 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@7cf8f45a
[DEBUG] 28-02-2024 12:54:13.775 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@7cf8f45a
[DEBUG] 28-02-2024 12:54:13.775 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@62cf6a84
[DEBUG] 28-02-2024 12:54:13.776 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@204d9edf
[DEBUG] 28-02-2024 12:54:13.776 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@6b2aafbc
[DEBUG] 28-02-2024 12:54:13.776 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@6b2aafbc
[DEBUG] 28-02-2024 12:54:13.777 [main] BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@50cbcca7
[DEBUG] 28-02-2024 12:54:13.777 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@49491770
[DEBUG] 28-02-2024 12:54:13.778 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@5bec3e0
[DEBUG] 28-02-2024 12:54:13.778 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@3b57dba4
[DEBUG] 28-02-2024 12:54:13.778 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@3b57dba4
[DEBUG] 28-02-2024 12:54:13.779 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@35f7969d
[DEBUG] 28-02-2024 12:54:13.779 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3404e5c4
[DEBUG] 28-02-2024 12:54:13.779 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@47569167
[DEBUG] 28-02-2024 12:54:13.780 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@47569167
[DEBUG] 28-02-2024 12:54:13.780 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@42d9e8d2
[DEBUG] 28-02-2024 12:54:13.780 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@42d9e8d2
[DEBUG] 28-02-2024 12:54:13.781 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@4b93dd6a
[DEBUG] 28-02-2024 12:54:13.781 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@4b93dd6a
[DEBUG] 28-02-2024 12:54:13.781 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@4b93dd6a
[DEBUG] 28-02-2024 12:54:13.782 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@582a3b19
[DEBUG] 28-02-2024 12:54:13.782 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@582a3b19
[DEBUG] 28-02-2024 12:54:13.782 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@582a3b19
[DEBUG] 28-02-2024 12:54:13.783 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@2b0454d2
[DEBUG] 28-02-2024 12:54:13.783 [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@2616b618
[DEBUG] 28-02-2024 12:54:13.784 [main] BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@73bb573d
[DEBUG] 28-02-2024 12:54:13.784 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@73bb573d
[DEBUG] 28-02-2024 12:54:13.784 [main] BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@7ac058a0
[DEBUG] 28-02-2024 12:54:13.784 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@7ac058a0
[DEBUG] 28-02-2024 12:54:13.785 [main] BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@7ac058a0
[DEBUG] 28-02-2024 12:54:13.785 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@736b21ee
[DEBUG] 28-02-2024 12:54:13.785 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@60deefed
[DEBUG] 28-02-2024 12:54:13.785 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@49754e74
[DEBUG] 28-02-2024 12:54:13.786 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@49754e74
[DEBUG] 28-02-2024 12:54:13.786 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@31881aa2
[DEBUG] 28-02-2024 12:54:13.787 [main] BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@31881aa2
[DEBUG] 28-02-2024 12:54:13.787 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@31881aa2
[DEBUG] 28-02-2024 12:54:13.787 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@1b46392c
[DEBUG] 28-02-2024 12:54:13.788 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@1b46392c
[DEBUG] 28-02-2024 12:54:13.788 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@cf01c2e
[DEBUG] 28-02-2024 12:54:13.789 [main] BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@cf01c2e
[DEBUG] 28-02-2024 12:54:13.789 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@6f15f52a
[DEBUG] 28-02-2024 12:54:13.789 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@6f15f52a
[DEBUG] 28-02-2024 12:54:13.790 [main] BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@1eb9bf60
[DEBUG] 28-02-2024 12:54:13.790 [main] BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@1eb9bf60
[DEBUG] 28-02-2024 12:54:13.790 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@341c6ac2
[DEBUG] 28-02-2024 12:54:13.791 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@341c6ac2
[DEBUG] 28-02-2024 12:54:13.791 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@38811103
[DEBUG] 28-02-2024 12:54:13.805 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@7d25913
[DEBUG] 28-02-2024 12:54:13.805 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@7d25913
[DEBUG] 28-02-2024 12:54:13.808 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@5d14e99e
[DEBUG] 28-02-2024 12:54:13.809 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@38cfecf3
[DEBUG] 28-02-2024 12:54:13.809 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@682618e5
[DEBUG] 28-02-2024 12:54:13.810 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@25ad25f5
[DEBUG] 28-02-2024 12:54:13.810 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@5f0f70c7
[DEBUG] 28-02-2024 12:54:13.810 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@1860a7a1
[DEBUG] 28-02-2024 12:54:13.811 [main] BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@40d96578
[DEBUG] 28-02-2024 12:54:13.811 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@c97721b
[DEBUG] 28-02-2024 12:54:13.811 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@283ab206
[DEBUG] 28-02-2024 12:54:15.258 [main] DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@57bdceaa) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@52909a97)
[DEBUG] 28-02-2024 12:54:15.264 [main] JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
[DEBUG] 28-02-2024 12:54:15.265 [main] JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 28-02-2024 12:54:15.286 [main] BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@79d4ff58
[DEBUG] 28-02-2024 12:54:15.286 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@79d4ff58
[DEBUG] 28-02-2024 12:54:15.287 [main] BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@7d25913`
[DEBUG] 28-02-2024 12:54:15.289 [main] JdbcTypeRegistry - addDescriptor(3100, NumericTypeDescriptor) replaced previous registration(org.hibernate.dialect.PostgreSQLIntervalSecondJdbcType@70f4abc1)
[DEBUG] 28-02-2024 12:54:15.304 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 28-02-2024 12:54:15.305 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 28-02-2024 12:54:15.305 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 28-02-2024 12:54:15.306 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 28-02-2024 12:54:15.306 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 28-02-2024 12:54:15.306 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 28-02-2024 12:54:15.308 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 28-02-2024 12:54:15.309 [main] BasicTypeRegistry - Adding type registration OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 28-02-2024 12:54:15.309 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 28-02-2024 12:54:15.315 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@194911c1] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@4751cd3]
[INFO ] 28-02-2024 12:54:16.088 [main] BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
[INFO ] 28-02-2024 12:54:19.249 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 28-02-2024 12:54:19.250 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@194911c1] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@30e15628]
[TRACE] 28-02-2024 12:54:19.256 [main] TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@30e15628] for TypeConfiguration
[WARN ] 28-02-2024 12:54:19.677 [main] JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[INFO ] 28-02-2024 12:54:21.054 [main] Http11NioProtocol - Starting ProtocolHandler ["http-nio-8300"]
[INFO ] 28-02-2024 12:54:21.112 [main] TomcatWebServer - Tomcat started on port(s): 8300 (http) with context path '/users_products_api'
[INFO ] 28-02-2024 12:54:21.145 [main] TestSpringBootApplication - Started TestSpringBootApplication in 16.062 seconds (process running for 21.726)
[TRACE] 28-02-2024 13:06:46.372 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@30e15628] for TypeConfiguration
[DEBUG] 28-02-2024 13:06:46.373 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@6715ee04] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@30e15628]
[INFO ] 28-02-2024 13:06:56.970 [background-preinit] Version - HV000001: Hibernate Validator 8.0.1.Final
[INFO ] 28-02-2024 13:06:57.063 [main] TestSpringBootApplication - Starting TestSpringBootApplication using Java 17.0.10 with PID 1376672 (/home/dima/backend_microservice/UserProductsMicroService/target/classes started by dima in /home/dima/backend_microservice/UserProductsMicroService)
[INFO ] 28-02-2024 13:06:57.079 [main] TestSpringBootApplication - No active profile set, falling back to 1 default profile: "default"
[INFO ] 28-02-2024 13:06:58.891 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO ] 28-02-2024 13:06:59.362 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 444 ms. Found 1 JPA repository interfaces.
[ERROR] 28-02-2024 13:07:01.420 [main] AprLifecycleListener - An incompatible version [1.2.23] of the Apache Tomcat Native library is installed, while Tomcat requires version [1.2.34]
[INFO ] 28-02-2024 13:07:02.520 [main] TomcatWebServer - Tomcat initialized with port(s): 8300 (http)
[INFO ] 28-02-2024 13:07:02.547 [main] Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8300"]
[INFO ] 28-02-2024 13:07:02.559 [main] StandardService - Starting service [Tomcat]
[INFO ] 28-02-2024 13:07:02.562 [main] StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.11]
[INFO ] 28-02-2024 13:07:04.264 [main] TldScanner - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
[INFO ] 28-02-2024 13:07:04.332 [main] [/users_products_api] - Initializing Spring embedded WebApplicationContext
[INFO ] 28-02-2024 13:07:04.345 [main] ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 7085 ms
[INFO ] 28-02-2024 13:07:05.349 [main] Version - HHH000412: Hibernate ORM core version 6.2.6.Final
[INFO ] 28-02-2024 13:07:05.356 [main] Environment - HHH000406: Using bytecode reflection optimizer
[DEBUG] 28-02-2024 13:07:05.787 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@44faa4f2
[DEBUG] 28-02-2024 13:07:05.788 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@44faa4f2
[DEBUG] 28-02-2024 13:07:05.788 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@44faa4f2
[DEBUG] 28-02-2024 13:07:05.789 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@6793f752
[DEBUG] 28-02-2024 13:07:05.789 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@6793f752
[DEBUG] 28-02-2024 13:07:05.790 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@1216eb3f
[DEBUG] 28-02-2024 13:07:05.792 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@1216eb3f
[DEBUG] 28-02-2024 13:07:05.793 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@59e7564b
[DEBUG] 28-02-2024 13:07:05.794 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@59e7564b
[DEBUG] 28-02-2024 13:07:05.795 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@482ba4b1
[DEBUG] 28-02-2024 13:07:05.795 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@482ba4b1
[DEBUG] 28-02-2024 13:07:05.796 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@482ba4b1
[DEBUG] 28-02-2024 13:07:05.796 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@307af381
[DEBUG] 28-02-2024 13:07:05.797 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@307af381
[DEBUG] 28-02-2024 13:07:05.798 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@307af381
[DEBUG] 28-02-2024 13:07:05.798 [main] BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@1510b9a2
[DEBUG] 28-02-2024 13:07:05.798 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@1510b9a2
[DEBUG] 28-02-2024 13:07:05.799 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@76a6f045
[DEBUG] 28-02-2024 13:07:05.799 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@633ddc0c
[DEBUG] 28-02-2024 13:07:05.800 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@633ddc0c
[DEBUG] 28-02-2024 13:07:05.801 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@4bcdd11
[DEBUG] 28-02-2024 13:07:05.802 [main] BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@1471b98d
[DEBUG] 28-02-2024 13:07:05.802 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@5514579e
[DEBUG] 28-02-2024 13:07:05.803 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@5514579e
[DEBUG] 28-02-2024 13:07:05.803 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@5514579e
[DEBUG] 28-02-2024 13:07:05.804 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@58c42c8c
[DEBUG] 28-02-2024 13:07:05.804 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@58c42c8c
[DEBUG] 28-02-2024 13:07:05.805 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@58c42c8c
[DEBUG] 28-02-2024 13:07:05.805 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@3af236d0
[DEBUG] 28-02-2024 13:07:05.806 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@3af236d0
[DEBUG] 28-02-2024 13:07:05.806 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@3af236d0
[DEBUG] 28-02-2024 13:07:05.806 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@23564dd2
[DEBUG] 28-02-2024 13:07:05.807 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@23564dd2
[DEBUG] 28-02-2024 13:07:05.807 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@23564dd2
[DEBUG] 28-02-2024 13:07:05.808 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@54895681
[DEBUG] 28-02-2024 13:07:05.808 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@54895681
[DEBUG] 28-02-2024 13:07:05.809 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@54895681
[DEBUG] 28-02-2024 13:07:05.809 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@2dd0a0d0
[DEBUG] 28-02-2024 13:07:05.810 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@2dd0a0d0
[DEBUG] 28-02-2024 13:07:05.810 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@6bf570c
[DEBUG] 28-02-2024 13:07:05.811 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@6bf570c
[DEBUG] 28-02-2024 13:07:05.811 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@1796b2d4
[DEBUG] 28-02-2024 13:07:05.812 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@1796b2d4
[DEBUG] 28-02-2024 13:07:05.812 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@1796b2d4
[DEBUG] 28-02-2024 13:07:05.812 [main] BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@935d3f9
[DEBUG] 28-02-2024 13:07:05.813 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@214b342f
[DEBUG] 28-02-2024 13:07:05.813 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@214b342f
[DEBUG] 28-02-2024 13:07:05.814 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@5db0003d
[DEBUG] 28-02-2024 13:07:05.814 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@7f12094d
[DEBUG] 28-02-2024 13:07:05.815 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@7f12094d
[DEBUG] 28-02-2024 13:07:05.815 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@7f12094d
[DEBUG] 28-02-2024 13:07:05.815 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@589fb74d
[DEBUG] 28-02-2024 13:07:05.816 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@200d1a3d
[DEBUG] 28-02-2024 13:07:05.816 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@7de147e9
[DEBUG] 28-02-2024 13:07:05.817 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@12567179
[DEBUG] 28-02-2024 13:07:05.817 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@12567179
[DEBUG] 28-02-2024 13:07:05.817 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@37d699a1
[DEBUG] 28-02-2024 13:07:05.818 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@37d699a1
[DEBUG] 28-02-2024 13:07:05.818 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@7f42b194
[DEBUG] 28-02-2024 13:07:05.818 [main] BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@8eb6f9a
[DEBUG] 28-02-2024 13:07:05.819 [main] BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@29170a47
[DEBUG] 28-02-2024 13:07:05.819 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@2a8f8555
[DEBUG] 28-02-2024 13:07:05.819 [main] BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@402b4f81
[DEBUG] 28-02-2024 13:07:05.820 [main] BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@13ef7fa1
[DEBUG] 28-02-2024 13:07:05.821 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@23b1aa9
[DEBUG] 28-02-2024 13:07:05.821 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@23b1aa9
[DEBUG] 28-02-2024 13:07:05.821 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@54489296
[DEBUG] 28-02-2024 13:07:05.822 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@54489296
[DEBUG] 28-02-2024 13:07:05.823 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@4e8598d9
[DEBUG] 28-02-2024 13:07:05.823 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@4e8598d9
[DEBUG] 28-02-2024 13:07:05.824 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@267ff4df
[DEBUG] 28-02-2024 13:07:05.824 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@267ff4df
[DEBUG] 28-02-2024 13:07:05.824 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@7c4b5ceb
[DEBUG] 28-02-2024 13:07:05.824 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@7c4b5ceb
[DEBUG] 28-02-2024 13:07:05.825 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@6c07add6
[DEBUG] 28-02-2024 13:07:05.825 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@e26a3df
[DEBUG] 28-02-2024 13:07:05.825 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@57a667c8
[DEBUG] 28-02-2024 13:07:05.826 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@57a667c8
[DEBUG] 28-02-2024 13:07:05.826 [main] BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@712cd5d3
[DEBUG] 28-02-2024 13:07:05.826 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2094bf3d
[DEBUG] 28-02-2024 13:07:05.827 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@1b17d8ab
[DEBUG] 28-02-2024 13:07:05.827 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@7f6b7426
[DEBUG] 28-02-2024 13:07:05.830 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@7f6b7426
[DEBUG] 28-02-2024 13:07:05.830 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@687eb455
[DEBUG] 28-02-2024 13:07:05.831 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@6d969330
[DEBUG] 28-02-2024 13:07:05.831 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@4861cca9
[DEBUG] 28-02-2024 13:07:05.831 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@4861cca9
[DEBUG] 28-02-2024 13:07:05.832 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@6c8f4bc7
[DEBUG] 28-02-2024 13:07:05.832 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@6c8f4bc7
[DEBUG] 28-02-2024 13:07:05.832 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@714e861f
[DEBUG] 28-02-2024 13:07:05.833 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@714e861f
[DEBUG] 28-02-2024 13:07:05.833 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@714e861f
[DEBUG] 28-02-2024 13:07:05.834 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@28989415
[DEBUG] 28-02-2024 13:07:05.834 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@28989415
[DEBUG] 28-02-2024 13:07:05.834 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@28989415
[DEBUG] 28-02-2024 13:07:05.834 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@6eda012b
[DEBUG] 28-02-2024 13:07:05.835 [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@781dbe44
[DEBUG] 28-02-2024 13:07:05.835 [main] BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@7d66a126
[DEBUG] 28-02-2024 13:07:05.836 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@7d66a126
[DEBUG] 28-02-2024 13:07:05.836 [main] BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@1132baa3
[DEBUG] 28-02-2024 13:07:05.836 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@1132baa3
[DEBUG] 28-02-2024 13:07:05.836 [main] BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@1132baa3
[DEBUG] 28-02-2024 13:07:05.837 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@2fdf22f7
[DEBUG] 28-02-2024 13:07:05.837 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@3a2546d6
[DEBUG] 28-02-2024 13:07:05.837 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@7282af25
[DEBUG] 28-02-2024 13:07:05.838 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@7282af25
[DEBUG] 28-02-2024 13:07:05.838 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@7661e474
[DEBUG] 28-02-2024 13:07:05.839 [main] BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@7661e474
[DEBUG] 28-02-2024 13:07:05.839 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@7661e474
[DEBUG] 28-02-2024 13:07:05.840 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@20ffb8d5
[DEBUG] 28-02-2024 13:07:05.840 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@20ffb8d5
[DEBUG] 28-02-2024 13:07:05.840 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@307c59ea
[DEBUG] 28-02-2024 13:07:05.841 [main] BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@307c59ea
[DEBUG] 28-02-2024 13:07:05.841 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@57e03347
[DEBUG] 28-02-2024 13:07:05.842 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@57e03347
[DEBUG] 28-02-2024 13:07:05.842 [main] BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@2edb2f8b
[DEBUG] 28-02-2024 13:07:05.842 [main] BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@2edb2f8b
[DEBUG] 28-02-2024 13:07:05.843 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@733f1395
[DEBUG] 28-02-2024 13:07:05.843 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@733f1395
[DEBUG] 28-02-2024 13:07:05.843 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@21dea711
[DEBUG] 28-02-2024 13:07:05.859 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@374c3975
[DEBUG] 28-02-2024 13:07:05.859 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@374c3975
[DEBUG] 28-02-2024 13:07:05.862 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@24691c5
[DEBUG] 28-02-2024 13:07:05.863 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@7b91d9f
[DEBUG] 28-02-2024 13:07:05.864 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@6537ac
[DEBUG] 28-02-2024 13:07:05.864 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@3b218c74
[DEBUG] 28-02-2024 13:07:05.864 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@ddffa6c
[DEBUG] 28-02-2024 13:07:05.865 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@42c54bad
[DEBUG] 28-02-2024 13:07:05.865 [main] BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@6bb4cc0e
[DEBUG] 28-02-2024 13:07:05.865 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@5cc1bf20
[DEBUG] 28-02-2024 13:07:05.866 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@2e3f324e
[DEBUG] 28-02-2024 13:07:07.263 [main] DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6caa4dc5) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6ed51944)
[DEBUG] 28-02-2024 13:07:07.268 [main] JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
[DEBUG] 28-02-2024 13:07:07.269 [main] JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 28-02-2024 13:07:07.291 [main] BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@5f3f3d00
[DEBUG] 28-02-2024 13:07:07.291 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@5f3f3d00
[DEBUG] 28-02-2024 13:07:07.292 [main] BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@374c3975`
[DEBUG] 28-02-2024 13:07:07.295 [main] JdbcTypeRegistry - addDescriptor(3100, NumericTypeDescriptor) replaced previous registration(org.hibernate.dialect.PostgreSQLIntervalSecondJdbcType@75cacb3e)
[DEBUG] 28-02-2024 13:07:07.310 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 28-02-2024 13:07:07.311 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 28-02-2024 13:07:07.311 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 28-02-2024 13:07:07.312 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 28-02-2024 13:07:07.312 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 28-02-2024 13:07:07.312 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 28-02-2024 13:07:07.314 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 28-02-2024 13:07:07.315 [main] BasicTypeRegistry - Adding type registration OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 28-02-2024 13:07:07.315 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 28-02-2024 13:07:07.319 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@778c2e7c] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@b70fa38]
[INFO ] 28-02-2024 13:07:08.077 [main] BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
[INFO ] 28-02-2024 13:07:10.715 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 28-02-2024 13:07:10.717 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@778c2e7c] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@4440750]
[TRACE] 28-02-2024 13:07:10.728 [main] TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@4440750] for TypeConfiguration
[WARN ] 28-02-2024 13:07:11.891 [main] JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[INFO ] 28-02-2024 13:07:13.010 [main] Http11NioProtocol - Starting ProtocolHandler ["http-nio-8300"]
[INFO ] 28-02-2024 13:07:13.085 [main] TomcatWebServer - Tomcat started on port(s): 8300 (http) with context path '/users_products_api'
[INFO ] 28-02-2024 13:07:13.123 [main] TestSpringBootApplication - Started TestSpringBootApplication in 17.203 seconds (process running for 20.664)
[INFO ] 28-02-2024 13:12:14.597 [http-nio-8300-exec-1] [/users_products_api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[INFO ] 28-02-2024 13:12:14.599 [http-nio-8300-exec-1] DispatcherServlet - Initializing Servlet 'dispatcherServlet'
[INFO ] 28-02-2024 13:12:14.603 [http-nio-8300-exec-1] DispatcherServlet - Completed initialization in 3 ms
[DEBUG] 28-02-2024 13:12:15.072 [http-nio-8300-exec-1] SQL - select e1_0.id,e1_0.email,e1_0.login,e1_0.name,e1_0.password from users e1_0 where e1_0.id=?
[WARN ] 28-02-2024 13:12:15.118 [http-nio-8300-exec-1] SqlExceptionHelper - SQL Error: 0, SQLState: 42703
[ERROR] 28-02-2024 13:12:15.118 [http-nio-8300-exec-1] SqlExceptionHelper - ERROR: column e1_0.name does not exist
  Позиция: 38
[INFO ] 28-02-2024 13:12:15.129 [http-nio-8300-exec-1] DefaultLoadEventListener - HHH000327: Error performing load command
org.hibernate.exception.SQLGrammarException: JDBC exception executing SQL [select e1_0.id,e1_0.email,e1_0.login,e1_0.name,e1_0.password from users e1_0 where e1_0.id=?] [ERROR: column e1_0.name does not exist
  Позиция: 38] [n/a]
	at org.hibernate.exception.internal.SQLStateConversionDelegate.convert(SQLStateConversionDelegate.java:89) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:56) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:108) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:94) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.executeQuery(DeferredResultSetAccess.java:257) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.getResultSet(DeferredResultSetAccess.java:163) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.sql.results.jdbc.internal.JdbcValuesResultSetImpl.advanceNext(JdbcValuesResultSetImpl.java:254) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.sql.results.jdbc.internal.JdbcValuesResultSetImpl.processNext(JdbcValuesResultSetImpl.java:134) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.sql.results.jdbc.internal.AbstractJdbcValues.next(AbstractJdbcValues.java:19) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.sql.results.internal.RowProcessingStateStandardImpl.next(RowProcessingStateStandardImpl.java:66) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.sql.results.spi.ListResultsConsumer.consume(ListResultsConsumer.java:178) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.sql.results.spi.ListResultsConsumer.consume(ListResultsConsumer.java:33) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.doExecuteQuery(JdbcSelectExecutorStandardImpl.java:361) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.executeQuery(JdbcSelectExecutorStandardImpl.java:168) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.list(JdbcSelectExecutorStandardImpl.java:93) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:31) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.loader.ast.internal.SingleIdLoadPlan.load(SingleIdLoadPlan.java:146) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.loader.ast.internal.SingleIdLoadPlan.load(SingleIdLoadPlan.java:118) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.loader.ast.internal.SingleIdEntityLoaderStandardImpl.load(SingleIdEntityLoaderStandardImpl.java:73) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.persister.entity.AbstractEntityPersister.doLoad(AbstractEntityPersister.java:3481) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.persister.entity.AbstractEntityPersister.load(AbstractEntityPersister.java:3471) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.event.internal.DefaultLoadEventListener.loadFromDatasource(DefaultLoadEventListener.java:581) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.event.internal.DefaultLoadEventListener.loadFromCacheOrDatasource(DefaultLoadEventListener.java:567) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.event.internal.DefaultLoadEventListener.load(DefaultLoadEventListener.java:536) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.event.internal.DefaultLoadEventListener.doLoad(DefaultLoadEventListener.java:529) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.event.internal.DefaultLoadEventListener.load(DefaultLoadEventListener.java:202) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.event.internal.DefaultLoadEventListener.loadWithRegularProxy(DefaultLoadEventListener.java:282) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.event.internal.DefaultLoadEventListener.proxyOrLoad(DefaultLoadEventListener.java:237) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.event.internal.DefaultLoadEventListener.doOnLoad(DefaultLoadEventListener.java:106) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.event.internal.DefaultLoadEventListener.onLoad(DefaultLoadEventListener.java:78) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:138) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.internal.SessionImpl.fireLoadNoChecks(SessionImpl.java:1231) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.internal.SessionImpl.fireLoad(SessionImpl.java:1219) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.loader.internal.IdentifierLoadAccessImpl.doLoad(IdentifierLoadAccessImpl.java:194) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.loader.internal.IdentifierLoadAccessImpl.lambda$load$1(IdentifierLoadAccessImpl.java:160) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.loader.internal.IdentifierLoadAccessImpl.perform(IdentifierLoadAccessImpl.java:107) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.loader.internal.IdentifierLoadAccessImpl.load(IdentifierLoadAccessImpl.java:160) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.internal.SessionImpl.find(SessionImpl.java:2406) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.internal.SessionImpl.find(SessionImpl.java:2377) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:568) ~[?:?]
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:311) ~[spring-orm-6.0.11.jar:6.0.11]
	at jdk.proxy2.$Proxy122.find(Unknown Source) ~[?:?]
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById(SimpleJpaRepository.java:312) ~[spring-data-jpa-3.1.2.jar:3.1.2]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:568) ~[?:?]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:288) ~[spring-data-commons-3.1.2.jar:3.1.2]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:136) [spring-data-commons-3.1.2.jar:3.1.2]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:120) [spring-data-commons-3.1.2.jar:3.1.2]
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:516) [spring-data-commons-3.1.2.jar:3.1.2]
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285) [spring-data-commons-3.1.2.jar:3.1.2]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:628) [spring-data-commons-3.1.2.jar:3.1.2]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) [spring-aop-6.0.11.jar:6.0.11]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:168) [spring-data-commons-3.1.2.jar:3.1.2]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143) [spring-data-commons-3.1.2.jar:3.1.2]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) [spring-aop-6.0.11.jar:6.0.11]
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123) [spring-tx-6.0.11.jar:6.0.11]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:391) [spring-tx-6.0.11.jar:6.0.11]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) [spring-tx-6.0.11.jar:6.0.11]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) [spring-aop-6.0.11.jar:6.0.11]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137) [spring-tx-6.0.11.jar:6.0.11]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) [spring-aop-6.0.11.jar:6.0.11]
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:164) [spring-data-jpa-3.1.2.jar:3.1.2]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) [spring-aop-6.0.11.jar:6.0.11]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97) [spring-aop-6.0.11.jar:6.0.11]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) [spring-aop-6.0.11.jar:6.0.11]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:244) [spring-aop-6.0.11.jar:6.0.11]
	at jdk.proxy2.$Proxy125.findById(Unknown Source) [?:?]
	at DAO.DAOUserProducts.getUser(DAOUserProducts.java:16) [classes/:?]
	at controller.CRUDUserProducts.getUserWithProducts(CRUDUserProducts.java:20) [classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:568) ~[?:?]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205) [spring-web-6.0.11.jar:6.0.11]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150) [spring-web-6.0.11.jar:6.0.11]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) [spring-webmvc-6.0.11.jar:6.0.11]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884) [spring-webmvc-6.0.11.jar:6.0.11]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797) [spring-webmvc-6.0.11.jar:6.0.11]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) [spring-webmvc-6.0.11.jar:6.0.11]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081) [spring-webmvc-6.0.11.jar:6.0.11]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974) [spring-webmvc-6.0.11.jar:6.0.11]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011) [spring-webmvc-6.0.11.jar:6.0.11]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903) [spring-webmvc-6.0.11.jar:6.0.11]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564) [tomcat-embed-core-10.1.11.jar:6.0]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) [spring-webmvc-6.0.11.jar:6.0.11]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) [tomcat-embed-core-10.1.11.jar:6.0]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) [tomcat-embed-websocket-10.1.11.jar:10.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) [spring-web-6.0.11.jar:6.0.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) [spring-web-6.0.11.jar:6.0.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) [spring-web-6.0.11.jar:6.0.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) [spring-web-6.0.11.jar:6.0.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) [spring-web-6.0.11.jar:6.0.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) [spring-web-6.0.11.jar:6.0.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:166) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at java.lang.Thread.run(Thread.java:840) [?:?]
Caused by: org.postgresql.util.PSQLException: ERROR: column e1_0.name does not exist
  Позиция: 38
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2713) ~[postgresql-42.6.0.jar:42.6.0]
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2401) ~[postgresql-42.6.0.jar:42.6.0]
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:368) ~[postgresql-42.6.0.jar:42.6.0]
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:498) ~[postgresql-42.6.0.jar:42.6.0]
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:415) ~[postgresql-42.6.0.jar:42.6.0]
	at org.postgresql.jdbc.PgPreparedStatement.executeWithFlags(PgPreparedStatement.java:190) ~[postgresql-42.6.0.jar:42.6.0]
	at org.postgresql.jdbc.PgPreparedStatement.executeQuery(PgPreparedStatement.java:134) ~[postgresql-42.6.0.jar:42.6.0]
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.executeQuery(DeferredResultSetAccess.java:239) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	... 119 more
[ERROR] 28-02-2024 13:12:15.209 [http-nio-8300-exec-1] [dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [/users_products_api] threw exception [Request processing failed: org.springframework.dao.InvalidDataAccessResourceUsageException: JDBC exception executing SQL [select e1_0.id,e1_0.email,e1_0.login,e1_0.name,e1_0.password from users e1_0 where e1_0.id=?] [ERROR: column e1_0.name does not exist
  Позиция: 38] [n/a]; SQL [n/a]] with root cause
org.postgresql.util.PSQLException: ERROR: column e1_0.name does not exist
  Позиция: 38
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2713) ~[postgresql-42.6.0.jar:42.6.0]
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2401) ~[postgresql-42.6.0.jar:42.6.0]
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:368) ~[postgresql-42.6.0.jar:42.6.0]
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:498) ~[postgresql-42.6.0.jar:42.6.0]
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:415) ~[postgresql-42.6.0.jar:42.6.0]
	at org.postgresql.jdbc.PgPreparedStatement.executeWithFlags(PgPreparedStatement.java:190) ~[postgresql-42.6.0.jar:42.6.0]
	at org.postgresql.jdbc.PgPreparedStatement.executeQuery(PgPreparedStatement.java:134) ~[postgresql-42.6.0.jar:42.6.0]
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.executeQuery(DeferredResultSetAccess.java:239) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.getResultSet(DeferredResultSetAccess.java:163) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.sql.results.jdbc.internal.JdbcValuesResultSetImpl.advanceNext(JdbcValuesResultSetImpl.java:254) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.sql.results.jdbc.internal.JdbcValuesResultSetImpl.processNext(JdbcValuesResultSetImpl.java:134) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.sql.results.jdbc.internal.AbstractJdbcValues.next(AbstractJdbcValues.java:19) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.sql.results.internal.RowProcessingStateStandardImpl.next(RowProcessingStateStandardImpl.java:66) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.sql.results.spi.ListResultsConsumer.consume(ListResultsConsumer.java:178) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.sql.results.spi.ListResultsConsumer.consume(ListResultsConsumer.java:33) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.doExecuteQuery(JdbcSelectExecutorStandardImpl.java:361) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.executeQuery(JdbcSelectExecutorStandardImpl.java:168) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.list(JdbcSelectExecutorStandardImpl.java:93) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:31) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.loader.ast.internal.SingleIdLoadPlan.load(SingleIdLoadPlan.java:146) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.loader.ast.internal.SingleIdLoadPlan.load(SingleIdLoadPlan.java:118) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.loader.ast.internal.SingleIdEntityLoaderStandardImpl.load(SingleIdEntityLoaderStandardImpl.java:73) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.persister.entity.AbstractEntityPersister.doLoad(AbstractEntityPersister.java:3481) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.persister.entity.AbstractEntityPersister.load(AbstractEntityPersister.java:3471) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.event.internal.DefaultLoadEventListener.loadFromDatasource(DefaultLoadEventListener.java:581) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.event.internal.DefaultLoadEventListener.loadFromCacheOrDatasource(DefaultLoadEventListener.java:567) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.event.internal.DefaultLoadEventListener.load(DefaultLoadEventListener.java:536) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.event.internal.DefaultLoadEventListener.doLoad(DefaultLoadEventListener.java:529) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.event.internal.DefaultLoadEventListener.load(DefaultLoadEventListener.java:202) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.event.internal.DefaultLoadEventListener.loadWithRegularProxy(DefaultLoadEventListener.java:282) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.event.internal.DefaultLoadEventListener.proxyOrLoad(DefaultLoadEventListener.java:237) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.event.internal.DefaultLoadEventListener.doOnLoad(DefaultLoadEventListener.java:106) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.event.internal.DefaultLoadEventListener.onLoad(DefaultLoadEventListener.java:78) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:138) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.internal.SessionImpl.fireLoadNoChecks(SessionImpl.java:1231) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.internal.SessionImpl.fireLoad(SessionImpl.java:1219) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.loader.internal.IdentifierLoadAccessImpl.doLoad(IdentifierLoadAccessImpl.java:194) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.loader.internal.IdentifierLoadAccessImpl.lambda$load$1(IdentifierLoadAccessImpl.java:160) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.loader.internal.IdentifierLoadAccessImpl.perform(IdentifierLoadAccessImpl.java:107) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.loader.internal.IdentifierLoadAccessImpl.load(IdentifierLoadAccessImpl.java:160) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.internal.SessionImpl.find(SessionImpl.java:2406) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.internal.SessionImpl.find(SessionImpl.java:2377) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:568) ~[?:?]
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:311) ~[spring-orm-6.0.11.jar:6.0.11]
	at jdk.proxy2.$Proxy122.find(Unknown Source) ~[?:?]
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById(SimpleJpaRepository.java:312) ~[spring-data-jpa-3.1.2.jar:3.1.2]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:568) ~[?:?]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:288) ~[spring-data-commons-3.1.2.jar:3.1.2]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:136) ~[spring-data-commons-3.1.2.jar:3.1.2]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:120) ~[spring-data-commons-3.1.2.jar:3.1.2]
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:516) ~[spring-data-commons-3.1.2.jar:3.1.2]
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285) ~[spring-data-commons-3.1.2.jar:3.1.2]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:628) ~[spring-data-commons-3.1.2.jar:3.1.2]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.0.11.jar:6.0.11]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:168) ~[spring-data-commons-3.1.2.jar:3.1.2]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143) ~[spring-data-commons-3.1.2.jar:3.1.2]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.0.11.jar:6.0.11]
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123) ~[spring-tx-6.0.11.jar:6.0.11]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:391) ~[spring-tx-6.0.11.jar:6.0.11]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.0.11.jar:6.0.11]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.0.11.jar:6.0.11]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137) ~[spring-tx-6.0.11.jar:6.0.11]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.0.11.jar:6.0.11]
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:164) ~[spring-data-jpa-3.1.2.jar:3.1.2]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.0.11.jar:6.0.11]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97) ~[spring-aop-6.0.11.jar:6.0.11]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.0.11.jar:6.0.11]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:244) ~[spring-aop-6.0.11.jar:6.0.11]
	at jdk.proxy2.$Proxy125.findById(Unknown Source) ~[?:?]
	at DAO.DAOUserProducts.getUser(DAOUserProducts.java:16) ~[classes/:?]
	at controller.CRUDUserProducts.getUserWithProducts(CRUDUserProducts.java:20) ~[classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:568) ~[?:?]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205) ~[spring-web-6.0.11.jar:6.0.11]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150) ~[spring-web-6.0.11.jar:6.0.11]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.0.11.jar:6.0.11]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884) ~[spring-webmvc-6.0.11.jar:6.0.11]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797) ~[spring-webmvc-6.0.11.jar:6.0.11]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.0.11.jar:6.0.11]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081) ~[spring-webmvc-6.0.11.jar:6.0.11]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974) ~[spring-webmvc-6.0.11.jar:6.0.11]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011) ~[spring-webmvc-6.0.11.jar:6.0.11]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903) ~[spring-webmvc-6.0.11.jar:6.0.11]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564) ~[tomcat-embed-core-10.1.11.jar:6.0]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.0.11.jar:6.0.11]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.11.jar:6.0]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205) ~[tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149) ~[tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.11.jar:10.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174) ~[tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149) ~[tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.0.11.jar:6.0.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.0.11.jar:6.0.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174) ~[tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149) ~[tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.0.11.jar:6.0.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.0.11.jar:6.0.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174) ~[tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149) ~[tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.0.11.jar:6.0.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.0.11.jar:6.0.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174) ~[tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149) ~[tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:166) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at java.lang.Thread.run(Thread.java:840) [?:?]
[DEBUG] 28-02-2024 13:24:08.609 [http-nio-8300-exec-2] SQL - select e1_0.id,e1_0.email,e1_0.login,e1_0.name,e1_0.password from users e1_0 where e1_0.id=?
[TRACE] 28-02-2024 13:25:10.544 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@4440750] for TypeConfiguration
[DEBUG] 28-02-2024 13:25:10.546 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@4c2c985a] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@4440750]
[INFO ] 28-02-2024 13:25:22.444 [background-preinit] Version - HV000001: Hibernate Validator 8.0.1.Final
[INFO ] 28-02-2024 13:25:22.578 [main] TestSpringBootApplication - Starting TestSpringBootApplication using Java 17.0.10 with PID 1386912 (/home/dima/backend_microservice/UserProductsMicroService/target/classes started by dima in /home/dima/backend_microservice/UserProductsMicroService)
[INFO ] 28-02-2024 13:25:22.602 [main] TestSpringBootApplication - No active profile set, falling back to 1 default profile: "default"
[INFO ] 28-02-2024 13:25:24.406 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO ] 28-02-2024 13:25:25.200 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 768 ms. Found 1 JPA repository interfaces.
[ERROR] 28-02-2024 13:25:26.708 [main] AprLifecycleListener - An incompatible version [1.2.23] of the Apache Tomcat Native library is installed, while Tomcat requires version [1.2.34]
[INFO ] 28-02-2024 13:25:27.514 [main] TomcatWebServer - Tomcat initialized with port(s): 8300 (http)
[INFO ] 28-02-2024 13:25:27.536 [main] Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8300"]
[INFO ] 28-02-2024 13:25:27.543 [main] StandardService - Starting service [Tomcat]
[INFO ] 28-02-2024 13:25:27.544 [main] StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.11]
[INFO ] 28-02-2024 13:25:28.807 [main] TldScanner - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
[INFO ] 28-02-2024 13:25:28.828 [main] [/users_products_api] - Initializing Spring embedded WebApplicationContext
[INFO ] 28-02-2024 13:25:28.832 [main] ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 6030 ms
[INFO ] 28-02-2024 13:25:29.272 [main] Version - HHH000412: Hibernate ORM core version 6.2.6.Final
[INFO ] 28-02-2024 13:25:29.280 [main] Environment - HHH000406: Using bytecode reflection optimizer
[DEBUG] 28-02-2024 13:25:29.703 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@44faa4f2
[DEBUG] 28-02-2024 13:25:29.704 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@44faa4f2
[DEBUG] 28-02-2024 13:25:29.705 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@44faa4f2
[DEBUG] 28-02-2024 13:25:29.705 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@6793f752
[DEBUG] 28-02-2024 13:25:29.706 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@6793f752
[DEBUG] 28-02-2024 13:25:29.707 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@1216eb3f
[DEBUG] 28-02-2024 13:25:29.707 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@1216eb3f
[DEBUG] 28-02-2024 13:25:29.708 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@59e7564b
[DEBUG] 28-02-2024 13:25:29.708 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@59e7564b
[DEBUG] 28-02-2024 13:25:29.708 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@482ba4b1
[DEBUG] 28-02-2024 13:25:29.709 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@482ba4b1
[DEBUG] 28-02-2024 13:25:29.709 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@482ba4b1
[DEBUG] 28-02-2024 13:25:29.710 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@307af381
[DEBUG] 28-02-2024 13:25:29.710 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@307af381
[DEBUG] 28-02-2024 13:25:29.711 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@307af381
[DEBUG] 28-02-2024 13:25:29.712 [main] BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@1510b9a2
[DEBUG] 28-02-2024 13:25:29.712 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@1510b9a2
[DEBUG] 28-02-2024 13:25:29.712 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@76a6f045
[DEBUG] 28-02-2024 13:25:29.713 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@633ddc0c
[DEBUG] 28-02-2024 13:25:29.713 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@633ddc0c
[DEBUG] 28-02-2024 13:25:29.714 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@4bcdd11
[DEBUG] 28-02-2024 13:25:29.714 [main] BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@1471b98d
[DEBUG] 28-02-2024 13:25:29.715 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@5514579e
[DEBUG] 28-02-2024 13:25:29.715 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@5514579e
[DEBUG] 28-02-2024 13:25:29.715 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@5514579e
[DEBUG] 28-02-2024 13:25:29.716 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@58c42c8c
[DEBUG] 28-02-2024 13:25:29.716 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@58c42c8c
[DEBUG] 28-02-2024 13:25:29.717 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@58c42c8c
[DEBUG] 28-02-2024 13:25:29.717 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@3af236d0
[DEBUG] 28-02-2024 13:25:29.717 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@3af236d0
[DEBUG] 28-02-2024 13:25:29.718 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@3af236d0
[DEBUG] 28-02-2024 13:25:29.718 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@23564dd2
[DEBUG] 28-02-2024 13:25:29.719 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@23564dd2
[DEBUG] 28-02-2024 13:25:29.719 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@23564dd2
[DEBUG] 28-02-2024 13:25:29.720 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@54895681
[DEBUG] 28-02-2024 13:25:29.720 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@54895681
[DEBUG] 28-02-2024 13:25:29.721 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@54895681
[DEBUG] 28-02-2024 13:25:29.721 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@2dd0a0d0
[DEBUG] 28-02-2024 13:25:29.721 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@2dd0a0d0
[DEBUG] 28-02-2024 13:25:29.722 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@6bf570c
[DEBUG] 28-02-2024 13:25:29.722 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@6bf570c
[DEBUG] 28-02-2024 13:25:29.723 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@1796b2d4
[DEBUG] 28-02-2024 13:25:29.723 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@1796b2d4
[DEBUG] 28-02-2024 13:25:29.724 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@1796b2d4
[DEBUG] 28-02-2024 13:25:29.724 [main] BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@935d3f9
[DEBUG] 28-02-2024 13:25:29.725 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@214b342f
[DEBUG] 28-02-2024 13:25:29.725 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@214b342f
[DEBUG] 28-02-2024 13:25:29.725 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@5db0003d
[DEBUG] 28-02-2024 13:25:29.726 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@7f12094d
[DEBUG] 28-02-2024 13:25:29.727 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@7f12094d
[DEBUG] 28-02-2024 13:25:29.727 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@7f12094d
[DEBUG] 28-02-2024 13:25:29.728 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@589fb74d
[DEBUG] 28-02-2024 13:25:29.728 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@200d1a3d
[DEBUG] 28-02-2024 13:25:29.728 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@7de147e9
[DEBUG] 28-02-2024 13:25:29.729 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@12567179
[DEBUG] 28-02-2024 13:25:29.729 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@12567179
[DEBUG] 28-02-2024 13:25:29.729 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@37d699a1
[DEBUG] 28-02-2024 13:25:29.730 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@37d699a1
[DEBUG] 28-02-2024 13:25:29.730 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@7f42b194
[DEBUG] 28-02-2024 13:25:29.730 [main] BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@8eb6f9a
[DEBUG] 28-02-2024 13:25:29.731 [main] BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@29170a47
[DEBUG] 28-02-2024 13:25:29.731 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@2a8f8555
[DEBUG] 28-02-2024 13:25:29.731 [main] BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@402b4f81
[DEBUG] 28-02-2024 13:25:29.732 [main] BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@13ef7fa1
[DEBUG] 28-02-2024 13:25:29.732 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@23b1aa9
[DEBUG] 28-02-2024 13:25:29.732 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@23b1aa9
[DEBUG] 28-02-2024 13:25:29.733 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@54489296
[DEBUG] 28-02-2024 13:25:29.734 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@54489296
[DEBUG] 28-02-2024 13:25:29.734 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@4e8598d9
[DEBUG] 28-02-2024 13:25:29.734 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@4e8598d9
[DEBUG] 28-02-2024 13:25:29.734 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@267ff4df
[DEBUG] 28-02-2024 13:25:29.735 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@267ff4df
[DEBUG] 28-02-2024 13:25:29.736 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@7c4b5ceb
[DEBUG] 28-02-2024 13:25:29.736 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@7c4b5ceb
[DEBUG] 28-02-2024 13:25:29.736 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@6c07add6
[DEBUG] 28-02-2024 13:25:29.737 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@e26a3df
[DEBUG] 28-02-2024 13:25:29.737 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@57a667c8
[DEBUG] 28-02-2024 13:25:29.737 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@57a667c8
[DEBUG] 28-02-2024 13:25:29.738 [main] BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@712cd5d3
[DEBUG] 28-02-2024 13:25:29.738 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2094bf3d
[DEBUG] 28-02-2024 13:25:29.738 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@1b17d8ab
[DEBUG] 28-02-2024 13:25:29.739 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@7f6b7426
[DEBUG] 28-02-2024 13:25:29.739 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@7f6b7426
[DEBUG] 28-02-2024 13:25:29.740 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@687eb455
[DEBUG] 28-02-2024 13:25:29.740 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@6d969330
[DEBUG] 28-02-2024 13:25:29.740 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@4861cca9
[DEBUG] 28-02-2024 13:25:29.740 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@4861cca9
[DEBUG] 28-02-2024 13:25:29.741 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@6c8f4bc7
[DEBUG] 28-02-2024 13:25:29.741 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@6c8f4bc7
[DEBUG] 28-02-2024 13:25:29.741 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@714e861f
[DEBUG] 28-02-2024 13:25:29.742 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@714e861f
[DEBUG] 28-02-2024 13:25:29.742 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@714e861f
[DEBUG] 28-02-2024 13:25:29.742 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@28989415
[DEBUG] 28-02-2024 13:25:29.743 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@28989415
[DEBUG] 28-02-2024 13:25:29.743 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@28989415
[DEBUG] 28-02-2024 13:25:29.743 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@6eda012b
[DEBUG] 28-02-2024 13:25:29.744 [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@781dbe44
[DEBUG] 28-02-2024 13:25:29.744 [main] BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@7d66a126
[DEBUG] 28-02-2024 13:25:29.744 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@7d66a126
[DEBUG] 28-02-2024 13:25:29.745 [main] BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@1132baa3
[DEBUG] 28-02-2024 13:25:29.745 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@1132baa3
[DEBUG] 28-02-2024 13:25:29.745 [main] BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@1132baa3
[DEBUG] 28-02-2024 13:25:29.746 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@2fdf22f7
[DEBUG] 28-02-2024 13:25:29.746 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@3a2546d6
[DEBUG] 28-02-2024 13:25:29.746 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@7282af25
[DEBUG] 28-02-2024 13:25:29.746 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@7282af25
[DEBUG] 28-02-2024 13:25:29.747 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@7661e474
[DEBUG] 28-02-2024 13:25:29.747 [main] BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@7661e474
[DEBUG] 28-02-2024 13:25:29.747 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@7661e474
[DEBUG] 28-02-2024 13:25:29.748 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@20ffb8d5
[DEBUG] 28-02-2024 13:25:29.748 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@20ffb8d5
[DEBUG] 28-02-2024 13:25:29.748 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@307c59ea
[DEBUG] 28-02-2024 13:25:29.749 [main] BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@307c59ea
[DEBUG] 28-02-2024 13:25:29.749 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@57e03347
[DEBUG] 28-02-2024 13:25:29.750 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@57e03347
[DEBUG] 28-02-2024 13:25:29.750 [main] BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@2edb2f8b
[DEBUG] 28-02-2024 13:25:29.750 [main] BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@2edb2f8b
[DEBUG] 28-02-2024 13:25:29.751 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@733f1395
[DEBUG] 28-02-2024 13:25:29.751 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@733f1395
[DEBUG] 28-02-2024 13:25:29.751 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@21dea711
[DEBUG] 28-02-2024 13:25:29.772 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@374c3975
[DEBUG] 28-02-2024 13:25:29.773 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@374c3975
[DEBUG] 28-02-2024 13:25:29.776 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@24691c5
[DEBUG] 28-02-2024 13:25:29.777 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@7b91d9f
[DEBUG] 28-02-2024 13:25:29.777 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@6537ac
[DEBUG] 28-02-2024 13:25:29.777 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@3b218c74
[DEBUG] 28-02-2024 13:25:29.778 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@ddffa6c
[DEBUG] 28-02-2024 13:25:29.778 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@42c54bad
[DEBUG] 28-02-2024 13:25:29.778 [main] BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@6bb4cc0e
[DEBUG] 28-02-2024 13:25:29.778 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@5cc1bf20
[DEBUG] 28-02-2024 13:25:29.779 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@2e3f324e
[DEBUG] 28-02-2024 13:25:31.288 [main] DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@145a821d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6caa4dc5)
[DEBUG] 28-02-2024 13:25:31.293 [main] JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
[DEBUG] 28-02-2024 13:25:31.294 [main] JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 28-02-2024 13:25:31.314 [main] BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@740c4868
[DEBUG] 28-02-2024 13:25:31.314 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@740c4868
[DEBUG] 28-02-2024 13:25:31.315 [main] BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@374c3975`
[DEBUG] 28-02-2024 13:25:31.317 [main] JdbcTypeRegistry - addDescriptor(3100, NumericTypeDescriptor) replaced previous registration(org.hibernate.dialect.PostgreSQLIntervalSecondJdbcType@1fc1c7e)
[DEBUG] 28-02-2024 13:25:31.333 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 28-02-2024 13:25:31.334 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 28-02-2024 13:25:31.334 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 28-02-2024 13:25:31.335 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 28-02-2024 13:25:31.335 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 28-02-2024 13:25:31.335 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 28-02-2024 13:25:31.337 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 28-02-2024 13:25:31.337 [main] BasicTypeRegistry - Adding type registration OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 28-02-2024 13:25:31.338 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 28-02-2024 13:25:31.340 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6a4a2090] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@778c2e7c]
[INFO ] 28-02-2024 13:25:32.179 [main] BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
[INFO ] 28-02-2024 13:25:34.972 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 28-02-2024 13:25:34.974 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6a4a2090] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@377cbdae]
[TRACE] 28-02-2024 13:25:34.980 [main] TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@377cbdae] for TypeConfiguration
[WARN ] 28-02-2024 13:25:36.528 [main] JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[INFO ] 28-02-2024 13:25:37.704 [main] Http11NioProtocol - Starting ProtocolHandler ["http-nio-8300"]
[INFO ] 28-02-2024 13:25:37.763 [main] TomcatWebServer - Tomcat started on port(s): 8300 (http) with context path '/users_products_api'
[INFO ] 28-02-2024 13:25:37.797 [main] TestSpringBootApplication - Started TestSpringBootApplication in 16.392 seconds (process running for 19.364)
[INFO ] 28-02-2024 13:25:40.935 [http-nio-8300-exec-1] [/users_products_api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[INFO ] 28-02-2024 13:25:40.936 [http-nio-8300-exec-1] DispatcherServlet - Initializing Servlet 'dispatcherServlet'
[INFO ] 28-02-2024 13:25:40.940 [http-nio-8300-exec-1] DispatcherServlet - Completed initialization in 2 ms
[DEBUG] 28-02-2024 13:25:41.253 [http-nio-8300-exec-1] SQL - select e1_0.id,e1_0.email,e1_0.login,e1_0.name,e1_0.password from users e1_0 where e1_0.id=?
[DEBUG] 28-02-2024 13:25:41.550 [http-nio-8300-exec-1] SQL - select p1_0.id_user,p1_0.id,p1_0.name,p1_0.page_image,p1_0.price,p1_0.raiting,p1_0.year_issue from products p1_0 where p1_0.id_user=?
[WARN ] 28-02-2024 13:25:41.720 [http-nio-8300-exec-1] DefaultHandlerExceptionResolver - Failure while trying to resolve exception [org.springframework.http.converter.HttpMessageNotWritableException]
java.lang.IllegalStateException: Cannot call sendError() after the response has been committed
	at org.apache.catalina.connector.ResponseFacade.checkCommitted(ResponseFacade.java:503) ~[tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.catalina.connector.ResponseFacade.sendError(ResponseFacade.java:347) ~[tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver.sendServerError(DefaultHandlerExceptionResolver.java:581) ~[spring-webmvc-6.0.11.jar:6.0.11]
	at org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver.handleHttpMessageNotWritable(DefaultHandlerExceptionResolver.java:548) ~[spring-webmvc-6.0.11.jar:6.0.11]
	at org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver.doResolveException(DefaultHandlerExceptionResolver.java:221) [spring-webmvc-6.0.11.jar:6.0.11]
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:141) [spring-webmvc-6.0.11.jar:6.0.11]
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:80) [spring-webmvc-6.0.11.jar:6.0.11]
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1341) [spring-webmvc-6.0.11.jar:6.0.11]
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1152) [spring-webmvc-6.0.11.jar:6.0.11]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1098) [spring-webmvc-6.0.11.jar:6.0.11]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974) [spring-webmvc-6.0.11.jar:6.0.11]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011) [spring-webmvc-6.0.11.jar:6.0.11]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903) [spring-webmvc-6.0.11.jar:6.0.11]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564) [tomcat-embed-core-10.1.11.jar:6.0]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) [spring-webmvc-6.0.11.jar:6.0.11]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) [tomcat-embed-core-10.1.11.jar:6.0]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) [tomcat-embed-websocket-10.1.11.jar:10.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) [spring-web-6.0.11.jar:6.0.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) [spring-web-6.0.11.jar:6.0.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) [spring-web-6.0.11.jar:6.0.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) [spring-web-6.0.11.jar:6.0.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) [spring-web-6.0.11.jar:6.0.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) [spring-web-6.0.11.jar:6.0.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:166) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at java.lang.Thread.run(Thread.java:840) [?:?]
[ERROR] 28-02-2024 13:25:41.740 [http-nio-8300-exec-1] [dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [/users_products_api] threw exception [Request processing failed: org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Infinite recursion (StackOverflowError)] with root cause
java.lang.StackOverflowError: null
	at java.lang.ClassLoader.defineClass1(Native Method) ~[?:?]
	at java.lang.ClassLoader.defineClass(ClassLoader.java:1017) ~[?:?]
	at java.security.SecureClassLoader.defineClass(SecureClassLoader.java:150) ~[?:?]
	at jdk.internal.loader.BuiltinClassLoader.defineClass(BuiltinClassLoader.java:862) ~[?:?]
	at jdk.internal.loader.BuiltinClassLoader.findClassOnClassPathOrNull(BuiltinClassLoader.java:760) ~[?:?]
	at jdk.internal.loader.BuiltinClassLoader.loadClassOrNull(BuiltinClassLoader.java:681) ~[?:?]
	at jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:639) ~[?:?]
	at jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188) ~[?:?]
	at java.lang.ClassLoader.loadClass(ClassLoader.java:525) ~[?:?]
	at com.fasterxml.jackson.databind.JsonMappingException.prependPath(JsonMappingException.java:455) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:790) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178) ~[jackson-databind-2.15.2.jar:2.15.2]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145) ~[jackson-databind-2.15.2.jar:2.15.2]
[TRACE] 28-02-2024 13:29:04.662 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@377cbdae] for TypeConfiguration
[DEBUG] 28-02-2024 13:29:04.663 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@641834d7] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@377cbdae]
[INFO ] 28-02-2024 13:29:16.568 [background-preinit] Version - HV000001: Hibernate Validator 8.0.1.Final
[INFO ] 28-02-2024 13:29:16.738 [main] TestSpringBootApplication - Starting TestSpringBootApplication using Java 17.0.10 with PID 1388918 (/home/dima/backend_microservice/UserProductsMicroService/target/classes started by dima in /home/dima/backend_microservice/UserProductsMicroService)
[INFO ] 28-02-2024 13:29:16.752 [main] TestSpringBootApplication - No active profile set, falling back to 1 default profile: "default"
[INFO ] 28-02-2024 13:29:18.517 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO ] 28-02-2024 13:29:18.973 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 436 ms. Found 1 JPA repository interfaces.
[ERROR] 28-02-2024 13:29:20.553 [main] AprLifecycleListener - An incompatible version [1.2.23] of the Apache Tomcat Native library is installed, while Tomcat requires version [1.2.34]
[INFO ] 28-02-2024 13:29:21.311 [main] TomcatWebServer - Tomcat initialized with port(s): 8300 (http)
[INFO ] 28-02-2024 13:29:21.333 [main] Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8300"]
[INFO ] 28-02-2024 13:29:21.340 [main] StandardService - Starting service [Tomcat]
[INFO ] 28-02-2024 13:29:21.341 [main] StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.11]
[INFO ] 28-02-2024 13:29:22.475 [main] TldScanner - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
[INFO ] 28-02-2024 13:29:22.494 [main] [/users_products_api] - Initializing Spring embedded WebApplicationContext
[INFO ] 28-02-2024 13:29:22.501 [main] ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 5590 ms
[INFO ] 28-02-2024 13:29:22.961 [main] Version - HHH000412: Hibernate ORM core version 6.2.6.Final
[INFO ] 28-02-2024 13:29:22.968 [main] Environment - HHH000406: Using bytecode reflection optimizer
[DEBUG] 28-02-2024 13:29:23.388 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@7bf018dd
[DEBUG] 28-02-2024 13:29:23.389 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@7bf018dd
[DEBUG] 28-02-2024 13:29:23.391 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@7bf018dd
[DEBUG] 28-02-2024 13:29:23.391 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@15a8cebd
[DEBUG] 28-02-2024 13:29:23.392 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@15a8cebd
[DEBUG] 28-02-2024 13:29:23.393 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@3f6c2763
[DEBUG] 28-02-2024 13:29:23.393 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@3f6c2763
[DEBUG] 28-02-2024 13:29:23.394 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@5c82031b
[DEBUG] 28-02-2024 13:29:23.395 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@5c82031b
[DEBUG] 28-02-2024 13:29:23.395 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@274fdea6
[DEBUG] 28-02-2024 13:29:23.396 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@274fdea6
[DEBUG] 28-02-2024 13:29:23.396 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@274fdea6
[DEBUG] 28-02-2024 13:29:23.397 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@74c121d4
[DEBUG] 28-02-2024 13:29:23.397 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@74c121d4
[DEBUG] 28-02-2024 13:29:23.398 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@74c121d4
[DEBUG] 28-02-2024 13:29:23.399 [main] BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@2a484710
[DEBUG] 28-02-2024 13:29:23.399 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@2a484710
[DEBUG] 28-02-2024 13:29:23.399 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@661e1399
[DEBUG] 28-02-2024 13:29:23.400 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@3ffd4b12
[DEBUG] 28-02-2024 13:29:23.401 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@3ffd4b12
[DEBUG] 28-02-2024 13:29:23.401 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@424f02b8
[DEBUG] 28-02-2024 13:29:23.402 [main] BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@2ad7bd26
[DEBUG] 28-02-2024 13:29:23.402 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@3cc3f13e
[DEBUG] 28-02-2024 13:29:23.403 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@3cc3f13e
[DEBUG] 28-02-2024 13:29:23.404 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@3cc3f13e
[DEBUG] 28-02-2024 13:29:23.404 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@69b3886f
[DEBUG] 28-02-2024 13:29:23.405 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@69b3886f
[DEBUG] 28-02-2024 13:29:23.405 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@69b3886f
[DEBUG] 28-02-2024 13:29:23.406 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@53d30d23
[DEBUG] 28-02-2024 13:29:23.408 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@53d30d23
[DEBUG] 28-02-2024 13:29:23.414 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@53d30d23
[DEBUG] 28-02-2024 13:29:23.415 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@44faa4f2
[DEBUG] 28-02-2024 13:29:23.416 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@44faa4f2
[DEBUG] 28-02-2024 13:29:23.416 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@44faa4f2
[DEBUG] 28-02-2024 13:29:23.417 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@6793f752
[DEBUG] 28-02-2024 13:29:23.418 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@6793f752
[DEBUG] 28-02-2024 13:29:23.418 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@6793f752
[DEBUG] 28-02-2024 13:29:23.419 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@1216eb3f
[DEBUG] 28-02-2024 13:29:23.419 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@1216eb3f
[DEBUG] 28-02-2024 13:29:23.420 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@59e7564b
[DEBUG] 28-02-2024 13:29:23.421 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@59e7564b
[DEBUG] 28-02-2024 13:29:23.421 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@482ba4b1
[DEBUG] 28-02-2024 13:29:23.422 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@482ba4b1
[DEBUG] 28-02-2024 13:29:23.422 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@482ba4b1
[DEBUG] 28-02-2024 13:29:23.423 [main] BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@307af381
[DEBUG] 28-02-2024 13:29:23.423 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@1510b9a2
[DEBUG] 28-02-2024 13:29:23.423 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@1510b9a2
[DEBUG] 28-02-2024 13:29:23.424 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@76a6f045
[DEBUG] 28-02-2024 13:29:23.424 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@633ddc0c
[DEBUG] 28-02-2024 13:29:23.425 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@633ddc0c
[DEBUG] 28-02-2024 13:29:23.425 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@633ddc0c
[DEBUG] 28-02-2024 13:29:23.426 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@4bcdd11
[DEBUG] 28-02-2024 13:29:23.426 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@1471b98d
[DEBUG] 28-02-2024 13:29:23.427 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@5514579e
[DEBUG] 28-02-2024 13:29:23.427 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@58c42c8c
[DEBUG] 28-02-2024 13:29:23.427 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@58c42c8c
[DEBUG] 28-02-2024 13:29:23.428 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@3af236d0
[DEBUG] 28-02-2024 13:29:23.429 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@3af236d0
[DEBUG] 28-02-2024 13:29:23.429 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@23564dd2
[DEBUG] 28-02-2024 13:29:23.429 [main] BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@54895681
[DEBUG] 28-02-2024 13:29:23.430 [main] BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@2dd0a0d0
[DEBUG] 28-02-2024 13:29:23.430 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@6bf570c
[DEBUG] 28-02-2024 13:29:23.431 [main] BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@1796b2d4
[DEBUG] 28-02-2024 13:29:23.431 [main] BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@935d3f9
[DEBUG] 28-02-2024 13:29:23.432 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@214b342f
[DEBUG] 28-02-2024 13:29:23.432 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@214b342f
[DEBUG] 28-02-2024 13:29:23.432 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@5db0003d
[DEBUG] 28-02-2024 13:29:23.433 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@5db0003d
[DEBUG] 28-02-2024 13:29:23.433 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@7f12094d
[DEBUG] 28-02-2024 13:29:23.434 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@7f12094d
[DEBUG] 28-02-2024 13:29:23.435 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@589fb74d
[DEBUG] 28-02-2024 13:29:23.435 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@589fb74d
[DEBUG] 28-02-2024 13:29:23.436 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@200d1a3d
[DEBUG] 28-02-2024 13:29:23.436 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@200d1a3d
[DEBUG] 28-02-2024 13:29:23.436 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@7de147e9
[DEBUG] 28-02-2024 13:29:23.437 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@12567179
[DEBUG] 28-02-2024 13:29:23.437 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@37d699a1
[DEBUG] 28-02-2024 13:29:23.437 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@37d699a1
[DEBUG] 28-02-2024 13:29:23.438 [main] BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@7f42b194
[DEBUG] 28-02-2024 13:29:23.438 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@8eb6f9a
[DEBUG] 28-02-2024 13:29:23.439 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@29170a47
[DEBUG] 28-02-2024 13:29:23.439 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@2a8f8555
[DEBUG] 28-02-2024 13:29:23.440 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@2a8f8555
[DEBUG] 28-02-2024 13:29:23.440 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@402b4f81
[DEBUG] 28-02-2024 13:29:23.441 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@13ef7fa1
[DEBUG] 28-02-2024 13:29:23.441 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@23b1aa9
[DEBUG] 28-02-2024 13:29:23.442 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@23b1aa9
[DEBUG] 28-02-2024 13:29:23.442 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@54489296
[DEBUG] 28-02-2024 13:29:23.442 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@54489296
[DEBUG] 28-02-2024 13:29:23.442 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@4e8598d9
[DEBUG] 28-02-2024 13:29:23.443 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@4e8598d9
[DEBUG] 28-02-2024 13:29:23.443 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@4e8598d9
[DEBUG] 28-02-2024 13:29:23.444 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@267ff4df
[DEBUG] 28-02-2024 13:29:23.444 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@267ff4df
[DEBUG] 28-02-2024 13:29:23.445 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@267ff4df
[DEBUG] 28-02-2024 13:29:23.445 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@7c4b5ceb
[DEBUG] 28-02-2024 13:29:23.446 [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@6c07add6
[DEBUG] 28-02-2024 13:29:23.446 [main] BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@e26a3df
[DEBUG] 28-02-2024 13:29:23.447 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@e26a3df
[DEBUG] 28-02-2024 13:29:23.447 [main] BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@57a667c8
[DEBUG] 28-02-2024 13:29:23.448 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@57a667c8
[DEBUG] 28-02-2024 13:29:23.448 [main] BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@57a667c8
[DEBUG] 28-02-2024 13:29:23.448 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@712cd5d3
[DEBUG] 28-02-2024 13:29:23.449 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@2094bf3d
[DEBUG] 28-02-2024 13:29:23.450 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@1b17d8ab
[DEBUG] 28-02-2024 13:29:23.450 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@1b17d8ab
[DEBUG] 28-02-2024 13:29:23.450 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@7f6b7426
[DEBUG] 28-02-2024 13:29:23.451 [main] BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@7f6b7426
[DEBUG] 28-02-2024 13:29:23.451 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@7f6b7426
[DEBUG] 28-02-2024 13:29:23.452 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@687eb455
[DEBUG] 28-02-2024 13:29:23.452 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@687eb455
[DEBUG] 28-02-2024 13:29:23.452 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@6d969330
[DEBUG] 28-02-2024 13:29:23.453 [main] BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@6d969330
[DEBUG] 28-02-2024 13:29:23.453 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@4861cca9
[DEBUG] 28-02-2024 13:29:23.454 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@4861cca9
[DEBUG] 28-02-2024 13:29:23.454 [main] BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@6c8f4bc7
[DEBUG] 28-02-2024 13:29:23.454 [main] BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@6c8f4bc7
[DEBUG] 28-02-2024 13:29:23.455 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@714e861f
[DEBUG] 28-02-2024 13:29:23.455 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@714e861f
[DEBUG] 28-02-2024 13:29:23.456 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@28989415
[DEBUG] 28-02-2024 13:29:23.470 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@350ff014
[DEBUG] 28-02-2024 13:29:23.471 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@350ff014
[DEBUG] 28-02-2024 13:29:23.474 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@504497fa
[DEBUG] 28-02-2024 13:29:23.475 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@5618fc1f
[DEBUG] 28-02-2024 13:29:23.476 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@60b1ff3b
[DEBUG] 28-02-2024 13:29:23.476 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@374c3975
[DEBUG] 28-02-2024 13:29:23.476 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@43c39321
[DEBUG] 28-02-2024 13:29:23.477 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@52aa7742
[DEBUG] 28-02-2024 13:29:23.477 [main] BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@3d0d120b
[DEBUG] 28-02-2024 13:29:23.478 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@6b5c134e
[DEBUG] 28-02-2024 13:29:23.478 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@34d9df9f
[DEBUG] 28-02-2024 13:29:25.269 [main] DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1282f784) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@41167ded)
[DEBUG] 28-02-2024 13:29:25.275 [main] JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
[DEBUG] 28-02-2024 13:29:25.276 [main] JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 28-02-2024 13:29:25.298 [main] BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@4b5798c2
[DEBUG] 28-02-2024 13:29:25.299 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@4b5798c2
[DEBUG] 28-02-2024 13:29:25.299 [main] BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@350ff014`
[DEBUG] 28-02-2024 13:29:25.302 [main] JdbcTypeRegistry - addDescriptor(3100, NumericTypeDescriptor) replaced previous registration(org.hibernate.dialect.PostgreSQLIntervalSecondJdbcType@31ab4859)
[DEBUG] 28-02-2024 13:29:25.317 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 28-02-2024 13:29:25.317 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 28-02-2024 13:29:25.318 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 28-02-2024 13:29:25.318 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 28-02-2024 13:29:25.318 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 28-02-2024 13:29:25.319 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 28-02-2024 13:29:25.323 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 28-02-2024 13:29:25.323 [main] BasicTypeRegistry - Adding type registration OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 28-02-2024 13:29:25.324 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 28-02-2024 13:29:25.328 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3b30eec5] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@43755e2f]
[INFO ] 28-02-2024 13:29:26.089 [main] BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
[INFO ] 28-02-2024 13:29:28.834 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 28-02-2024 13:29:28.835 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3b30eec5] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@638341b0]
[TRACE] 28-02-2024 13:29:28.841 [main] TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@638341b0] for TypeConfiguration
[WARN ] 28-02-2024 13:29:29.662 [main] JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[INFO ] 28-02-2024 13:29:30.636 [main] Http11NioProtocol - Starting ProtocolHandler ["http-nio-8300"]
[INFO ] 28-02-2024 13:29:30.711 [main] TomcatWebServer - Tomcat started on port(s): 8300 (http) with context path '/users_products_api'
[INFO ] 28-02-2024 13:29:30.746 [main] TestSpringBootApplication - Started TestSpringBootApplication in 15.385 seconds (process running for 18.937)
[INFO ] 28-02-2024 13:29:44.328 [http-nio-8300-exec-1] [/users_products_api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[INFO ] 28-02-2024 13:29:44.330 [http-nio-8300-exec-1] DispatcherServlet - Initializing Servlet 'dispatcherServlet'
[INFO ] 28-02-2024 13:29:44.334 [http-nio-8300-exec-1] DispatcherServlet - Completed initialization in 4 ms
[DEBUG] 28-02-2024 13:29:44.605 [http-nio-8300-exec-1] SQL - select e1_0.id,e1_0.email,e1_0.login,e1_0.name,e1_0.password from users e1_0 where e1_0.id=?
[DEBUG] 28-02-2024 13:29:44.987 [http-nio-8300-exec-1] SQL - select p1_0.id_user,p1_0.id,p1_0.name,p1_0.page_image,p1_0.price,p1_0.raiting,p1_0.year_issue from products p1_0 where p1_0.id_user=?
[TRACE] 28-02-2024 13:49:10.543 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@638341b0] for TypeConfiguration
[DEBUG] 28-02-2024 13:49:10.544 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@7d9cee21] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@638341b0]
[INFO ] 28-02-2024 13:49:20.606 [background-preinit] Version - HV000001: Hibernate Validator 8.0.1.Final
[INFO ] 28-02-2024 13:49:20.675 [main] TestSpringBootApplication - Starting TestSpringBootApplication using Java 17.0.10 with PID 1399054 (/home/dima/backend_microservice/UserProductsMicroService/target/classes started by dima in /home/dima/backend_microservice/UserProductsMicroService)
[INFO ] 28-02-2024 13:49:20.686 [main] TestSpringBootApplication - No active profile set, falling back to 1 default profile: "default"
[INFO ] 28-02-2024 13:49:22.442 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO ] 28-02-2024 13:49:22.926 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 457 ms. Found 1 JPA repository interfaces.
[ERROR] 28-02-2024 13:49:24.763 [main] AprLifecycleListener - An incompatible version [1.2.23] of the Apache Tomcat Native library is installed, while Tomcat requires version [1.2.34]
[INFO ] 28-02-2024 13:49:25.843 [main] TomcatWebServer - Tomcat initialized with port(s): 8300 (http)
[INFO ] 28-02-2024 13:49:25.869 [main] Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8300"]
[INFO ] 28-02-2024 13:49:25.880 [main] StandardService - Starting service [Tomcat]
[INFO ] 28-02-2024 13:49:25.883 [main] StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.11]
[INFO ] 28-02-2024 13:49:27.234 [main] TldScanner - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
[INFO ] 28-02-2024 13:49:27.255 [main] [/users_products_api] - Initializing Spring embedded WebApplicationContext
[INFO ] 28-02-2024 13:49:27.260 [main] ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 6384 ms
[INFO ] 28-02-2024 13:49:27.693 [main] Version - HHH000412: Hibernate ORM core version 6.2.6.Final
[INFO ] 28-02-2024 13:49:27.700 [main] Environment - HHH000406: Using bytecode reflection optimizer
[DEBUG] 28-02-2024 13:49:28.093 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@76a6f045
[DEBUG] 28-02-2024 13:49:28.094 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@76a6f045
[DEBUG] 28-02-2024 13:49:28.094 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@76a6f045
[DEBUG] 28-02-2024 13:49:28.095 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@633ddc0c
[DEBUG] 28-02-2024 13:49:28.095 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@633ddc0c
[DEBUG] 28-02-2024 13:49:28.096 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@4bcdd11
[DEBUG] 28-02-2024 13:49:28.096 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@4bcdd11
[DEBUG] 28-02-2024 13:49:28.097 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@1471b98d
[DEBUG] 28-02-2024 13:49:28.097 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@1471b98d
[DEBUG] 28-02-2024 13:49:28.098 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@5514579e
[DEBUG] 28-02-2024 13:49:28.098 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@5514579e
[DEBUG] 28-02-2024 13:49:28.099 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@5514579e
[DEBUG] 28-02-2024 13:49:28.099 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@58c42c8c
[DEBUG] 28-02-2024 13:49:28.100 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@58c42c8c
[DEBUG] 28-02-2024 13:49:28.100 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@58c42c8c
[DEBUG] 28-02-2024 13:49:28.101 [main] BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@3af236d0
[DEBUG] 28-02-2024 13:49:28.101 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@3af236d0
[DEBUG] 28-02-2024 13:49:28.102 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@23564dd2
[DEBUG] 28-02-2024 13:49:28.102 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@54895681
[DEBUG] 28-02-2024 13:49:28.103 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@54895681
[DEBUG] 28-02-2024 13:49:28.103 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@2dd0a0d0
[DEBUG] 28-02-2024 13:49:28.103 [main] BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@6bf570c
[DEBUG] 28-02-2024 13:49:28.104 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@1796b2d4
[DEBUG] 28-02-2024 13:49:28.104 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@1796b2d4
[DEBUG] 28-02-2024 13:49:28.105 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@1796b2d4
[DEBUG] 28-02-2024 13:49:28.105 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@935d3f9
[DEBUG] 28-02-2024 13:49:28.106 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@935d3f9
[DEBUG] 28-02-2024 13:49:28.106 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@935d3f9
[DEBUG] 28-02-2024 13:49:28.107 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@214b342f
[DEBUG] 28-02-2024 13:49:28.107 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@214b342f
[DEBUG] 28-02-2024 13:49:28.108 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@214b342f
[DEBUG] 28-02-2024 13:49:28.108 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@5db0003d
[DEBUG] 28-02-2024 13:49:28.108 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@5db0003d
[DEBUG] 28-02-2024 13:49:28.109 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@5db0003d
[DEBUG] 28-02-2024 13:49:28.109 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@7f12094d
[DEBUG] 28-02-2024 13:49:28.110 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@7f12094d
[DEBUG] 28-02-2024 13:49:28.110 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@7f12094d
[DEBUG] 28-02-2024 13:49:28.111 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@589fb74d
[DEBUG] 28-02-2024 13:49:28.111 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@589fb74d
[DEBUG] 28-02-2024 13:49:28.112 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@200d1a3d
[DEBUG] 28-02-2024 13:49:28.112 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@200d1a3d
[DEBUG] 28-02-2024 13:49:28.113 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@7de147e9
[DEBUG] 28-02-2024 13:49:28.113 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@7de147e9
[DEBUG] 28-02-2024 13:49:28.113 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@7de147e9
[DEBUG] 28-02-2024 13:49:28.114 [main] BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@12567179
[DEBUG] 28-02-2024 13:49:28.114 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@37d699a1
[DEBUG] 28-02-2024 13:49:28.115 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@37d699a1
[DEBUG] 28-02-2024 13:49:28.115 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@7f42b194
[DEBUG] 28-02-2024 13:49:28.115 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@8eb6f9a
[DEBUG] 28-02-2024 13:49:28.116 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@8eb6f9a
[DEBUG] 28-02-2024 13:49:28.116 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@8eb6f9a
[DEBUG] 28-02-2024 13:49:28.117 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@29170a47
[DEBUG] 28-02-2024 13:49:28.117 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@2a8f8555
[DEBUG] 28-02-2024 13:49:28.117 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@402b4f81
[DEBUG] 28-02-2024 13:49:28.118 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@13ef7fa1
[DEBUG] 28-02-2024 13:49:28.118 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@13ef7fa1
[DEBUG] 28-02-2024 13:49:28.118 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@23b1aa9
[DEBUG] 28-02-2024 13:49:28.119 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@23b1aa9
[DEBUG] 28-02-2024 13:49:28.119 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@54489296
[DEBUG] 28-02-2024 13:49:28.119 [main] BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@4e8598d9
[DEBUG] 28-02-2024 13:49:28.120 [main] BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@267ff4df
[DEBUG] 28-02-2024 13:49:28.121 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@7c4b5ceb
[DEBUG] 28-02-2024 13:49:28.121 [main] BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@6c07add6
[DEBUG] 28-02-2024 13:49:28.122 [main] BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@e26a3df
[DEBUG] 28-02-2024 13:49:28.122 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@57a667c8
[DEBUG] 28-02-2024 13:49:28.122 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@57a667c8
[DEBUG] 28-02-2024 13:49:28.123 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@712cd5d3
[DEBUG] 28-02-2024 13:49:28.123 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@712cd5d3
[DEBUG] 28-02-2024 13:49:28.124 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@2094bf3d
[DEBUG] 28-02-2024 13:49:28.124 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@2094bf3d
[DEBUG] 28-02-2024 13:49:28.124 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@1b17d8ab
[DEBUG] 28-02-2024 13:49:28.125 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@1b17d8ab
[DEBUG] 28-02-2024 13:49:28.125 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@7f6b7426
[DEBUG] 28-02-2024 13:49:28.125 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@7f6b7426
[DEBUG] 28-02-2024 13:49:28.126 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@687eb455
[DEBUG] 28-02-2024 13:49:28.126 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@6d969330
[DEBUG] 28-02-2024 13:49:28.126 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@4861cca9
[DEBUG] 28-02-2024 13:49:28.127 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@4861cca9
[DEBUG] 28-02-2024 13:49:28.127 [main] BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@6c8f4bc7
[DEBUG] 28-02-2024 13:49:28.127 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@714e861f
[DEBUG] 28-02-2024 13:49:28.128 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@28989415
[DEBUG] 28-02-2024 13:49:28.128 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@6eda012b
[DEBUG] 28-02-2024 13:49:28.128 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@6eda012b
[DEBUG] 28-02-2024 13:49:28.129 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@781dbe44
[DEBUG] 28-02-2024 13:49:28.129 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@7d66a126
[DEBUG] 28-02-2024 13:49:28.129 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@1132baa3
[DEBUG] 28-02-2024 13:49:28.130 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@1132baa3
[DEBUG] 28-02-2024 13:49:28.130 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@2fdf22f7
[DEBUG] 28-02-2024 13:49:28.130 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@2fdf22f7
[DEBUG] 28-02-2024 13:49:28.131 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@3a2546d6
[DEBUG] 28-02-2024 13:49:28.131 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@3a2546d6
[DEBUG] 28-02-2024 13:49:28.131 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@3a2546d6
[DEBUG] 28-02-2024 13:49:28.132 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@7282af25
[DEBUG] 28-02-2024 13:49:28.132 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@7282af25
[DEBUG] 28-02-2024 13:49:28.132 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@7282af25
[DEBUG] 28-02-2024 13:49:28.133 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@7661e474
[DEBUG] 28-02-2024 13:49:28.133 [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@20ffb8d5
[DEBUG] 28-02-2024 13:49:28.133 [main] BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@307c59ea
[DEBUG] 28-02-2024 13:49:28.134 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@307c59ea
[DEBUG] 28-02-2024 13:49:28.134 [main] BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@57e03347
[DEBUG] 28-02-2024 13:49:28.134 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@57e03347
[DEBUG] 28-02-2024 13:49:28.134 [main] BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@57e03347
[DEBUG] 28-02-2024 13:49:28.135 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@2edb2f8b
[DEBUG] 28-02-2024 13:49:28.135 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@733f1395
[DEBUG] 28-02-2024 13:49:28.136 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@21dea711
[DEBUG] 28-02-2024 13:49:28.136 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@21dea711
[DEBUG] 28-02-2024 13:49:28.136 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@7772d266
[DEBUG] 28-02-2024 13:49:28.137 [main] BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@7772d266
[DEBUG] 28-02-2024 13:49:28.137 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@7772d266
[DEBUG] 28-02-2024 13:49:28.137 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@a21c74
[DEBUG] 28-02-2024 13:49:28.138 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@a21c74
[DEBUG] 28-02-2024 13:49:28.138 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@b8a144e
[DEBUG] 28-02-2024 13:49:28.138 [main] BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@b8a144e
[DEBUG] 28-02-2024 13:49:28.139 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@5fb8dc01
[DEBUG] 28-02-2024 13:49:28.139 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@5fb8dc01
[DEBUG] 28-02-2024 13:49:28.140 [main] BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@3e38c472
[DEBUG] 28-02-2024 13:49:28.140 [main] BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@3e38c472
[DEBUG] 28-02-2024 13:49:28.140 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@2ee92e7d
[DEBUG] 28-02-2024 13:49:28.140 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@2ee92e7d
[DEBUG] 28-02-2024 13:49:28.141 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@759a678a
[DEBUG] 28-02-2024 13:49:28.155 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@60807fd9
[DEBUG] 28-02-2024 13:49:28.156 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@60807fd9
[DEBUG] 28-02-2024 13:49:28.159 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@5cc1bf20
[DEBUG] 28-02-2024 13:49:28.160 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@2e3f324e
[DEBUG] 28-02-2024 13:49:28.160 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@46cf8c07
[DEBUG] 28-02-2024 13:49:28.160 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@b56ec6c
[DEBUG] 28-02-2024 13:49:28.161 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@5abf6a99
[DEBUG] 28-02-2024 13:49:28.161 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@dc59ec2
[DEBUG] 28-02-2024 13:49:28.162 [main] BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@375084c9
[DEBUG] 28-02-2024 13:49:28.162 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@bd93bc3
[DEBUG] 28-02-2024 13:49:28.162 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@2a136383
[DEBUG] 28-02-2024 13:49:29.690 [main] DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@491893f8) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1f408ab6)
[DEBUG] 28-02-2024 13:49:29.695 [main] JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
[DEBUG] 28-02-2024 13:49:29.696 [main] JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 28-02-2024 13:49:29.716 [main] BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@29c59b6e
[DEBUG] 28-02-2024 13:49:29.717 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@29c59b6e
[DEBUG] 28-02-2024 13:49:29.717 [main] BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@60807fd9`
[DEBUG] 28-02-2024 13:49:29.719 [main] JdbcTypeRegistry - addDescriptor(3100, NumericTypeDescriptor) replaced previous registration(org.hibernate.dialect.PostgreSQLIntervalSecondJdbcType@37e55819)
[DEBUG] 28-02-2024 13:49:29.734 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 28-02-2024 13:49:29.734 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 28-02-2024 13:49:29.734 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 28-02-2024 13:49:29.735 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 28-02-2024 13:49:29.735 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 28-02-2024 13:49:29.735 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 28-02-2024 13:49:29.738 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 28-02-2024 13:49:29.738 [main] BasicTypeRegistry - Adding type registration OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 28-02-2024 13:49:29.739 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 28-02-2024 13:49:29.742 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@702096ef] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@5f0d8937]
[INFO ] 28-02-2024 13:49:30.679 [main] BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
[INFO ] 28-02-2024 13:49:33.148 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 28-02-2024 13:49:33.149 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@702096ef] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@2a525f88]
[TRACE] 28-02-2024 13:49:33.157 [main] TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@2a525f88] for TypeConfiguration
[WARN ] 28-02-2024 13:49:34.029 [main] JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[INFO ] 28-02-2024 13:49:35.499 [main] Http11NioProtocol - Starting ProtocolHandler ["http-nio-8300"]
[INFO ] 28-02-2024 13:49:35.559 [main] TomcatWebServer - Tomcat started on port(s): 8300 (http) with context path '/users_products_api'
[INFO ] 28-02-2024 13:49:35.612 [main] TestSpringBootApplication - Started TestSpringBootApplication in 16.073 seconds (process running for 19.174)
[INFO ] 28-02-2024 13:49:40.387 [http-nio-8300-exec-1] [/users_products_api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[INFO ] 28-02-2024 13:49:40.389 [http-nio-8300-exec-1] DispatcherServlet - Initializing Servlet 'dispatcherServlet'
[INFO ] 28-02-2024 13:49:40.394 [http-nio-8300-exec-1] DispatcherServlet - Completed initialization in 4 ms
[DEBUG] 28-02-2024 13:49:40.687 [http-nio-8300-exec-1] SQL - select e1_0.id,e1_0.email,e1_0.login,e1_0.name,e1_0.password,p1_0.id_user,p1_0.id,p1_0.name,p1_0.page_image,p1_0.price,p1_0.raiting,p1_0.year_issue from users e1_0 left join products p1_0 on e1_0.id=p1_0.id_user where e1_0.id=?
[TRACE] 29-02-2024 11:39:30.271 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@2a525f88] for TypeConfiguration
[DEBUG] 29-02-2024 11:39:30.274 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@707d2a7a] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@2a525f88]
[INFO ] 29-02-2024 11:39:57.956 [background-preinit] Version - HV000001: Hibernate Validator 8.0.1.Final
[INFO ] 29-02-2024 11:39:58.096 [main] TestCRUDUserProducts - Starting TestCRUDUserProducts using Java 17.0.10 with PID 1610486 (started by dima in /home/dima/backend_microservice/UserProductsMicroService)
[INFO ] 29-02-2024 11:39:58.109 [main] TestCRUDUserProducts - No active profile set, falling back to 1 default profile: "default"
[INFO ] 29-02-2024 11:39:59.535 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO ] 29-02-2024 11:40:00.048 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 483 ms. Found 1 JPA repository interfaces.
[INFO ] 29-02-2024 11:40:01.504 [main] Version - HHH000412: Hibernate ORM core version 6.2.6.Final
[INFO ] 29-02-2024 11:40:01.517 [main] Environment - HHH000406: Using bytecode reflection optimizer
[DEBUG] 29-02-2024 11:40:02.015 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@e5c2463
[DEBUG] 29-02-2024 11:40:02.016 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@e5c2463
[DEBUG] 29-02-2024 11:40:02.017 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@e5c2463
[DEBUG] 29-02-2024 11:40:02.018 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@6a950a3b
[DEBUG] 29-02-2024 11:40:02.018 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@6a950a3b
[DEBUG] 29-02-2024 11:40:02.019 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@4f7be6c8
[DEBUG] 29-02-2024 11:40:02.020 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@4f7be6c8
[DEBUG] 29-02-2024 11:40:02.020 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@647b9364
[DEBUG] 29-02-2024 11:40:02.021 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@647b9364
[DEBUG] 29-02-2024 11:40:02.022 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@b6bccb4
[DEBUG] 29-02-2024 11:40:02.022 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@b6bccb4
[DEBUG] 29-02-2024 11:40:02.023 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@b6bccb4
[DEBUG] 29-02-2024 11:40:02.023 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@49edcb30
[DEBUG] 29-02-2024 11:40:02.024 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@49edcb30
[DEBUG] 29-02-2024 11:40:02.024 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@49edcb30
[DEBUG] 29-02-2024 11:40:02.025 [main] BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@59303963
[DEBUG] 29-02-2024 11:40:02.026 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@59303963
[DEBUG] 29-02-2024 11:40:02.026 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@61e86192
[DEBUG] 29-02-2024 11:40:02.027 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@34330f77
[DEBUG] 29-02-2024 11:40:02.027 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@34330f77
[DEBUG] 29-02-2024 11:40:02.028 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@1320e68a
[DEBUG] 29-02-2024 11:40:02.029 [main] BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@4b033eac
[DEBUG] 29-02-2024 11:40:02.037 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@69c532af
[DEBUG] 29-02-2024 11:40:02.038 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@69c532af
[DEBUG] 29-02-2024 11:40:02.039 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@69c532af
[DEBUG] 29-02-2024 11:40:02.039 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@45a1d057
[DEBUG] 29-02-2024 11:40:02.040 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@45a1d057
[DEBUG] 29-02-2024 11:40:02.040 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@45a1d057
[DEBUG] 29-02-2024 11:40:02.041 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@51a16adf
[DEBUG] 29-02-2024 11:40:02.041 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@51a16adf
[DEBUG] 29-02-2024 11:40:02.042 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@51a16adf
[DEBUG] 29-02-2024 11:40:02.042 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@385d819
[DEBUG] 29-02-2024 11:40:02.043 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@385d819
[DEBUG] 29-02-2024 11:40:02.044 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@385d819
[DEBUG] 29-02-2024 11:40:02.044 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@4315c28c
[DEBUG] 29-02-2024 11:40:02.045 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@4315c28c
[DEBUG] 29-02-2024 11:40:02.045 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@4315c28c
[DEBUG] 29-02-2024 11:40:02.046 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@8fd91d1
[DEBUG] 29-02-2024 11:40:02.047 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@8fd91d1
[DEBUG] 29-02-2024 11:40:02.047 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@52d0f583
[DEBUG] 29-02-2024 11:40:02.052 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@52d0f583
[DEBUG] 29-02-2024 11:40:02.053 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@7fb8bad0
[DEBUG] 29-02-2024 11:40:02.054 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@7fb8bad0
[DEBUG] 29-02-2024 11:40:02.055 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@7fb8bad0
[DEBUG] 29-02-2024 11:40:02.055 [main] BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@12d40609
[DEBUG] 29-02-2024 11:40:02.056 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@76437e9b
[DEBUG] 29-02-2024 11:40:02.057 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@76437e9b
[DEBUG] 29-02-2024 11:40:02.057 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@236ae13d
[DEBUG] 29-02-2024 11:40:02.058 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@193eb1ba
[DEBUG] 29-02-2024 11:40:02.058 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@193eb1ba
[DEBUG] 29-02-2024 11:40:02.059 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@193eb1ba
[DEBUG] 29-02-2024 11:40:02.060 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@2be818da
[DEBUG] 29-02-2024 11:40:02.060 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@46320c9a
[DEBUG] 29-02-2024 11:40:02.061 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@32256e68
[DEBUG] 29-02-2024 11:40:02.061 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@5e7abaf7
[DEBUG] 29-02-2024 11:40:02.062 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@5e7abaf7
[DEBUG] 29-02-2024 11:40:02.063 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@353f472a
[DEBUG] 29-02-2024 11:40:02.063 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@353f472a
[DEBUG] 29-02-2024 11:40:02.064 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@63bfdbcb
[DEBUG] 29-02-2024 11:40:02.064 [main] BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@7af0affa
[DEBUG] 29-02-2024 11:40:02.065 [main] BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@71560f51
[DEBUG] 29-02-2024 11:40:02.065 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@3e1f1046
[DEBUG] 29-02-2024 11:40:02.066 [main] BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@23e3f5cd
[DEBUG] 29-02-2024 11:40:02.066 [main] BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@5c931134
[DEBUG] 29-02-2024 11:40:02.067 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@1d7eb170
[DEBUG] 29-02-2024 11:40:02.068 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@1d7eb170
[DEBUG] 29-02-2024 11:40:02.068 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@5b251fb9
[DEBUG] 29-02-2024 11:40:02.068 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@5b251fb9
[DEBUG] 29-02-2024 11:40:02.069 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@67d4c48d
[DEBUG] 29-02-2024 11:40:02.070 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@67d4c48d
[DEBUG] 29-02-2024 11:40:02.070 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@230a73f2
[DEBUG] 29-02-2024 11:40:02.071 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@230a73f2
[DEBUG] 29-02-2024 11:40:02.071 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@4b97b3d2
[DEBUG] 29-02-2024 11:40:02.072 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@4b97b3d2
[DEBUG] 29-02-2024 11:40:02.072 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@383cb5ce
[DEBUG] 29-02-2024 11:40:02.073 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@798deee8
[DEBUG] 29-02-2024 11:40:02.073 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@96897c8
[DEBUG] 29-02-2024 11:40:02.074 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@96897c8
[DEBUG] 29-02-2024 11:40:02.074 [main] BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@7f97bc14
[DEBUG] 29-02-2024 11:40:02.075 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@22d8f4ed
[DEBUG] 29-02-2024 11:40:02.075 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3434a4f0
[DEBUG] 29-02-2024 11:40:02.076 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@79afa369
[DEBUG] 29-02-2024 11:40:02.076 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@79afa369
[DEBUG] 29-02-2024 11:40:02.076 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@3b9ac754
[DEBUG] 29-02-2024 11:40:02.077 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@5e002356
[DEBUG] 29-02-2024 11:40:02.078 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@4f820f42
[DEBUG] 29-02-2024 11:40:02.078 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@4f820f42
[DEBUG] 29-02-2024 11:40:02.078 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@4b325930
[DEBUG] 29-02-2024 11:40:02.079 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@4b325930
[DEBUG] 29-02-2024 11:40:02.079 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@267f9765
[DEBUG] 29-02-2024 11:40:02.080 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@267f9765
[DEBUG] 29-02-2024 11:40:02.080 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@267f9765
[DEBUG] 29-02-2024 11:40:02.080 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@79ba0a6f
[DEBUG] 29-02-2024 11:40:02.081 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@79ba0a6f
[DEBUG] 29-02-2024 11:40:02.081 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@79ba0a6f
[DEBUG] 29-02-2024 11:40:02.082 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@261de205
[DEBUG] 29-02-2024 11:40:02.082 [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@7f3fc42f
[DEBUG] 29-02-2024 11:40:02.082 [main] BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@25a1a012
[DEBUG] 29-02-2024 11:40:02.083 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@25a1a012
[DEBUG] 29-02-2024 11:40:02.083 [main] BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@ce12fbb
[DEBUG] 29-02-2024 11:40:02.084 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@ce12fbb
[DEBUG] 29-02-2024 11:40:02.084 [main] BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@ce12fbb
[DEBUG] 29-02-2024 11:40:02.084 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@4525e9e8
[DEBUG] 29-02-2024 11:40:02.085 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@443a53df
[DEBUG] 29-02-2024 11:40:02.085 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@6c33da7a
[DEBUG] 29-02-2024 11:40:02.086 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@6c33da7a
[DEBUG] 29-02-2024 11:40:02.087 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@69aabcb0
[DEBUG] 29-02-2024 11:40:02.087 [main] BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@69aabcb0
[DEBUG] 29-02-2024 11:40:02.088 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@69aabcb0
[DEBUG] 29-02-2024 11:40:02.088 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@32a72c4
[DEBUG] 29-02-2024 11:40:02.089 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@32a72c4
[DEBUG] 29-02-2024 11:40:02.091 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@15986dd5
[DEBUG] 29-02-2024 11:40:02.092 [main] BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@15986dd5
[DEBUG] 29-02-2024 11:40:02.093 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@678a9516
[DEBUG] 29-02-2024 11:40:02.094 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@678a9516
[DEBUG] 29-02-2024 11:40:02.094 [main] BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@5bf9ea6b
[DEBUG] 29-02-2024 11:40:02.095 [main] BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@5bf9ea6b
[DEBUG] 29-02-2024 11:40:02.095 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@b950f82
[DEBUG] 29-02-2024 11:40:02.096 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@b950f82
[DEBUG] 29-02-2024 11:40:02.096 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@5d352de0
[DEBUG] 29-02-2024 11:40:02.132 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@35eee641
[DEBUG] 29-02-2024 11:40:02.133 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@35eee641
[DEBUG] 29-02-2024 11:40:02.170 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@1ac730cd
[DEBUG] 29-02-2024 11:40:02.171 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@668cc9a2
[DEBUG] 29-02-2024 11:40:02.171 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@5aa62ee7
[DEBUG] 29-02-2024 11:40:02.172 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@1f7cec93
[DEBUG] 29-02-2024 11:40:02.173 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@3c9ef6e9
[DEBUG] 29-02-2024 11:40:02.182 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@3cdff901
[DEBUG] 29-02-2024 11:40:02.182 [main] BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@57e5396b
[DEBUG] 29-02-2024 11:40:02.182 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@2f054f70
[DEBUG] 29-02-2024 11:40:02.183 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@6467ddc7
[DEBUG] 29-02-2024 11:40:04.103 [main] DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5f6494c0) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6826b70f)
[DEBUG] 29-02-2024 11:40:04.108 [main] JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
[DEBUG] 29-02-2024 11:40:04.109 [main] JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 29-02-2024 11:40:04.128 [main] BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@1f949ab9
[DEBUG] 29-02-2024 11:40:04.129 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@1f949ab9
[DEBUG] 29-02-2024 11:40:04.130 [main] BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@35eee641`
[DEBUG] 29-02-2024 11:40:04.133 [main] JdbcTypeRegistry - addDescriptor(3100, NumericTypeDescriptor) replaced previous registration(org.hibernate.dialect.PostgreSQLIntervalSecondJdbcType@39f42d0e)
[DEBUG] 29-02-2024 11:40:04.149 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 29-02-2024 11:40:04.150 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 29-02-2024 11:40:04.150 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 29-02-2024 11:40:04.151 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 29-02-2024 11:40:04.151 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 29-02-2024 11:40:04.151 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 29-02-2024 11:40:04.154 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 29-02-2024 11:40:04.154 [main] BasicTypeRegistry - Adding type registration OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 29-02-2024 11:40:04.155 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 29-02-2024 11:40:04.158 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@216f01] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@7c901203]
[INFO ] 29-02-2024 11:40:04.896 [main] BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
[INFO ] 29-02-2024 11:40:07.988 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 29-02-2024 11:40:07.991 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@216f01] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@8091d80]
[TRACE] 29-02-2024 11:40:08.022 [main] TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@8091d80] for TypeConfiguration
[INFO ] 29-02-2024 11:40:09.915 [main] SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
[INFO ] 29-02-2024 11:40:09.916 [main] TestDispatcherServlet - Initializing Servlet ''
[INFO ] 29-02-2024 11:40:09.923 [main] TestDispatcherServlet - Completed initialization in 3 ms
[INFO ] 29-02-2024 11:40:10.242 [main] TestCRUDUserProducts - Started TestCRUDUserProducts in 13.294 seconds (process running for 17.307)
[TRACE] 29-02-2024 11:40:12.178 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@8091d80] for TypeConfiguration
[DEBUG] 29-02-2024 11:40:12.181 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@361eb679] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@8091d80]
[INFO ] 29-02-2024 11:46:11.998 [background-preinit] Version - HV000001: Hibernate Validator 8.0.1.Final
[INFO ] 29-02-2024 11:46:12.117 [main] TestCRUDUserProducts - Starting TestCRUDUserProducts using Java 17.0.10 with PID 1613683 (started by dima in /home/dima/backend_microservice/UserProductsMicroService)
[INFO ] 29-02-2024 11:46:12.130 [main] TestCRUDUserProducts - No active profile set, falling back to 1 default profile: "default"
[INFO ] 29-02-2024 11:46:13.428 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO ] 29-02-2024 11:46:13.950 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 473 ms. Found 1 JPA repository interfaces.
[INFO ] 29-02-2024 11:46:15.013 [main] Version - HHH000412: Hibernate ORM core version 6.2.6.Final
[INFO ] 29-02-2024 11:46:15.021 [main] Environment - HHH000406: Using bytecode reflection optimizer
[DEBUG] 29-02-2024 11:46:15.446 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@741741d0
[DEBUG] 29-02-2024 11:46:15.446 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@741741d0
[DEBUG] 29-02-2024 11:46:15.447 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@741741d0
[DEBUG] 29-02-2024 11:46:15.448 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@5f9f3e58
[DEBUG] 29-02-2024 11:46:15.448 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@5f9f3e58
[DEBUG] 29-02-2024 11:46:15.449 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@3c19592c
[DEBUG] 29-02-2024 11:46:15.450 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@3c19592c
[DEBUG] 29-02-2024 11:46:15.450 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@60e1d87c
[DEBUG] 29-02-2024 11:46:15.451 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@60e1d87c
[DEBUG] 29-02-2024 11:46:15.451 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@2eb60c71
[DEBUG] 29-02-2024 11:46:15.452 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@2eb60c71
[DEBUG] 29-02-2024 11:46:15.453 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@2eb60c71
[DEBUG] 29-02-2024 11:46:15.454 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@87d9a01
[DEBUG] 29-02-2024 11:46:15.456 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@87d9a01
[DEBUG] 29-02-2024 11:46:15.457 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@87d9a01
[DEBUG] 29-02-2024 11:46:15.458 [main] BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@7e5b621b
[DEBUG] 29-02-2024 11:46:15.458 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@7e5b621b
[DEBUG] 29-02-2024 11:46:15.459 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@10177794
[DEBUG] 29-02-2024 11:46:15.459 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@e5c2463
[DEBUG] 29-02-2024 11:46:15.460 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@e5c2463
[DEBUG] 29-02-2024 11:46:15.460 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@6a950a3b
[DEBUG] 29-02-2024 11:46:15.461 [main] BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@4f7be6c8
[DEBUG] 29-02-2024 11:46:15.461 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@647b9364
[DEBUG] 29-02-2024 11:46:15.462 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@647b9364
[DEBUG] 29-02-2024 11:46:15.462 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@647b9364
[DEBUG] 29-02-2024 11:46:15.463 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@b6bccb4
[DEBUG] 29-02-2024 11:46:15.463 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@b6bccb4
[DEBUG] 29-02-2024 11:46:15.464 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@b6bccb4
[DEBUG] 29-02-2024 11:46:15.465 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@49edcb30
[DEBUG] 29-02-2024 11:46:15.465 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@49edcb30
[DEBUG] 29-02-2024 11:46:15.466 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@49edcb30
[DEBUG] 29-02-2024 11:46:15.466 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@59303963
[DEBUG] 29-02-2024 11:46:15.467 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@59303963
[DEBUG] 29-02-2024 11:46:15.467 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@59303963
[DEBUG] 29-02-2024 11:46:15.468 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@61e86192
[DEBUG] 29-02-2024 11:46:15.468 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@61e86192
[DEBUG] 29-02-2024 11:46:15.469 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@61e86192
[DEBUG] 29-02-2024 11:46:15.470 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@34330f77
[DEBUG] 29-02-2024 11:46:15.470 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@34330f77
[DEBUG] 29-02-2024 11:46:15.471 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@1320e68a
[DEBUG] 29-02-2024 11:46:15.471 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@1320e68a
[DEBUG] 29-02-2024 11:46:15.472 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@4b033eac
[DEBUG] 29-02-2024 11:46:15.473 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@4b033eac
[DEBUG] 29-02-2024 11:46:15.473 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@4b033eac
[DEBUG] 29-02-2024 11:46:15.475 [main] BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@69c532af
[DEBUG] 29-02-2024 11:46:15.476 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@45a1d057
[DEBUG] 29-02-2024 11:46:15.476 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@45a1d057
[DEBUG] 29-02-2024 11:46:15.477 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@51a16adf
[DEBUG] 29-02-2024 11:46:15.478 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@385d819
[DEBUG] 29-02-2024 11:46:15.478 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@385d819
[DEBUG] 29-02-2024 11:46:15.490 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@385d819
[DEBUG] 29-02-2024 11:46:15.491 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@4315c28c
[DEBUG] 29-02-2024 11:46:15.491 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@8fd91d1
[DEBUG] 29-02-2024 11:46:15.492 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@52d0f583
[DEBUG] 29-02-2024 11:46:15.492 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@7fb8bad0
[DEBUG] 29-02-2024 11:46:15.493 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@7fb8bad0
[DEBUG] 29-02-2024 11:46:15.494 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@12d40609
[DEBUG] 29-02-2024 11:46:15.494 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@12d40609
[DEBUG] 29-02-2024 11:46:15.495 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@76437e9b
[DEBUG] 29-02-2024 11:46:15.495 [main] BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@236ae13d
[DEBUG] 29-02-2024 11:46:15.496 [main] BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@193eb1ba
[DEBUG] 29-02-2024 11:46:15.497 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@2be818da
[DEBUG] 29-02-2024 11:46:15.511 [main] BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@46320c9a
[DEBUG] 29-02-2024 11:46:15.512 [main] BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@32256e68
[DEBUG] 29-02-2024 11:46:15.513 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@5e7abaf7
[DEBUG] 29-02-2024 11:46:15.513 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@5e7abaf7
[DEBUG] 29-02-2024 11:46:15.514 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@353f472a
[DEBUG] 29-02-2024 11:46:15.514 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@353f472a
[DEBUG] 29-02-2024 11:46:15.515 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@63bfdbcb
[DEBUG] 29-02-2024 11:46:15.517 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@63bfdbcb
[DEBUG] 29-02-2024 11:46:15.518 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@7af0affa
[DEBUG] 29-02-2024 11:46:15.518 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@7af0affa
[DEBUG] 29-02-2024 11:46:15.519 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@71560f51
[DEBUG] 29-02-2024 11:46:15.519 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@71560f51
[DEBUG] 29-02-2024 11:46:15.520 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@3e1f1046
[DEBUG] 29-02-2024 11:46:15.520 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@23e3f5cd
[DEBUG] 29-02-2024 11:46:15.521 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@5c931134
[DEBUG] 29-02-2024 11:46:15.521 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@5c931134
[DEBUG] 29-02-2024 11:46:15.522 [main] BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@1d7eb170
[DEBUG] 29-02-2024 11:46:15.522 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@5b251fb9
[DEBUG] 29-02-2024 11:46:15.523 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@67d4c48d
[DEBUG] 29-02-2024 11:46:15.523 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@230a73f2
[DEBUG] 29-02-2024 11:46:15.524 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@230a73f2
[DEBUG] 29-02-2024 11:46:15.524 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@4b97b3d2
[DEBUG] 29-02-2024 11:46:15.525 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@383cb5ce
[DEBUG] 29-02-2024 11:46:15.525 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@798deee8
[DEBUG] 29-02-2024 11:46:15.526 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@798deee8
[DEBUG] 29-02-2024 11:46:15.528 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@96897c8
[DEBUG] 29-02-2024 11:46:15.529 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@96897c8
[DEBUG] 29-02-2024 11:46:15.529 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@7f97bc14
[DEBUG] 29-02-2024 11:46:15.530 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@7f97bc14
[DEBUG] 29-02-2024 11:46:15.530 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@7f97bc14
[DEBUG] 29-02-2024 11:46:15.531 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@22d8f4ed
[DEBUG] 29-02-2024 11:46:15.531 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@22d8f4ed
[DEBUG] 29-02-2024 11:46:15.531 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@22d8f4ed
[DEBUG] 29-02-2024 11:46:15.532 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@3434a4f0
[DEBUG] 29-02-2024 11:46:15.532 [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@79afa369
[DEBUG] 29-02-2024 11:46:15.533 [main] BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@3b9ac754
[DEBUG] 29-02-2024 11:46:15.533 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@3b9ac754
[DEBUG] 29-02-2024 11:46:15.534 [main] BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@5e002356
[DEBUG] 29-02-2024 11:46:15.534 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@5e002356
[DEBUG] 29-02-2024 11:46:15.534 [main] BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@5e002356
[DEBUG] 29-02-2024 11:46:15.535 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@4f820f42
[DEBUG] 29-02-2024 11:46:15.535 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@4b325930
[DEBUG] 29-02-2024 11:46:15.536 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@267f9765
[DEBUG] 29-02-2024 11:46:15.537 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@267f9765
[DEBUG] 29-02-2024 11:46:15.538 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@79ba0a6f
[DEBUG] 29-02-2024 11:46:15.538 [main] BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@79ba0a6f
[DEBUG] 29-02-2024 11:46:15.539 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@79ba0a6f
[DEBUG] 29-02-2024 11:46:15.539 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@261de205
[DEBUG] 29-02-2024 11:46:15.539 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@261de205
[DEBUG] 29-02-2024 11:46:15.540 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@7f3fc42f
[DEBUG] 29-02-2024 11:46:15.540 [main] BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@7f3fc42f
[DEBUG] 29-02-2024 11:46:15.541 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@25a1a012
[DEBUG] 29-02-2024 11:46:15.542 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@25a1a012
[DEBUG] 29-02-2024 11:46:15.542 [main] BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@ce12fbb
[DEBUG] 29-02-2024 11:46:15.543 [main] BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@ce12fbb
[DEBUG] 29-02-2024 11:46:15.543 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@4525e9e8
[DEBUG] 29-02-2024 11:46:15.544 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@4525e9e8
[DEBUG] 29-02-2024 11:46:15.544 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@443a53df
[DEBUG] 29-02-2024 11:46:15.570 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@1e98b788
[DEBUG] 29-02-2024 11:46:15.572 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@1e98b788
[DEBUG] 29-02-2024 11:46:15.575 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@3b7c58e7
[DEBUG] 29-02-2024 11:46:15.576 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@79627d27
[DEBUG] 29-02-2024 11:46:15.576 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@6371cf2f
[DEBUG] 29-02-2024 11:46:15.577 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@b5b9333
[DEBUG] 29-02-2024 11:46:15.579 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@52b959df
[DEBUG] 29-02-2024 11:46:15.579 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@38588dea
[DEBUG] 29-02-2024 11:46:15.595 [main] BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@553d2579
[DEBUG] 29-02-2024 11:46:15.596 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@2a8f6e6
[DEBUG] 29-02-2024 11:46:15.596 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@1ac730cd
[DEBUG] 29-02-2024 11:46:16.960 [main] DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@57c69937) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1ad1c363)
[DEBUG] 29-02-2024 11:46:16.965 [main] JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
[DEBUG] 29-02-2024 11:46:16.966 [main] JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 29-02-2024 11:46:16.992 [main] BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@270d5060
[DEBUG] 29-02-2024 11:46:16.992 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@270d5060
[DEBUG] 29-02-2024 11:46:16.993 [main] BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@1e98b788`
[DEBUG] 29-02-2024 11:46:16.996 [main] JdbcTypeRegistry - addDescriptor(3100, NumericTypeDescriptor) replaced previous registration(org.hibernate.dialect.PostgreSQLIntervalSecondJdbcType@ee96866)
[DEBUG] 29-02-2024 11:46:17.010 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 29-02-2024 11:46:17.011 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 29-02-2024 11:46:17.011 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 29-02-2024 11:46:17.012 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 29-02-2024 11:46:17.012 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 29-02-2024 11:46:17.013 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 29-02-2024 11:46:17.015 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 29-02-2024 11:46:17.015 [main] BasicTypeRegistry - Adding type registration OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 29-02-2024 11:46:17.016 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 29-02-2024 11:46:17.019 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1002d192] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@9281d19]
[INFO ] 29-02-2024 11:46:17.717 [main] BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
[INFO ] 29-02-2024 11:46:20.170 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 29-02-2024 11:46:20.172 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1002d192] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@2e2cd42c]
[TRACE] 29-02-2024 11:46:20.184 [main] TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@2e2cd42c] for TypeConfiguration
[INFO ] 29-02-2024 11:46:22.167 [main] SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
[INFO ] 29-02-2024 11:46:22.168 [main] TestDispatcherServlet - Initializing Servlet ''
[INFO ] 29-02-2024 11:46:22.176 [main] TestDispatcherServlet - Completed initialization in 4 ms
[INFO ] 29-02-2024 11:46:22.475 [main] TestCRUDUserProducts - Started TestCRUDUserProducts in 11.488 seconds (process running for 15.759)
[TRACE] 29-02-2024 11:46:24.547 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@2e2cd42c] for TypeConfiguration
[DEBUG] 29-02-2024 11:46:24.548 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@4055fdc9] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@2e2cd42c]
[INFO ] 29-02-2024 11:55:47.066 [background-preinit] Version - HV000001: Hibernate Validator 8.0.1.Final
[INFO ] 29-02-2024 11:55:47.217 [main] TestCRUDUserProducts - Starting TestCRUDUserProducts using Java 17.0.10 with PID 1618603 (started by dima in /home/dima/backend_microservice/UserProductsMicroService)
[INFO ] 29-02-2024 11:55:47.228 [main] TestCRUDUserProducts - No active profile set, falling back to 1 default profile: "default"
[INFO ] 29-02-2024 11:55:48.181 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO ] 29-02-2024 11:55:48.648 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 446 ms. Found 1 JPA repository interfaces.
[INFO ] 29-02-2024 11:55:49.973 [main] Version - HHH000412: Hibernate ORM core version 6.2.6.Final
[INFO ] 29-02-2024 11:55:49.980 [main] Environment - HHH000406: Using bytecode reflection optimizer
[DEBUG] 29-02-2024 11:55:50.540 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@6a950a3b
[DEBUG] 29-02-2024 11:55:50.541 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@6a950a3b
[DEBUG] 29-02-2024 11:55:50.542 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@6a950a3b
[DEBUG] 29-02-2024 11:55:50.543 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@4f7be6c8
[DEBUG] 29-02-2024 11:55:50.544 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@4f7be6c8
[DEBUG] 29-02-2024 11:55:50.544 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@647b9364
[DEBUG] 29-02-2024 11:55:50.545 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@647b9364
[DEBUG] 29-02-2024 11:55:50.546 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@b6bccb4
[DEBUG] 29-02-2024 11:55:50.547 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@b6bccb4
[DEBUG] 29-02-2024 11:55:50.547 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@49edcb30
[DEBUG] 29-02-2024 11:55:50.548 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@49edcb30
[DEBUG] 29-02-2024 11:55:50.548 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@49edcb30
[DEBUG] 29-02-2024 11:55:50.549 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@59303963
[DEBUG] 29-02-2024 11:55:50.549 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@59303963
[DEBUG] 29-02-2024 11:55:50.550 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@59303963
[DEBUG] 29-02-2024 11:55:50.551 [main] BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@61e86192
[DEBUG] 29-02-2024 11:55:50.551 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@61e86192
[DEBUG] 29-02-2024 11:55:50.552 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@34330f77
[DEBUG] 29-02-2024 11:55:50.553 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@1320e68a
[DEBUG] 29-02-2024 11:55:50.553 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@1320e68a
[DEBUG] 29-02-2024 11:55:50.554 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@4b033eac
[DEBUG] 29-02-2024 11:55:50.555 [main] BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@69c532af
[DEBUG] 29-02-2024 11:55:50.555 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@45a1d057
[DEBUG] 29-02-2024 11:55:50.556 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@45a1d057
[DEBUG] 29-02-2024 11:55:50.556 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@45a1d057
[DEBUG] 29-02-2024 11:55:50.557 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@51a16adf
[DEBUG] 29-02-2024 11:55:50.558 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@51a16adf
[DEBUG] 29-02-2024 11:55:50.558 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@51a16adf
[DEBUG] 29-02-2024 11:55:50.559 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@385d819
[DEBUG] 29-02-2024 11:55:50.559 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@385d819
[DEBUG] 29-02-2024 11:55:50.560 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@385d819
[DEBUG] 29-02-2024 11:55:50.560 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@4315c28c
[DEBUG] 29-02-2024 11:55:50.561 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@4315c28c
[DEBUG] 29-02-2024 11:55:50.562 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@4315c28c
[DEBUG] 29-02-2024 11:55:50.562 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@8fd91d1
[DEBUG] 29-02-2024 11:55:50.563 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@8fd91d1
[DEBUG] 29-02-2024 11:55:50.564 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@8fd91d1
[DEBUG] 29-02-2024 11:55:50.564 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@52d0f583
[DEBUG] 29-02-2024 11:55:50.565 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@52d0f583
[DEBUG] 29-02-2024 11:55:50.565 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@7fb8bad0
[DEBUG] 29-02-2024 11:55:50.566 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@7fb8bad0
[DEBUG] 29-02-2024 11:55:50.566 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@12d40609
[DEBUG] 29-02-2024 11:55:50.568 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@12d40609
[DEBUG] 29-02-2024 11:55:50.568 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@12d40609
[DEBUG] 29-02-2024 11:55:50.570 [main] BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@76437e9b
[DEBUG] 29-02-2024 11:55:50.570 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@236ae13d
[DEBUG] 29-02-2024 11:55:50.570 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@236ae13d
[DEBUG] 29-02-2024 11:55:50.571 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@193eb1ba
[DEBUG] 29-02-2024 11:55:50.572 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@2be818da
[DEBUG] 29-02-2024 11:55:50.572 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@2be818da
[DEBUG] 29-02-2024 11:55:50.573 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@2be818da
[DEBUG] 29-02-2024 11:55:50.574 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@46320c9a
[DEBUG] 29-02-2024 11:55:50.574 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@32256e68
[DEBUG] 29-02-2024 11:55:50.574 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@5e7abaf7
[DEBUG] 29-02-2024 11:55:50.575 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@353f472a
[DEBUG] 29-02-2024 11:55:50.575 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@353f472a
[DEBUG] 29-02-2024 11:55:50.576 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@63bfdbcb
[DEBUG] 29-02-2024 11:55:50.576 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@63bfdbcb
[DEBUG] 29-02-2024 11:55:50.577 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@7af0affa
[DEBUG] 29-02-2024 11:55:50.577 [main] BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@71560f51
[DEBUG] 29-02-2024 11:55:50.578 [main] BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@3e1f1046
[DEBUG] 29-02-2024 11:55:50.579 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@23e3f5cd
[DEBUG] 29-02-2024 11:55:50.579 [main] BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@5c931134
[DEBUG] 29-02-2024 11:55:50.579 [main] BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@1d7eb170
[DEBUG] 29-02-2024 11:55:50.580 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@5b251fb9
[DEBUG] 29-02-2024 11:55:50.580 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@5b251fb9
[DEBUG] 29-02-2024 11:55:50.581 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@67d4c48d
[DEBUG] 29-02-2024 11:55:50.581 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@67d4c48d
[DEBUG] 29-02-2024 11:55:50.582 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@230a73f2
[DEBUG] 29-02-2024 11:55:50.582 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@230a73f2
[DEBUG] 29-02-2024 11:55:50.583 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@4b97b3d2
[DEBUG] 29-02-2024 11:55:50.583 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@4b97b3d2
[DEBUG] 29-02-2024 11:55:50.584 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@383cb5ce
[DEBUG] 29-02-2024 11:55:50.584 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@383cb5ce
[DEBUG] 29-02-2024 11:55:50.584 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@798deee8
[DEBUG] 29-02-2024 11:55:50.585 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@96897c8
[DEBUG] 29-02-2024 11:55:50.586 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@7f97bc14
[DEBUG] 29-02-2024 11:55:50.586 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@7f97bc14
[DEBUG] 29-02-2024 11:55:50.587 [main] BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@22d8f4ed
[DEBUG] 29-02-2024 11:55:50.587 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@3434a4f0
[DEBUG] 29-02-2024 11:55:50.587 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@79afa369
[DEBUG] 29-02-2024 11:55:50.590 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@3b9ac754
[DEBUG] 29-02-2024 11:55:50.594 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@3b9ac754
[DEBUG] 29-02-2024 11:55:50.595 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@5e002356
[DEBUG] 29-02-2024 11:55:50.596 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4f820f42
[DEBUG] 29-02-2024 11:55:50.596 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@4b325930
[DEBUG] 29-02-2024 11:55:50.597 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@4b325930
[DEBUG] 29-02-2024 11:55:50.597 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@267f9765
[DEBUG] 29-02-2024 11:55:50.598 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@267f9765
[DEBUG] 29-02-2024 11:55:50.598 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@79ba0a6f
[DEBUG] 29-02-2024 11:55:50.599 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@79ba0a6f
[DEBUG] 29-02-2024 11:55:50.599 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@79ba0a6f
[DEBUG] 29-02-2024 11:55:50.600 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@261de205
[DEBUG] 29-02-2024 11:55:50.600 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@261de205
[DEBUG] 29-02-2024 11:55:50.600 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@261de205
[DEBUG] 29-02-2024 11:55:50.601 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@7f3fc42f
[DEBUG] 29-02-2024 11:55:50.601 [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@25a1a012
[DEBUG] 29-02-2024 11:55:50.602 [main] BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@ce12fbb
[DEBUG] 29-02-2024 11:55:50.602 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@ce12fbb
[DEBUG] 29-02-2024 11:55:50.603 [main] BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@4525e9e8
[DEBUG] 29-02-2024 11:55:50.603 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@4525e9e8
[DEBUG] 29-02-2024 11:55:50.604 [main] BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@4525e9e8
[DEBUG] 29-02-2024 11:55:50.604 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@443a53df
[DEBUG] 29-02-2024 11:55:50.604 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@6c33da7a
[DEBUG] 29-02-2024 11:55:50.605 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@69aabcb0
[DEBUG] 29-02-2024 11:55:50.605 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@69aabcb0
[DEBUG] 29-02-2024 11:55:50.606 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@32a72c4
[DEBUG] 29-02-2024 11:55:50.606 [main] BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@32a72c4
[DEBUG] 29-02-2024 11:55:50.606 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@32a72c4
[DEBUG] 29-02-2024 11:55:50.607 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@15986dd5
[DEBUG] 29-02-2024 11:55:50.607 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@15986dd5
[DEBUG] 29-02-2024 11:55:50.607 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@678a9516
[DEBUG] 29-02-2024 11:55:50.608 [main] BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@678a9516
[DEBUG] 29-02-2024 11:55:50.608 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@5bf9ea6b
[DEBUG] 29-02-2024 11:55:50.609 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@5bf9ea6b
[DEBUG] 29-02-2024 11:55:50.610 [main] BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@b950f82
[DEBUG] 29-02-2024 11:55:50.627 [main] BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@b950f82
[DEBUG] 29-02-2024 11:55:50.627 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@5d352de0
[DEBUG] 29-02-2024 11:55:50.628 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@5d352de0
[DEBUG] 29-02-2024 11:55:50.628 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@6e243175
[DEBUG] 29-02-2024 11:55:50.643 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@5729b410
[DEBUG] 29-02-2024 11:55:50.643 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@5729b410
[DEBUG] 29-02-2024 11:55:50.646 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@668cc9a2
[DEBUG] 29-02-2024 11:55:50.647 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@5aa62ee7
[DEBUG] 29-02-2024 11:55:50.648 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@1f7cec93
[DEBUG] 29-02-2024 11:55:50.648 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@3c9ef6e9
[DEBUG] 29-02-2024 11:55:50.649 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@3cdff901
[DEBUG] 29-02-2024 11:55:50.649 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@57e5396b
[DEBUG] 29-02-2024 11:55:50.649 [main] BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@2f054f70
[DEBUG] 29-02-2024 11:55:50.650 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@6467ddc7
[DEBUG] 29-02-2024 11:55:50.650 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@27b337bb
[DEBUG] 29-02-2024 11:55:52.336 [main] DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6826b70f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4df7d9ee)
[DEBUG] 29-02-2024 11:55:52.343 [main] JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
[DEBUG] 29-02-2024 11:55:52.347 [main] JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 29-02-2024 11:55:52.369 [main] BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@5a7b6b75
[DEBUG] 29-02-2024 11:55:52.370 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@5a7b6b75
[DEBUG] 29-02-2024 11:55:52.371 [main] BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@5729b410`
[DEBUG] 29-02-2024 11:55:52.380 [main] JdbcTypeRegistry - addDescriptor(3100, NumericTypeDescriptor) replaced previous registration(org.hibernate.dialect.PostgreSQLIntervalSecondJdbcType@47a3d56a)
[DEBUG] 29-02-2024 11:55:52.395 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 29-02-2024 11:55:52.396 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 29-02-2024 11:55:52.396 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 29-02-2024 11:55:52.397 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 29-02-2024 11:55:52.398 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 29-02-2024 11:55:52.398 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 29-02-2024 11:55:52.401 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 29-02-2024 11:55:52.402 [main] BasicTypeRegistry - Adding type registration OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 29-02-2024 11:55:52.402 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 29-02-2024 11:55:52.406 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7c901203] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@1e721583]
[INFO ] 29-02-2024 11:55:53.048 [main] BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
[INFO ] 29-02-2024 11:55:55.770 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 29-02-2024 11:55:55.772 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7c901203] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@314c28dc]
[TRACE] 29-02-2024 11:55:55.779 [main] TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@314c28dc] for TypeConfiguration
[INFO ] 29-02-2024 11:55:57.338 [main] SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
[INFO ] 29-02-2024 11:55:57.339 [main] TestDispatcherServlet - Initializing Servlet ''
[INFO ] 29-02-2024 11:55:57.346 [main] TestDispatcherServlet - Completed initialization in 3 ms
[INFO ] 29-02-2024 11:55:57.642 [main] TestCRUDUserProducts - Started TestCRUDUserProducts in 11.313 seconds (process running for 15.008)
[DEBUG] 29-02-2024 11:55:59.268 [main] SQL - select e1_0.id,e1_0.email,e1_0.login,e1_0.name,e1_0.password,p1_0.id_user,p1_0.id,p1_0.name,p1_0.page_image,p1_0.price,p1_0.raiting,p1_0.year_issue from users e1_0 left join products p1_0 on e1_0.id=p1_0.id_user where e1_0.id=?
[TRACE] 29-02-2024 11:55:59.725 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@314c28dc] for TypeConfiguration
[DEBUG] 29-02-2024 11:55:59.726 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@6515f6ff] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@314c28dc]
[INFO ] 29-02-2024 12:02:26.095 [background-preinit] Version - HV000001: Hibernate Validator 8.0.1.Final
[INFO ] 29-02-2024 12:02:26.213 [main] TestCRUDUserProducts - Starting TestCRUDUserProducts using Java 17.0.10 with PID 1622020 (started by dima in /home/dima/backend_microservice/UserProductsMicroService)
[INFO ] 29-02-2024 12:02:26.229 [main] TestCRUDUserProducts - No active profile set, falling back to 1 default profile: "default"
[INFO ] 29-02-2024 12:02:27.243 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO ] 29-02-2024 12:02:27.712 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 446 ms. Found 1 JPA repository interfaces.
[INFO ] 29-02-2024 12:02:31.738 [main] Version - HHH000412: Hibernate ORM core version 6.2.6.Final
[INFO ] 29-02-2024 12:02:31.749 [main] Environment - HHH000406: Using bytecode reflection optimizer
[DEBUG] 29-02-2024 12:02:32.285 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@455cbf18
[DEBUG] 29-02-2024 12:02:32.287 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@455cbf18
[DEBUG] 29-02-2024 12:02:32.288 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@455cbf18
[DEBUG] 29-02-2024 12:02:32.289 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@24aedcc5
[DEBUG] 29-02-2024 12:02:32.290 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@24aedcc5
[DEBUG] 29-02-2024 12:02:32.291 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@74ebd159
[DEBUG] 29-02-2024 12:02:32.292 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@74ebd159
[DEBUG] 29-02-2024 12:02:32.292 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@1850f2da
[DEBUG] 29-02-2024 12:02:32.293 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@1850f2da
[DEBUG] 29-02-2024 12:02:32.294 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@38d42ab7
[DEBUG] 29-02-2024 12:02:32.295 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@38d42ab7
[DEBUG] 29-02-2024 12:02:32.296 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@38d42ab7
[DEBUG] 29-02-2024 12:02:32.297 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@6ace919c
[DEBUG] 29-02-2024 12:02:32.298 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@6ace919c
[DEBUG] 29-02-2024 12:02:32.299 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@6ace919c
[DEBUG] 29-02-2024 12:02:32.300 [main] BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@4005e485
[DEBUG] 29-02-2024 12:02:32.300 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@4005e485
[DEBUG] 29-02-2024 12:02:32.301 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@5f5c187d
[DEBUG] 29-02-2024 12:02:32.302 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@464400b3
[DEBUG] 29-02-2024 12:02:32.303 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@464400b3
[DEBUG] 29-02-2024 12:02:32.304 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@58182b96
[DEBUG] 29-02-2024 12:02:32.304 [main] BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@37d6dddc
[DEBUG] 29-02-2024 12:02:32.305 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@8f6b4ab
[DEBUG] 29-02-2024 12:02:32.307 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@8f6b4ab
[DEBUG] 29-02-2024 12:02:32.308 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@8f6b4ab
[DEBUG] 29-02-2024 12:02:32.309 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@6e517c9e
[DEBUG] 29-02-2024 12:02:32.310 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@6e517c9e
[DEBUG] 29-02-2024 12:02:32.311 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@6e517c9e
[DEBUG] 29-02-2024 12:02:32.312 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@770cae59
[DEBUG] 29-02-2024 12:02:32.313 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@770cae59
[DEBUG] 29-02-2024 12:02:32.314 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@770cae59
[DEBUG] 29-02-2024 12:02:32.315 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@76b5a559
[DEBUG] 29-02-2024 12:02:32.315 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@76b5a559
[DEBUG] 29-02-2024 12:02:32.316 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@76b5a559
[DEBUG] 29-02-2024 12:02:32.317 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@4bdb04c8
[DEBUG] 29-02-2024 12:02:32.318 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@4bdb04c8
[DEBUG] 29-02-2024 12:02:32.318 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@4bdb04c8
[DEBUG] 29-02-2024 12:02:32.319 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@2e8b24a1
[DEBUG] 29-02-2024 12:02:32.334 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@2e8b24a1
[DEBUG] 29-02-2024 12:02:32.336 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@3ce7394f
[DEBUG] 29-02-2024 12:02:32.336 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@3ce7394f
[DEBUG] 29-02-2024 12:02:32.337 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@6723cce7
[DEBUG] 29-02-2024 12:02:32.355 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@6723cce7
[DEBUG] 29-02-2024 12:02:32.356 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@6723cce7
[DEBUG] 29-02-2024 12:02:32.357 [main] BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@74cd798f
[DEBUG] 29-02-2024 12:02:32.358 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@314f59b
[DEBUG] 29-02-2024 12:02:32.358 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@314f59b
[DEBUG] 29-02-2024 12:02:32.359 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@63c99f7
[DEBUG] 29-02-2024 12:02:32.360 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@7f012923
[DEBUG] 29-02-2024 12:02:32.361 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@7f012923
[DEBUG] 29-02-2024 12:02:32.362 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@7f012923
[DEBUG] 29-02-2024 12:02:32.362 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@601f264d
[DEBUG] 29-02-2024 12:02:32.363 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@4403bff8
[DEBUG] 29-02-2024 12:02:32.364 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@261275ae
[DEBUG] 29-02-2024 12:02:32.364 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@502c087e
[DEBUG] 29-02-2024 12:02:32.365 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@502c087e
[DEBUG] 29-02-2024 12:02:32.376 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@49986178
[DEBUG] 29-02-2024 12:02:32.378 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@49986178
[DEBUG] 29-02-2024 12:02:32.379 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@10bdfbcc
[DEBUG] 29-02-2024 12:02:32.380 [main] BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@25b74370
[DEBUG] 29-02-2024 12:02:32.381 [main] BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@15e8c040
[DEBUG] 29-02-2024 12:02:32.382 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@1f71e024
[DEBUG] 29-02-2024 12:02:32.383 [main] BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@60ed0b9d
[DEBUG] 29-02-2024 12:02:32.383 [main] BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@7f5e6833
[DEBUG] 29-02-2024 12:02:32.396 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@2c674d58
[DEBUG] 29-02-2024 12:02:32.398 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@2c674d58
[DEBUG] 29-02-2024 12:02:32.399 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@3c07e830
[DEBUG] 29-02-2024 12:02:32.400 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@3c07e830
[DEBUG] 29-02-2024 12:02:32.401 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@34beadce
[DEBUG] 29-02-2024 12:02:32.401 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@34beadce
[DEBUG] 29-02-2024 12:02:32.402 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@382d549a
[DEBUG] 29-02-2024 12:02:32.403 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@382d549a
[DEBUG] 29-02-2024 12:02:32.404 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@2eb6d34a
[DEBUG] 29-02-2024 12:02:32.405 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@2eb6d34a
[DEBUG] 29-02-2024 12:02:32.406 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2d73e8c4
[DEBUG] 29-02-2024 12:02:32.406 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@6ce2e079
[DEBUG] 29-02-2024 12:02:32.407 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@3e39e0fb
[DEBUG] 29-02-2024 12:02:32.408 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@3e39e0fb
[DEBUG] 29-02-2024 12:02:32.409 [main] BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@260d48f5
[DEBUG] 29-02-2024 12:02:32.409 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@148ab138
[DEBUG] 29-02-2024 12:02:32.410 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@6f106af8
[DEBUG] 29-02-2024 12:02:32.411 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@1edf71d9
[DEBUG] 29-02-2024 12:02:32.412 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@1edf71d9
[DEBUG] 29-02-2024 12:02:32.412 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@52d9d817
[DEBUG] 29-02-2024 12:02:32.413 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@131ba005
[DEBUG] 29-02-2024 12:02:32.414 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@7f305f34
[DEBUG] 29-02-2024 12:02:32.414 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@7f305f34
[DEBUG] 29-02-2024 12:02:32.415 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@1a84a8b2
[DEBUG] 29-02-2024 12:02:32.416 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@1a84a8b2
[DEBUG] 29-02-2024 12:02:32.417 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@601d295
[DEBUG] 29-02-2024 12:02:32.418 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@601d295
[DEBUG] 29-02-2024 12:02:32.418 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@601d295
[DEBUG] 29-02-2024 12:02:32.422 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@485451d8
[DEBUG] 29-02-2024 12:02:32.429 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@485451d8
[DEBUG] 29-02-2024 12:02:32.430 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@485451d8
[DEBUG] 29-02-2024 12:02:32.436 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@35e07e19
[DEBUG] 29-02-2024 12:02:32.439 [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@a1e912f
[DEBUG] 29-02-2024 12:02:32.439 [main] BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@2036f83
[DEBUG] 29-02-2024 12:02:32.440 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@2036f83
[DEBUG] 29-02-2024 12:02:32.441 [main] BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@68b3248a
[DEBUG] 29-02-2024 12:02:32.441 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@68b3248a
[DEBUG] 29-02-2024 12:02:32.442 [main] BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@68b3248a
[DEBUG] 29-02-2024 12:02:32.443 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@5e158f33
[DEBUG] 29-02-2024 12:02:32.444 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@20fcea37
[DEBUG] 29-02-2024 12:02:32.445 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@399af6dc
[DEBUG] 29-02-2024 12:02:32.446 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@399af6dc
[DEBUG] 29-02-2024 12:02:32.447 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@48fc0211
[DEBUG] 29-02-2024 12:02:32.448 [main] BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@48fc0211
[DEBUG] 29-02-2024 12:02:32.448 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@48fc0211
[DEBUG] 29-02-2024 12:02:32.449 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@3ae2702a
[DEBUG] 29-02-2024 12:02:32.450 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@3ae2702a
[DEBUG] 29-02-2024 12:02:32.451 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@7d088813
[DEBUG] 29-02-2024 12:02:32.451 [main] BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@7d088813
[DEBUG] 29-02-2024 12:02:32.452 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@134abd78
[DEBUG] 29-02-2024 12:02:32.470 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@134abd78
[DEBUG] 29-02-2024 12:02:32.472 [main] BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@3b0ed98a
[DEBUG] 29-02-2024 12:02:32.474 [main] BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@3b0ed98a
[DEBUG] 29-02-2024 12:02:32.480 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@12448de1
[DEBUG] 29-02-2024 12:02:32.481 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@12448de1
[DEBUG] 29-02-2024 12:02:32.482 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@2b35c7aa
[DEBUG] 29-02-2024 12:02:32.511 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@a95cb11
[DEBUG] 29-02-2024 12:02:32.512 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@a95cb11
[DEBUG] 29-02-2024 12:02:32.516 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@6029f2a4
[DEBUG] 29-02-2024 12:02:32.518 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@42576db9
[DEBUG] 29-02-2024 12:02:32.520 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@30358dc7
[DEBUG] 29-02-2024 12:02:32.522 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@7fac18dc
[DEBUG] 29-02-2024 12:02:32.523 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@50bf795f
[DEBUG] 29-02-2024 12:02:32.525 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@29fcfc54
[DEBUG] 29-02-2024 12:02:32.526 [main] BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@353b0719
[DEBUG] 29-02-2024 12:02:32.526 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@2a4e939a
[DEBUG] 29-02-2024 12:02:32.527 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@110620d
[DEBUG] 29-02-2024 12:02:34.480 [main] DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@420b55ed) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@f237ae7)
[DEBUG] 29-02-2024 12:02:34.488 [main] JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
[DEBUG] 29-02-2024 12:02:34.489 [main] JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 29-02-2024 12:02:34.515 [main] BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@3f80d8c
[DEBUG] 29-02-2024 12:02:34.516 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@3f80d8c
[DEBUG] 29-02-2024 12:02:34.516 [main] BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@a95cb11`
[DEBUG] 29-02-2024 12:02:34.522 [main] JdbcTypeRegistry - addDescriptor(3100, NumericTypeDescriptor) replaced previous registration(org.hibernate.dialect.PostgreSQLIntervalSecondJdbcType@2a661215)
[DEBUG] 29-02-2024 12:02:34.544 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 29-02-2024 12:02:34.545 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 29-02-2024 12:02:34.546 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 29-02-2024 12:02:34.546 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 29-02-2024 12:02:34.547 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 29-02-2024 12:02:34.547 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 29-02-2024 12:02:34.550 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 29-02-2024 12:02:34.551 [main] BasicTypeRegistry - Adding type registration OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 29-02-2024 12:02:34.551 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 29-02-2024 12:02:34.562 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@d6d683e] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@42cfd794]
[INFO ] 29-02-2024 12:02:35.441 [main] BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
[INFO ] 29-02-2024 12:02:37.871 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 29-02-2024 12:02:37.874 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@d6d683e] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@5c552f08]
[TRACE] 29-02-2024 12:02:37.884 [main] TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@5c552f08] for TypeConfiguration
[INFO ] 29-02-2024 12:02:39.755 [main] SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
[INFO ] 29-02-2024 12:02:39.757 [main] TestDispatcherServlet - Initializing Servlet ''
[INFO ] 29-02-2024 12:02:39.768 [main] TestDispatcherServlet - Completed initialization in 4 ms
[INFO ] 29-02-2024 12:02:40.156 [main] TestCRUDUserProducts - Started TestCRUDUserProducts in 15.079 seconds (process running for 19.735)
[TRACE] 29-02-2024 12:02:40.780 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@5c552f08] for TypeConfiguration
[DEBUG] 29-02-2024 12:02:40.781 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@7558f447] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@5c552f08]
[INFO ] 29-02-2024 12:03:21.482 [background-preinit] Version - HV000001: Hibernate Validator 8.0.1.Final
[INFO ] 29-02-2024 12:03:21.654 [main] TestCRUDUserProducts - Starting TestCRUDUserProducts using Java 17.0.10 with PID 1622617 (started by dima in /home/dima/backend_microservice/UserProductsMicroService)
[INFO ] 29-02-2024 12:03:21.667 [main] TestCRUDUserProducts - No active profile set, falling back to 1 default profile: "default"
[INFO ] 29-02-2024 12:03:22.865 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO ] 29-02-2024 12:03:23.422 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 535 ms. Found 1 JPA repository interfaces.
[INFO ] 29-02-2024 12:03:28.420 [main] Version - HHH000412: Hibernate ORM core version 6.2.6.Final
[INFO ] 29-02-2024 12:03:28.431 [main] Environment - HHH000406: Using bytecode reflection optimizer
[DEBUG] 29-02-2024 12:03:28.948 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@1850f2da
[DEBUG] 29-02-2024 12:03:28.949 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@1850f2da
[DEBUG] 29-02-2024 12:03:28.950 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@1850f2da
[DEBUG] 29-02-2024 12:03:28.950 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@38d42ab7
[DEBUG] 29-02-2024 12:03:28.951 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@38d42ab7
[DEBUG] 29-02-2024 12:03:28.952 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@6ace919c
[DEBUG] 29-02-2024 12:03:28.953 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@6ace919c
[DEBUG] 29-02-2024 12:03:28.954 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@4005e485
[DEBUG] 29-02-2024 12:03:28.955 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@4005e485
[DEBUG] 29-02-2024 12:03:28.955 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@5f5c187d
[DEBUG] 29-02-2024 12:03:28.956 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@5f5c187d
[DEBUG] 29-02-2024 12:03:28.956 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@5f5c187d
[DEBUG] 29-02-2024 12:03:28.957 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@464400b3
[DEBUG] 29-02-2024 12:03:28.958 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@464400b3
[DEBUG] 29-02-2024 12:03:28.959 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@464400b3
[DEBUG] 29-02-2024 12:03:28.959 [main] BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@58182b96
[DEBUG] 29-02-2024 12:03:28.960 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@58182b96
[DEBUG] 29-02-2024 12:03:28.960 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@37d6dddc
[DEBUG] 29-02-2024 12:03:28.961 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@8f6b4ab
[DEBUG] 29-02-2024 12:03:28.962 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@8f6b4ab
[DEBUG] 29-02-2024 12:03:28.977 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@6e517c9e
[DEBUG] 29-02-2024 12:03:28.978 [main] BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@770cae59
[DEBUG] 29-02-2024 12:03:28.979 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@76b5a559
[DEBUG] 29-02-2024 12:03:28.979 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@76b5a559
[DEBUG] 29-02-2024 12:03:28.980 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@76b5a559
[DEBUG] 29-02-2024 12:03:28.981 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@4bdb04c8
[DEBUG] 29-02-2024 12:03:28.981 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@4bdb04c8
[DEBUG] 29-02-2024 12:03:28.982 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@4bdb04c8
[DEBUG] 29-02-2024 12:03:28.983 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@2e8b24a1
[DEBUG] 29-02-2024 12:03:28.983 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@2e8b24a1
[DEBUG] 29-02-2024 12:03:28.984 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@2e8b24a1
[DEBUG] 29-02-2024 12:03:28.985 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@3ce7394f
[DEBUG] 29-02-2024 12:03:28.986 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@3ce7394f
[DEBUG] 29-02-2024 12:03:28.987 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@3ce7394f
[DEBUG] 29-02-2024 12:03:28.988 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@6723cce7
[DEBUG] 29-02-2024 12:03:28.988 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@6723cce7
[DEBUG] 29-02-2024 12:03:28.989 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@6723cce7
[DEBUG] 29-02-2024 12:03:28.990 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@74cd798f
[DEBUG] 29-02-2024 12:03:28.990 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@74cd798f
[DEBUG] 29-02-2024 12:03:28.991 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@314f59b
[DEBUG] 29-02-2024 12:03:28.992 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@314f59b
[DEBUG] 29-02-2024 12:03:28.992 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@63c99f7
[DEBUG] 29-02-2024 12:03:28.993 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@63c99f7
[DEBUG] 29-02-2024 12:03:28.994 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@63c99f7
[DEBUG] 29-02-2024 12:03:28.994 [main] BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@7f012923
[DEBUG] 29-02-2024 12:03:28.995 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@601f264d
[DEBUG] 29-02-2024 12:03:28.995 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@601f264d
[DEBUG] 29-02-2024 12:03:28.996 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@4403bff8
[DEBUG] 29-02-2024 12:03:28.997 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@261275ae
[DEBUG] 29-02-2024 12:03:28.997 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@261275ae
[DEBUG] 29-02-2024 12:03:28.998 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@261275ae
[DEBUG] 29-02-2024 12:03:28.998 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@502c087e
[DEBUG] 29-02-2024 12:03:28.999 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@49986178
[DEBUG] 29-02-2024 12:03:28.999 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@10bdfbcc
[DEBUG] 29-02-2024 12:03:29.000 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@25b74370
[DEBUG] 29-02-2024 12:03:29.000 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@25b74370
[DEBUG] 29-02-2024 12:03:29.001 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@15e8c040
[DEBUG] 29-02-2024 12:03:29.002 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@15e8c040
[DEBUG] 29-02-2024 12:03:29.002 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@1f71e024
[DEBUG] 29-02-2024 12:03:29.003 [main] BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@60ed0b9d
[DEBUG] 29-02-2024 12:03:29.003 [main] BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@7f5e6833
[DEBUG] 29-02-2024 12:03:29.004 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@2c674d58
[DEBUG] 29-02-2024 12:03:29.004 [main] BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@3c07e830
[DEBUG] 29-02-2024 12:03:29.005 [main] BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@34beadce
[DEBUG] 29-02-2024 12:03:29.006 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@382d549a
[DEBUG] 29-02-2024 12:03:29.006 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@382d549a
[DEBUG] 29-02-2024 12:03:29.006 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@2eb6d34a
[DEBUG] 29-02-2024 12:03:29.007 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@2eb6d34a
[DEBUG] 29-02-2024 12:03:29.008 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@2d73e8c4
[DEBUG] 29-02-2024 12:03:29.008 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@2d73e8c4
[DEBUG] 29-02-2024 12:03:29.009 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@6ce2e079
[DEBUG] 29-02-2024 12:03:29.009 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@6ce2e079
[DEBUG] 29-02-2024 12:03:29.010 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@3e39e0fb
[DEBUG] 29-02-2024 12:03:29.010 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@3e39e0fb
[DEBUG] 29-02-2024 12:03:29.011 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@260d48f5
[DEBUG] 29-02-2024 12:03:29.011 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@148ab138
[DEBUG] 29-02-2024 12:03:29.012 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@6f106af8
[DEBUG] 29-02-2024 12:03:29.012 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@6f106af8
[DEBUG] 29-02-2024 12:03:29.013 [main] BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@1edf71d9
[DEBUG] 29-02-2024 12:03:29.013 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@52d9d817
[DEBUG] 29-02-2024 12:03:29.014 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@131ba005
[DEBUG] 29-02-2024 12:03:29.014 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@7f305f34
[DEBUG] 29-02-2024 12:03:29.015 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@7f305f34
[DEBUG] 29-02-2024 12:03:29.015 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@1a84a8b2
[DEBUG] 29-02-2024 12:03:29.017 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@601d295
[DEBUG] 29-02-2024 12:03:29.029 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@485451d8
[DEBUG] 29-02-2024 12:03:29.030 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@485451d8
[DEBUG] 29-02-2024 12:03:29.030 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@35e07e19
[DEBUG] 29-02-2024 12:03:29.031 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@35e07e19
[DEBUG] 29-02-2024 12:03:29.032 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@a1e912f
[DEBUG] 29-02-2024 12:03:29.032 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@a1e912f
[DEBUG] 29-02-2024 12:03:29.033 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@a1e912f
[DEBUG] 29-02-2024 12:03:29.033 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@2036f83
[DEBUG] 29-02-2024 12:03:29.033 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@2036f83
[DEBUG] 29-02-2024 12:03:29.034 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@2036f83
[DEBUG] 29-02-2024 12:03:29.034 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@68b3248a
[DEBUG] 29-02-2024 12:03:29.035 [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@5e158f33
[DEBUG] 29-02-2024 12:03:29.035 [main] BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@20fcea37
[DEBUG] 29-02-2024 12:03:29.036 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@20fcea37
[DEBUG] 29-02-2024 12:03:29.036 [main] BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@399af6dc
[DEBUG] 29-02-2024 12:03:29.037 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@399af6dc
[DEBUG] 29-02-2024 12:03:29.037 [main] BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@399af6dc
[DEBUG] 29-02-2024 12:03:29.038 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@48fc0211
[DEBUG] 29-02-2024 12:03:29.038 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@3ae2702a
[DEBUG] 29-02-2024 12:03:29.039 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@7d088813
[DEBUG] 29-02-2024 12:03:29.039 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@7d088813
[DEBUG] 29-02-2024 12:03:29.040 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@134abd78
[DEBUG] 29-02-2024 12:03:29.040 [main] BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@134abd78
[DEBUG] 29-02-2024 12:03:29.041 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@134abd78
[DEBUG] 29-02-2024 12:03:29.041 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@3b0ed98a
[DEBUG] 29-02-2024 12:03:29.042 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@3b0ed98a
[DEBUG] 29-02-2024 12:03:29.042 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@12448de1
[DEBUG] 29-02-2024 12:03:29.043 [main] BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@12448de1
[DEBUG] 29-02-2024 12:03:29.043 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@2b35c7aa
[DEBUG] 29-02-2024 12:03:29.044 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@2b35c7aa
[DEBUG] 29-02-2024 12:03:29.044 [main] BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@6dd20ec9
[DEBUG] 29-02-2024 12:03:29.044 [main] BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@6dd20ec9
[DEBUG] 29-02-2024 12:03:29.045 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@20dd5870
[DEBUG] 29-02-2024 12:03:29.045 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@20dd5870
[DEBUG] 29-02-2024 12:03:29.046 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@1640f20f
[DEBUG] 29-02-2024 12:03:29.083 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@6313b441
[DEBUG] 29-02-2024 12:03:29.084 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@6313b441
[DEBUG] 29-02-2024 12:03:29.088 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@7fac18dc
[DEBUG] 29-02-2024 12:03:29.088 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@50bf795f
[DEBUG] 29-02-2024 12:03:29.089 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@29fcfc54
[DEBUG] 29-02-2024 12:03:29.090 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@353b0719
[DEBUG] 29-02-2024 12:03:29.090 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@2a4e939a
[DEBUG] 29-02-2024 12:03:29.090 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@110620d
[DEBUG] 29-02-2024 12:03:29.093 [main] BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@4f402027
[DEBUG] 29-02-2024 12:03:29.094 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@22aee519
[DEBUG] 29-02-2024 12:03:29.094 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@7c226095
[DEBUG] 29-02-2024 12:03:31.003 [main] DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6fe5da76) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@77d95e5a)
[DEBUG] 29-02-2024 12:03:31.010 [main] JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
[DEBUG] 29-02-2024 12:03:31.010 [main] JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 29-02-2024 12:03:31.036 [main] BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@1cb44a2f
[DEBUG] 29-02-2024 12:03:31.036 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@1cb44a2f
[DEBUG] 29-02-2024 12:03:31.037 [main] BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@6313b441`
[DEBUG] 29-02-2024 12:03:31.042 [main] JdbcTypeRegistry - addDescriptor(3100, NumericTypeDescriptor) replaced previous registration(org.hibernate.dialect.PostgreSQLIntervalSecondJdbcType@638d2ce3)
[DEBUG] 29-02-2024 12:03:31.059 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 29-02-2024 12:03:31.059 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 29-02-2024 12:03:31.060 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 29-02-2024 12:03:31.060 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 29-02-2024 12:03:31.060 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 29-02-2024 12:03:31.061 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 29-02-2024 12:03:31.064 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 29-02-2024 12:03:31.064 [main] BasicTypeRegistry - Adding type registration OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 29-02-2024 12:03:31.064 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 29-02-2024 12:03:31.068 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@71beada8] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@17f41739]
[INFO ] 29-02-2024 12:03:31.930 [main] BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
[INFO ] 29-02-2024 12:03:33.981 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 29-02-2024 12:03:33.984 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@71beada8] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@1107c465]
[TRACE] 29-02-2024 12:03:33.993 [main] TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@1107c465] for TypeConfiguration
[INFO ] 29-02-2024 12:03:35.958 [main] SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
[INFO ] 29-02-2024 12:03:35.959 [main] TestDispatcherServlet - Initializing Servlet ''
[INFO ] 29-02-2024 12:03:35.994 [main] TestDispatcherServlet - Completed initialization in 21 ms
[INFO ] 29-02-2024 12:03:36.461 [main] TestCRUDUserProducts - Started TestCRUDUserProducts in 15.919 seconds (process running for 20.223)
[TRACE] 29-02-2024 12:03:37.318 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@1107c465] for TypeConfiguration
[DEBUG] 29-02-2024 12:03:37.319 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@73838af2] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@1107c465]
[INFO ] 29-02-2024 12:35:28.872 [background-preinit] Version - HV000001: Hibernate Validator 8.0.1.Final
[INFO ] 29-02-2024 12:35:29.454 [main] TestSpringBootApplication - Starting TestSpringBootApplication using Java 17.0.10 with PID 1638697 (/home/dima/backend_microservice/UserProductsMicroService/target/classes started by dima in /home/dima/backend_microservice/UserProductsMicroService)
[INFO ] 29-02-2024 12:35:29.497 [main] TestSpringBootApplication - No active profile set, falling back to 1 default profile: "default"
[INFO ] 29-02-2024 12:35:32.345 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO ] 29-02-2024 12:35:32.872 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 504 ms. Found 1 JPA repository interfaces.
[ERROR] 29-02-2024 12:35:34.663 [main] AprLifecycleListener - An incompatible version [1.2.23] of the Apache Tomcat Native library is installed, while Tomcat requires version [1.2.34]
[INFO ] 29-02-2024 12:35:35.481 [main] TomcatWebServer - Tomcat initialized with port(s): 8300 (http)
[INFO ] 29-02-2024 12:35:35.506 [main] Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8300"]
[INFO ] 29-02-2024 12:35:35.512 [main] StandardService - Starting service [Tomcat]
[INFO ] 29-02-2024 12:35:35.513 [main] StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.11]
[INFO ] 29-02-2024 12:35:36.504 [main] TldScanner - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
[INFO ] 29-02-2024 12:35:36.526 [main] [/users_products_api] - Initializing Spring embedded WebApplicationContext
[INFO ] 29-02-2024 12:35:36.531 [main] ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 6402 ms
[INFO ] 29-02-2024 12:35:36.916 [main] Version - HHH000412: Hibernate ORM core version 6.2.6.Final
[INFO ] 29-02-2024 12:35:36.922 [main] Environment - HHH000406: Using bytecode reflection optimizer
[DEBUG] 29-02-2024 12:35:37.297 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@5514579e
[DEBUG] 29-02-2024 12:35:37.298 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@5514579e
[DEBUG] 29-02-2024 12:35:37.300 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@5514579e
[DEBUG] 29-02-2024 12:35:37.300 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@58c42c8c
[DEBUG] 29-02-2024 12:35:37.301 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@58c42c8c
[DEBUG] 29-02-2024 12:35:37.301 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@3af236d0
[DEBUG] 29-02-2024 12:35:37.302 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@3af236d0
[DEBUG] 29-02-2024 12:35:37.302 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@23564dd2
[DEBUG] 29-02-2024 12:35:37.303 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@23564dd2
[DEBUG] 29-02-2024 12:35:37.303 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@54895681
[DEBUG] 29-02-2024 12:35:37.303 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@54895681
[DEBUG] 29-02-2024 12:35:37.304 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@54895681
[DEBUG] 29-02-2024 12:35:37.304 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@2dd0a0d0
[DEBUG] 29-02-2024 12:35:37.305 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@2dd0a0d0
[DEBUG] 29-02-2024 12:35:37.305 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@2dd0a0d0
[DEBUG] 29-02-2024 12:35:37.306 [main] BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@6bf570c
[DEBUG] 29-02-2024 12:35:37.306 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@6bf570c
[DEBUG] 29-02-2024 12:35:37.307 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@1796b2d4
[DEBUG] 29-02-2024 12:35:37.307 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@935d3f9
[DEBUG] 29-02-2024 12:35:37.308 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@935d3f9
[DEBUG] 29-02-2024 12:35:37.308 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@214b342f
[DEBUG] 29-02-2024 12:35:37.308 [main] BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@5db0003d
[DEBUG] 29-02-2024 12:35:37.309 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@7f12094d
[DEBUG] 29-02-2024 12:35:37.309 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@7f12094d
[DEBUG] 29-02-2024 12:35:37.310 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@7f12094d
[DEBUG] 29-02-2024 12:35:37.310 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@589fb74d
[DEBUG] 29-02-2024 12:35:37.310 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@589fb74d
[DEBUG] 29-02-2024 12:35:37.311 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@589fb74d
[DEBUG] 29-02-2024 12:35:37.311 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@200d1a3d
[DEBUG] 29-02-2024 12:35:37.312 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@200d1a3d
[DEBUG] 29-02-2024 12:35:37.312 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@200d1a3d
[DEBUG] 29-02-2024 12:35:37.313 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@7de147e9
[DEBUG] 29-02-2024 12:35:37.313 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@7de147e9
[DEBUG] 29-02-2024 12:35:37.314 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@7de147e9
[DEBUG] 29-02-2024 12:35:37.322 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@12567179
[DEBUG] 29-02-2024 12:35:37.322 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@12567179
[DEBUG] 29-02-2024 12:35:37.323 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@12567179
[DEBUG] 29-02-2024 12:35:37.323 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@37d699a1
[DEBUG] 29-02-2024 12:35:37.323 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@37d699a1
[DEBUG] 29-02-2024 12:35:37.324 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@7f42b194
[DEBUG] 29-02-2024 12:35:37.324 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@7f42b194
[DEBUG] 29-02-2024 12:35:37.324 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@8eb6f9a
[DEBUG] 29-02-2024 12:35:37.325 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@8eb6f9a
[DEBUG] 29-02-2024 12:35:37.325 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@8eb6f9a
[DEBUG] 29-02-2024 12:35:37.325 [main] BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@29170a47
[DEBUG] 29-02-2024 12:35:37.326 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@2a8f8555
[DEBUG] 29-02-2024 12:35:37.326 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@2a8f8555
[DEBUG] 29-02-2024 12:35:37.326 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@402b4f81
[DEBUG] 29-02-2024 12:35:37.327 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@13ef7fa1
[DEBUG] 29-02-2024 12:35:37.327 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@13ef7fa1
[DEBUG] 29-02-2024 12:35:37.327 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@13ef7fa1
[DEBUG] 29-02-2024 12:35:37.328 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@23b1aa9
[DEBUG] 29-02-2024 12:35:37.328 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@54489296
[DEBUG] 29-02-2024 12:35:37.328 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@4e8598d9
[DEBUG] 29-02-2024 12:35:37.329 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@267ff4df
[DEBUG] 29-02-2024 12:35:37.329 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@267ff4df
[DEBUG] 29-02-2024 12:35:37.330 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@7c4b5ceb
[DEBUG] 29-02-2024 12:35:37.330 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@7c4b5ceb
[DEBUG] 29-02-2024 12:35:37.330 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@6c07add6
[DEBUG] 29-02-2024 12:35:37.330 [main] BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@e26a3df
[DEBUG] 29-02-2024 12:35:37.331 [main] BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@57a667c8
[DEBUG] 29-02-2024 12:35:37.331 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@712cd5d3
[DEBUG] 29-02-2024 12:35:37.332 [main] BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@2094bf3d
[DEBUG] 29-02-2024 12:35:37.332 [main] BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@1b17d8ab
[DEBUG] 29-02-2024 12:35:37.332 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@7f6b7426
[DEBUG] 29-02-2024 12:35:37.332 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@7f6b7426
[DEBUG] 29-02-2024 12:35:37.333 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@687eb455
[DEBUG] 29-02-2024 12:35:37.333 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@687eb455
[DEBUG] 29-02-2024 12:35:37.333 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@6d969330
[DEBUG] 29-02-2024 12:35:37.334 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@6d969330
[DEBUG] 29-02-2024 12:35:37.334 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@4861cca9
[DEBUG] 29-02-2024 12:35:37.334 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@4861cca9
[DEBUG] 29-02-2024 12:35:37.335 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@6c8f4bc7
[DEBUG] 29-02-2024 12:35:37.335 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@6c8f4bc7
[DEBUG] 29-02-2024 12:35:37.335 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@714e861f
[DEBUG] 29-02-2024 12:35:37.336 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@28989415
[DEBUG] 29-02-2024 12:35:37.337 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@6eda012b
[DEBUG] 29-02-2024 12:35:37.337 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@6eda012b
[DEBUG] 29-02-2024 12:35:37.337 [main] BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@781dbe44
[DEBUG] 29-02-2024 12:35:37.338 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@7d66a126
[DEBUG] 29-02-2024 12:35:37.338 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@1132baa3
[DEBUG] 29-02-2024 12:35:37.338 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@2fdf22f7
[DEBUG] 29-02-2024 12:35:37.339 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@2fdf22f7
[DEBUG] 29-02-2024 12:35:37.339 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@3a2546d6
[DEBUG] 29-02-2024 12:35:37.339 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@7282af25
[DEBUG] 29-02-2024 12:35:37.339 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@7661e474
[DEBUG] 29-02-2024 12:35:37.340 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@7661e474
[DEBUG] 29-02-2024 12:35:37.340 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@20ffb8d5
[DEBUG] 29-02-2024 12:35:37.340 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@20ffb8d5
[DEBUG] 29-02-2024 12:35:37.341 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@307c59ea
[DEBUG] 29-02-2024 12:35:37.341 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@307c59ea
[DEBUG] 29-02-2024 12:35:37.341 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@307c59ea
[DEBUG] 29-02-2024 12:35:37.342 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@57e03347
[DEBUG] 29-02-2024 12:35:37.342 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@57e03347
[DEBUG] 29-02-2024 12:35:37.342 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@57e03347
[DEBUG] 29-02-2024 12:35:37.343 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@2edb2f8b
[DEBUG] 29-02-2024 12:35:37.343 [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@733f1395
[DEBUG] 29-02-2024 12:35:37.343 [main] BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@21dea711
[DEBUG] 29-02-2024 12:35:37.344 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@21dea711
[DEBUG] 29-02-2024 12:35:37.344 [main] BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@7772d266
[DEBUG] 29-02-2024 12:35:37.344 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@7772d266
[DEBUG] 29-02-2024 12:35:37.344 [main] BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@7772d266
[DEBUG] 29-02-2024 12:35:37.345 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@a21c74
[DEBUG] 29-02-2024 12:35:37.345 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@b8a144e
[DEBUG] 29-02-2024 12:35:37.345 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@5fb8dc01
[DEBUG] 29-02-2024 12:35:37.346 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@5fb8dc01
[DEBUG] 29-02-2024 12:35:37.346 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@3e38c472
[DEBUG] 29-02-2024 12:35:37.346 [main] BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@3e38c472
[DEBUG] 29-02-2024 12:35:37.347 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@3e38c472
[DEBUG] 29-02-2024 12:35:37.347 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@2ee92e7d
[DEBUG] 29-02-2024 12:35:37.347 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@2ee92e7d
[DEBUG] 29-02-2024 12:35:37.348 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@759a678a
[DEBUG] 29-02-2024 12:35:37.348 [main] BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@759a678a
[DEBUG] 29-02-2024 12:35:37.349 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@6cdbe5ec
[DEBUG] 29-02-2024 12:35:37.349 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@6cdbe5ec
[DEBUG] 29-02-2024 12:35:37.349 [main] BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@14b8a751
[DEBUG] 29-02-2024 12:35:37.350 [main] BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@14b8a751
[DEBUG] 29-02-2024 12:35:37.350 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@7345f97d
[DEBUG] 29-02-2024 12:35:37.350 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@7345f97d
[DEBUG] 29-02-2024 12:35:37.351 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@554566a8
[DEBUG] 29-02-2024 12:35:37.364 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@24691c5
[DEBUG] 29-02-2024 12:35:37.365 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@24691c5
[DEBUG] 29-02-2024 12:35:37.368 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@5abf6a99
[DEBUG] 29-02-2024 12:35:37.368 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@dc59ec2
[DEBUG] 29-02-2024 12:35:37.369 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@375084c9
[DEBUG] 29-02-2024 12:35:37.369 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@bd93bc3
[DEBUG] 29-02-2024 12:35:37.370 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@2a136383
[DEBUG] 29-02-2024 12:35:37.370 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@b01cb8d
[DEBUG] 29-02-2024 12:35:37.371 [main] BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@38c460e8
[DEBUG] 29-02-2024 12:35:37.371 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@7a814310
[DEBUG] 29-02-2024 12:35:37.371 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@4bbf38b8
[DEBUG] 29-02-2024 12:35:38.462 [main] DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@53f495f0) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5efe5b25)
[DEBUG] 29-02-2024 12:35:38.472 [main] JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
[DEBUG] 29-02-2024 12:35:38.472 [main] JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 29-02-2024 12:35:38.495 [main] BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@213835b6
[DEBUG] 29-02-2024 12:35:38.495 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@213835b6
[DEBUG] 29-02-2024 12:35:38.496 [main] BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@24691c5`
[DEBUG] 29-02-2024 12:35:38.498 [main] JdbcTypeRegistry - addDescriptor(3100, NumericTypeDescriptor) replaced previous registration(org.hibernate.dialect.PostgreSQLIntervalSecondJdbcType@5871a482)
[DEBUG] 29-02-2024 12:35:38.513 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 29-02-2024 12:35:38.514 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 29-02-2024 12:35:38.514 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 29-02-2024 12:35:38.514 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 29-02-2024 12:35:38.515 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 29-02-2024 12:35:38.515 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 29-02-2024 12:35:38.517 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 29-02-2024 12:35:38.518 [main] BasicTypeRegistry - Adding type registration OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 29-02-2024 12:35:38.518 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 29-02-2024 12:35:38.521 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@504b8705] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@24a8e40d]
[INFO ] 29-02-2024 12:35:39.438 [main] BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
[INFO ] 29-02-2024 12:35:42.600 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 29-02-2024 12:35:42.603 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@504b8705] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@611a91df]
[TRACE] 29-02-2024 12:35:42.612 [main] TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@611a91df] for TypeConfiguration
[WARN ] 29-02-2024 12:35:43.649 [main] JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[INFO ] 29-02-2024 12:35:44.555 [main] Http11NioProtocol - Starting ProtocolHandler ["http-nio-8300"]
[INFO ] 29-02-2024 12:35:44.622 [main] TomcatWebServer - Tomcat started on port(s): 8300 (http) with context path '/users_products_api'
[INFO ] 29-02-2024 12:35:44.651 [main] TestSpringBootApplication - Started TestSpringBootApplication in 16.876 seconds (process running for 20.398)
[INFO ] 29-02-2024 12:39:19.609 [http-nio-8300-exec-1] [/users_products_api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[INFO ] 29-02-2024 12:39:19.611 [http-nio-8300-exec-1] DispatcherServlet - Initializing Servlet 'dispatcherServlet'
[INFO ] 29-02-2024 12:39:19.616 [http-nio-8300-exec-1] DispatcherServlet - Completed initialization in 5 ms
[WARN ] 29-02-2024 12:39:50.231 [http-nio-8300-exec-3] DefaultHandlerExceptionResolver - Resolved [org.springframework.web.HttpMediaTypeNotSupportedException: Content-Type 'application/x-www-form-urlencoded;charset=UTF-8' is not supported]
[WARN ] 29-02-2024 12:40:54.456 [http-nio-8300-exec-5] DefaultHandlerExceptionResolver - Resolved [org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Cannot deserialize value of type `java.time.LocalDateTime` from String "2023-01-03 23:59:29": Failed to deserialize java.time.LocalDateTime: (java.time.format.DateTimeParseException) Text '2023-01-03 23:59:29' could not be parsed at index 10]
[ERROR] 29-02-2024 12:41:21.614 [http-nio-8300-exec-4] [dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [/users_products_api] threw exception [Request processing failed: java.lang.ClassCastException: class org.springframework.orm.jpa.EntityManagerHolder cannot be cast to class org.springframework.orm.hibernate5.SessionHolder (org.springframework.orm.jpa.EntityManagerHolder and org.springframework.orm.hibernate5.SessionHolder are in unnamed module of loader 'app')] with root cause
java.lang.ClassCastException: class org.springframework.orm.jpa.EntityManagerHolder cannot be cast to class org.springframework.orm.hibernate5.SessionHolder (org.springframework.orm.jpa.EntityManagerHolder and org.springframework.orm.hibernate5.SessionHolder are in unnamed module of loader 'app')
	at org.springframework.orm.hibernate5.HibernateTransactionManager.doGetTransaction(HibernateTransactionManager.java:428) ~[spring-orm-6.0.11.jar:6.0.11]
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:347) ~[spring-tx-6.0.11.jar:6.0.11]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.createTransactionIfNecessary(TransactionAspectSupport.java:601) ~[spring-tx-6.0.11.jar:6.0.11]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:385) ~[spring-tx-6.0.11.jar:6.0.11]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.0.11.jar:6.0.11]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.0.11.jar:6.0.11]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:756) ~[spring-aop-6.0.11.jar:6.0.11]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708) ~[spring-aop-6.0.11.jar:6.0.11]
	at DAO.DAOUserProducts$$SpringCGLIB$$0.addedProductForUser(<generated>) ~[classes/:?]
	at controller.CRUDUserProducts.addedProductUser(CRUDUserProducts.java:27) ~[classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:568) ~[?:?]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205) ~[spring-web-6.0.11.jar:6.0.11]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150) ~[spring-web-6.0.11.jar:6.0.11]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.0.11.jar:6.0.11]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884) ~[spring-webmvc-6.0.11.jar:6.0.11]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797) ~[spring-webmvc-6.0.11.jar:6.0.11]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.0.11.jar:6.0.11]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081) ~[spring-webmvc-6.0.11.jar:6.0.11]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974) ~[spring-webmvc-6.0.11.jar:6.0.11]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011) ~[spring-webmvc-6.0.11.jar:6.0.11]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914) ~[spring-webmvc-6.0.11.jar:6.0.11]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590) ~[tomcat-embed-core-10.1.11.jar:6.0]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.0.11.jar:6.0.11]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.11.jar:6.0]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205) ~[tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149) ~[tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.11.jar:10.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174) ~[tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149) ~[tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.0.11.jar:6.0.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.0.11.jar:6.0.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174) ~[tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149) ~[tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.0.11.jar:6.0.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.0.11.jar:6.0.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174) ~[tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149) ~[tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.0.11.jar:6.0.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.0.11.jar:6.0.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174) ~[tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149) ~[tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:166) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at java.lang.Thread.run(Thread.java:840) [?:?]
[TRACE] 29-02-2024 12:43:29.338 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@611a91df] for TypeConfiguration
[DEBUG] 29-02-2024 12:43:29.339 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@5d8337e0] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@611a91df]
[INFO ] 29-02-2024 12:43:40.371 [background-preinit] Version - HV000001: Hibernate Validator 8.0.1.Final
[INFO ] 29-02-2024 12:43:40.485 [main] TestSpringBootApplication - Starting TestSpringBootApplication using Java 17.0.10 with PID 1643055 (/home/dima/backend_microservice/UserProductsMicroService/target/classes started by dima in /home/dima/backend_microservice/UserProductsMicroService)
[INFO ] 29-02-2024 12:43:40.526 [main] TestSpringBootApplication - No active profile set, falling back to 1 default profile: "default"
[INFO ] 29-02-2024 12:43:42.525 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO ] 29-02-2024 12:43:42.997 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 445 ms. Found 1 JPA repository interfaces.
[ERROR] 29-02-2024 12:43:44.654 [main] AprLifecycleListener - An incompatible version [1.2.23] of the Apache Tomcat Native library is installed, while Tomcat requires version [1.2.34]
[INFO ] 29-02-2024 12:43:45.616 [main] TomcatWebServer - Tomcat initialized with port(s): 8300 (http)
[INFO ] 29-02-2024 12:43:45.641 [main] Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8300"]
[INFO ] 29-02-2024 12:43:45.653 [main] StandardService - Starting service [Tomcat]
[INFO ] 29-02-2024 12:43:45.655 [main] StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.11]
[INFO ] 29-02-2024 12:43:47.133 [main] TldScanner - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
[INFO ] 29-02-2024 12:43:47.154 [main] [/users_products_api] - Initializing Spring embedded WebApplicationContext
[INFO ] 29-02-2024 12:43:47.160 [main] ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 6463 ms
[INFO ] 29-02-2024 12:43:47.618 [main] Version - HHH000412: Hibernate ORM core version 6.2.6.Final
[INFO ] 29-02-2024 12:43:47.624 [main] Environment - HHH000406: Using bytecode reflection optimizer
[DEBUG] 29-02-2024 12:43:48.014 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@2dd0a0d0
[DEBUG] 29-02-2024 12:43:48.015 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@2dd0a0d0
[DEBUG] 29-02-2024 12:43:48.016 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@2dd0a0d0
[DEBUG] 29-02-2024 12:43:48.016 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@6bf570c
[DEBUG] 29-02-2024 12:43:48.017 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@6bf570c
[DEBUG] 29-02-2024 12:43:48.017 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@1796b2d4
[DEBUG] 29-02-2024 12:43:48.018 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@1796b2d4
[DEBUG] 29-02-2024 12:43:48.019 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@935d3f9
[DEBUG] 29-02-2024 12:43:48.019 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@935d3f9
[DEBUG] 29-02-2024 12:43:48.020 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@214b342f
[DEBUG] 29-02-2024 12:43:48.020 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@214b342f
[DEBUG] 29-02-2024 12:43:48.020 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@214b342f
[DEBUG] 29-02-2024 12:43:48.021 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@5db0003d
[DEBUG] 29-02-2024 12:43:48.021 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@5db0003d
[DEBUG] 29-02-2024 12:43:48.022 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@5db0003d
[DEBUG] 29-02-2024 12:43:48.022 [main] BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@7f12094d
[DEBUG] 29-02-2024 12:43:48.023 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@7f12094d
[DEBUG] 29-02-2024 12:43:48.023 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@589fb74d
[DEBUG] 29-02-2024 12:43:48.024 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@200d1a3d
[DEBUG] 29-02-2024 12:43:48.024 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@200d1a3d
[DEBUG] 29-02-2024 12:43:48.025 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@7de147e9
[DEBUG] 29-02-2024 12:43:48.025 [main] BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@12567179
[DEBUG] 29-02-2024 12:43:48.026 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@37d699a1
[DEBUG] 29-02-2024 12:43:48.026 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@37d699a1
[DEBUG] 29-02-2024 12:43:48.026 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@37d699a1
[DEBUG] 29-02-2024 12:43:48.027 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@7f42b194
[DEBUG] 29-02-2024 12:43:48.032 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@7f42b194
[DEBUG] 29-02-2024 12:43:48.033 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@7f42b194
[DEBUG] 29-02-2024 12:43:48.034 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@8eb6f9a
[DEBUG] 29-02-2024 12:43:48.034 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@8eb6f9a
[DEBUG] 29-02-2024 12:43:48.034 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@8eb6f9a
[DEBUG] 29-02-2024 12:43:48.035 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@29170a47
[DEBUG] 29-02-2024 12:43:48.035 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@29170a47
[DEBUG] 29-02-2024 12:43:48.036 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@29170a47
[DEBUG] 29-02-2024 12:43:48.037 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@2a8f8555
[DEBUG] 29-02-2024 12:43:48.037 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@2a8f8555
[DEBUG] 29-02-2024 12:43:48.038 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@2a8f8555
[DEBUG] 29-02-2024 12:43:48.039 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@402b4f81
[DEBUG] 29-02-2024 12:43:48.040 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@402b4f81
[DEBUG] 29-02-2024 12:43:48.040 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@13ef7fa1
[DEBUG] 29-02-2024 12:43:48.041 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@13ef7fa1
[DEBUG] 29-02-2024 12:43:48.041 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@23b1aa9
[DEBUG] 29-02-2024 12:43:48.042 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@23b1aa9
[DEBUG] 29-02-2024 12:43:48.042 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@23b1aa9
[DEBUG] 29-02-2024 12:43:48.043 [main] BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@54489296
[DEBUG] 29-02-2024 12:43:48.043 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@4e8598d9
[DEBUG] 29-02-2024 12:43:48.044 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@4e8598d9
[DEBUG] 29-02-2024 12:43:48.044 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@267ff4df
[DEBUG] 29-02-2024 12:43:48.045 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@7c4b5ceb
[DEBUG] 29-02-2024 12:43:48.046 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@7c4b5ceb
[DEBUG] 29-02-2024 12:43:48.046 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@7c4b5ceb
[DEBUG] 29-02-2024 12:43:48.047 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@6c07add6
[DEBUG] 29-02-2024 12:43:48.047 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@e26a3df
[DEBUG] 29-02-2024 12:43:48.048 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@57a667c8
[DEBUG] 29-02-2024 12:43:48.048 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@712cd5d3
[DEBUG] 29-02-2024 12:43:48.048 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@712cd5d3
[DEBUG] 29-02-2024 12:43:48.049 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@2094bf3d
[DEBUG] 29-02-2024 12:43:48.050 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@2094bf3d
[DEBUG] 29-02-2024 12:43:48.050 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@1b17d8ab
[DEBUG] 29-02-2024 12:43:48.051 [main] BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@7f6b7426
[DEBUG] 29-02-2024 12:43:48.051 [main] BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@687eb455
[DEBUG] 29-02-2024 12:43:48.051 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@6d969330
[DEBUG] 29-02-2024 12:43:48.052 [main] BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@4861cca9
[DEBUG] 29-02-2024 12:43:48.052 [main] BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@6c8f4bc7
[DEBUG] 29-02-2024 12:43:48.053 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@714e861f
[DEBUG] 29-02-2024 12:43:48.053 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@714e861f
[DEBUG] 29-02-2024 12:43:48.054 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@28989415
[DEBUG] 29-02-2024 12:43:48.054 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@28989415
[DEBUG] 29-02-2024 12:43:48.055 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@6eda012b
[DEBUG] 29-02-2024 12:43:48.055 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@6eda012b
[DEBUG] 29-02-2024 12:43:48.055 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@781dbe44
[DEBUG] 29-02-2024 12:43:48.056 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@781dbe44
[DEBUG] 29-02-2024 12:43:48.057 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@7d66a126
[DEBUG] 29-02-2024 12:43:48.057 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@7d66a126
[DEBUG] 29-02-2024 12:43:48.057 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@1132baa3
[DEBUG] 29-02-2024 12:43:48.058 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@2fdf22f7
[DEBUG] 29-02-2024 12:43:48.058 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@3a2546d6
[DEBUG] 29-02-2024 12:43:48.058 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@3a2546d6
[DEBUG] 29-02-2024 12:43:48.059 [main] BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@7282af25
[DEBUG] 29-02-2024 12:43:48.059 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@7661e474
[DEBUG] 29-02-2024 12:43:48.060 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@20ffb8d5
[DEBUG] 29-02-2024 12:43:48.060 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@307c59ea
[DEBUG] 29-02-2024 12:43:48.060 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@307c59ea
[DEBUG] 29-02-2024 12:43:48.061 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@57e03347
[DEBUG] 29-02-2024 12:43:48.061 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@2edb2f8b
[DEBUG] 29-02-2024 12:43:48.062 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@733f1395
[DEBUG] 29-02-2024 12:43:48.062 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@733f1395
[DEBUG] 29-02-2024 12:43:48.063 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@21dea711
[DEBUG] 29-02-2024 12:43:48.063 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@21dea711
[DEBUG] 29-02-2024 12:43:48.064 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@7772d266
[DEBUG] 29-02-2024 12:43:48.064 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@7772d266
[DEBUG] 29-02-2024 12:43:48.064 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@7772d266
[DEBUG] 29-02-2024 12:43:48.065 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@a21c74
[DEBUG] 29-02-2024 12:43:48.065 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@a21c74
[DEBUG] 29-02-2024 12:43:48.066 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@a21c74
[DEBUG] 29-02-2024 12:43:48.066 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@b8a144e
[DEBUG] 29-02-2024 12:43:48.066 [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@5fb8dc01
[DEBUG] 29-02-2024 12:43:48.067 [main] BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@3e38c472
[DEBUG] 29-02-2024 12:43:48.067 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@3e38c472
[DEBUG] 29-02-2024 12:43:48.067 [main] BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@2ee92e7d
[DEBUG] 29-02-2024 12:43:48.068 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@2ee92e7d
[DEBUG] 29-02-2024 12:43:48.068 [main] BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@2ee92e7d
[DEBUG] 29-02-2024 12:43:48.068 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@759a678a
[DEBUG] 29-02-2024 12:43:48.068 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@6cdbe5ec
[DEBUG] 29-02-2024 12:43:48.069 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@14b8a751
[DEBUG] 29-02-2024 12:43:48.069 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@14b8a751
[DEBUG] 29-02-2024 12:43:48.070 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@7345f97d
[DEBUG] 29-02-2024 12:43:48.070 [main] BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@7345f97d
[DEBUG] 29-02-2024 12:43:48.070 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@7345f97d
[DEBUG] 29-02-2024 12:43:48.071 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@554566a8
[DEBUG] 29-02-2024 12:43:48.071 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@554566a8
[DEBUG] 29-02-2024 12:43:48.071 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@66020d69
[DEBUG] 29-02-2024 12:43:48.072 [main] BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@66020d69
[DEBUG] 29-02-2024 12:43:48.072 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@3751acd7
[DEBUG] 29-02-2024 12:43:48.073 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@3751acd7
[DEBUG] 29-02-2024 12:43:48.073 [main] BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@6b832551
[DEBUG] 29-02-2024 12:43:48.074 [main] BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@6b832551
[DEBUG] 29-02-2024 12:43:48.074 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@150d6eaf
[DEBUG] 29-02-2024 12:43:48.074 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@150d6eaf
[DEBUG] 29-02-2024 12:43:48.075 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@63124022
[DEBUG] 29-02-2024 12:43:48.089 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@42c54bad
[DEBUG] 29-02-2024 12:43:48.089 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@42c54bad
[DEBUG] 29-02-2024 12:43:48.092 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@b01cb8d
[DEBUG] 29-02-2024 12:43:48.093 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@38c460e8
[DEBUG] 29-02-2024 12:43:48.093 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@7a814310
[DEBUG] 29-02-2024 12:43:48.094 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@4bbf38b8
[DEBUG] 29-02-2024 12:43:48.094 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@4e67cfe1
[DEBUG] 29-02-2024 12:43:48.094 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@55bf35e5
[DEBUG] 29-02-2024 12:43:48.095 [main] BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@25567581
[DEBUG] 29-02-2024 12:43:48.095 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@179ee36b
[DEBUG] 29-02-2024 12:43:48.096 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@67763ebe
[DEBUG] 29-02-2024 12:43:49.469 [main] DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@26463a6) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6c5ae8fd)
[DEBUG] 29-02-2024 12:43:49.474 [main] JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
[DEBUG] 29-02-2024 12:43:49.475 [main] JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 29-02-2024 12:43:49.505 [main] BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@45c90a05
[DEBUG] 29-02-2024 12:43:49.505 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@45c90a05
[DEBUG] 29-02-2024 12:43:49.506 [main] BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@42c54bad`
[DEBUG] 29-02-2024 12:43:49.508 [main] JdbcTypeRegistry - addDescriptor(3100, NumericTypeDescriptor) replaced previous registration(org.hibernate.dialect.PostgreSQLIntervalSecondJdbcType@4fa91d5b)
[DEBUG] 29-02-2024 12:43:49.528 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 29-02-2024 12:43:49.529 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 29-02-2024 12:43:49.530 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 29-02-2024 12:43:49.530 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 29-02-2024 12:43:49.530 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 29-02-2024 12:43:49.531 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 29-02-2024 12:43:49.560 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 29-02-2024 12:43:49.560 [main] BasicTypeRegistry - Adding type registration OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 29-02-2024 12:43:49.561 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 29-02-2024 12:43:49.566 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6df2af02] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@779228dc]
[INFO ] 29-02-2024 12:43:50.466 [main] BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
[INFO ] 29-02-2024 12:43:53.559 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 29-02-2024 12:43:53.560 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6df2af02] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@5c194652]
[TRACE] 29-02-2024 12:43:53.567 [main] TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@5c194652] for TypeConfiguration
[WARN ] 29-02-2024 12:43:54.419 [main] JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[INFO ] 29-02-2024 12:43:55.340 [main] Http11NioProtocol - Starting ProtocolHandler ["http-nio-8300"]
[INFO ] 29-02-2024 12:43:55.511 [main] TomcatWebServer - Tomcat started on port(s): 8300 (http) with context path '/users_products_api'
[INFO ] 29-02-2024 12:43:55.590 [main] TestSpringBootApplication - Started TestSpringBootApplication in 16.197 seconds (process running for 19.075)
[INFO ] 29-02-2024 12:44:08.209 [http-nio-8300-exec-1] [/users_products_api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[INFO ] 29-02-2024 12:44:08.211 [http-nio-8300-exec-1] DispatcherServlet - Initializing Servlet 'dispatcherServlet'
[INFO ] 29-02-2024 12:44:08.214 [http-nio-8300-exec-1] DispatcherServlet - Completed initialization in 3 ms
[DEBUG] 29-02-2024 12:44:08.724 [http-nio-8300-exec-1] SQL - select e1_0.id,e1_0.email,e1_0.login,e1_0.name,e1_0.password,p1_0.id_user,p1_0.id,p1_0.name,p1_0.page_image,p1_0.price,p1_0.raiting,p1_0.year_issue from users e1_0 left join products p1_0 on e1_0.id=p1_0.id_user where e1_0.id=?
[TRACE] 29-02-2024 12:49:35.786 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@5c194652] for TypeConfiguration
[DEBUG] 29-02-2024 12:49:35.787 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@7fbba1a4] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@5c194652]
[INFO ] 29-02-2024 12:49:47.631 [background-preinit] Version - HV000001: Hibernate Validator 8.0.1.Final
[INFO ] 29-02-2024 12:49:47.719 [main] TestSpringBootApplication - Starting TestSpringBootApplication using Java 17.0.10 with PID 1646182 (/home/dima/backend_microservice/UserProductsMicroService/target/classes started by dima in /home/dima/backend_microservice/UserProductsMicroService)
[INFO ] 29-02-2024 12:49:47.752 [main] TestSpringBootApplication - No active profile set, falling back to 1 default profile: "default"
[INFO ] 29-02-2024 12:49:50.027 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO ] 29-02-2024 12:49:50.541 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 473 ms. Found 1 JPA repository interfaces.
[ERROR] 29-02-2024 12:49:52.398 [main] AprLifecycleListener - An incompatible version [1.2.23] of the Apache Tomcat Native library is installed, while Tomcat requires version [1.2.34]
[INFO ] 29-02-2024 12:49:53.249 [main] TomcatWebServer - Tomcat initialized with port(s): 8300 (http)
[INFO ] 29-02-2024 12:49:53.275 [main] Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8300"]
[INFO ] 29-02-2024 12:49:53.283 [main] StandardService - Starting service [Tomcat]
[INFO ] 29-02-2024 12:49:53.285 [main] StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.11]
[INFO ] 29-02-2024 12:49:54.847 [main] TldScanner - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
[INFO ] 29-02-2024 12:49:54.868 [main] [/users_products_api] - Initializing Spring embedded WebApplicationContext
[INFO ] 29-02-2024 12:49:54.873 [main] ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 6930 ms
[INFO ] 29-02-2024 12:49:55.473 [main] Version - HHH000412: Hibernate ORM core version 6.2.6.Final
[INFO ] 29-02-2024 12:49:55.486 [main] Environment - HHH000406: Using bytecode reflection optimizer
[DEBUG] 29-02-2024 12:49:55.918 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@3af236d0
[DEBUG] 29-02-2024 12:49:55.918 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@3af236d0
[DEBUG] 29-02-2024 12:49:55.919 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@3af236d0
[DEBUG] 29-02-2024 12:49:55.919 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@23564dd2
[DEBUG] 29-02-2024 12:49:55.920 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@23564dd2
[DEBUG] 29-02-2024 12:49:55.920 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@54895681
[DEBUG] 29-02-2024 12:49:55.921 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@54895681
[DEBUG] 29-02-2024 12:49:55.921 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@2dd0a0d0
[DEBUG] 29-02-2024 12:49:55.922 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@2dd0a0d0
[DEBUG] 29-02-2024 12:49:55.923 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@6bf570c
[DEBUG] 29-02-2024 12:49:55.923 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@6bf570c
[DEBUG] 29-02-2024 12:49:55.924 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@6bf570c
[DEBUG] 29-02-2024 12:49:55.924 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@1796b2d4
[DEBUG] 29-02-2024 12:49:55.925 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@1796b2d4
[DEBUG] 29-02-2024 12:49:55.925 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@1796b2d4
[DEBUG] 29-02-2024 12:49:55.926 [main] BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@935d3f9
[DEBUG] 29-02-2024 12:49:55.926 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@935d3f9
[DEBUG] 29-02-2024 12:49:55.927 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@214b342f
[DEBUG] 29-02-2024 12:49:55.927 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@5db0003d
[DEBUG] 29-02-2024 12:49:55.927 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@5db0003d
[DEBUG] 29-02-2024 12:49:55.928 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@7f12094d
[DEBUG] 29-02-2024 12:49:55.928 [main] BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@589fb74d
[DEBUG] 29-02-2024 12:49:55.929 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@200d1a3d
[DEBUG] 29-02-2024 12:49:55.929 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@200d1a3d
[DEBUG] 29-02-2024 12:49:55.930 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@200d1a3d
[DEBUG] 29-02-2024 12:49:55.930 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@7de147e9
[DEBUG] 29-02-2024 12:49:55.931 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@7de147e9
[DEBUG] 29-02-2024 12:49:55.931 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@7de147e9
[DEBUG] 29-02-2024 12:49:55.932 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@12567179
[DEBUG] 29-02-2024 12:49:55.932 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@12567179
[DEBUG] 29-02-2024 12:49:55.947 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@12567179
[DEBUG] 29-02-2024 12:49:55.948 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@37d699a1
[DEBUG] 29-02-2024 12:49:55.948 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@37d699a1
[DEBUG] 29-02-2024 12:49:55.949 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@37d699a1
[DEBUG] 29-02-2024 12:49:55.949 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@7f42b194
[DEBUG] 29-02-2024 12:49:55.950 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@7f42b194
[DEBUG] 29-02-2024 12:49:55.950 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@7f42b194
[DEBUG] 29-02-2024 12:49:55.951 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@8eb6f9a
[DEBUG] 29-02-2024 12:49:55.951 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@8eb6f9a
[DEBUG] 29-02-2024 12:49:55.952 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@29170a47
[DEBUG] 29-02-2024 12:49:55.952 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@29170a47
[DEBUG] 29-02-2024 12:49:55.953 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@2a8f8555
[DEBUG] 29-02-2024 12:49:55.953 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@2a8f8555
[DEBUG] 29-02-2024 12:49:55.954 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@2a8f8555
[DEBUG] 29-02-2024 12:49:55.954 [main] BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@402b4f81
[DEBUG] 29-02-2024 12:49:55.954 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@13ef7fa1
[DEBUG] 29-02-2024 12:49:55.955 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@13ef7fa1
[DEBUG] 29-02-2024 12:49:55.955 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@23b1aa9
[DEBUG] 29-02-2024 12:49:55.955 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@54489296
[DEBUG] 29-02-2024 12:49:55.956 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@54489296
[DEBUG] 29-02-2024 12:49:55.956 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@54489296
[DEBUG] 29-02-2024 12:49:55.956 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@4e8598d9
[DEBUG] 29-02-2024 12:49:55.957 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@267ff4df
[DEBUG] 29-02-2024 12:49:55.957 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@7c4b5ceb
[DEBUG] 29-02-2024 12:49:55.957 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@6c07add6
[DEBUG] 29-02-2024 12:49:55.958 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@6c07add6
[DEBUG] 29-02-2024 12:49:55.958 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@e26a3df
[DEBUG] 29-02-2024 12:49:55.959 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@e26a3df
[DEBUG] 29-02-2024 12:49:55.959 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@57a667c8
[DEBUG] 29-02-2024 12:49:55.959 [main] BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@712cd5d3
[DEBUG] 29-02-2024 12:49:55.960 [main] BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@2094bf3d
[DEBUG] 29-02-2024 12:49:55.960 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@1b17d8ab
[DEBUG] 29-02-2024 12:49:55.960 [main] BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@7f6b7426
[DEBUG] 29-02-2024 12:49:55.961 [main] BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@687eb455
[DEBUG] 29-02-2024 12:49:55.961 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@6d969330
[DEBUG] 29-02-2024 12:49:55.962 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@6d969330
[DEBUG] 29-02-2024 12:49:55.962 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@4861cca9
[DEBUG] 29-02-2024 12:49:55.962 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@4861cca9
[DEBUG] 29-02-2024 12:49:55.963 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@6c8f4bc7
[DEBUG] 29-02-2024 12:49:55.963 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@6c8f4bc7
[DEBUG] 29-02-2024 12:49:55.963 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@714e861f
[DEBUG] 29-02-2024 12:49:55.964 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@714e861f
[DEBUG] 29-02-2024 12:49:55.965 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@28989415
[DEBUG] 29-02-2024 12:49:55.965 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@28989415
[DEBUG] 29-02-2024 12:49:55.966 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@6eda012b
[DEBUG] 29-02-2024 12:49:55.966 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@781dbe44
[DEBUG] 29-02-2024 12:49:55.967 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@7d66a126
[DEBUG] 29-02-2024 12:49:55.967 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@7d66a126
[DEBUG] 29-02-2024 12:49:55.967 [main] BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@1132baa3
[DEBUG] 29-02-2024 12:49:55.968 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2fdf22f7
[DEBUG] 29-02-2024 12:49:55.968 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3a2546d6
[DEBUG] 29-02-2024 12:49:55.969 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@7282af25
[DEBUG] 29-02-2024 12:49:55.969 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@7282af25
[DEBUG] 29-02-2024 12:49:55.979 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@7661e474
[DEBUG] 29-02-2024 12:49:55.979 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@20ffb8d5
[DEBUG] 29-02-2024 12:49:55.979 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@307c59ea
[DEBUG] 29-02-2024 12:49:55.979 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@307c59ea
[DEBUG] 29-02-2024 12:49:55.980 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@57e03347
[DEBUG] 29-02-2024 12:49:55.980 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@57e03347
[DEBUG] 29-02-2024 12:49:55.980 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@2edb2f8b
[DEBUG] 29-02-2024 12:49:55.981 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@2edb2f8b
[DEBUG] 29-02-2024 12:49:55.981 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@2edb2f8b
[DEBUG] 29-02-2024 12:49:55.981 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@733f1395
[DEBUG] 29-02-2024 12:49:55.982 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@733f1395
[DEBUG] 29-02-2024 12:49:55.982 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@733f1395
[DEBUG] 29-02-2024 12:49:55.982 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@21dea711
[DEBUG] 29-02-2024 12:49:55.983 [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@7772d266
[DEBUG] 29-02-2024 12:49:55.983 [main] BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@a21c74
[DEBUG] 29-02-2024 12:49:55.983 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@a21c74
[DEBUG] 29-02-2024 12:49:55.984 [main] BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@b8a144e
[DEBUG] 29-02-2024 12:49:55.984 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@b8a144e
[DEBUG] 29-02-2024 12:49:55.985 [main] BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@b8a144e
[DEBUG] 29-02-2024 12:49:55.985 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@5fb8dc01
[DEBUG] 29-02-2024 12:49:55.986 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@3e38c472
[DEBUG] 29-02-2024 12:49:55.986 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@2ee92e7d
[DEBUG] 29-02-2024 12:49:55.987 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@2ee92e7d
[DEBUG] 29-02-2024 12:49:55.987 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@759a678a
[DEBUG] 29-02-2024 12:49:55.987 [main] BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@759a678a
[DEBUG] 29-02-2024 12:49:55.988 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@759a678a
[DEBUG] 29-02-2024 12:49:55.988 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@6cdbe5ec
[DEBUG] 29-02-2024 12:49:55.988 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@6cdbe5ec
[DEBUG] 29-02-2024 12:49:55.989 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@14b8a751
[DEBUG] 29-02-2024 12:49:55.989 [main] BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@14b8a751
[DEBUG] 29-02-2024 12:49:55.989 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@7345f97d
[DEBUG] 29-02-2024 12:49:55.990 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@7345f97d
[DEBUG] 29-02-2024 12:49:55.990 [main] BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@554566a8
[DEBUG] 29-02-2024 12:49:55.990 [main] BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@554566a8
[DEBUG] 29-02-2024 12:49:55.990 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@66020d69
[DEBUG] 29-02-2024 12:49:55.991 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@66020d69
[DEBUG] 29-02-2024 12:49:55.991 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@3751acd7
[DEBUG] 29-02-2024 12:49:56.006 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@6537ac
[DEBUG] 29-02-2024 12:49:56.007 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@6537ac
[DEBUG] 29-02-2024 12:49:56.011 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@375084c9
[DEBUG] 29-02-2024 12:49:56.012 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@bd93bc3
[DEBUG] 29-02-2024 12:49:56.013 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@2a136383
[DEBUG] 29-02-2024 12:49:56.013 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@b01cb8d
[DEBUG] 29-02-2024 12:49:56.014 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@38c460e8
[DEBUG] 29-02-2024 12:49:56.014 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@7a814310
[DEBUG] 29-02-2024 12:49:56.014 [main] BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@4bbf38b8
[DEBUG] 29-02-2024 12:49:56.015 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@4e67cfe1
[DEBUG] 29-02-2024 12:49:56.015 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@55bf35e5
[DEBUG] 29-02-2024 12:49:57.825 [main] DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1f0e2bdc) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@682266d8)
[DEBUG] 29-02-2024 12:49:57.833 [main] JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
[DEBUG] 29-02-2024 12:49:57.834 [main] JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 29-02-2024 12:49:57.863 [main] BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@2bdcfcf
[DEBUG] 29-02-2024 12:49:57.864 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@2bdcfcf
[DEBUG] 29-02-2024 12:49:57.864 [main] BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@6537ac`
[DEBUG] 29-02-2024 12:49:57.867 [main] JdbcTypeRegistry - addDescriptor(3100, NumericTypeDescriptor) replaced previous registration(org.hibernate.dialect.PostgreSQLIntervalSecondJdbcType@df7d1d4)
[DEBUG] 29-02-2024 12:49:57.894 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 29-02-2024 12:49:57.895 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 29-02-2024 12:49:57.896 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 29-02-2024 12:49:57.896 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 29-02-2024 12:49:57.896 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 29-02-2024 12:49:57.897 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 29-02-2024 12:49:57.899 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 29-02-2024 12:49:57.900 [main] BasicTypeRegistry - Adding type registration OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 29-02-2024 12:49:57.900 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 29-02-2024 12:49:57.904 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@69fe7090] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@6501b105]
[INFO ] 29-02-2024 12:49:58.818 [main] BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
[INFO ] 29-02-2024 12:50:02.037 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 29-02-2024 12:50:02.039 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@69fe7090] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@5c194652]
[TRACE] 29-02-2024 12:50:02.047 [main] TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@5c194652] for TypeConfiguration
[WARN ] 29-02-2024 12:50:02.987 [main] JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[INFO ] 29-02-2024 12:50:03.917 [main] Http11NioProtocol - Starting ProtocolHandler ["http-nio-8300"]
[INFO ] 29-02-2024 12:50:03.987 [main] TomcatWebServer - Tomcat started on port(s): 8300 (http) with context path '/users_products_api'
[INFO ] 29-02-2024 12:50:04.019 [main] TestSpringBootApplication - Started TestSpringBootApplication in 17.547 seconds (process running for 20.753)
[INFO ] 29-02-2024 12:50:25.363 [http-nio-8300-exec-1] [/users_products_api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[INFO ] 29-02-2024 12:50:25.364 [http-nio-8300-exec-1] DispatcherServlet - Initializing Servlet 'dispatcherServlet'
[INFO ] 29-02-2024 12:50:25.367 [http-nio-8300-exec-1] DispatcherServlet - Completed initialization in 2 ms
[DEBUG] 29-02-2024 12:50:25.958 [http-nio-8300-exec-1] SQL - select e1_0.id,e1_0.email,e1_0.login,e1_0.name,e1_0.password,p1_0.id_user,p1_0.id,p1_0.name,p1_0.page_image,p1_0.price,p1_0.raiting,p1_0.year_issue from users e1_0 left join products p1_0 on e1_0.id=p1_0.id_user where e1_0.id=?
[DEBUG] 29-02-2024 12:50:26.057 [http-nio-8300-exec-1] SQL - select nextval('generator')
[WARN ] 29-02-2024 12:50:26.075 [http-nio-8300-exec-1] SqlExceptionHelper - SQL Error: 0, SQLState: 42P01
[ERROR] 29-02-2024 12:50:26.076 [http-nio-8300-exec-1] SqlExceptionHelper - ERROR: relation "generator" does not exist
  Позиция: 16
[ERROR] 29-02-2024 12:50:26.106 [http-nio-8300-exec-1] [dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [/users_products_api] threw exception [Request processing failed: org.hibernate.exception.SQLGrammarException: could not extract ResultSet [ERROR: relation "generator" does not exist
  Позиция: 16] [n/a]] with root cause
org.postgresql.util.PSQLException: ERROR: relation "generator" does not exist
  Позиция: 16
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2713) ~[postgresql-42.6.0.jar:42.6.0]
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2401) ~[postgresql-42.6.0.jar:42.6.0]
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:368) ~[postgresql-42.6.0.jar:42.6.0]
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:498) ~[postgresql-42.6.0.jar:42.6.0]
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:415) ~[postgresql-42.6.0.jar:42.6.0]
	at org.postgresql.jdbc.PgPreparedStatement.executeWithFlags(PgPreparedStatement.java:190) ~[postgresql-42.6.0.jar:42.6.0]
	at org.postgresql.jdbc.PgPreparedStatement.executeQuery(PgPreparedStatement.java:134) ~[postgresql-42.6.0.jar:42.6.0]
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.extract(ResultSetReturnImpl.java:57) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.id.enhanced.SequenceStructure$1.getNextValue(SequenceStructure.java:102) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.id.enhanced.PooledOptimizer.generate(PooledOptimizer.java:72) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.id.enhanced.SequenceStyleGenerator.generate(SequenceStyleGenerator.java:542) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.id.IdentifierGenerator.generate(IdentifierGenerator.java:147) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:120) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:175) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.event.internal.DefaultPersistEventListener.persist(DefaultPersistEventListener.java:93) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:77) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:138) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:797) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:745) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.engine.spi.CascadingActions$7.cascade(CascadingActions.java:290) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.engine.spi.CascadingActions$7.cascade(CascadingActions.java:280) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.engine.internal.Cascade.cascadeToOne(Cascade.java:513) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.engine.internal.Cascade.cascadeAssociation(Cascade.java:434) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.engine.internal.Cascade.cascadeProperty(Cascade.java:220) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.engine.internal.Cascade.cascadeCollectionElements(Cascade.java:547) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.engine.internal.Cascade.cascadeCollection(Cascade.java:477) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.engine.internal.Cascade.cascadeAssociation(Cascade.java:437) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.engine.internal.Cascade.cascadeProperty(Cascade.java:220) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.engine.internal.Cascade.cascade(Cascade.java:153) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.event.internal.AbstractSaveEventListener.cascadeAfterSave(AbstractSaveEventListener.java:490) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.event.internal.DefaultPersistEventListener.justCascade(DefaultPersistEventListener.java:161) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.event.internal.DefaultPersistEventListener.entityIsPersistent(DefaultPersistEventListener.java:154) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.event.internal.DefaultPersistEventListener.persist(DefaultPersistEventListener.java:90) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:77) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:54) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:755) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:739) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at DAO.DAOUserProducts.addedProductForUser(DAOUserProducts.java:29) ~[classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:568) ~[?:?]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343) ~[spring-aop-6.0.11.jar:6.0.11]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196) ~[spring-aop-6.0.11.jar:6.0.11]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-6.0.11.jar:6.0.11]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:756) ~[spring-aop-6.0.11.jar:6.0.11]
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123) ~[spring-tx-6.0.11.jar:6.0.11]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:391) ~[spring-tx-6.0.11.jar:6.0.11]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.0.11.jar:6.0.11]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.0.11.jar:6.0.11]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:756) ~[spring-aop-6.0.11.jar:6.0.11]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708) ~[spring-aop-6.0.11.jar:6.0.11]
	at DAO.DAOUserProducts$$SpringCGLIB$$0.addedProductForUser(<generated>) ~[classes/:?]
	at controller.CRUDUserProducts.addedProductUser(CRUDUserProducts.java:27) ~[classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:568) ~[?:?]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205) ~[spring-web-6.0.11.jar:6.0.11]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150) ~[spring-web-6.0.11.jar:6.0.11]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.0.11.jar:6.0.11]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884) ~[spring-webmvc-6.0.11.jar:6.0.11]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797) ~[spring-webmvc-6.0.11.jar:6.0.11]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.0.11.jar:6.0.11]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081) ~[spring-webmvc-6.0.11.jar:6.0.11]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974) ~[spring-webmvc-6.0.11.jar:6.0.11]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011) ~[spring-webmvc-6.0.11.jar:6.0.11]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914) ~[spring-webmvc-6.0.11.jar:6.0.11]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590) ~[tomcat-embed-core-10.1.11.jar:6.0]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.0.11.jar:6.0.11]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.11.jar:6.0]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205) ~[tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149) ~[tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.11.jar:10.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174) ~[tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149) ~[tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.0.11.jar:6.0.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.0.11.jar:6.0.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174) ~[tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149) ~[tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.0.11.jar:6.0.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.0.11.jar:6.0.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174) ~[tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149) ~[tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.0.11.jar:6.0.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.0.11.jar:6.0.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174) ~[tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149) ~[tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:166) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at java.lang.Thread.run(Thread.java:840) [?:?]
[TRACE] 29-02-2024 12:55:48.964 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@5c194652] for TypeConfiguration
[DEBUG] 29-02-2024 12:55:48.977 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@525891c] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@5c194652]
[INFO ] 29-02-2024 12:56:00.674 [background-preinit] Version - HV000001: Hibernate Validator 8.0.1.Final
[INFO ] 29-02-2024 12:56:00.892 [main] TestSpringBootApplication - Starting TestSpringBootApplication using Java 17.0.10 with PID 1649390 (/home/dima/backend_microservice/UserProductsMicroService/target/classes started by dima in /home/dima/backend_microservice/UserProductsMicroService)
[INFO ] 29-02-2024 12:56:00.914 [main] TestSpringBootApplication - No active profile set, falling back to 1 default profile: "default"
[INFO ] 29-02-2024 12:56:03.506 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO ] 29-02-2024 12:56:04.091 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 559 ms. Found 1 JPA repository interfaces.
[ERROR] 29-02-2024 12:56:06.038 [main] AprLifecycleListener - An incompatible version [1.2.23] of the Apache Tomcat Native library is installed, while Tomcat requires version [1.2.34]
[INFO ] 29-02-2024 12:56:06.846 [main] TomcatWebServer - Tomcat initialized with port(s): 8300 (http)
[INFO ] 29-02-2024 12:56:06.878 [main] Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8300"]
[INFO ] 29-02-2024 12:56:06.886 [main] StandardService - Starting service [Tomcat]
[INFO ] 29-02-2024 12:56:06.887 [main] StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.11]
[INFO ] 29-02-2024 12:56:08.038 [main] TldScanner - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
[INFO ] 29-02-2024 12:56:08.065 [main] [/users_products_api] - Initializing Spring embedded WebApplicationContext
[INFO ] 29-02-2024 12:56:08.071 [main] ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 6825 ms
[INFO ] 29-02-2024 12:56:08.468 [main] Version - HHH000412: Hibernate ORM core version 6.2.6.Final
[INFO ] 29-02-2024 12:56:08.476 [main] Environment - HHH000406: Using bytecode reflection optimizer
[DEBUG] 29-02-2024 12:56:08.850 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@5514579e
[DEBUG] 29-02-2024 12:56:08.851 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@5514579e
[DEBUG] 29-02-2024 12:56:08.852 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@5514579e
[DEBUG] 29-02-2024 12:56:08.852 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@58c42c8c
[DEBUG] 29-02-2024 12:56:08.853 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@58c42c8c
[DEBUG] 29-02-2024 12:56:08.853 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@3af236d0
[DEBUG] 29-02-2024 12:56:08.854 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@3af236d0
[DEBUG] 29-02-2024 12:56:08.854 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@23564dd2
[DEBUG] 29-02-2024 12:56:08.855 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@23564dd2
[DEBUG] 29-02-2024 12:56:08.855 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@54895681
[DEBUG] 29-02-2024 12:56:08.855 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@54895681
[DEBUG] 29-02-2024 12:56:08.856 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@54895681
[DEBUG] 29-02-2024 12:56:08.859 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@2dd0a0d0
[DEBUG] 29-02-2024 12:56:08.860 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@2dd0a0d0
[DEBUG] 29-02-2024 12:56:08.860 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@2dd0a0d0
[DEBUG] 29-02-2024 12:56:08.860 [main] BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@6bf570c
[DEBUG] 29-02-2024 12:56:08.861 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@6bf570c
[DEBUG] 29-02-2024 12:56:08.861 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@1796b2d4
[DEBUG] 29-02-2024 12:56:08.866 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@935d3f9
[DEBUG] 29-02-2024 12:56:08.866 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@935d3f9
[DEBUG] 29-02-2024 12:56:08.867 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@214b342f
[DEBUG] 29-02-2024 12:56:08.867 [main] BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@5db0003d
[DEBUG] 29-02-2024 12:56:08.868 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@7f12094d
[DEBUG] 29-02-2024 12:56:08.868 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@7f12094d
[DEBUG] 29-02-2024 12:56:08.869 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@7f12094d
[DEBUG] 29-02-2024 12:56:08.870 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@589fb74d
[DEBUG] 29-02-2024 12:56:08.870 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@589fb74d
[DEBUG] 29-02-2024 12:56:08.870 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@589fb74d
[DEBUG] 29-02-2024 12:56:08.871 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@200d1a3d
[DEBUG] 29-02-2024 12:56:08.871 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@200d1a3d
[DEBUG] 29-02-2024 12:56:08.872 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@200d1a3d
[DEBUG] 29-02-2024 12:56:08.872 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@7de147e9
[DEBUG] 29-02-2024 12:56:08.873 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@7de147e9
[DEBUG] 29-02-2024 12:56:08.873 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@7de147e9
[DEBUG] 29-02-2024 12:56:08.874 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@12567179
[DEBUG] 29-02-2024 12:56:08.874 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@12567179
[DEBUG] 29-02-2024 12:56:08.875 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@12567179
[DEBUG] 29-02-2024 12:56:08.876 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@37d699a1
[DEBUG] 29-02-2024 12:56:08.876 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@37d699a1
[DEBUG] 29-02-2024 12:56:08.876 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@7f42b194
[DEBUG] 29-02-2024 12:56:08.877 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@7f42b194
[DEBUG] 29-02-2024 12:56:08.877 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@8eb6f9a
[DEBUG] 29-02-2024 12:56:08.878 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@8eb6f9a
[DEBUG] 29-02-2024 12:56:08.878 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@8eb6f9a
[DEBUG] 29-02-2024 12:56:08.879 [main] BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@29170a47
[DEBUG] 29-02-2024 12:56:08.879 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@2a8f8555
[DEBUG] 29-02-2024 12:56:08.880 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@2a8f8555
[DEBUG] 29-02-2024 12:56:08.880 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@402b4f81
[DEBUG] 29-02-2024 12:56:08.880 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@13ef7fa1
[DEBUG] 29-02-2024 12:56:08.881 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@13ef7fa1
[DEBUG] 29-02-2024 12:56:08.882 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@13ef7fa1
[DEBUG] 29-02-2024 12:56:08.882 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@23b1aa9
[DEBUG] 29-02-2024 12:56:08.883 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@54489296
[DEBUG] 29-02-2024 12:56:08.885 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@4e8598d9
[DEBUG] 29-02-2024 12:56:08.888 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@267ff4df
[DEBUG] 29-02-2024 12:56:08.888 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@267ff4df
[DEBUG] 29-02-2024 12:56:08.889 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@7c4b5ceb
[DEBUG] 29-02-2024 12:56:08.889 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@7c4b5ceb
[DEBUG] 29-02-2024 12:56:08.890 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@6c07add6
[DEBUG] 29-02-2024 12:56:08.890 [main] BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@e26a3df
[DEBUG] 29-02-2024 12:56:08.891 [main] BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@57a667c8
[DEBUG] 29-02-2024 12:56:08.891 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@712cd5d3
[DEBUG] 29-02-2024 12:56:08.892 [main] BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@2094bf3d
[DEBUG] 29-02-2024 12:56:08.893 [main] BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@1b17d8ab
[DEBUG] 29-02-2024 12:56:08.893 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@7f6b7426
[DEBUG] 29-02-2024 12:56:08.894 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@7f6b7426
[DEBUG] 29-02-2024 12:56:08.894 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@687eb455
[DEBUG] 29-02-2024 12:56:08.895 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@687eb455
[DEBUG] 29-02-2024 12:56:08.895 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@6d969330
[DEBUG] 29-02-2024 12:56:08.895 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@6d969330
[DEBUG] 29-02-2024 12:56:08.896 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@4861cca9
[DEBUG] 29-02-2024 12:56:08.896 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@4861cca9
[DEBUG] 29-02-2024 12:56:08.896 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@6c8f4bc7
[DEBUG] 29-02-2024 12:56:08.897 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@6c8f4bc7
[DEBUG] 29-02-2024 12:56:08.897 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@714e861f
[DEBUG] 29-02-2024 12:56:08.897 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@28989415
[DEBUG] 29-02-2024 12:56:08.898 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@6eda012b
[DEBUG] 29-02-2024 12:56:08.898 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@6eda012b
[DEBUG] 29-02-2024 12:56:08.898 [main] BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@781dbe44
[DEBUG] 29-02-2024 12:56:08.899 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@7d66a126
[DEBUG] 29-02-2024 12:56:08.899 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@1132baa3
[DEBUG] 29-02-2024 12:56:08.899 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@2fdf22f7
[DEBUG] 29-02-2024 12:56:08.900 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@2fdf22f7
[DEBUG] 29-02-2024 12:56:08.900 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@3a2546d6
[DEBUG] 29-02-2024 12:56:08.900 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@7282af25
[DEBUG] 29-02-2024 12:56:08.901 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@7661e474
[DEBUG] 29-02-2024 12:56:08.901 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@7661e474
[DEBUG] 29-02-2024 12:56:08.901 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@20ffb8d5
[DEBUG] 29-02-2024 12:56:08.902 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@20ffb8d5
[DEBUG] 29-02-2024 12:56:08.902 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@307c59ea
[DEBUG] 29-02-2024 12:56:08.902 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@307c59ea
[DEBUG] 29-02-2024 12:56:08.903 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@307c59ea
[DEBUG] 29-02-2024 12:56:08.903 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@57e03347
[DEBUG] 29-02-2024 12:56:08.903 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@57e03347
[DEBUG] 29-02-2024 12:56:08.904 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@57e03347
[DEBUG] 29-02-2024 12:56:08.904 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@2edb2f8b
[DEBUG] 29-02-2024 12:56:08.904 [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@733f1395
[DEBUG] 29-02-2024 12:56:08.905 [main] BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@21dea711
[DEBUG] 29-02-2024 12:56:08.905 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@21dea711
[DEBUG] 29-02-2024 12:56:08.905 [main] BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@7772d266
[DEBUG] 29-02-2024 12:56:08.906 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@7772d266
[DEBUG] 29-02-2024 12:56:08.906 [main] BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@7772d266
[DEBUG] 29-02-2024 12:56:08.906 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@a21c74
[DEBUG] 29-02-2024 12:56:08.906 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@b8a144e
[DEBUG] 29-02-2024 12:56:08.907 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@5fb8dc01
[DEBUG] 29-02-2024 12:56:08.907 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@5fb8dc01
[DEBUG] 29-02-2024 12:56:08.907 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@3e38c472
[DEBUG] 29-02-2024 12:56:08.908 [main] BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@3e38c472
[DEBUG] 29-02-2024 12:56:08.908 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@3e38c472
[DEBUG] 29-02-2024 12:56:08.908 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@2ee92e7d
[DEBUG] 29-02-2024 12:56:08.909 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@2ee92e7d
[DEBUG] 29-02-2024 12:56:08.909 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@759a678a
[DEBUG] 29-02-2024 12:56:08.909 [main] BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@759a678a
[DEBUG] 29-02-2024 12:56:08.910 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@6cdbe5ec
[DEBUG] 29-02-2024 12:56:08.910 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@6cdbe5ec
[DEBUG] 29-02-2024 12:56:08.911 [main] BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@14b8a751
[DEBUG] 29-02-2024 12:56:08.911 [main] BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@14b8a751
[DEBUG] 29-02-2024 12:56:08.911 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@7345f97d
[DEBUG] 29-02-2024 12:56:08.912 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@7345f97d
[DEBUG] 29-02-2024 12:56:08.912 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@554566a8
[DEBUG] 29-02-2024 12:56:08.927 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@24691c5
[DEBUG] 29-02-2024 12:56:08.928 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@24691c5
[DEBUG] 29-02-2024 12:56:08.931 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@5abf6a99
[DEBUG] 29-02-2024 12:56:08.932 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@dc59ec2
[DEBUG] 29-02-2024 12:56:08.932 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@375084c9
[DEBUG] 29-02-2024 12:56:08.932 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@bd93bc3
[DEBUG] 29-02-2024 12:56:08.932 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@2a136383
[DEBUG] 29-02-2024 12:56:08.933 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@b01cb8d
[DEBUG] 29-02-2024 12:56:08.933 [main] BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@38c460e8
[DEBUG] 29-02-2024 12:56:08.933 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@7a814310
[DEBUG] 29-02-2024 12:56:08.934 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@4bbf38b8
[DEBUG] 29-02-2024 12:56:10.416 [main] DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5efe5b25) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@45707f76)
[DEBUG] 29-02-2024 12:56:10.422 [main] JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
[DEBUG] 29-02-2024 12:56:10.422 [main] JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 29-02-2024 12:56:10.442 [main] BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@24a3d414
[DEBUG] 29-02-2024 12:56:10.443 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@24a3d414
[DEBUG] 29-02-2024 12:56:10.443 [main] BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@24691c5`
[DEBUG] 29-02-2024 12:56:10.448 [main] JdbcTypeRegistry - addDescriptor(3100, NumericTypeDescriptor) replaced previous registration(org.hibernate.dialect.PostgreSQLIntervalSecondJdbcType@45c90a05)
[DEBUG] 29-02-2024 12:56:10.464 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 29-02-2024 12:56:10.464 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 29-02-2024 12:56:10.465 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 29-02-2024 12:56:10.465 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 29-02-2024 12:56:10.465 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 29-02-2024 12:56:10.466 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 29-02-2024 12:56:10.468 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 29-02-2024 12:56:10.468 [main] BasicTypeRegistry - Adding type registration OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 29-02-2024 12:56:10.469 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 29-02-2024 12:56:10.472 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@24a8e40d] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@175f859e]
[WARN ] 29-02-2024 12:56:10.943 [main] InFlightMetadataCollectorImpl - HHH000069: Duplicate generator name generator
[INFO ] 29-02-2024 12:56:11.289 [main] BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
[WARN ] 29-02-2024 12:56:12.030 [main] AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'CRUDUserProducts': Unsatisfied dependency expressed through field 'dao': Error creating bean with name 'DAOUserProducts': Unsatisfied dependency expressed through field 'rep': Error creating bean with name 'customizedUserProductsCrudRepository' defined in repository.CustomizedUserProductsCrudRepository defined in @EnableJpaRepositories declared on TestSpringBootApplication: Cannot resolve reference to bean 'jpaSharedEM_entityManagerFactory' while setting bean property 'entityManager'
[INFO ] 29-02-2024 12:56:12.036 [main] StandardService - Stopping service [Tomcat]
[INFO ] 29-02-2024 12:56:12.081 [main] ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
[ERROR] 29-02-2024 12:56:12.137 [main] SpringApplication - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'CRUDUserProducts': Unsatisfied dependency expressed through field 'dao': Error creating bean with name 'DAOUserProducts': Unsatisfied dependency expressed through field 'rep': Error creating bean with name 'customizedUserProductsCrudRepository' defined in repository.CustomizedUserProductsCrudRepository defined in @EnableJpaRepositories declared on TestSpringBootApplication: Cannot resolve reference to bean 'jpaSharedEM_entityManagerFactory' while setting bean property 'entityManager'
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:716) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:696) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:483) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1416) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:597) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:973) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:942) ~[spring-context-6.0.11.jar:6.0.11]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:608) ~[spring-context-6.0.11.jar:6.0.11]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146) ~[spring-boot-3.1.2.jar:3.1.2]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734) [spring-boot-3.1.2.jar:3.1.2]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:436) [spring-boot-3.1.2.jar:3.1.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312) [spring-boot-3.1.2.jar:3.1.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306) [spring-boot-3.1.2.jar:3.1.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295) [spring-boot-3.1.2.jar:3.1.2]
	at App.TestSpringBootApplication.main(TestSpringBootApplication.java:30) [classes/:?]
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'DAOUserProducts': Unsatisfied dependency expressed through field 'rep': Error creating bean with name 'customizedUserProductsCrudRepository' defined in repository.CustomizedUserProductsCrudRepository defined in @EnableJpaRepositories declared on TestSpringBootApplication: Cannot resolve reference to bean 'jpaSharedEM_entityManagerFactory' while setting bean property 'entityManager'
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:716) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:696) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:483) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1416) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:597) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:713) ~[spring-beans-6.0.11.jar:6.0.11]
	... 20 more
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'customizedUserProductsCrudRepository' defined in repository.CustomizedUserProductsCrudRepository defined in @EnableJpaRepositories declared on TestSpringBootApplication: Cannot resolve reference to bean 'jpaSharedEM_entityManagerFactory' while setting bean property 'entityManager'
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:377) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1682) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:597) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:713) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:696) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:483) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1416) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:597) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:713) ~[spring-beans-6.0.11.jar:6.0.11]
	... 20 more
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'jpaSharedEM_entityManagerFactory': Cannot resolve reference to bean 'entityManagerFactory' while setting constructor argument
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:377) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:693) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:517) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1332) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1162) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:560) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1682) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:597) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:713) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:696) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:483) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1416) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:597) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:713) ~[spring-beans-6.0.11.jar:6.0.11]
	... 20 more
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [server/DatabaseConfiguration.class]: Could not instantiate id generator [entity-name=entity.eUsers]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1770) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:693) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:517) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1332) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1162) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:560) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1682) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:597) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:713) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:696) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:483) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1416) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:597) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:713) ~[spring-beans-6.0.11.jar:6.0.11]
	... 20 more
Caused by: org.hibernate.MappingException: Could not instantiate id generator [entity-name=entity.eUsers]
	at org.hibernate.id.factory.internal.StandardIdentifierGeneratorFactory.createIdentifierGenerator(StandardIdentifierGeneratorFactory.java:230) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.id.factory.internal.IdentifierGeneratorUtil.createLegacyIdentifierGenerator(IdentifierGeneratorUtil.java:126) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.mapping.SimpleValue.createGenerator(SimpleValue.java:414) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.internal.SessionFactoryImpl.lambda$createGenerators$1(SessionFactoryImpl.java:413) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179) ~[?:?]
	at java.util.HashMap$ValueSpliterator.forEachRemaining(HashMap.java:1779) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596) ~[?:?]
	at org.hibernate.internal.SessionFactoryImpl.createGenerators(SessionFactoryImpl.java:412) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:249) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:431) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:941) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:960) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:616) ~[spring-orm-6.0.11.jar:6.0.11]
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:600) ~[spring-orm-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1817) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1766) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:693) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:517) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1332) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1162) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:560) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1682) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:597) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:713) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:696) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:483) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1416) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:597) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:713) ~[spring-beans-6.0.11.jar:6.0.11]
	... 20 more
Caused by: org.hibernate.MappingException: The increment size of the [users_id_seq] sequence is set to [50] in the entity mapping while the associated database sequence increment size is [1].
	at org.hibernate.id.enhanced.SequenceStyleGenerator.configure(SequenceStyleGenerator.java:224) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.id.factory.internal.StandardIdentifierGeneratorFactory.createIdentifierGenerator(StandardIdentifierGeneratorFactory.java:224) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.id.factory.internal.IdentifierGeneratorUtil.createLegacyIdentifierGenerator(IdentifierGeneratorUtil.java:126) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.mapping.SimpleValue.createGenerator(SimpleValue.java:414) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.internal.SessionFactoryImpl.lambda$createGenerators$1(SessionFactoryImpl.java:413) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179) ~[?:?]
	at java.util.HashMap$ValueSpliterator.forEachRemaining(HashMap.java:1779) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596) ~[?:?]
	at org.hibernate.internal.SessionFactoryImpl.createGenerators(SessionFactoryImpl.java:412) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:249) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:431) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:941) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:960) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:616) ~[spring-orm-6.0.11.jar:6.0.11]
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:600) ~[spring-orm-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1817) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1766) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:693) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:517) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1332) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1162) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:560) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1682) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:597) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:713) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:696) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:483) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1416) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:597) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337) ~[spring-beans-6.0.11.jar:6.0.11]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:713) ~[spring-beans-6.0.11.jar:6.0.11]
	... 20 more
[INFO ] 29-02-2024 12:57:17.869 [background-preinit] Version - HV000001: Hibernate Validator 8.0.1.Final
[INFO ] 29-02-2024 12:57:18.036 [main] TestSpringBootApplication - Starting TestSpringBootApplication using Java 17.0.10 with PID 1650097 (/home/dima/backend_microservice/UserProductsMicroService/target/classes started by dima in /home/dima/backend_microservice/UserProductsMicroService)
[INFO ] 29-02-2024 12:57:18.053 [main] TestSpringBootApplication - No active profile set, falling back to 1 default profile: "default"
[INFO ] 29-02-2024 12:57:19.978 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO ] 29-02-2024 12:57:20.469 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 462 ms. Found 1 JPA repository interfaces.
[ERROR] 29-02-2024 12:57:22.625 [main] AprLifecycleListener - An incompatible version [1.2.23] of the Apache Tomcat Native library is installed, while Tomcat requires version [1.2.34]
[INFO ] 29-02-2024 12:57:23.595 [main] TomcatWebServer - Tomcat initialized with port(s): 8300 (http)
[INFO ] 29-02-2024 12:57:23.662 [main] Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8300"]
[INFO ] 29-02-2024 12:57:23.669 [main] StandardService - Starting service [Tomcat]
[INFO ] 29-02-2024 12:57:23.671 [main] StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.11]
[INFO ] 29-02-2024 12:57:25.092 [main] TldScanner - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
[INFO ] 29-02-2024 12:57:25.112 [main] [/users_products_api] - Initializing Spring embedded WebApplicationContext
[INFO ] 29-02-2024 12:57:25.134 [main] ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 6834 ms
[INFO ] 29-02-2024 12:57:25.892 [main] Version - HHH000412: Hibernate ORM core version 6.2.6.Final
[INFO ] 29-02-2024 12:57:25.899 [main] Environment - HHH000406: Using bytecode reflection optimizer
[DEBUG] 29-02-2024 12:57:26.314 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@200d1a3d
[DEBUG] 29-02-2024 12:57:26.316 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@200d1a3d
[DEBUG] 29-02-2024 12:57:26.316 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@200d1a3d
[DEBUG] 29-02-2024 12:57:26.317 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@7de147e9
[DEBUG] 29-02-2024 12:57:26.317 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@7de147e9
[DEBUG] 29-02-2024 12:57:26.318 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@12567179
[DEBUG] 29-02-2024 12:57:26.318 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@12567179
[DEBUG] 29-02-2024 12:57:26.319 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@37d699a1
[DEBUG] 29-02-2024 12:57:26.319 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@37d699a1
[DEBUG] 29-02-2024 12:57:26.320 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@7f42b194
[DEBUG] 29-02-2024 12:57:26.320 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@7f42b194
[DEBUG] 29-02-2024 12:57:26.321 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@7f42b194
[DEBUG] 29-02-2024 12:57:26.321 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@8eb6f9a
[DEBUG] 29-02-2024 12:57:26.322 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@8eb6f9a
[DEBUG] 29-02-2024 12:57:26.322 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@8eb6f9a
[DEBUG] 29-02-2024 12:57:26.323 [main] BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@29170a47
[DEBUG] 29-02-2024 12:57:26.323 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@29170a47
[DEBUG] 29-02-2024 12:57:26.323 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@2a8f8555
[DEBUG] 29-02-2024 12:57:26.324 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@402b4f81
[DEBUG] 29-02-2024 12:57:26.325 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@402b4f81
[DEBUG] 29-02-2024 12:57:26.325 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@13ef7fa1
[DEBUG] 29-02-2024 12:57:26.326 [main] BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@23b1aa9
[DEBUG] 29-02-2024 12:57:26.326 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@54489296
[DEBUG] 29-02-2024 12:57:26.327 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@54489296
[DEBUG] 29-02-2024 12:57:26.327 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@54489296
[DEBUG] 29-02-2024 12:57:26.328 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@4e8598d9
[DEBUG] 29-02-2024 12:57:26.328 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@4e8598d9
[DEBUG] 29-02-2024 12:57:26.329 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@4e8598d9
[DEBUG] 29-02-2024 12:57:26.329 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@267ff4df
[DEBUG] 29-02-2024 12:57:26.330 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@267ff4df
[DEBUG] 29-02-2024 12:57:26.330 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@267ff4df
[DEBUG] 29-02-2024 12:57:26.331 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@7c4b5ceb
[DEBUG] 29-02-2024 12:57:26.331 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@7c4b5ceb
[DEBUG] 29-02-2024 12:57:26.331 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@7c4b5ceb
[DEBUG] 29-02-2024 12:57:26.332 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@6c07add6
[DEBUG] 29-02-2024 12:57:26.334 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@6c07add6
[DEBUG] 29-02-2024 12:57:26.334 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@6c07add6
[DEBUG] 29-02-2024 12:57:26.335 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@e26a3df
[DEBUG] 29-02-2024 12:57:26.335 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@e26a3df
[DEBUG] 29-02-2024 12:57:26.336 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@57a667c8
[DEBUG] 29-02-2024 12:57:26.336 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@57a667c8
[DEBUG] 29-02-2024 12:57:26.337 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@712cd5d3
[DEBUG] 29-02-2024 12:57:26.337 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@712cd5d3
[DEBUG] 29-02-2024 12:57:26.337 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@712cd5d3
[DEBUG] 29-02-2024 12:57:26.338 [main] BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@2094bf3d
[DEBUG] 29-02-2024 12:57:26.338 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@1b17d8ab
[DEBUG] 29-02-2024 12:57:26.338 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@1b17d8ab
[DEBUG] 29-02-2024 12:57:26.339 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@7f6b7426
[DEBUG] 29-02-2024 12:57:26.339 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@687eb455
[DEBUG] 29-02-2024 12:57:26.340 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@687eb455
[DEBUG] 29-02-2024 12:57:26.340 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@687eb455
[DEBUG] 29-02-2024 12:57:26.340 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@6d969330
[DEBUG] 29-02-2024 12:57:26.341 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@4861cca9
[DEBUG] 29-02-2024 12:57:26.341 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@6c8f4bc7
[DEBUG] 29-02-2024 12:57:26.342 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@714e861f
[DEBUG] 29-02-2024 12:57:26.342 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@714e861f
[DEBUG] 29-02-2024 12:57:26.342 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@28989415
[DEBUG] 29-02-2024 12:57:26.343 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@28989415
[DEBUG] 29-02-2024 12:57:26.343 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@6eda012b
[DEBUG] 29-02-2024 12:57:26.344 [main] BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@781dbe44
[DEBUG] 29-02-2024 12:57:26.344 [main] BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@7d66a126
[DEBUG] 29-02-2024 12:57:26.344 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@1132baa3
[DEBUG] 29-02-2024 12:57:26.345 [main] BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@2fdf22f7
[DEBUG] 29-02-2024 12:57:26.345 [main] BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@3a2546d6
[DEBUG] 29-02-2024 12:57:26.345 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@7282af25
[DEBUG] 29-02-2024 12:57:26.346 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@7282af25
[DEBUG] 29-02-2024 12:57:26.346 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@7661e474
[DEBUG] 29-02-2024 12:57:26.347 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@7661e474
[DEBUG] 29-02-2024 12:57:26.360 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@20ffb8d5
[DEBUG] 29-02-2024 12:57:26.361 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@20ffb8d5
[DEBUG] 29-02-2024 12:57:26.361 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@307c59ea
[DEBUG] 29-02-2024 12:57:26.361 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@307c59ea
[DEBUG] 29-02-2024 12:57:26.362 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@57e03347
[DEBUG] 29-02-2024 12:57:26.362 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@57e03347
[DEBUG] 29-02-2024 12:57:26.362 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2edb2f8b
[DEBUG] 29-02-2024 12:57:26.363 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@733f1395
[DEBUG] 29-02-2024 12:57:26.363 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@21dea711
[DEBUG] 29-02-2024 12:57:26.363 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@21dea711
[DEBUG] 29-02-2024 12:57:26.365 [main] BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@7772d266
[DEBUG] 29-02-2024 12:57:26.366 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@a21c74
[DEBUG] 29-02-2024 12:57:26.366 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@b8a144e
[DEBUG] 29-02-2024 12:57:26.367 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@5fb8dc01
[DEBUG] 29-02-2024 12:57:26.367 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@5fb8dc01
[DEBUG] 29-02-2024 12:57:26.367 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@3e38c472
[DEBUG] 29-02-2024 12:57:26.368 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@2ee92e7d
[DEBUG] 29-02-2024 12:57:26.368 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@759a678a
[DEBUG] 29-02-2024 12:57:26.368 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@759a678a
[DEBUG] 29-02-2024 12:57:26.368 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@6cdbe5ec
[DEBUG] 29-02-2024 12:57:26.369 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@6cdbe5ec
[DEBUG] 29-02-2024 12:57:26.369 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@14b8a751
[DEBUG] 29-02-2024 12:57:26.369 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@14b8a751
[DEBUG] 29-02-2024 12:57:26.370 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@14b8a751
[DEBUG] 29-02-2024 12:57:26.370 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@7345f97d
[DEBUG] 29-02-2024 12:57:26.370 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@7345f97d
[DEBUG] 29-02-2024 12:57:26.371 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@7345f97d
[DEBUG] 29-02-2024 12:57:26.371 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@554566a8
[DEBUG] 29-02-2024 12:57:26.374 [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@66020d69
[DEBUG] 29-02-2024 12:57:26.375 [main] BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@3751acd7
[DEBUG] 29-02-2024 12:57:26.375 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@3751acd7
[DEBUG] 29-02-2024 12:57:26.375 [main] BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@6b832551
[DEBUG] 29-02-2024 12:57:26.376 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@6b832551
[DEBUG] 29-02-2024 12:57:26.376 [main] BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@6b832551
[DEBUG] 29-02-2024 12:57:26.376 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@150d6eaf
[DEBUG] 29-02-2024 12:57:26.377 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@63124022
[DEBUG] 29-02-2024 12:57:26.377 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@591f6f83
[DEBUG] 29-02-2024 12:57:26.377 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@591f6f83
[DEBUG] 29-02-2024 12:57:26.378 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@2b44605c
[DEBUG] 29-02-2024 12:57:26.378 [main] BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@2b44605c
[DEBUG] 29-02-2024 12:57:26.378 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@2b44605c
[DEBUG] 29-02-2024 12:57:26.379 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@55421b8d
[DEBUG] 29-02-2024 12:57:26.379 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@55421b8d
[DEBUG] 29-02-2024 12:57:26.380 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@24a04257
[DEBUG] 29-02-2024 12:57:26.380 [main] BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@24a04257
[DEBUG] 29-02-2024 12:57:26.381 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@6615237
[DEBUG] 29-02-2024 12:57:26.381 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@6615237
[DEBUG] 29-02-2024 12:57:26.382 [main] BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@eaf8427
[DEBUG] 29-02-2024 12:57:26.382 [main] BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@eaf8427
[DEBUG] 29-02-2024 12:57:26.382 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@4bf4680c
[DEBUG] 29-02-2024 12:57:26.383 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@4bf4680c
[DEBUG] 29-02-2024 12:57:26.383 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@6d6039df
[DEBUG] 29-02-2024 12:57:26.398 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@375084c9
[DEBUG] 29-02-2024 12:57:26.399 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@375084c9
[DEBUG] 29-02-2024 12:57:26.402 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@67763ebe
[DEBUG] 29-02-2024 12:57:26.403 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@4b4a2fa8
[DEBUG] 29-02-2024 12:57:26.403 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@5da6b13d
[DEBUG] 29-02-2024 12:57:26.403 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@3dc39459
[DEBUG] 29-02-2024 12:57:26.404 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@6b16de91
[DEBUG] 29-02-2024 12:57:26.404 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@71bb8b34
[DEBUG] 29-02-2024 12:57:26.404 [main] BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@197ce367
[DEBUG] 29-02-2024 12:57:26.405 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@383cdd4d
[DEBUG] 29-02-2024 12:57:26.405 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@65036e8d
[DEBUG] 29-02-2024 12:57:27.759 [main] DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5dd6a4c8) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@47be41c6)
[DEBUG] 29-02-2024 12:57:27.764 [main] JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
[DEBUG] 29-02-2024 12:57:27.765 [main] JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 29-02-2024 12:57:27.789 [main] BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@54defd69
[DEBUG] 29-02-2024 12:57:27.789 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@54defd69
[DEBUG] 29-02-2024 12:57:27.789 [main] BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@375084c9`
[DEBUG] 29-02-2024 12:57:27.792 [main] JdbcTypeRegistry - addDescriptor(3100, NumericTypeDescriptor) replaced previous registration(org.hibernate.dialect.PostgreSQLIntervalSecondJdbcType@7019d619)
[DEBUG] 29-02-2024 12:57:27.807 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 29-02-2024 12:57:27.807 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 29-02-2024 12:57:27.807 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 29-02-2024 12:57:27.808 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 29-02-2024 12:57:27.808 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 29-02-2024 12:57:27.809 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 29-02-2024 12:57:27.811 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 29-02-2024 12:57:27.811 [main] BasicTypeRegistry - Adding type registration OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 29-02-2024 12:57:27.812 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 29-02-2024 12:57:27.815 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3d798e76] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@763b0996]
[WARN ] 29-02-2024 12:57:28.293 [main] InFlightMetadataCollectorImpl - HHH000069: Duplicate generator name generator
[INFO ] 29-02-2024 12:57:28.461 [main] BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
[INFO ] 29-02-2024 12:57:31.115 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 29-02-2024 12:57:31.117 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3d798e76] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@7962c1d5]
[TRACE] 29-02-2024 12:57:31.129 [main] TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@7962c1d5] for TypeConfiguration
[WARN ] 29-02-2024 12:57:32.314 [main] JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[INFO ] 29-02-2024 12:57:33.600 [main] Http11NioProtocol - Starting ProtocolHandler ["http-nio-8300"]
[INFO ] 29-02-2024 12:57:33.693 [main] TomcatWebServer - Tomcat started on port(s): 8300 (http) with context path '/users_products_api'
[INFO ] 29-02-2024 12:57:33.733 [main] TestSpringBootApplication - Started TestSpringBootApplication in 16.989 seconds (process running for 20.648)
[INFO ] 29-02-2024 12:57:39.764 [http-nio-8300-exec-1] [/users_products_api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[INFO ] 29-02-2024 12:57:39.766 [http-nio-8300-exec-1] DispatcherServlet - Initializing Servlet 'dispatcherServlet'
[INFO ] 29-02-2024 12:57:39.775 [http-nio-8300-exec-1] DispatcherServlet - Completed initialization in 5 ms
[DEBUG] 29-02-2024 12:57:40.428 [http-nio-8300-exec-1] SQL - select e1_0.id,e1_0.email,e1_0.login,e1_0.name,e1_0.password,p1_0.id_user,p1_0.id,p1_0.name,p1_0.page_image,p1_0.price,p1_0.raiting,p1_0.year_issue from users e1_0 left join products p1_0 on e1_0.id=p1_0.id_user where e1_0.id=?
[DEBUG] 29-02-2024 12:57:40.543 [http-nio-8300-exec-1] SQL - select nextval('products_id_seq')
[DEBUG] 29-02-2024 12:57:40.633 [http-nio-8300-exec-1] SQL - insert into products (name,page_image,price,raiting,id_user,year_issue,id) values (?,?,?,?,?,?,?)
[WARN ] 29-02-2024 12:57:40.684 [http-nio-8300-exec-1] SqlExceptionHelper - SQL Error: 0, SQLState: 23502
[ERROR] 29-02-2024 12:57:40.686 [http-nio-8300-exec-1] SqlExceptionHelper - ERROR: null value in column "id_user" violates not-null constraint
  Подробности: Failing row contains (product3, def, 100, 2.9, 2023-01-03 23:59:29, 10, null).
[ERROR] 29-02-2024 12:57:40.729 [http-nio-8300-exec-1] [dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [/users_products_api] threw exception [Request processing failed: org.springframework.orm.jpa.JpaSystemException: could not execute statement [ERROR: null value in column "id_user" violates not-null constraint
  Подробности: Failing row contains (product3, def, 100, 2.9, 2023-01-03 23:59:29, 10, null).] [insert into products (name,page_image,price,raiting,id_user,year_issue,id) values (?,?,?,?,?,?,?)]] with root cause
org.postgresql.util.PSQLException: ERROR: null value in column "id_user" violates not-null constraint
  Подробности: Failing row contains (product3, def, 100, 2.9, 2023-01-03 23:59:29, 10, null).
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2713) ~[postgresql-42.6.0.jar:42.6.0]
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2401) ~[postgresql-42.6.0.jar:42.6.0]
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:368) ~[postgresql-42.6.0.jar:42.6.0]
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:498) ~[postgresql-42.6.0.jar:42.6.0]
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:415) ~[postgresql-42.6.0.jar:42.6.0]
	at org.postgresql.jdbc.PgPreparedStatement.executeWithFlags(PgPreparedStatement.java:190) ~[postgresql-42.6.0.jar:42.6.0]
	at org.postgresql.jdbc.PgPreparedStatement.executeUpdate(PgPreparedStatement.java:152) ~[postgresql-42.6.0.jar:42.6.0]
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:275) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.performNonBatchedMutation(AbstractMutationExecutor.java:108) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.engine.jdbc.mutation.internal.MutationExecutorSingleNonBatched.performNonBatchedOperations(MutationExecutorSingleNonBatched.java:40) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.execute(AbstractMutationExecutor.java:53) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.persister.entity.mutation.InsertCoordinator.doStaticInserts(InsertCoordinator.java:170) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.persister.entity.mutation.InsertCoordinator.coordinateInsert(InsertCoordinator.java:112) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:2761) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.action.internal.EntityInsertAction.execute(EntityInsertAction.java:102) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:633) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:502) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:358) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:39) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1412) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:485) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:2301) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:1966) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:439) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:169) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:267) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101) ~[hibernate-core-6.2.6.Final.jar:6.2.6.Final]
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:561) ~[spring-orm-6.0.11.jar:6.0.11]
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:743) ~[spring-tx-6.0.11.jar:6.0.11]
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:711) ~[spring-tx-6.0.11.jar:6.0.11]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.commitTransactionAfterReturning(TransactionAspectSupport.java:660) ~[spring-tx-6.0.11.jar:6.0.11]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:410) ~[spring-tx-6.0.11.jar:6.0.11]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.0.11.jar:6.0.11]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.0.11.jar:6.0.11]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:756) ~[spring-aop-6.0.11.jar:6.0.11]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708) ~[spring-aop-6.0.11.jar:6.0.11]
	at DAO.DAOUserProducts$$SpringCGLIB$$0.addedProductForUser(<generated>) ~[classes/:?]
	at controller.CRUDUserProducts.addedProductUser(CRUDUserProducts.java:27) ~[classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:568) ~[?:?]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205) ~[spring-web-6.0.11.jar:6.0.11]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150) ~[spring-web-6.0.11.jar:6.0.11]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.0.11.jar:6.0.11]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884) ~[spring-webmvc-6.0.11.jar:6.0.11]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797) ~[spring-webmvc-6.0.11.jar:6.0.11]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.0.11.jar:6.0.11]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081) ~[spring-webmvc-6.0.11.jar:6.0.11]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974) ~[spring-webmvc-6.0.11.jar:6.0.11]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011) ~[spring-webmvc-6.0.11.jar:6.0.11]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914) ~[spring-webmvc-6.0.11.jar:6.0.11]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590) ~[tomcat-embed-core-10.1.11.jar:6.0]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.0.11.jar:6.0.11]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.11.jar:6.0]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205) ~[tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149) ~[tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.11.jar:10.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174) ~[tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149) ~[tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.0.11.jar:6.0.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.0.11.jar:6.0.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174) ~[tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149) ~[tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.0.11.jar:6.0.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.0.11.jar:6.0.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174) ~[tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149) ~[tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.0.11.jar:6.0.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.0.11.jar:6.0.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174) ~[tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149) ~[tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:166) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-10.1.11.jar:10.1.11]
	at java.lang.Thread.run(Thread.java:840) [?:?]
[TRACE] 29-02-2024 12:58:42.454 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@7962c1d5] for TypeConfiguration
[DEBUG] 29-02-2024 12:58:42.455 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@2ba72ec6] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@7962c1d5]
[INFO ] 29-02-2024 12:58:53.175 [background-preinit] Version - HV000001: Hibernate Validator 8.0.1.Final
[INFO ] 29-02-2024 12:58:53.372 [main] TestSpringBootApplication - Starting TestSpringBootApplication using Java 17.0.10 with PID 1651032 (/home/dima/backend_microservice/UserProductsMicroService/target/classes started by dima in /home/dima/backend_microservice/UserProductsMicroService)
[INFO ] 29-02-2024 12:58:53.392 [main] TestSpringBootApplication - No active profile set, falling back to 1 default profile: "default"
[INFO ] 29-02-2024 12:58:55.088 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO ] 29-02-2024 12:58:56.084 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 970 ms. Found 1 JPA repository interfaces.
[ERROR] 29-02-2024 12:58:57.922 [main] AprLifecycleListener - An incompatible version [1.2.23] of the Apache Tomcat Native library is installed, while Tomcat requires version [1.2.34]
[INFO ] 29-02-2024 12:58:59.312 [main] TomcatWebServer - Tomcat initialized with port(s): 8300 (http)
[INFO ] 29-02-2024 12:58:59.360 [main] Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8300"]
[INFO ] 29-02-2024 12:58:59.368 [main] StandardService - Starting service [Tomcat]
[INFO ] 29-02-2024 12:58:59.370 [main] StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.11]
[INFO ] 29-02-2024 12:59:00.571 [main] TldScanner - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
[INFO ] 29-02-2024 12:59:00.603 [main] [/users_products_api] - Initializing Spring embedded WebApplicationContext
[INFO ] 29-02-2024 12:59:00.609 [main] ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 6977 ms
[INFO ] 29-02-2024 12:59:01.192 [main] Version - HHH000412: Hibernate ORM core version 6.2.6.Final
[INFO ] 29-02-2024 12:59:01.209 [main] Environment - HHH000406: Using bytecode reflection optimizer
[DEBUG] 29-02-2024 12:59:01.737 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@267ff4df
[DEBUG] 29-02-2024 12:59:01.740 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@267ff4df
[DEBUG] 29-02-2024 12:59:01.741 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@267ff4df
[DEBUG] 29-02-2024 12:59:01.742 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@7c4b5ceb
[DEBUG] 29-02-2024 12:59:01.745 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@7c4b5ceb
[DEBUG] 29-02-2024 12:59:01.746 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@6c07add6
[DEBUG] 29-02-2024 12:59:01.746 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@6c07add6
[DEBUG] 29-02-2024 12:59:01.752 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@e26a3df
[DEBUG] 29-02-2024 12:59:01.755 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@e26a3df
[DEBUG] 29-02-2024 12:59:01.758 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@57a667c8
[DEBUG] 29-02-2024 12:59:01.759 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@57a667c8
[DEBUG] 29-02-2024 12:59:01.763 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@57a667c8
[DEBUG] 29-02-2024 12:59:01.764 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@712cd5d3
[DEBUG] 29-02-2024 12:59:01.768 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@712cd5d3
[DEBUG] 29-02-2024 12:59:01.769 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@712cd5d3
[DEBUG] 29-02-2024 12:59:01.771 [main] BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@2094bf3d
[DEBUG] 29-02-2024 12:59:01.773 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@2094bf3d
[DEBUG] 29-02-2024 12:59:01.774 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@1b17d8ab
[DEBUG] 29-02-2024 12:59:01.774 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@7f6b7426
[DEBUG] 29-02-2024 12:59:01.775 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@7f6b7426
[DEBUG] 29-02-2024 12:59:01.775 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@687eb455
[DEBUG] 29-02-2024 12:59:01.776 [main] BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@6d969330
[DEBUG] 29-02-2024 12:59:01.776 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@4861cca9
[DEBUG] 29-02-2024 12:59:01.776 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@4861cca9
[DEBUG] 29-02-2024 12:59:01.777 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@4861cca9
[DEBUG] 29-02-2024 12:59:01.778 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@6c8f4bc7
[DEBUG] 29-02-2024 12:59:01.779 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@6c8f4bc7
[DEBUG] 29-02-2024 12:59:01.780 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@6c8f4bc7
[DEBUG] 29-02-2024 12:59:01.780 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@714e861f
[DEBUG] 29-02-2024 12:59:01.782 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@714e861f
[DEBUG] 29-02-2024 12:59:01.783 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@714e861f
[DEBUG] 29-02-2024 12:59:01.783 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@28989415
[DEBUG] 29-02-2024 12:59:01.784 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@28989415
[DEBUG] 29-02-2024 12:59:01.784 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@28989415
[DEBUG] 29-02-2024 12:59:01.786 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@6eda012b
[DEBUG] 29-02-2024 12:59:01.787 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@6eda012b
[DEBUG] 29-02-2024 12:59:01.791 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@6eda012b
[DEBUG] 29-02-2024 12:59:01.792 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@781dbe44
[DEBUG] 29-02-2024 12:59:01.794 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@781dbe44
[DEBUG] 29-02-2024 12:59:01.795 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@7d66a126
[DEBUG] 29-02-2024 12:59:01.796 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@7d66a126
[DEBUG] 29-02-2024 12:59:01.796 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@1132baa3
[DEBUG] 29-02-2024 12:59:01.797 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@1132baa3
[DEBUG] 29-02-2024 12:59:01.797 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@1132baa3
[DEBUG] 29-02-2024 12:59:01.799 [main] BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@2fdf22f7
[DEBUG] 29-02-2024 12:59:01.799 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@3a2546d6
[DEBUG] 29-02-2024 12:59:01.800 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@3a2546d6
[DEBUG] 29-02-2024 12:59:01.803 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@7282af25
[DEBUG] 29-02-2024 12:59:01.804 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@7661e474
[DEBUG] 29-02-2024 12:59:01.808 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@7661e474
[DEBUG] 29-02-2024 12:59:01.810 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@7661e474
[DEBUG] 29-02-2024 12:59:01.810 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@20ffb8d5
[DEBUG] 29-02-2024 12:59:01.811 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@307c59ea
[DEBUG] 29-02-2024 12:59:01.813 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@57e03347
[DEBUG] 29-02-2024 12:59:01.814 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@2edb2f8b
[DEBUG] 29-02-2024 12:59:01.815 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@2edb2f8b
[DEBUG] 29-02-2024 12:59:01.817 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@733f1395
[DEBUG] 29-02-2024 12:59:01.819 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@733f1395
[DEBUG] 29-02-2024 12:59:01.820 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@21dea711
[DEBUG] 29-02-2024 12:59:01.820 [main] BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@7772d266
[DEBUG] 29-02-2024 12:59:01.822 [main] BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@a21c74
[DEBUG] 29-02-2024 12:59:01.824 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@b8a144e
[DEBUG] 29-02-2024 12:59:01.824 [main] BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@5fb8dc01
[DEBUG] 29-02-2024 12:59:01.824 [main] BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@3e38c472
[DEBUG] 29-02-2024 12:59:01.824 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@2ee92e7d
[DEBUG] 29-02-2024 12:59:01.825 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@2ee92e7d
[DEBUG] 29-02-2024 12:59:01.825 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@759a678a
[DEBUG] 29-02-2024 12:59:01.826 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@759a678a
[DEBUG] 29-02-2024 12:59:01.826 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@6cdbe5ec
[DEBUG] 29-02-2024 12:59:01.826 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@6cdbe5ec
[DEBUG] 29-02-2024 12:59:01.826 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@14b8a751
[DEBUG] 29-02-2024 12:59:01.827 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@14b8a751
[DEBUG] 29-02-2024 12:59:01.827 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@7345f97d
[DEBUG] 29-02-2024 12:59:01.827 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@7345f97d
[DEBUG] 29-02-2024 12:59:01.828 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@554566a8
[DEBUG] 29-02-2024 12:59:01.828 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@66020d69
[DEBUG] 29-02-2024 12:59:01.828 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@3751acd7
[DEBUG] 29-02-2024 12:59:01.828 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@3751acd7
[DEBUG] 29-02-2024 12:59:01.829 [main] BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@6b832551
[DEBUG] 29-02-2024 12:59:01.829 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@150d6eaf
[DEBUG] 29-02-2024 12:59:01.829 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@63124022
[DEBUG] 29-02-2024 12:59:01.830 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@591f6f83
[DEBUG] 29-02-2024 12:59:01.830 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@591f6f83
[DEBUG] 29-02-2024 12:59:01.830 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2b44605c
[DEBUG] 29-02-2024 12:59:01.834 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@55421b8d
[DEBUG] 29-02-2024 12:59:01.835 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@24a04257
[DEBUG] 29-02-2024 12:59:01.835 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@24a04257
[DEBUG] 29-02-2024 12:59:01.836 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@6615237
[DEBUG] 29-02-2024 12:59:01.836 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@6615237
[DEBUG] 29-02-2024 12:59:01.836 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@eaf8427
[DEBUG] 29-02-2024 12:59:01.837 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@eaf8427
[DEBUG] 29-02-2024 12:59:01.838 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@eaf8427
[DEBUG] 29-02-2024 12:59:01.838 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@4bf4680c
[DEBUG] 29-02-2024 12:59:01.838 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@4bf4680c
[DEBUG] 29-02-2024 12:59:01.839 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@4bf4680c
[DEBUG] 29-02-2024 12:59:01.840 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@6d6039df
[DEBUG] 29-02-2024 12:59:01.840 [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@611c3eae
[DEBUG] 29-02-2024 12:59:01.841 [main] BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@13e00016
[DEBUG] 29-02-2024 12:59:01.841 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@13e00016
[DEBUG] 29-02-2024 12:59:01.842 [main] BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@7b3cbe6e
[DEBUG] 29-02-2024 12:59:01.842 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@7b3cbe6e
[DEBUG] 29-02-2024 12:59:01.843 [main] BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@7b3cbe6e
[DEBUG] 29-02-2024 12:59:01.845 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@177ede17
[DEBUG] 29-02-2024 12:59:01.845 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@17176b18
[DEBUG] 29-02-2024 12:59:01.849 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@4e4395c
[DEBUG] 29-02-2024 12:59:01.852 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@4e4395c
[DEBUG] 29-02-2024 12:59:01.852 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@1ab53860
[DEBUG] 29-02-2024 12:59:01.856 [main] BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@1ab53860
[DEBUG] 29-02-2024 12:59:01.858 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@1ab53860
[DEBUG] 29-02-2024 12:59:01.858 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@7b5ac347
[DEBUG] 29-02-2024 12:59:01.859 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@7b5ac347
[DEBUG] 29-02-2024 12:59:01.859 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@57b9389f
[DEBUG] 29-02-2024 12:59:01.859 [main] BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@57b9389f
[DEBUG] 29-02-2024 12:59:01.860 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@72b2c5ed
[DEBUG] 29-02-2024 12:59:01.860 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@72b2c5ed
[DEBUG] 29-02-2024 12:59:01.860 [main] BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@41f785e3
[DEBUG] 29-02-2024 12:59:01.860 [main] BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@41f785e3
[DEBUG] 29-02-2024 12:59:01.861 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@6c9a3661
[DEBUG] 29-02-2024 12:59:01.861 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@6c9a3661
[DEBUG] 29-02-2024 12:59:01.861 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@727986ad
[DEBUG] 29-02-2024 12:59:01.881 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@5da6b13d
[DEBUG] 29-02-2024 12:59:01.884 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@5da6b13d
[DEBUG] 29-02-2024 12:59:01.888 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@3b6c2be6
[DEBUG] 29-02-2024 12:59:01.888 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@25533bba
[DEBUG] 29-02-2024 12:59:01.889 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@26d0ece6
[DEBUG] 29-02-2024 12:59:01.890 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@100bba26
[DEBUG] 29-02-2024 12:59:01.890 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@4ae280da
[DEBUG] 29-02-2024 12:59:01.891 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@76d0ecd7
[DEBUG] 29-02-2024 12:59:01.891 [main] BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@57c69937
[DEBUG] 29-02-2024 12:59:01.894 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@1ad1c363
[DEBUG] 29-02-2024 12:59:01.899 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@446b64b3
[DEBUG] 29-02-2024 12:59:03.244 [main] DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@14e3d439) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@d85b399)
[DEBUG] 29-02-2024 12:59:03.251 [main] JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
[DEBUG] 29-02-2024 12:59:03.252 [main] JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 29-02-2024 12:59:03.278 [main] BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@31006a75
[DEBUG] 29-02-2024 12:59:03.279 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@31006a75
[DEBUG] 29-02-2024 12:59:03.279 [main] BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@5da6b13d`
[DEBUG] 29-02-2024 12:59:03.281 [main] JdbcTypeRegistry - addDescriptor(3100, NumericTypeDescriptor) replaced previous registration(org.hibernate.dialect.PostgreSQLIntervalSecondJdbcType@370225c7)
[DEBUG] 29-02-2024 12:59:03.296 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 29-02-2024 12:59:03.296 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 29-02-2024 12:59:03.297 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 29-02-2024 12:59:03.297 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 29-02-2024 12:59:03.297 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 29-02-2024 12:59:03.298 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 29-02-2024 12:59:03.299 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 29-02-2024 12:59:03.300 [main] BasicTypeRegistry - Adding type registration OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 29-02-2024 12:59:03.300 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 29-02-2024 12:59:03.304 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@75dc1c1c] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@5611bba]
[WARN ] 29-02-2024 12:59:03.881 [main] InFlightMetadataCollectorImpl - HHH000069: Duplicate generator name generator
[INFO ] 29-02-2024 12:59:04.078 [main] BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
[INFO ] 29-02-2024 12:59:06.940 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 29-02-2024 12:59:06.942 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@75dc1c1c] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@c3ca482]
[TRACE] 29-02-2024 12:59:06.948 [main] TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@c3ca482] for TypeConfiguration
[WARN ] 29-02-2024 12:59:08.345 [main] JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[INFO ] 29-02-2024 12:59:09.727 [main] Http11NioProtocol - Starting ProtocolHandler ["http-nio-8300"]
[INFO ] 29-02-2024 12:59:09.797 [main] TomcatWebServer - Tomcat started on port(s): 8300 (http) with context path '/users_products_api'
[INFO ] 29-02-2024 12:59:09.838 [main] TestSpringBootApplication - Started TestSpringBootApplication in 17.614 seconds (process running for 20.509)
[INFO ] 29-02-2024 12:59:17.251 [http-nio-8300-exec-1] [/users_products_api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[INFO ] 29-02-2024 12:59:17.251 [http-nio-8300-exec-1] DispatcherServlet - Initializing Servlet 'dispatcherServlet'
[INFO ] 29-02-2024 12:59:17.256 [http-nio-8300-exec-1] DispatcherServlet - Completed initialization in 4 ms
[DEBUG] 29-02-2024 12:59:17.860 [http-nio-8300-exec-1] SQL - select e1_0.id,e1_0.email,e1_0.login,e1_0.name,e1_0.password,p1_0.id_user,p1_0.id,p1_0.name,p1_0.page_image,p1_0.price,p1_0.raiting,p1_0.year_issue from users e1_0 left join products p1_0 on e1_0.id=p1_0.id_user where e1_0.id=?
[DEBUG] 29-02-2024 12:59:17.950 [http-nio-8300-exec-1] SQL - select nextval('products_id_seq')
[DEBUG] 29-02-2024 12:59:18.014 [http-nio-8300-exec-1] SQL - insert into products (name,page_image,price,raiting,id_user,year_issue,id) values (?,?,?,?,?,?,?)
[WARN ] 29-02-2024 13:23:38.239 [http-nio-8300-exec-2] DefaultHandlerExceptionResolver - Resolved [org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Cannot deserialize value of type `java.time.LocalDateTime` from String "2023-01-03 23:59:29": Failed to deserialize java.time.LocalDateTime: (java.time.format.DateTimeParseException) Text '2023-01-03 23:59:29' could not be parsed at index 10]
[TRACE] 29-02-2024 13:28:46.453 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@c3ca482] for TypeConfiguration
[DEBUG] 29-02-2024 13:28:46.454 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@35aab10b] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@c3ca482]
[INFO ] 29-02-2024 13:28:59.386 [background-preinit] Version - HV000001: Hibernate Validator 8.0.1.Final
[INFO ] 29-02-2024 13:28:59.572 [main] TestSpringBootApplication - Starting TestSpringBootApplication using Java 17.0.10 with PID 1666101 (/home/dima/backend_microservice/UserProductsMicroService/target/classes started by dima in /home/dima/backend_microservice/UserProductsMicroService)
[INFO ] 29-02-2024 13:28:59.582 [main] TestSpringBootApplication - No active profile set, falling back to 1 default profile: "default"
[INFO ] 29-02-2024 13:29:01.801 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO ] 29-02-2024 13:29:02.419 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 591 ms. Found 1 JPA repository interfaces.
[ERROR] 29-02-2024 13:29:04.297 [main] AprLifecycleListener - An incompatible version [1.2.23] of the Apache Tomcat Native library is installed, while Tomcat requires version [1.2.34]
[INFO ] 29-02-2024 13:29:05.495 [main] TomcatWebServer - Tomcat initialized with port(s): 8300 (http)
[INFO ] 29-02-2024 13:29:05.522 [main] Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8300"]
[INFO ] 29-02-2024 13:29:05.536 [main] StandardService - Starting service [Tomcat]
[INFO ] 29-02-2024 13:29:05.538 [main] StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.11]
[INFO ] 29-02-2024 13:29:07.212 [main] TldScanner - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
[INFO ] 29-02-2024 13:29:07.235 [main] [/users_products_api] - Initializing Spring embedded WebApplicationContext
[INFO ] 29-02-2024 13:29:07.242 [main] ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 7509 ms
[INFO ] 29-02-2024 13:29:07.854 [main] Version - HHH000412: Hibernate ORM core version 6.2.6.Final
[INFO ] 29-02-2024 13:29:07.861 [main] Environment - HHH000406: Using bytecode reflection optimizer
[DEBUG] 29-02-2024 13:29:08.429 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@482ba4b1
[DEBUG] 29-02-2024 13:29:08.430 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@482ba4b1
[DEBUG] 29-02-2024 13:29:08.431 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@482ba4b1
[DEBUG] 29-02-2024 13:29:08.431 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@307af381
[DEBUG] 29-02-2024 13:29:08.432 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@307af381
[DEBUG] 29-02-2024 13:29:08.433 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@1510b9a2
[DEBUG] 29-02-2024 13:29:08.433 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@1510b9a2
[DEBUG] 29-02-2024 13:29:08.434 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@76a6f045
[DEBUG] 29-02-2024 13:29:08.434 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@76a6f045
[DEBUG] 29-02-2024 13:29:08.435 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@633ddc0c
[DEBUG] 29-02-2024 13:29:08.435 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@633ddc0c
[DEBUG] 29-02-2024 13:29:08.436 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@633ddc0c
[DEBUG] 29-02-2024 13:29:08.437 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@4bcdd11
[DEBUG] 29-02-2024 13:29:08.437 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@4bcdd11
[DEBUG] 29-02-2024 13:29:08.438 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@4bcdd11
[DEBUG] 29-02-2024 13:29:08.439 [main] BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@1471b98d
[DEBUG] 29-02-2024 13:29:08.440 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@1471b98d
[DEBUG] 29-02-2024 13:29:08.440 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@5514579e
[DEBUG] 29-02-2024 13:29:08.442 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@58c42c8c
[DEBUG] 29-02-2024 13:29:08.448 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@58c42c8c
[DEBUG] 29-02-2024 13:29:08.449 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@3af236d0
[DEBUG] 29-02-2024 13:29:08.450 [main] BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@23564dd2
[DEBUG] 29-02-2024 13:29:08.451 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@54895681
[DEBUG] 29-02-2024 13:29:08.451 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@54895681
[DEBUG] 29-02-2024 13:29:08.452 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@54895681
[DEBUG] 29-02-2024 13:29:08.452 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@2dd0a0d0
[DEBUG] 29-02-2024 13:29:08.453 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@2dd0a0d0
[DEBUG] 29-02-2024 13:29:08.453 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@2dd0a0d0
[DEBUG] 29-02-2024 13:29:08.454 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@6bf570c
[DEBUG] 29-02-2024 13:29:08.454 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@6bf570c
[DEBUG] 29-02-2024 13:29:08.455 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@6bf570c
[DEBUG] 29-02-2024 13:29:08.455 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@1796b2d4
[DEBUG] 29-02-2024 13:29:08.456 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@1796b2d4
[DEBUG] 29-02-2024 13:29:08.456 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@1796b2d4
[DEBUG] 29-02-2024 13:29:08.457 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@935d3f9
[DEBUG] 29-02-2024 13:29:08.458 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@935d3f9
[DEBUG] 29-02-2024 13:29:08.458 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@935d3f9
[DEBUG] 29-02-2024 13:29:08.459 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@214b342f
[DEBUG] 29-02-2024 13:29:08.460 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@214b342f
[DEBUG] 29-02-2024 13:29:08.460 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@5db0003d
[DEBUG] 29-02-2024 13:29:08.461 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@5db0003d
[DEBUG] 29-02-2024 13:29:08.462 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@7f12094d
[DEBUG] 29-02-2024 13:29:08.462 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@7f12094d
[DEBUG] 29-02-2024 13:29:08.463 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@7f12094d
[DEBUG] 29-02-2024 13:29:08.463 [main] BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@589fb74d
[DEBUG] 29-02-2024 13:29:08.464 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@200d1a3d
[DEBUG] 29-02-2024 13:29:08.465 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@200d1a3d
[DEBUG] 29-02-2024 13:29:08.466 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@7de147e9
[DEBUG] 29-02-2024 13:29:08.467 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@12567179
[DEBUG] 29-02-2024 13:29:08.467 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@12567179
[DEBUG] 29-02-2024 13:29:08.468 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@12567179
[DEBUG] 29-02-2024 13:29:08.468 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@37d699a1
[DEBUG] 29-02-2024 13:29:08.469 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@7f42b194
[DEBUG] 29-02-2024 13:29:08.469 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@8eb6f9a
[DEBUG] 29-02-2024 13:29:08.469 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@29170a47
[DEBUG] 29-02-2024 13:29:08.470 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@29170a47
[DEBUG] 29-02-2024 13:29:08.470 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@2a8f8555
[DEBUG] 29-02-2024 13:29:08.471 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@2a8f8555
[DEBUG] 29-02-2024 13:29:08.472 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@402b4f81
[DEBUG] 29-02-2024 13:29:08.472 [main] BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@13ef7fa1
[DEBUG] 29-02-2024 13:29:08.473 [main] BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@23b1aa9
[DEBUG] 29-02-2024 13:29:08.474 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@54489296
[DEBUG] 29-02-2024 13:29:08.474 [main] BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@4e8598d9
[DEBUG] 29-02-2024 13:29:08.476 [main] BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@267ff4df
[DEBUG] 29-02-2024 13:29:08.478 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@7c4b5ceb
[DEBUG] 29-02-2024 13:29:08.479 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@7c4b5ceb
[DEBUG] 29-02-2024 13:29:08.479 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@6c07add6
[DEBUG] 29-02-2024 13:29:08.480 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@6c07add6
[DEBUG] 29-02-2024 13:29:08.480 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@e26a3df
[DEBUG] 29-02-2024 13:29:08.481 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@e26a3df
[DEBUG] 29-02-2024 13:29:08.481 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@57a667c8
[DEBUG] 29-02-2024 13:29:08.500 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@57a667c8
[DEBUG] 29-02-2024 13:29:08.502 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@712cd5d3
[DEBUG] 29-02-2024 13:29:08.503 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@712cd5d3
[DEBUG] 29-02-2024 13:29:08.503 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2094bf3d
[DEBUG] 29-02-2024 13:29:08.504 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@1b17d8ab
[DEBUG] 29-02-2024 13:29:08.504 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@7f6b7426
[DEBUG] 29-02-2024 13:29:08.505 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@7f6b7426
[DEBUG] 29-02-2024 13:29:08.506 [main] BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@687eb455
[DEBUG] 29-02-2024 13:29:08.507 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@6d969330
[DEBUG] 29-02-2024 13:29:08.507 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4861cca9
[DEBUG] 29-02-2024 13:29:08.508 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@6c8f4bc7
[DEBUG] 29-02-2024 13:29:08.508 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@6c8f4bc7
[DEBUG] 29-02-2024 13:29:08.509 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@714e861f
[DEBUG] 29-02-2024 13:29:08.509 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@28989415
[DEBUG] 29-02-2024 13:29:08.510 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@6eda012b
[DEBUG] 29-02-2024 13:29:08.510 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@6eda012b
[DEBUG] 29-02-2024 13:29:08.510 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@781dbe44
[DEBUG] 29-02-2024 13:29:08.511 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@781dbe44
[DEBUG] 29-02-2024 13:29:08.511 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@7d66a126
[DEBUG] 29-02-2024 13:29:08.511 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@7d66a126
[DEBUG] 29-02-2024 13:29:08.512 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@7d66a126
[DEBUG] 29-02-2024 13:29:08.512 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@1132baa3
[DEBUG] 29-02-2024 13:29:08.512 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@1132baa3
[DEBUG] 29-02-2024 13:29:08.513 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@1132baa3
[DEBUG] 29-02-2024 13:29:08.513 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@2fdf22f7
[DEBUG] 29-02-2024 13:29:08.514 [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@3a2546d6
[DEBUG] 29-02-2024 13:29:08.515 [main] BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@7282af25
[DEBUG] 29-02-2024 13:29:08.516 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@7282af25
[DEBUG] 29-02-2024 13:29:08.516 [main] BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@7661e474
[DEBUG] 29-02-2024 13:29:08.516 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@7661e474
[DEBUG] 29-02-2024 13:29:08.517 [main] BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@7661e474
[DEBUG] 29-02-2024 13:29:08.517 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@20ffb8d5
[DEBUG] 29-02-2024 13:29:08.518 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@307c59ea
[DEBUG] 29-02-2024 13:29:08.518 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@57e03347
[DEBUG] 29-02-2024 13:29:08.518 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@57e03347
[DEBUG] 29-02-2024 13:29:08.519 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@2edb2f8b
[DEBUG] 29-02-2024 13:29:08.519 [main] BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@2edb2f8b
[DEBUG] 29-02-2024 13:29:08.519 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@2edb2f8b
[DEBUG] 29-02-2024 13:29:08.520 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@733f1395
[DEBUG] 29-02-2024 13:29:08.520 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@733f1395
[DEBUG] 29-02-2024 13:29:08.520 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@21dea711
[DEBUG] 29-02-2024 13:29:08.521 [main] BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@21dea711
[DEBUG] 29-02-2024 13:29:08.523 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@7772d266
[DEBUG] 29-02-2024 13:29:08.524 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@7772d266
[DEBUG] 29-02-2024 13:29:08.524 [main] BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@a21c74
[DEBUG] 29-02-2024 13:29:08.525 [main] BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@a21c74
[DEBUG] 29-02-2024 13:29:08.525 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@b8a144e
[DEBUG] 29-02-2024 13:29:08.526 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@b8a144e
[DEBUG] 29-02-2024 13:29:08.526 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@5fb8dc01
[DEBUG] 29-02-2024 13:29:08.545 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@6b5c134e
[DEBUG] 29-02-2024 13:29:08.546 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@6b5c134e
[DEBUG] 29-02-2024 13:29:08.549 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@ddffa6c
[DEBUG] 29-02-2024 13:29:08.549 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@42c54bad
[DEBUG] 29-02-2024 13:29:08.550 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@6bb4cc0e
[DEBUG] 29-02-2024 13:29:08.551 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@5cc1bf20
[DEBUG] 29-02-2024 13:29:08.551 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@2e3f324e
[DEBUG] 29-02-2024 13:29:08.551 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@46cf8c07
[DEBUG] 29-02-2024 13:29:08.552 [main] BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@b56ec6c
[DEBUG] 29-02-2024 13:29:08.552 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@5abf6a99
[DEBUG] 29-02-2024 13:29:08.552 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@dc59ec2
[DEBUG] 29-02-2024 13:29:10.560 [main] DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1eb906f3) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@58e02359)
[DEBUG] 29-02-2024 13:29:10.565 [main] JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
[DEBUG] 29-02-2024 13:29:10.566 [main] JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 29-02-2024 13:29:10.610 [main] BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@1fc1c7e
[DEBUG] 29-02-2024 13:29:10.611 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@1fc1c7e
[DEBUG] 29-02-2024 13:29:10.613 [main] BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@6b5c134e`
[DEBUG] 29-02-2024 13:29:10.617 [main] JdbcTypeRegistry - addDescriptor(3100, NumericTypeDescriptor) replaced previous registration(org.hibernate.dialect.PostgreSQLIntervalSecondJdbcType@6b8bdcc6)
[DEBUG] 29-02-2024 13:29:10.637 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 29-02-2024 13:29:10.638 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 29-02-2024 13:29:10.639 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 29-02-2024 13:29:10.639 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 29-02-2024 13:29:10.640 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 29-02-2024 13:29:10.641 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 29-02-2024 13:29:10.645 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 29-02-2024 13:29:10.646 [main] BasicTypeRegistry - Adding type registration OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 29-02-2024 13:29:10.647 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 29-02-2024 13:29:10.652 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@68d8eb4f] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@64757d56]
[WARN ] 29-02-2024 13:29:11.746 [main] InFlightMetadataCollectorImpl - HHH000069: Duplicate generator name generator
[INFO ] 29-02-2024 13:29:12.076 [main] BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
[INFO ] 29-02-2024 13:29:15.893 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 29-02-2024 13:29:15.894 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@68d8eb4f] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@748aa7dc]
[TRACE] 29-02-2024 13:29:15.901 [main] TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@748aa7dc] for TypeConfiguration
[WARN ] 29-02-2024 13:29:17.005 [main] JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[INFO ] 29-02-2024 13:29:17.949 [main] Http11NioProtocol - Starting ProtocolHandler ["http-nio-8300"]
[INFO ] 29-02-2024 13:29:18.014 [main] TomcatWebServer - Tomcat started on port(s): 8300 (http) with context path '/users_products_api'
[INFO ] 29-02-2024 13:29:18.048 [main] TestSpringBootApplication - Started TestSpringBootApplication in 19.707 seconds (process running for 23.438)
[INFO ] 29-02-2024 13:29:26.109 [http-nio-8300-exec-1] [/users_products_api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[INFO ] 29-02-2024 13:29:26.111 [http-nio-8300-exec-1] DispatcherServlet - Initializing Servlet 'dispatcherServlet'
[INFO ] 29-02-2024 13:29:26.115 [http-nio-8300-exec-1] DispatcherServlet - Completed initialization in 4 ms
[DEBUG] 29-02-2024 13:29:26.938 [http-nio-8300-exec-1] SQL - select e1_0.id,e1_0.email,e1_0.login,e1_0.name,e1_0.password,p1_0.id_user,p1_0.id,p1_0.name,p1_0.page_image,p1_0.price,p1_0.raiting,p1_0.year_issue from users e1_0 left join products p1_0 on e1_0.id=p1_0.id_user where e1_0.id=?
[TRACE] 29-02-2024 13:32:51.961 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@748aa7dc] for TypeConfiguration
[DEBUG] 29-02-2024 13:32:51.962 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@38442a7b] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@748aa7dc]
[INFO ] 29-02-2024 13:33:04.866 [background-preinit] Version - HV000001: Hibernate Validator 8.0.1.Final
[INFO ] 29-02-2024 13:33:05.110 [main] TestSpringBootApplication - Starting TestSpringBootApplication using Java 17.0.10 with PID 1668217 (/home/dima/backend_microservice/UserProductsMicroService/target/classes started by dima in /home/dima/backend_microservice/UserProductsMicroService)
[INFO ] 29-02-2024 13:33:05.129 [main] TestSpringBootApplication - No active profile set, falling back to 1 default profile: "default"
[INFO ] 29-02-2024 13:33:07.404 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO ] 29-02-2024 13:33:07.892 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 456 ms. Found 1 JPA repository interfaces.
[ERROR] 29-02-2024 13:33:09.927 [main] AprLifecycleListener - An incompatible version [1.2.23] of the Apache Tomcat Native library is installed, while Tomcat requires version [1.2.34]
[INFO ] 29-02-2024 13:33:11.123 [main] TomcatWebServer - Tomcat initialized with port(s): 8300 (http)
[INFO ] 29-02-2024 13:33:11.146 [main] Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8300"]
[INFO ] 29-02-2024 13:33:11.153 [main] StandardService - Starting service [Tomcat]
[INFO ] 29-02-2024 13:33:11.154 [main] StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.11]
[INFO ] 29-02-2024 13:33:12.356 [main] TldScanner - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
[INFO ] 29-02-2024 13:33:12.379 [main] [/users_products_api] - Initializing Spring embedded WebApplicationContext
[INFO ] 29-02-2024 13:33:12.386 [main] ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 6853 ms
[INFO ] 29-02-2024 13:33:12.926 [main] Version - HHH000412: Hibernate ORM core version 6.2.6.Final
[INFO ] 29-02-2024 13:33:12.933 [main] Environment - HHH000406: Using bytecode reflection optimizer
[DEBUG] 29-02-2024 13:33:13.442 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@1471b98d
[DEBUG] 29-02-2024 13:33:13.444 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@1471b98d
[DEBUG] 29-02-2024 13:33:13.445 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@1471b98d
[DEBUG] 29-02-2024 13:33:13.446 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@5514579e
[DEBUG] 29-02-2024 13:33:13.450 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@5514579e
[DEBUG] 29-02-2024 13:33:13.451 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@58c42c8c
[DEBUG] 29-02-2024 13:33:13.452 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@58c42c8c
[DEBUG] 29-02-2024 13:33:13.455 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@3af236d0
[DEBUG] 29-02-2024 13:33:13.457 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@3af236d0
[DEBUG] 29-02-2024 13:33:13.457 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@23564dd2
[DEBUG] 29-02-2024 13:33:13.459 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@23564dd2
[DEBUG] 29-02-2024 13:33:13.461 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@23564dd2
[DEBUG] 29-02-2024 13:33:13.461 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@54895681
[DEBUG] 29-02-2024 13:33:13.467 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@54895681
[DEBUG] 29-02-2024 13:33:13.467 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@54895681
[DEBUG] 29-02-2024 13:33:13.469 [main] BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@2dd0a0d0
[DEBUG] 29-02-2024 13:33:13.474 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@2dd0a0d0
[DEBUG] 29-02-2024 13:33:13.475 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@6bf570c
[DEBUG] 29-02-2024 13:33:13.476 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@1796b2d4
[DEBUG] 29-02-2024 13:33:13.476 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@1796b2d4
[DEBUG] 29-02-2024 13:33:13.477 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@935d3f9
[DEBUG] 29-02-2024 13:33:13.477 [main] BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@214b342f
[DEBUG] 29-02-2024 13:33:13.478 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@5db0003d
[DEBUG] 29-02-2024 13:33:13.478 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@5db0003d
[DEBUG] 29-02-2024 13:33:13.478 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@5db0003d
[DEBUG] 29-02-2024 13:33:13.480 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@7f12094d
[DEBUG] 29-02-2024 13:33:13.481 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@7f12094d
[DEBUG] 29-02-2024 13:33:13.482 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@7f12094d
[DEBUG] 29-02-2024 13:33:13.482 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@589fb74d
[DEBUG] 29-02-2024 13:33:13.484 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@589fb74d
[DEBUG] 29-02-2024 13:33:13.485 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@589fb74d
[DEBUG] 29-02-2024 13:33:13.485 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@200d1a3d
[DEBUG] 29-02-2024 13:33:13.485 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@200d1a3d
[DEBUG] 29-02-2024 13:33:13.486 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@200d1a3d
[DEBUG] 29-02-2024 13:33:13.488 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@7de147e9
[DEBUG] 29-02-2024 13:33:13.489 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@7de147e9
[DEBUG] 29-02-2024 13:33:13.493 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@7de147e9
[DEBUG] 29-02-2024 13:33:13.494 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@12567179
[DEBUG] 29-02-2024 13:33:13.494 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@12567179
[DEBUG] 29-02-2024 13:33:13.494 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@37d699a1
[DEBUG] 29-02-2024 13:33:13.494 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@37d699a1
[DEBUG] 29-02-2024 13:33:13.495 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@7f42b194
[DEBUG] 29-02-2024 13:33:13.495 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@7f42b194
[DEBUG] 29-02-2024 13:33:13.495 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@7f42b194
[DEBUG] 29-02-2024 13:33:13.496 [main] BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@8eb6f9a
[DEBUG] 29-02-2024 13:33:13.500 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@29170a47
[DEBUG] 29-02-2024 13:33:13.500 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@29170a47
[DEBUG] 29-02-2024 13:33:13.503 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@2a8f8555
[DEBUG] 29-02-2024 13:33:13.504 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@402b4f81
[DEBUG] 29-02-2024 13:33:13.508 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@402b4f81
[DEBUG] 29-02-2024 13:33:13.510 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@402b4f81
[DEBUG] 29-02-2024 13:33:13.511 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@13ef7fa1
[DEBUG] 29-02-2024 13:33:13.512 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@23b1aa9
[DEBUG] 29-02-2024 13:33:13.514 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@54489296
[DEBUG] 29-02-2024 13:33:13.515 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@4e8598d9
[DEBUG] 29-02-2024 13:33:13.517 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@4e8598d9
[DEBUG] 29-02-2024 13:33:13.520 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@267ff4df
[DEBUG] 29-02-2024 13:33:13.522 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@267ff4df
[DEBUG] 29-02-2024 13:33:13.522 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@7c4b5ceb
[DEBUG] 29-02-2024 13:33:13.523 [main] BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@6c07add6
[DEBUG] 29-02-2024 13:33:13.523 [main] BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@e26a3df
[DEBUG] 29-02-2024 13:33:13.525 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@57a667c8
[DEBUG] 29-02-2024 13:33:13.525 [main] BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@712cd5d3
[DEBUG] 29-02-2024 13:33:13.526 [main] BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@2094bf3d
[DEBUG] 29-02-2024 13:33:13.526 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@1b17d8ab
[DEBUG] 29-02-2024 13:33:13.527 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@1b17d8ab
[DEBUG] 29-02-2024 13:33:13.527 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@7f6b7426
[DEBUG] 29-02-2024 13:33:13.528 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@7f6b7426
[DEBUG] 29-02-2024 13:33:13.528 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@687eb455
[DEBUG] 29-02-2024 13:33:13.529 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@687eb455
[DEBUG] 29-02-2024 13:33:13.529 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@6d969330
[DEBUG] 29-02-2024 13:33:13.530 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@6d969330
[DEBUG] 29-02-2024 13:33:13.530 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@4861cca9
[DEBUG] 29-02-2024 13:33:13.531 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@4861cca9
[DEBUG] 29-02-2024 13:33:13.531 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@6c8f4bc7
[DEBUG] 29-02-2024 13:33:13.531 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@714e861f
[DEBUG] 29-02-2024 13:33:13.532 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@28989415
[DEBUG] 29-02-2024 13:33:13.532 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@28989415
[DEBUG] 29-02-2024 13:33:13.533 [main] BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@6eda012b
[DEBUG] 29-02-2024 13:33:13.533 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@781dbe44
[DEBUG] 29-02-2024 13:33:13.534 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@7d66a126
[DEBUG] 29-02-2024 13:33:13.534 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@1132baa3
[DEBUG] 29-02-2024 13:33:13.535 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@1132baa3
[DEBUG] 29-02-2024 13:33:13.535 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2fdf22f7
[DEBUG] 29-02-2024 13:33:13.535 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3a2546d6
[DEBUG] 29-02-2024 13:33:13.536 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@7282af25
[DEBUG] 29-02-2024 13:33:13.536 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@7282af25
[DEBUG] 29-02-2024 13:33:13.536 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@7661e474
[DEBUG] 29-02-2024 13:33:13.537 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@7661e474
[DEBUG] 29-02-2024 13:33:13.537 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@20ffb8d5
[DEBUG] 29-02-2024 13:33:13.538 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@20ffb8d5
[DEBUG] 29-02-2024 13:33:13.539 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@20ffb8d5
[DEBUG] 29-02-2024 13:33:13.539 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@307c59ea
[DEBUG] 29-02-2024 13:33:13.539 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@307c59ea
[DEBUG] 29-02-2024 13:33:13.540 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@307c59ea
[DEBUG] 29-02-2024 13:33:13.540 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@57e03347
[DEBUG] 29-02-2024 13:33:13.541 [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@2edb2f8b
[DEBUG] 29-02-2024 13:33:13.541 [main] BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@733f1395
[DEBUG] 29-02-2024 13:33:13.542 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@733f1395
[DEBUG] 29-02-2024 13:33:13.542 [main] BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@21dea711
[DEBUG] 29-02-2024 13:33:13.542 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@21dea711
[DEBUG] 29-02-2024 13:33:13.543 [main] BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@21dea711
[DEBUG] 29-02-2024 13:33:13.543 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@7772d266
[DEBUG] 29-02-2024 13:33:13.544 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@a21c74
[DEBUG] 29-02-2024 13:33:13.544 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@b8a144e
[DEBUG] 29-02-2024 13:33:13.545 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@b8a144e
[DEBUG] 29-02-2024 13:33:13.546 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@5fb8dc01
[DEBUG] 29-02-2024 13:33:13.546 [main] BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@5fb8dc01
[DEBUG] 29-02-2024 13:33:13.546 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@5fb8dc01
[DEBUG] 29-02-2024 13:33:13.547 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@3e38c472
[DEBUG] 29-02-2024 13:33:13.547 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@3e38c472
[DEBUG] 29-02-2024 13:33:13.548 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@2ee92e7d
[DEBUG] 29-02-2024 13:33:13.548 [main] BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@2ee92e7d
[DEBUG] 29-02-2024 13:33:13.549 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@759a678a
[DEBUG] 29-02-2024 13:33:13.550 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@759a678a
[DEBUG] 29-02-2024 13:33:13.550 [main] BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@6cdbe5ec
[DEBUG] 29-02-2024 13:33:13.550 [main] BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@6cdbe5ec
[DEBUG] 29-02-2024 13:33:13.551 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@14b8a751
[DEBUG] 29-02-2024 13:33:13.551 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@14b8a751
[DEBUG] 29-02-2024 13:33:13.552 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@7345f97d
[DEBUG] 29-02-2024 13:33:13.567 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@615b5480
[DEBUG] 29-02-2024 13:33:13.567 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@615b5480
[DEBUG] 29-02-2024 13:33:13.571 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@b56ec6c
[DEBUG] 29-02-2024 13:33:13.572 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@5abf6a99
[DEBUG] 29-02-2024 13:33:13.573 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@dc59ec2
[DEBUG] 29-02-2024 13:33:13.573 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@375084c9
[DEBUG] 29-02-2024 13:33:13.574 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@bd93bc3
[DEBUG] 29-02-2024 13:33:13.574 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@2a136383
[DEBUG] 29-02-2024 13:33:13.575 [main] BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@b01cb8d
[DEBUG] 29-02-2024 13:33:13.575 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@38c460e8
[DEBUG] 29-02-2024 13:33:13.575 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@7a814310
[DEBUG] 29-02-2024 13:33:14.976 [main] DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@46e388ec) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@53f495f0)
[DEBUG] 29-02-2024 13:33:14.981 [main] JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
[DEBUG] 29-02-2024 13:33:14.982 [main] JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 29-02-2024 13:33:15.006 [main] BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@6b8bdcc6
[DEBUG] 29-02-2024 13:33:15.006 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@6b8bdcc6
[DEBUG] 29-02-2024 13:33:15.006 [main] BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@615b5480`
[DEBUG] 29-02-2024 13:33:15.011 [main] JdbcTypeRegistry - addDescriptor(3100, NumericTypeDescriptor) replaced previous registration(org.hibernate.dialect.PostgreSQLIntervalSecondJdbcType@6248cfab)
[DEBUG] 29-02-2024 13:33:15.026 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 29-02-2024 13:33:15.026 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 29-02-2024 13:33:15.027 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 29-02-2024 13:33:15.027 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 29-02-2024 13:33:15.028 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 29-02-2024 13:33:15.029 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 29-02-2024 13:33:15.031 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 29-02-2024 13:33:15.032 [main] BasicTypeRegistry - Adding type registration OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 29-02-2024 13:33:15.032 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 29-02-2024 13:33:15.036 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@105dc04d] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@504b8705]
[WARN ] 29-02-2024 13:33:15.583 [main] InFlightMetadataCollectorImpl - HHH000069: Duplicate generator name generator
[INFO ] 29-02-2024 13:33:15.765 [main] BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
[INFO ] 29-02-2024 13:33:18.497 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 29-02-2024 13:33:18.498 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@105dc04d] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@638341b0]
[TRACE] 29-02-2024 13:33:18.505 [main] TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@638341b0] for TypeConfiguration
[WARN ] 29-02-2024 13:33:19.494 [main] JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[INFO ] 29-02-2024 13:33:20.393 [main] Http11NioProtocol - Starting ProtocolHandler ["http-nio-8300"]
[INFO ] 29-02-2024 13:33:20.480 [main] TomcatWebServer - Tomcat started on port(s): 8300 (http) with context path '/users_products_api'
[INFO ] 29-02-2024 13:33:20.513 [main] TestSpringBootApplication - Started TestSpringBootApplication in 17.284 seconds (process running for 21.033)
[INFO ] 29-02-2024 13:33:32.289 [http-nio-8300-exec-1] [/users_products_api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[INFO ] 29-02-2024 13:33:32.290 [http-nio-8300-exec-1] DispatcherServlet - Initializing Servlet 'dispatcherServlet'
[INFO ] 29-02-2024 13:33:32.293 [http-nio-8300-exec-1] DispatcherServlet - Completed initialization in 3 ms
[DEBUG] 29-02-2024 13:33:32.863 [http-nio-8300-exec-1] SQL - select e1_0.id,e1_0.email,e1_0.login,e1_0.name,e1_0.password,p1_0.id_user,p1_0.id,p1_0.name,p1_0.page_image,p1_0.price,p1_0.raiting,p1_0.year_issue from users e1_0 left join products p1_0 on e1_0.id=p1_0.id_user where e1_0.id=?
[DEBUG] 29-02-2024 13:33:32.990 [http-nio-8300-exec-1] SQL - select nextval('products_id_seq')
[DEBUG] 29-02-2024 13:33:33.042 [http-nio-8300-exec-1] SQL - insert into products (name,page_image,price,raiting,id_user,year_issue,id) values (?,?,?,?,?,?,?)
[TRACE] 29-02-2024 13:37:23.804 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@638341b0] for TypeConfiguration
[DEBUG] 29-02-2024 13:37:23.804 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@7b40c31e] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@638341b0]
[INFO ] 29-02-2024 13:37:42.318 [background-preinit] Version - HV000001: Hibernate Validator 8.0.1.Final
[INFO ] 29-02-2024 13:37:42.452 [main] TestCRUDUserProducts - Starting TestCRUDUserProducts using Java 17.0.10 with PID 1670670 (started by dima in /home/dima/backend_microservice/UserProductsMicroService)
[INFO ] 29-02-2024 13:37:42.463 [main] TestCRUDUserProducts - No active profile set, falling back to 1 default profile: "default"
[INFO ] 29-02-2024 13:37:43.723 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO ] 29-02-2024 13:37:44.166 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 421 ms. Found 1 JPA repository interfaces.
[INFO ] 29-02-2024 13:37:48.020 [main] Version - HHH000412: Hibernate ORM core version 6.2.6.Final
[INFO ] 29-02-2024 13:37:48.031 [main] Environment - HHH000406: Using bytecode reflection optimizer
[DEBUG] 29-02-2024 13:37:48.532 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@6ace919c
[DEBUG] 29-02-2024 13:37:48.534 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@6ace919c
[DEBUG] 29-02-2024 13:37:48.535 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@6ace919c
[DEBUG] 29-02-2024 13:37:48.536 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@4005e485
[DEBUG] 29-02-2024 13:37:48.537 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@4005e485
[DEBUG] 29-02-2024 13:37:48.538 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@5f5c187d
[DEBUG] 29-02-2024 13:37:48.539 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@5f5c187d
[DEBUG] 29-02-2024 13:37:48.540 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@464400b3
[DEBUG] 29-02-2024 13:37:48.541 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@464400b3
[DEBUG] 29-02-2024 13:37:48.542 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@58182b96
[DEBUG] 29-02-2024 13:37:48.543 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@58182b96
[DEBUG] 29-02-2024 13:37:48.544 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@58182b96
[DEBUG] 29-02-2024 13:37:48.545 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@37d6dddc
[DEBUG] 29-02-2024 13:37:48.546 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@37d6dddc
[DEBUG] 29-02-2024 13:37:48.546 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@37d6dddc
[DEBUG] 29-02-2024 13:37:48.547 [main] BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@8f6b4ab
[DEBUG] 29-02-2024 13:37:48.548 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@8f6b4ab
[DEBUG] 29-02-2024 13:37:48.549 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@6e517c9e
[DEBUG] 29-02-2024 13:37:48.550 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@770cae59
[DEBUG] 29-02-2024 13:37:48.551 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@770cae59
[DEBUG] 29-02-2024 13:37:48.551 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@76b5a559
[DEBUG] 29-02-2024 13:37:48.552 [main] BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@4bdb04c8
[DEBUG] 29-02-2024 13:37:48.553 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@2e8b24a1
[DEBUG] 29-02-2024 13:37:48.554 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@2e8b24a1
[DEBUG] 29-02-2024 13:37:48.555 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@2e8b24a1
[DEBUG] 29-02-2024 13:37:48.555 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@3ce7394f
[DEBUG] 29-02-2024 13:37:48.556 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@3ce7394f
[DEBUG] 29-02-2024 13:37:48.558 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@3ce7394f
[DEBUG] 29-02-2024 13:37:48.559 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@6723cce7
[DEBUG] 29-02-2024 13:37:48.559 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@6723cce7
[DEBUG] 29-02-2024 13:37:48.560 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@6723cce7
[DEBUG] 29-02-2024 13:37:48.561 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@74cd798f
[DEBUG] 29-02-2024 13:37:48.562 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@74cd798f
[DEBUG] 29-02-2024 13:37:48.562 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@74cd798f
[DEBUG] 29-02-2024 13:37:48.563 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@314f59b
[DEBUG] 29-02-2024 13:37:48.564 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@314f59b
[DEBUG] 29-02-2024 13:37:48.565 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@314f59b
[DEBUG] 29-02-2024 13:37:48.566 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@63c99f7
[DEBUG] 29-02-2024 13:37:48.566 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@63c99f7
[DEBUG] 29-02-2024 13:37:48.567 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@7f012923
[DEBUG] 29-02-2024 13:37:48.568 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@7f012923
[DEBUG] 29-02-2024 13:37:48.568 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@601f264d
[DEBUG] 29-02-2024 13:37:48.569 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@601f264d
[DEBUG] 29-02-2024 13:37:48.570 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@601f264d
[DEBUG] 29-02-2024 13:37:48.571 [main] BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@4403bff8
[DEBUG] 29-02-2024 13:37:48.572 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@261275ae
[DEBUG] 29-02-2024 13:37:48.572 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@261275ae
[DEBUG] 29-02-2024 13:37:48.573 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@502c087e
[DEBUG] 29-02-2024 13:37:48.574 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@49986178
[DEBUG] 29-02-2024 13:37:48.574 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@49986178
[DEBUG] 29-02-2024 13:37:48.575 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@49986178
[DEBUG] 29-02-2024 13:37:48.575 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@10bdfbcc
[DEBUG] 29-02-2024 13:37:48.576 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@25b74370
[DEBUG] 29-02-2024 13:37:48.577 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@15e8c040
[DEBUG] 29-02-2024 13:37:48.577 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@1f71e024
[DEBUG] 29-02-2024 13:37:48.578 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@1f71e024
[DEBUG] 29-02-2024 13:37:48.579 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@60ed0b9d
[DEBUG] 29-02-2024 13:37:48.579 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@60ed0b9d
[DEBUG] 29-02-2024 13:37:48.580 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@7f5e6833
[DEBUG] 29-02-2024 13:37:48.581 [main] BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@2c674d58
[DEBUG] 29-02-2024 13:37:48.581 [main] BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@3c07e830
[DEBUG] 29-02-2024 13:37:48.582 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@34beadce
[DEBUG] 29-02-2024 13:37:48.583 [main] BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@382d549a
[DEBUG] 29-02-2024 13:37:48.597 [main] BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@2eb6d34a
[DEBUG] 29-02-2024 13:37:48.598 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@2d73e8c4
[DEBUG] 29-02-2024 13:37:48.600 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@2d73e8c4
[DEBUG] 29-02-2024 13:37:48.602 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@6ce2e079
[DEBUG] 29-02-2024 13:37:48.603 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@6ce2e079
[DEBUG] 29-02-2024 13:37:48.603 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@3e39e0fb
[DEBUG] 29-02-2024 13:37:48.604 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@3e39e0fb
[DEBUG] 29-02-2024 13:37:48.604 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@260d48f5
[DEBUG] 29-02-2024 13:37:48.605 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@260d48f5
[DEBUG] 29-02-2024 13:37:48.606 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@148ab138
[DEBUG] 29-02-2024 13:37:48.610 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@148ab138
[DEBUG] 29-02-2024 13:37:48.611 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@6f106af8
[DEBUG] 29-02-2024 13:37:48.612 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@1edf71d9
[DEBUG] 29-02-2024 13:37:48.626 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@52d9d817
[DEBUG] 29-02-2024 13:37:48.627 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@52d9d817
[DEBUG] 29-02-2024 13:37:48.628 [main] BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@131ba005
[DEBUG] 29-02-2024 13:37:48.628 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@7f305f34
[DEBUG] 29-02-2024 13:37:48.629 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@1a84a8b2
[DEBUG] 29-02-2024 13:37:48.630 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@601d295
[DEBUG] 29-02-2024 13:37:48.631 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@601d295
[DEBUG] 29-02-2024 13:37:48.631 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@485451d8
[DEBUG] 29-02-2024 13:37:48.632 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@35e07e19
[DEBUG] 29-02-2024 13:37:48.632 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@a1e912f
[DEBUG] 29-02-2024 13:37:48.633 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@a1e912f
[DEBUG] 29-02-2024 13:37:48.633 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@2036f83
[DEBUG] 29-02-2024 13:37:48.634 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@2036f83
[DEBUG] 29-02-2024 13:37:48.634 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@68b3248a
[DEBUG] 29-02-2024 13:37:48.635 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@68b3248a
[DEBUG] 29-02-2024 13:37:48.635 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@68b3248a
[DEBUG] 29-02-2024 13:37:48.636 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@5e158f33
[DEBUG] 29-02-2024 13:37:48.637 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@5e158f33
[DEBUG] 29-02-2024 13:37:48.637 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@5e158f33
[DEBUG] 29-02-2024 13:37:48.638 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@20fcea37
[DEBUG] 29-02-2024 13:37:48.639 [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@399af6dc
[DEBUG] 29-02-2024 13:37:48.639 [main] BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@48fc0211
[DEBUG] 29-02-2024 13:37:48.640 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@48fc0211
[DEBUG] 29-02-2024 13:37:48.640 [main] BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@3ae2702a
[DEBUG] 29-02-2024 13:37:48.641 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@3ae2702a
[DEBUG] 29-02-2024 13:37:48.642 [main] BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@3ae2702a
[DEBUG] 29-02-2024 13:37:48.646 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@7d088813
[DEBUG] 29-02-2024 13:37:48.647 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@134abd78
[DEBUG] 29-02-2024 13:37:48.647 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@3b0ed98a
[DEBUG] 29-02-2024 13:37:48.648 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@3b0ed98a
[DEBUG] 29-02-2024 13:37:48.649 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@12448de1
[DEBUG] 29-02-2024 13:37:48.649 [main] BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@12448de1
[DEBUG] 29-02-2024 13:37:48.650 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@12448de1
[DEBUG] 29-02-2024 13:37:48.650 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@2b35c7aa
[DEBUG] 29-02-2024 13:37:48.651 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@2b35c7aa
[DEBUG] 29-02-2024 13:37:48.652 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@6dd20ec9
[DEBUG] 29-02-2024 13:37:48.653 [main] BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@6dd20ec9
[DEBUG] 29-02-2024 13:37:48.653 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@20dd5870
[DEBUG] 29-02-2024 13:37:48.654 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@20dd5870
[DEBUG] 29-02-2024 13:37:48.655 [main] BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@1640f20f
[DEBUG] 29-02-2024 13:37:48.655 [main] BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@1640f20f
[DEBUG] 29-02-2024 13:37:48.656 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@134d7ffa
[DEBUG] 29-02-2024 13:37:48.656 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@134d7ffa
[DEBUG] 29-02-2024 13:37:48.658 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@6e948f1c
[DEBUG] 29-02-2024 13:37:48.676 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@60f662bd
[DEBUG] 29-02-2024 13:37:48.677 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@60f662bd
[DEBUG] 29-02-2024 13:37:48.681 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@29fcfc54
[DEBUG] 29-02-2024 13:37:48.682 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@353b0719
[DEBUG] 29-02-2024 13:37:48.683 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@2a4e939a
[DEBUG] 29-02-2024 13:37:48.683 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@110620d
[DEBUG] 29-02-2024 13:37:48.684 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@4f402027
[DEBUG] 29-02-2024 13:37:48.684 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@22aee519
[DEBUG] 29-02-2024 13:37:48.685 [main] BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@7c226095
[DEBUG] 29-02-2024 13:37:48.686 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@7ea07516
[DEBUG] 29-02-2024 13:37:48.686 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@30af23fd
[DEBUG] 29-02-2024 13:37:50.959 [main] DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6339e604) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4f8900b0)
[DEBUG] 29-02-2024 13:37:50.976 [main] JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
[DEBUG] 29-02-2024 13:37:50.977 [main] JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 29-02-2024 13:37:51.018 [main] BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@2a661215
[DEBUG] 29-02-2024 13:37:51.019 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@2a661215
[DEBUG] 29-02-2024 13:37:51.019 [main] BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@60f662bd`
[DEBUG] 29-02-2024 13:37:51.025 [main] JdbcTypeRegistry - addDescriptor(3100, NumericTypeDescriptor) replaced previous registration(org.hibernate.dialect.PostgreSQLIntervalSecondJdbcType@49cceb19)
[DEBUG] 29-02-2024 13:37:51.044 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 29-02-2024 13:37:51.045 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 29-02-2024 13:37:51.045 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 29-02-2024 13:37:51.046 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 29-02-2024 13:37:51.047 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 29-02-2024 13:37:51.047 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 29-02-2024 13:37:51.050 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 29-02-2024 13:37:51.059 [main] BasicTypeRegistry - Adding type registration OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 29-02-2024 13:37:51.060 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 29-02-2024 13:37:51.065 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2b3b1124] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@54286339]
[WARN ] 29-02-2024 13:37:51.583 [main] InFlightMetadataCollectorImpl - HHH000069: Duplicate generator name generator
[INFO ] 29-02-2024 13:37:51.788 [main] BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
[INFO ] 29-02-2024 13:37:54.871 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 29-02-2024 13:37:54.878 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2b3b1124] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@1885905b]
[TRACE] 29-02-2024 13:37:54.895 [main] TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@1885905b] for TypeConfiguration
[INFO ] 29-02-2024 13:37:59.167 [main] SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
[INFO ] 29-02-2024 13:37:59.168 [main] TestDispatcherServlet - Initializing Servlet ''
[INFO ] 29-02-2024 13:37:59.179 [main] TestDispatcherServlet - Completed initialization in 3 ms
[INFO ] 29-02-2024 13:37:59.967 [main] TestCRUDUserProducts - Started TestCRUDUserProducts in 18.597 seconds (process running for 22.297)
[TRACE] 29-02-2024 13:38:01.093 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@1885905b] for TypeConfiguration
[DEBUG] 29-02-2024 13:38:01.094 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@7a4c0d59] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@1885905b]
[INFO ] 29-02-2024 16:04:11.991 [background-preinit] Version - HV000001: Hibernate Validator 8.0.1.Final
[INFO ] 29-02-2024 16:04:12.082 [main] TestSpringBootApplication - Starting TestSpringBootApplication using Java 17.0.10 with PID 1743719 (/home/dima/backend_microservice/UserProductsMicroService/target/classes started by dima in /home/dima/backend_microservice/UserProductsMicroService)
[INFO ] 29-02-2024 16:04:12.095 [main] TestSpringBootApplication - No active profile set, falling back to 1 default profile: "default"
[INFO ] 29-02-2024 16:04:14.006 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO ] 29-02-2024 16:04:14.439 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 410 ms. Found 1 JPA repository interfaces.
[ERROR] 29-02-2024 16:04:16.063 [main] AprLifecycleListener - An incompatible version [1.2.23] of the Apache Tomcat Native library is installed, while Tomcat requires version [1.2.34]
[INFO ] 29-02-2024 16:04:16.943 [main] TomcatWebServer - Tomcat initialized with port(s): 8300 (http)
[INFO ] 29-02-2024 16:04:16.965 [main] Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8300"]
[INFO ] 29-02-2024 16:04:16.973 [main] StandardService - Starting service [Tomcat]
[INFO ] 29-02-2024 16:04:16.976 [main] StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.11]
[INFO ] 29-02-2024 16:04:18.176 [main] TldScanner - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
[INFO ] 29-02-2024 16:04:18.195 [main] [/users_products_api] - Initializing Spring embedded WebApplicationContext
[INFO ] 29-02-2024 16:04:18.200 [main] ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 5896 ms
[INFO ] 29-02-2024 16:04:18.582 [main] Version - HHH000412: Hibernate ORM core version 6.2.6.Final
[INFO ] 29-02-2024 16:04:18.589 [main] Environment - HHH000406: Using bytecode reflection optimizer
[DEBUG] 29-02-2024 16:04:19.264 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@687eb455
[DEBUG] 29-02-2024 16:04:19.266 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@687eb455
[DEBUG] 29-02-2024 16:04:19.266 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@687eb455
[DEBUG] 29-02-2024 16:04:19.267 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@6d969330
[DEBUG] 29-02-2024 16:04:19.268 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@6d969330
[DEBUG] 29-02-2024 16:04:19.268 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@4861cca9
[DEBUG] 29-02-2024 16:04:19.269 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@4861cca9
[DEBUG] 29-02-2024 16:04:19.269 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@6c8f4bc7
[DEBUG] 29-02-2024 16:04:19.270 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@6c8f4bc7
[DEBUG] 29-02-2024 16:04:19.270 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@714e861f
[DEBUG] 29-02-2024 16:04:19.271 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@714e861f
[DEBUG] 29-02-2024 16:04:19.271 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@714e861f
[DEBUG] 29-02-2024 16:04:19.272 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@28989415
[DEBUG] 29-02-2024 16:04:19.272 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@28989415
[DEBUG] 29-02-2024 16:04:19.273 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@28989415
[DEBUG] 29-02-2024 16:04:19.273 [main] BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@6eda012b
[DEBUG] 29-02-2024 16:04:19.274 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@6eda012b
[DEBUG] 29-02-2024 16:04:19.275 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@781dbe44
[DEBUG] 29-02-2024 16:04:19.276 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@7d66a126
[DEBUG] 29-02-2024 16:04:19.276 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@7d66a126
[DEBUG] 29-02-2024 16:04:19.277 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@1132baa3
[DEBUG] 29-02-2024 16:04:19.277 [main] BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@2fdf22f7
[DEBUG] 29-02-2024 16:04:19.279 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@3a2546d6
[DEBUG] 29-02-2024 16:04:19.280 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@3a2546d6
[DEBUG] 29-02-2024 16:04:19.280 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@3a2546d6
[DEBUG] 29-02-2024 16:04:19.283 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@7282af25
[DEBUG] 29-02-2024 16:04:19.283 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@7282af25
[DEBUG] 29-02-2024 16:04:19.284 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@7282af25
[DEBUG] 29-02-2024 16:04:19.284 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@7661e474
[DEBUG] 29-02-2024 16:04:19.285 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@7661e474
[DEBUG] 29-02-2024 16:04:19.286 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@7661e474
[DEBUG] 29-02-2024 16:04:19.286 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@20ffb8d5
[DEBUG] 29-02-2024 16:04:19.287 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@20ffb8d5
[DEBUG] 29-02-2024 16:04:19.287 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@20ffb8d5
[DEBUG] 29-02-2024 16:04:19.288 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@307c59ea
[DEBUG] 29-02-2024 16:04:19.288 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@307c59ea
[DEBUG] 29-02-2024 16:04:19.289 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@307c59ea
[DEBUG] 29-02-2024 16:04:19.290 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@57e03347
[DEBUG] 29-02-2024 16:04:19.290 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@57e03347
[DEBUG] 29-02-2024 16:04:19.291 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@2edb2f8b
[DEBUG] 29-02-2024 16:04:19.291 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@2edb2f8b
[DEBUG] 29-02-2024 16:04:19.292 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@733f1395
[DEBUG] 29-02-2024 16:04:19.295 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@733f1395
[DEBUG] 29-02-2024 16:04:19.295 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@733f1395
[DEBUG] 29-02-2024 16:04:19.296 [main] BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@21dea711
[DEBUG] 29-02-2024 16:04:19.297 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@7772d266
[DEBUG] 29-02-2024 16:04:19.297 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@7772d266
[DEBUG] 29-02-2024 16:04:19.298 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@a21c74
[DEBUG] 29-02-2024 16:04:19.298 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@b8a144e
[DEBUG] 29-02-2024 16:04:19.299 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@b8a144e
[DEBUG] 29-02-2024 16:04:19.299 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@b8a144e
[DEBUG] 29-02-2024 16:04:19.300 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@5fb8dc01
[DEBUG] 29-02-2024 16:04:19.300 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@3e38c472
[DEBUG] 29-02-2024 16:04:19.300 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@2ee92e7d
[DEBUG] 29-02-2024 16:04:19.301 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@759a678a
[DEBUG] 29-02-2024 16:04:19.302 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@759a678a
[DEBUG] 29-02-2024 16:04:19.302 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@6cdbe5ec
[DEBUG] 29-02-2024 16:04:19.303 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@6cdbe5ec
[DEBUG] 29-02-2024 16:04:19.303 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@14b8a751
[DEBUG] 29-02-2024 16:04:19.303 [main] BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@7345f97d
[DEBUG] 29-02-2024 16:04:19.304 [main] BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@554566a8
[DEBUG] 29-02-2024 16:04:19.304 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@66020d69
[DEBUG] 29-02-2024 16:04:19.305 [main] BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@3751acd7
[DEBUG] 29-02-2024 16:04:19.305 [main] BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@6b832551
[DEBUG] 29-02-2024 16:04:19.306 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@150d6eaf
[DEBUG] 29-02-2024 16:04:19.306 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@150d6eaf
[DEBUG] 29-02-2024 16:04:19.307 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@63124022
[DEBUG] 29-02-2024 16:04:19.308 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@63124022
[DEBUG] 29-02-2024 16:04:19.308 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@591f6f83
[DEBUG] 29-02-2024 16:04:19.309 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@591f6f83
[DEBUG] 29-02-2024 16:04:19.310 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@2b44605c
[DEBUG] 29-02-2024 16:04:19.311 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@2b44605c
[DEBUG] 29-02-2024 16:04:19.311 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@55421b8d
[DEBUG] 29-02-2024 16:04:19.312 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@55421b8d
[DEBUG] 29-02-2024 16:04:19.312 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@24a04257
[DEBUG] 29-02-2024 16:04:19.312 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@6615237
[DEBUG] 29-02-2024 16:04:19.313 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@eaf8427
[DEBUG] 29-02-2024 16:04:19.314 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@eaf8427
[DEBUG] 29-02-2024 16:04:19.314 [main] BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@4bf4680c
[DEBUG] 29-02-2024 16:04:19.315 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@6d6039df
[DEBUG] 29-02-2024 16:04:19.315 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@611c3eae
[DEBUG] 29-02-2024 16:04:19.315 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@13e00016
[DEBUG] 29-02-2024 16:04:19.316 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@13e00016
[DEBUG] 29-02-2024 16:04:19.316 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@7b3cbe6e
[DEBUG] 29-02-2024 16:04:19.317 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@177ede17
[DEBUG] 29-02-2024 16:04:19.317 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@17176b18
[DEBUG] 29-02-2024 16:04:19.318 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@17176b18
[DEBUG] 29-02-2024 16:04:19.318 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@4e4395c
[DEBUG] 29-02-2024 16:04:19.319 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@4e4395c
[DEBUG] 29-02-2024 16:04:19.319 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@1ab53860
[DEBUG] 29-02-2024 16:04:19.319 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@1ab53860
[DEBUG] 29-02-2024 16:04:19.320 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@1ab53860
[DEBUG] 29-02-2024 16:04:19.320 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@7b5ac347
[DEBUG] 29-02-2024 16:04:19.321 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@7b5ac347
[DEBUG] 29-02-2024 16:04:19.321 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@7b5ac347
[DEBUG] 29-02-2024 16:04:19.321 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@57b9389f
[DEBUG] 29-02-2024 16:04:19.322 [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@72b2c5ed
[DEBUG] 29-02-2024 16:04:19.322 [main] BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@41f785e3
[DEBUG] 29-02-2024 16:04:19.323 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@41f785e3
[DEBUG] 29-02-2024 16:04:19.323 [main] BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@6c9a3661
[DEBUG] 29-02-2024 16:04:19.324 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@6c9a3661
[DEBUG] 29-02-2024 16:04:19.324 [main] BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@6c9a3661
[DEBUG] 29-02-2024 16:04:19.324 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@727986ad
[DEBUG] 29-02-2024 16:04:19.325 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@1600a8a2
[DEBUG] 29-02-2024 16:04:19.326 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@6b25ef1c
[DEBUG] 29-02-2024 16:04:19.326 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@6b25ef1c
[DEBUG] 29-02-2024 16:04:19.327 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@56b1e527
[DEBUG] 29-02-2024 16:04:19.327 [main] BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@56b1e527
[DEBUG] 29-02-2024 16:04:19.328 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@56b1e527
[DEBUG] 29-02-2024 16:04:19.328 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@68c34db2
[DEBUG] 29-02-2024 16:04:19.330 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@68c34db2
[DEBUG] 29-02-2024 16:04:19.330 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@7b95bdb0
[DEBUG] 29-02-2024 16:04:19.331 [main] BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@7b95bdb0
[DEBUG] 29-02-2024 16:04:19.331 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@3f0ce0d1
[DEBUG] 29-02-2024 16:04:19.332 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@3f0ce0d1
[DEBUG] 29-02-2024 16:04:19.332 [main] BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@664db2ca
[DEBUG] 29-02-2024 16:04:19.333 [main] BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@664db2ca
[DEBUG] 29-02-2024 16:04:19.333 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@1491cd6c
[DEBUG] 29-02-2024 16:04:19.334 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@1491cd6c
[DEBUG] 29-02-2024 16:04:19.334 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@423f8a73
[DEBUG] 29-02-2024 16:04:19.351 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@685d7ba5
[DEBUG] 29-02-2024 16:04:19.352 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@685d7ba5
[DEBUG] 29-02-2024 16:04:19.355 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@35ac9ebd
[DEBUG] 29-02-2024 16:04:19.356 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@56c0a61e
[DEBUG] 29-02-2024 16:04:19.356 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@421ead7e
[DEBUG] 29-02-2024 16:04:19.357 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@5dcf0772
[DEBUG] 29-02-2024 16:04:19.357 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@c472300
[DEBUG] 29-02-2024 16:04:19.357 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@5f6494c0
[DEBUG] 29-02-2024 16:04:19.358 [main] BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@6826b70f
[DEBUG] 29-02-2024 16:04:19.358 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@4df7d9ee
[DEBUG] 29-02-2024 16:04:19.359 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@781dac73
[DEBUG] 29-02-2024 16:04:20.949 [main] DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7d6c4079) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@606b53a3)
[DEBUG] 29-02-2024 16:04:20.955 [main] JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
[DEBUG] 29-02-2024 16:04:20.955 [main] JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 29-02-2024 16:04:20.975 [main] BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@1e29a81a
[DEBUG] 29-02-2024 16:04:20.976 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@1e29a81a
[DEBUG] 29-02-2024 16:04:20.977 [main] BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@685d7ba5`
[DEBUG] 29-02-2024 16:04:20.980 [main] JdbcTypeRegistry - addDescriptor(3100, NumericTypeDescriptor) replaced previous registration(org.hibernate.dialect.PostgreSQLIntervalSecondJdbcType@1b94c789)
[DEBUG] 29-02-2024 16:04:20.996 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 29-02-2024 16:04:20.996 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 29-02-2024 16:04:20.997 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 29-02-2024 16:04:20.997 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 29-02-2024 16:04:20.998 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 29-02-2024 16:04:20.999 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 29-02-2024 16:04:21.001 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 29-02-2024 16:04:21.002 [main] BasicTypeRegistry - Adding type registration OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 29-02-2024 16:04:21.002 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 29-02-2024 16:04:21.011 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@29d2fa84] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@4540c7]
[WARN ] 29-02-2024 16:04:21.549 [main] InFlightMetadataCollectorImpl - HHH000069: Duplicate generator name generator
[INFO ] 29-02-2024 16:04:21.714 [main] BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
[INFO ] 29-02-2024 16:04:24.360 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 29-02-2024 16:04:24.362 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@29d2fa84] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@1755aee6]
[TRACE] 29-02-2024 16:04:24.369 [main] TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@1755aee6] for TypeConfiguration
[WARN ] 29-02-2024 16:04:25.327 [main] JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[INFO ] 29-02-2024 16:04:26.372 [main] Http11NioProtocol - Starting ProtocolHandler ["http-nio-8300"]
[INFO ] 29-02-2024 16:04:26.447 [main] TomcatWebServer - Tomcat started on port(s): 8300 (http) with context path '/users_products_api'
[INFO ] 29-02-2024 16:04:26.479 [main] TestSpringBootApplication - Started TestSpringBootApplication in 15.519 seconds (process running for 19.24)
[INFO ] 29-02-2024 16:07:27.523 [http-nio-8300-exec-1] [/users_products_api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[INFO ] 29-02-2024 16:07:27.524 [http-nio-8300-exec-1] DispatcherServlet - Initializing Servlet 'dispatcherServlet'
[INFO ] 29-02-2024 16:07:27.528 [http-nio-8300-exec-1] DispatcherServlet - Completed initialization in 4 ms
[DEBUG] 29-02-2024 16:07:27.942 [http-nio-8300-exec-1] SQL - select e1_0.id,e1_0.email,e1_0.login,e1_0.name,e1_0.password,p1_0.id_user,p1_0.id,p1_0.name,p1_0.page_image,p1_0.price,p1_0.raiting,p1_0.year_issue from users e1_0 left join products p1_0 on e1_0.id=p1_0.id_user where e1_0.id=?
[DEBUG] 29-02-2024 16:07:35.526 [http-nio-8300-exec-3] SQL - select e1_0.id,e1_0.email,e1_0.login,e1_0.name,e1_0.password,p1_0.id_user,p1_0.id,p1_0.name,p1_0.page_image,p1_0.price,p1_0.raiting,p1_0.year_issue from users e1_0 left join products p1_0 on e1_0.id=p1_0.id_user where e1_0.id=?
[DEBUG] 29-02-2024 16:07:44.460 [http-nio-8300-exec-5] SQL - select e1_0.id,e1_0.email,e1_0.login,e1_0.name,e1_0.password,p1_0.id_user,p1_0.id,p1_0.name,p1_0.page_image,p1_0.price,p1_0.raiting,p1_0.year_issue from users e1_0 left join products p1_0 on e1_0.id=p1_0.id_user where e1_0.id=?
[DEBUG] 29-02-2024 16:07:55.941 [http-nio-8300-exec-6] SQL - select e1_0.id,e1_0.email,e1_0.login,e1_0.name,e1_0.password,p1_0.id_user,p1_0.id,p1_0.name,p1_0.page_image,p1_0.price,p1_0.raiting,p1_0.year_issue from users e1_0 left join products p1_0 on e1_0.id=p1_0.id_user where e1_0.id=?
[DEBUG] 29-02-2024 16:08:03.002 [http-nio-8300-exec-7] SQL - select e1_0.id,e1_0.email,e1_0.login,e1_0.name,e1_0.password,p1_0.id_user,p1_0.id,p1_0.name,p1_0.page_image,p1_0.price,p1_0.raiting,p1_0.year_issue from users e1_0 left join products p1_0 on e1_0.id=p1_0.id_user where e1_0.id=?
[DEBUG] 29-02-2024 16:08:22.663 [http-nio-8300-exec-9] SQL - select e1_0.id,e1_0.email,e1_0.login,e1_0.name,e1_0.password,p1_0.id_user,p1_0.id,p1_0.name,p1_0.page_image,p1_0.price,p1_0.raiting,p1_0.year_issue from users e1_0 left join products p1_0 on e1_0.id=p1_0.id_user where e1_0.id=?
[DEBUG] 29-02-2024 16:08:38.661 [http-nio-8300-exec-1] SQL - select e1_0.id,e1_0.email,e1_0.login,e1_0.name,e1_0.password,p1_0.id_user,p1_0.id,p1_0.name,p1_0.page_image,p1_0.price,p1_0.raiting,p1_0.year_issue from users e1_0 left join products p1_0 on e1_0.id=p1_0.id_user where e1_0.id=?
[DEBUG] 29-02-2024 16:08:48.583 [http-nio-8300-exec-3] SQL - select e1_0.id,e1_0.email,e1_0.login,e1_0.name,e1_0.password,p1_0.id_user,p1_0.id,p1_0.name,p1_0.page_image,p1_0.price,p1_0.raiting,p1_0.year_issue from users e1_0 left join products p1_0 on e1_0.id=p1_0.id_user where e1_0.id=?
[DEBUG] 29-02-2024 16:08:54.063 [http-nio-8300-exec-4] SQL - select e1_0.id,e1_0.email,e1_0.login,e1_0.name,e1_0.password,p1_0.id_user,p1_0.id,p1_0.name,p1_0.page_image,p1_0.price,p1_0.raiting,p1_0.year_issue from users e1_0 left join products p1_0 on e1_0.id=p1_0.id_user where e1_0.id=?
[DEBUG] 29-02-2024 16:09:05.008 [http-nio-8300-exec-6] SQL - select e1_0.id,e1_0.email,e1_0.login,e1_0.name,e1_0.password,p1_0.id_user,p1_0.id,p1_0.name,p1_0.page_image,p1_0.price,p1_0.raiting,p1_0.year_issue from users e1_0 left join products p1_0 on e1_0.id=p1_0.id_user where e1_0.id=?
[TRACE] 29-02-2024 16:17:05.712 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@1755aee6] for TypeConfiguration
[DEBUG] 29-02-2024 16:17:05.713 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@3da166b3] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@1755aee6]
[INFO ] 29-02-2024 16:17:15.969 [background-preinit] Version - HV000001: Hibernate Validator 8.0.1.Final
[INFO ] 29-02-2024 16:17:16.078 [main] TestSpringBootApplication - Starting TestSpringBootApplication using Java 17.0.10 with PID 1750531 (/home/dima/backend_microservice/UserProductsMicroService/target/classes started by dima in /home/dima/backend_microservice/UserProductsMicroService)
[INFO ] 29-02-2024 16:17:16.091 [main] TestSpringBootApplication - No active profile set, falling back to 1 default profile: "default"
[INFO ] 29-02-2024 16:17:18.423 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO ] 29-02-2024 16:17:18.867 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 420 ms. Found 1 JPA repository interfaces.
[ERROR] 29-02-2024 16:17:20.718 [main] AprLifecycleListener - An incompatible version [1.2.23] of the Apache Tomcat Native library is installed, while Tomcat requires version [1.2.34]
[INFO ] 29-02-2024 16:17:21.610 [main] TomcatWebServer - Tomcat initialized with port(s): 8300 (http)
[INFO ] 29-02-2024 16:17:21.640 [main] Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8300"]
[INFO ] 29-02-2024 16:17:21.659 [main] StandardService - Starting service [Tomcat]
[INFO ] 29-02-2024 16:17:21.660 [main] StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.11]
[INFO ] 29-02-2024 16:17:23.218 [main] TldScanner - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
[INFO ] 29-02-2024 16:17:23.243 [main] [/users_products_api] - Initializing Spring embedded WebApplicationContext
[INFO ] 29-02-2024 16:17:23.252 [main] ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 6974 ms
[INFO ] 29-02-2024 16:17:23.799 [main] Version - HHH000412: Hibernate ORM core version 6.2.6.Final
[INFO ] 29-02-2024 16:17:23.806 [main] Environment - HHH000406: Using bytecode reflection optimizer
[DEBUG] 29-02-2024 16:17:24.286 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@23b1aa9
[DEBUG] 29-02-2024 16:17:24.287 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@23b1aa9
[DEBUG] 29-02-2024 16:17:24.288 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@23b1aa9
[DEBUG] 29-02-2024 16:17:24.288 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@54489296
[DEBUG] 29-02-2024 16:17:24.289 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@54489296
[DEBUG] 29-02-2024 16:17:24.290 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@4e8598d9
[DEBUG] 29-02-2024 16:17:24.290 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@4e8598d9
[DEBUG] 29-02-2024 16:17:24.291 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@267ff4df
[DEBUG] 29-02-2024 16:17:24.291 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@267ff4df
[DEBUG] 29-02-2024 16:17:24.292 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@7c4b5ceb
[DEBUG] 29-02-2024 16:17:24.292 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@7c4b5ceb
[DEBUG] 29-02-2024 16:17:24.293 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@7c4b5ceb
[DEBUG] 29-02-2024 16:17:24.293 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@6c07add6
[DEBUG] 29-02-2024 16:17:24.294 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@6c07add6
[DEBUG] 29-02-2024 16:17:24.294 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@6c07add6
[DEBUG] 29-02-2024 16:17:24.295 [main] BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@e26a3df
[DEBUG] 29-02-2024 16:17:24.295 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@e26a3df
[DEBUG] 29-02-2024 16:17:24.295 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@57a667c8
[DEBUG] 29-02-2024 16:17:24.296 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@712cd5d3
[DEBUG] 29-02-2024 16:17:24.301 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@712cd5d3
[DEBUG] 29-02-2024 16:17:24.302 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@2094bf3d
[DEBUG] 29-02-2024 16:17:24.302 [main] BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@1b17d8ab
[DEBUG] 29-02-2024 16:17:24.303 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@7f6b7426
[DEBUG] 29-02-2024 16:17:24.303 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@7f6b7426
[DEBUG] 29-02-2024 16:17:24.304 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@7f6b7426
[DEBUG] 29-02-2024 16:17:24.304 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@687eb455
[DEBUG] 29-02-2024 16:17:24.305 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@687eb455
[DEBUG] 29-02-2024 16:17:24.306 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@687eb455
[DEBUG] 29-02-2024 16:17:24.306 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@6d969330
[DEBUG] 29-02-2024 16:17:24.307 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@6d969330
[DEBUG] 29-02-2024 16:17:24.308 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@6d969330
[DEBUG] 29-02-2024 16:17:24.308 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@4861cca9
[DEBUG] 29-02-2024 16:17:24.309 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@4861cca9
[DEBUG] 29-02-2024 16:17:24.309 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@4861cca9
[DEBUG] 29-02-2024 16:17:24.310 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@6c8f4bc7
[DEBUG] 29-02-2024 16:17:24.311 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@6c8f4bc7
[DEBUG] 29-02-2024 16:17:24.311 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@6c8f4bc7
[DEBUG] 29-02-2024 16:17:24.312 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@714e861f
[DEBUG] 29-02-2024 16:17:24.312 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@714e861f
[DEBUG] 29-02-2024 16:17:24.313 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@28989415
[DEBUG] 29-02-2024 16:17:24.313 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@28989415
[DEBUG] 29-02-2024 16:17:24.314 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@6eda012b
[DEBUG] 29-02-2024 16:17:24.315 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@6eda012b
[DEBUG] 29-02-2024 16:17:24.315 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@6eda012b
[DEBUG] 29-02-2024 16:17:24.316 [main] BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@781dbe44
[DEBUG] 29-02-2024 16:17:24.316 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@7d66a126
[DEBUG] 29-02-2024 16:17:24.317 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@7d66a126
[DEBUG] 29-02-2024 16:17:24.317 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@1132baa3
[DEBUG] 29-02-2024 16:17:24.318 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@2fdf22f7
[DEBUG] 29-02-2024 16:17:24.318 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@2fdf22f7
[DEBUG] 29-02-2024 16:17:24.320 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@2fdf22f7
[DEBUG] 29-02-2024 16:17:24.320 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@3a2546d6
[DEBUG] 29-02-2024 16:17:24.321 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@7282af25
[DEBUG] 29-02-2024 16:17:24.321 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@7661e474
[DEBUG] 29-02-2024 16:17:24.322 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@20ffb8d5
[DEBUG] 29-02-2024 16:17:24.322 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@20ffb8d5
[DEBUG] 29-02-2024 16:17:24.323 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@307c59ea
[DEBUG] 29-02-2024 16:17:24.323 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@307c59ea
[DEBUG] 29-02-2024 16:17:24.324 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@57e03347
[DEBUG] 29-02-2024 16:17:24.333 [main] BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@2edb2f8b
[DEBUG] 29-02-2024 16:17:24.334 [main] BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@733f1395
[DEBUG] 29-02-2024 16:17:24.334 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@21dea711
[DEBUG] 29-02-2024 16:17:24.335 [main] BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@7772d266
[DEBUG] 29-02-2024 16:17:24.335 [main] BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@a21c74
[DEBUG] 29-02-2024 16:17:24.338 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@b8a144e
[DEBUG] 29-02-2024 16:17:24.339 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@b8a144e
[DEBUG] 29-02-2024 16:17:24.341 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@5fb8dc01
[DEBUG] 29-02-2024 16:17:24.343 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@5fb8dc01
[DEBUG] 29-02-2024 16:17:24.343 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@3e38c472
[DEBUG] 29-02-2024 16:17:24.345 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@3e38c472
[DEBUG] 29-02-2024 16:17:24.345 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@2ee92e7d
[DEBUG] 29-02-2024 16:17:24.346 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@2ee92e7d
[DEBUG] 29-02-2024 16:17:24.346 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@759a678a
[DEBUG] 29-02-2024 16:17:24.347 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@759a678a
[DEBUG] 29-02-2024 16:17:24.347 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@6cdbe5ec
[DEBUG] 29-02-2024 16:17:24.348 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@14b8a751
[DEBUG] 29-02-2024 16:17:24.348 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@7345f97d
[DEBUG] 29-02-2024 16:17:24.349 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@7345f97d
[DEBUG] 29-02-2024 16:17:24.349 [main] BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@554566a8
[DEBUG] 29-02-2024 16:17:24.350 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@66020d69
[DEBUG] 29-02-2024 16:17:24.350 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3751acd7
[DEBUG] 29-02-2024 16:17:24.351 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@6b832551
[DEBUG] 29-02-2024 16:17:24.351 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@6b832551
[DEBUG] 29-02-2024 16:17:24.351 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@150d6eaf
[DEBUG] 29-02-2024 16:17:24.352 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@63124022
[DEBUG] 29-02-2024 16:17:24.352 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@591f6f83
[DEBUG] 29-02-2024 16:17:24.352 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@591f6f83
[DEBUG] 29-02-2024 16:17:24.353 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@2b44605c
[DEBUG] 29-02-2024 16:17:24.354 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@2b44605c
[DEBUG] 29-02-2024 16:17:24.354 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@55421b8d
[DEBUG] 29-02-2024 16:17:24.354 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@55421b8d
[DEBUG] 29-02-2024 16:17:24.355 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@55421b8d
[DEBUG] 29-02-2024 16:17:24.355 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@24a04257
[DEBUG] 29-02-2024 16:17:24.356 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@24a04257
[DEBUG] 29-02-2024 16:17:24.356 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@24a04257
[DEBUG] 29-02-2024 16:17:24.357 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@6615237
[DEBUG] 29-02-2024 16:17:24.357 [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@eaf8427
[DEBUG] 29-02-2024 16:17:24.358 [main] BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@4bf4680c
[DEBUG] 29-02-2024 16:17:24.358 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@4bf4680c
[DEBUG] 29-02-2024 16:17:24.359 [main] BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@6d6039df
[DEBUG] 29-02-2024 16:17:24.359 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@6d6039df
[DEBUG] 29-02-2024 16:17:24.360 [main] BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@6d6039df
[DEBUG] 29-02-2024 16:17:24.360 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@611c3eae
[DEBUG] 29-02-2024 16:17:24.360 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@13e00016
[DEBUG] 29-02-2024 16:17:24.361 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@7b3cbe6e
[DEBUG] 29-02-2024 16:17:24.361 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@7b3cbe6e
[DEBUG] 29-02-2024 16:17:24.362 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@177ede17
[DEBUG] 29-02-2024 16:17:24.362 [main] BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@177ede17
[DEBUG] 29-02-2024 16:17:24.363 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@177ede17
[DEBUG] 29-02-2024 16:17:24.363 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@17176b18
[DEBUG] 29-02-2024 16:17:24.364 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@17176b18
[DEBUG] 29-02-2024 16:17:24.364 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@4e4395c
[DEBUG] 29-02-2024 16:17:24.364 [main] BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@4e4395c
[DEBUG] 29-02-2024 16:17:24.365 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@1ab53860
[DEBUG] 29-02-2024 16:17:24.366 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@1ab53860
[DEBUG] 29-02-2024 16:17:24.366 [main] BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@7b5ac347
[DEBUG] 29-02-2024 16:17:24.367 [main] BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@7b5ac347
[DEBUG] 29-02-2024 16:17:24.367 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@57b9389f
[DEBUG] 29-02-2024 16:17:24.367 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@57b9389f
[DEBUG] 29-02-2024 16:17:24.368 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@72b2c5ed
[DEBUG] 29-02-2024 16:17:24.383 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@179ee36b
[DEBUG] 29-02-2024 16:17:24.383 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@179ee36b
[DEBUG] 29-02-2024 16:17:24.387 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@36551e97
[DEBUG] 29-02-2024 16:17:24.388 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@685d7ba5
[DEBUG] 29-02-2024 16:17:24.389 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@16d41725
[DEBUG] 29-02-2024 16:17:24.390 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@3b6c2be6
[DEBUG] 29-02-2024 16:17:24.390 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@25533bba
[DEBUG] 29-02-2024 16:17:24.390 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@26d0ece6
[DEBUG] 29-02-2024 16:17:24.391 [main] BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@100bba26
[DEBUG] 29-02-2024 16:17:24.391 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@4ae280da
[DEBUG] 29-02-2024 16:17:24.392 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@76d0ecd7
[DEBUG] 29-02-2024 16:17:25.754 [main] DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6caeba36) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@8ac512e)
[DEBUG] 29-02-2024 16:17:25.759 [main] JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
[DEBUG] 29-02-2024 16:17:25.759 [main] JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 29-02-2024 16:17:25.781 [main] BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@31f7eb8
[DEBUG] 29-02-2024 16:17:25.782 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@31f7eb8
[DEBUG] 29-02-2024 16:17:25.782 [main] BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@179ee36b`
[DEBUG] 29-02-2024 16:17:25.784 [main] JdbcTypeRegistry - addDescriptor(3100, NumericTypeDescriptor) replaced previous registration(org.hibernate.dialect.PostgreSQLIntervalSecondJdbcType@e97f115)
[DEBUG] 29-02-2024 16:17:25.801 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 29-02-2024 16:17:25.801 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 29-02-2024 16:17:25.801 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 29-02-2024 16:17:25.802 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 29-02-2024 16:17:25.802 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 29-02-2024 16:17:25.802 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 29-02-2024 16:17:25.804 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 29-02-2024 16:17:25.805 [main] BasicTypeRegistry - Adding type registration OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 29-02-2024 16:17:25.805 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 29-02-2024 16:17:25.808 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@8af1c49] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@70d5d96b]
[WARN ] 29-02-2024 16:17:26.288 [main] InFlightMetadataCollectorImpl - HHH000069: Duplicate generator name generator
[INFO ] 29-02-2024 16:17:26.456 [main] BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
[INFO ] 29-02-2024 16:17:29.296 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 29-02-2024 16:17:29.298 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@8af1c49] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@44580de0]
[TRACE] 29-02-2024 16:17:29.304 [main] TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@44580de0] for TypeConfiguration
[WARN ] 29-02-2024 16:17:30.112 [main] JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[INFO ] 29-02-2024 16:17:30.967 [main] Http11NioProtocol - Starting ProtocolHandler ["http-nio-8300"]
[INFO ] 29-02-2024 16:17:31.021 [main] TomcatWebServer - Tomcat started on port(s): 8300 (http) with context path '/users_products_api'
[INFO ] 29-02-2024 16:17:31.052 [main] TestSpringBootApplication - Started TestSpringBootApplication in 16.203 seconds (process running for 19.256)
[INFO ] 29-02-2024 16:17:40.955 [http-nio-8300-exec-1] [/users_products_api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[INFO ] 29-02-2024 16:17:40.956 [http-nio-8300-exec-1] DispatcherServlet - Initializing Servlet 'dispatcherServlet'
[INFO ] 29-02-2024 16:17:40.960 [http-nio-8300-exec-1] DispatcherServlet - Completed initialization in 4 ms
[DEBUG] 29-02-2024 16:17:41.353 [http-nio-8300-exec-1] SQL - select e1_0.id,e1_0.email,e1_0.login,e1_0.name,e1_0.password,p1_0.id_user,p1_0.id,p1_0.name,p1_0.page_image,p1_0.price,p1_0.raiting,p1_0.year_issue from users e1_0 left join products p1_0 on e1_0.id=p1_0.id_user where e1_0.id=?
[DEBUG] 29-02-2024 16:17:57.018 [http-nio-8300-exec-2] SQL - select e1_0.id,e1_0.email,e1_0.login,e1_0.name,e1_0.password,p1_0.id_user,p1_0.id,p1_0.name,p1_0.page_image,p1_0.price,p1_0.raiting,p1_0.year_issue from users e1_0 left join products p1_0 on e1_0.id=p1_0.id_user where e1_0.id=?
[DEBUG] 29-02-2024 16:18:04.207 [http-nio-8300-exec-4] SQL - select e1_0.id,e1_0.email,e1_0.login,e1_0.name,e1_0.password,p1_0.id_user,p1_0.id,p1_0.name,p1_0.page_image,p1_0.price,p1_0.raiting,p1_0.year_issue from users e1_0 left join products p1_0 on e1_0.id=p1_0.id_user where e1_0.id=?
[DEBUG] 29-02-2024 16:19:10.248 [http-nio-8300-exec-6] SQL - select e1_0.id,e1_0.email,e1_0.login,e1_0.name,e1_0.password,p1_0.id_user,p1_0.id,p1_0.name,p1_0.page_image,p1_0.price,p1_0.raiting,p1_0.year_issue from users e1_0 left join products p1_0 on e1_0.id=p1_0.id_user where e1_0.id=?
[DEBUG] 29-02-2024 16:19:14.791 [http-nio-8300-exec-9] SQL - select e1_0.id,e1_0.email,e1_0.login,e1_0.name,e1_0.password,p1_0.id_user,p1_0.id,p1_0.name,p1_0.page_image,p1_0.price,p1_0.raiting,p1_0.year_issue from users e1_0 left join products p1_0 on e1_0.id=p1_0.id_user where e1_0.id=?
[DEBUG] 29-02-2024 16:19:25.043 [http-nio-8300-exec-10] SQL - select e1_0.id,e1_0.email,e1_0.login,e1_0.name,e1_0.password,p1_0.id_user,p1_0.id,p1_0.name,p1_0.page_image,p1_0.price,p1_0.raiting,p1_0.year_issue from users e1_0 left join products p1_0 on e1_0.id=p1_0.id_user where e1_0.id=?
[TRACE] 29-02-2024 16:52:33.732 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@44580de0] for TypeConfiguration
[DEBUG] 29-02-2024 16:52:33.732 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@1e5ac5ce] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@44580de0]
[INFO ] 29-02-2024 16:53:01.991 [background-preinit] Version - HV000001: Hibernate Validator 8.0.1.Final
[INFO ] 29-02-2024 16:53:02.123 [main] TestCRUDUserProducts - Starting TestCRUDUserProducts using Java 17.0.10 with PID 1768435 (started by dima in /home/dima/backend_microservice/UserProductsMicroService)
[INFO ] 29-02-2024 16:53:02.135 [main] TestCRUDUserProducts - No active profile set, falling back to 1 default profile: "default"
[INFO ] 29-02-2024 16:53:04.207 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO ] 29-02-2024 16:53:04.682 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 431 ms. Found 1 JPA repository interfaces.
[INFO ] 29-02-2024 16:53:08.838 [main] Version - HHH000412: Hibernate ORM core version 6.2.6.Final
[INFO ] 29-02-2024 16:53:08.849 [main] Environment - HHH000406: Using bytecode reflection optimizer
[DEBUG] 29-02-2024 16:53:09.458 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@1edf71d9
[DEBUG] 29-02-2024 16:53:09.460 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@1edf71d9
[DEBUG] 29-02-2024 16:53:09.461 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@1edf71d9
[DEBUG] 29-02-2024 16:53:09.462 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@52d9d817
[DEBUG] 29-02-2024 16:53:09.464 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@52d9d817
[DEBUG] 29-02-2024 16:53:09.466 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@131ba005
[DEBUG] 29-02-2024 16:53:09.467 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@131ba005
[DEBUG] 29-02-2024 16:53:09.468 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@7f305f34
[DEBUG] 29-02-2024 16:53:09.469 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@7f305f34
[DEBUG] 29-02-2024 16:53:09.470 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@1a84a8b2
[DEBUG] 29-02-2024 16:53:09.471 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@1a84a8b2
[DEBUG] 29-02-2024 16:53:09.471 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@1a84a8b2
[DEBUG] 29-02-2024 16:53:09.472 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@601d295
[DEBUG] 29-02-2024 16:53:09.473 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@601d295
[DEBUG] 29-02-2024 16:53:09.474 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@601d295
[DEBUG] 29-02-2024 16:53:09.474 [main] BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@485451d8
[DEBUG] 29-02-2024 16:53:09.476 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@485451d8
[DEBUG] 29-02-2024 16:53:09.477 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@35e07e19
[DEBUG] 29-02-2024 16:53:09.478 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@a1e912f
[DEBUG] 29-02-2024 16:53:09.479 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@a1e912f
[DEBUG] 29-02-2024 16:53:09.480 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@2036f83
[DEBUG] 29-02-2024 16:53:09.481 [main] BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@68b3248a
[DEBUG] 29-02-2024 16:53:09.482 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@5e158f33
[DEBUG] 29-02-2024 16:53:09.483 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@5e158f33
[DEBUG] 29-02-2024 16:53:09.484 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@5e158f33
[DEBUG] 29-02-2024 16:53:09.485 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@20fcea37
[DEBUG] 29-02-2024 16:53:09.486 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@20fcea37
[DEBUG] 29-02-2024 16:53:09.487 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@20fcea37
[DEBUG] 29-02-2024 16:53:09.491 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@399af6dc
[DEBUG] 29-02-2024 16:53:09.492 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@399af6dc
[DEBUG] 29-02-2024 16:53:09.493 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@399af6dc
[DEBUG] 29-02-2024 16:53:09.494 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@48fc0211
[DEBUG] 29-02-2024 16:53:09.495 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@48fc0211
[DEBUG] 29-02-2024 16:53:09.495 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@48fc0211
[DEBUG] 29-02-2024 16:53:09.496 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@3ae2702a
[DEBUG] 29-02-2024 16:53:09.497 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@3ae2702a
[DEBUG] 29-02-2024 16:53:09.498 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@3ae2702a
[DEBUG] 29-02-2024 16:53:09.499 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@7d088813
[DEBUG] 29-02-2024 16:53:09.500 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@7d088813
[DEBUG] 29-02-2024 16:53:09.500 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@134abd78
[DEBUG] 29-02-2024 16:53:09.501 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@134abd78
[DEBUG] 29-02-2024 16:53:09.502 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@3b0ed98a
[DEBUG] 29-02-2024 16:53:09.503 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@3b0ed98a
[DEBUG] 29-02-2024 16:53:09.504 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@3b0ed98a
[DEBUG] 29-02-2024 16:53:09.505 [main] BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@12448de1
[DEBUG] 29-02-2024 16:53:09.506 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@2b35c7aa
[DEBUG] 29-02-2024 16:53:09.507 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@2b35c7aa
[DEBUG] 29-02-2024 16:53:09.508 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@6dd20ec9
[DEBUG] 29-02-2024 16:53:09.509 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@20dd5870
[DEBUG] 29-02-2024 16:53:09.510 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@20dd5870
[DEBUG] 29-02-2024 16:53:09.519 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@20dd5870
[DEBUG] 29-02-2024 16:53:09.520 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@1640f20f
[DEBUG] 29-02-2024 16:53:09.523 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@134d7ffa
[DEBUG] 29-02-2024 16:53:09.524 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@6e948f1c
[DEBUG] 29-02-2024 16:53:09.525 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@24405466
[DEBUG] 29-02-2024 16:53:09.526 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@24405466
[DEBUG] 29-02-2024 16:53:09.528 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@35010a6b
[DEBUG] 29-02-2024 16:53:09.533 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@35010a6b
[DEBUG] 29-02-2024 16:53:09.535 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@4d4b019e
[DEBUG] 29-02-2024 16:53:09.537 [main] BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@7ed8b44
[DEBUG] 29-02-2024 16:53:09.538 [main] BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@21280cbb
[DEBUG] 29-02-2024 16:53:09.539 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@1cc708a7
[DEBUG] 29-02-2024 16:53:09.542 [main] BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@995ad50
[DEBUG] 29-02-2024 16:53:09.543 [main] BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@6249a08d
[DEBUG] 29-02-2024 16:53:09.544 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@36525ab
[DEBUG] 29-02-2024 16:53:09.545 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@36525ab
[DEBUG] 29-02-2024 16:53:09.546 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@27438750
[DEBUG] 29-02-2024 16:53:09.547 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@27438750
[DEBUG] 29-02-2024 16:53:09.548 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@39851c5
[DEBUG] 29-02-2024 16:53:09.549 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@39851c5
[DEBUG] 29-02-2024 16:53:09.555 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@2c7ad4f3
[DEBUG] 29-02-2024 16:53:09.557 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@2c7ad4f3
[DEBUG] 29-02-2024 16:53:09.558 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@698f4aa
[DEBUG] 29-02-2024 16:53:09.559 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@698f4aa
[DEBUG] 29-02-2024 16:53:09.560 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@3dda8a2e
[DEBUG] 29-02-2024 16:53:09.565 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@7c0de229
[DEBUG] 29-02-2024 16:53:09.569 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@6aa6c17
[DEBUG] 29-02-2024 16:53:09.571 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@6aa6c17
[DEBUG] 29-02-2024 16:53:09.573 [main] BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@4756e5cc
[DEBUG] 29-02-2024 16:53:09.575 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2e349cf2
[DEBUG] 29-02-2024 16:53:09.578 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3dbb3fb7
[DEBUG] 29-02-2024 16:53:09.579 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@68a426c3
[DEBUG] 29-02-2024 16:53:09.581 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@68a426c3
[DEBUG] 29-02-2024 16:53:09.582 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@182cc69e
[DEBUG] 29-02-2024 16:53:09.582 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@12f51a65
[DEBUG] 29-02-2024 16:53:09.586 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@7657d90b
[DEBUG] 29-02-2024 16:53:09.586 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@7657d90b
[DEBUG] 29-02-2024 16:53:09.593 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@3f0c6b3c
[DEBUG] 29-02-2024 16:53:09.594 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@3f0c6b3c
[DEBUG] 29-02-2024 16:53:09.595 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@416a4275
[DEBUG] 29-02-2024 16:53:09.596 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@416a4275
[DEBUG] 29-02-2024 16:53:09.597 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@416a4275
[DEBUG] 29-02-2024 16:53:09.597 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@7bf65e0f
[DEBUG] 29-02-2024 16:53:09.598 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@7bf65e0f
[DEBUG] 29-02-2024 16:53:09.599 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@7bf65e0f
[DEBUG] 29-02-2024 16:53:09.599 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@33215ffb
[DEBUG] 29-02-2024 16:53:09.600 [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@6f289728
[DEBUG] 29-02-2024 16:53:09.601 [main] BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@7c421952
[DEBUG] 29-02-2024 16:53:09.602 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@7c421952
[DEBUG] 29-02-2024 16:53:09.602 [main] BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@350d26f3
[DEBUG] 29-02-2024 16:53:09.603 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@350d26f3
[DEBUG] 29-02-2024 16:53:09.604 [main] BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@350d26f3
[DEBUG] 29-02-2024 16:53:09.604 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@c6a692e
[DEBUG] 29-02-2024 16:53:09.605 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@27502e5c
[DEBUG] 29-02-2024 16:53:09.606 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@4b343b6d
[DEBUG] 29-02-2024 16:53:09.606 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@4b343b6d
[DEBUG] 29-02-2024 16:53:09.607 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@17d2b646
[DEBUG] 29-02-2024 16:53:09.608 [main] BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@17d2b646
[DEBUG] 29-02-2024 16:53:09.609 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@17d2b646
[DEBUG] 29-02-2024 16:53:09.610 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@48ae9e8b
[DEBUG] 29-02-2024 16:53:09.611 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@48ae9e8b
[DEBUG] 29-02-2024 16:53:09.612 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@6eaa6b0c
[DEBUG] 29-02-2024 16:53:09.613 [main] BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@6eaa6b0c
[DEBUG] 29-02-2024 16:53:09.614 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@4afcae7
[DEBUG] 29-02-2024 16:53:09.618 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@4afcae7
[DEBUG] 29-02-2024 16:53:09.623 [main] BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@6cd2cb2
[DEBUG] 29-02-2024 16:53:09.624 [main] BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@6cd2cb2
[DEBUG] 29-02-2024 16:53:09.625 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@3a2bb026
[DEBUG] 29-02-2024 16:53:09.626 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@3a2bb026
[DEBUG] 29-02-2024 16:53:09.629 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@7645e64
[DEBUG] 29-02-2024 16:53:09.664 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@13e1e816
[DEBUG] 29-02-2024 16:53:09.665 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@13e1e816
[DEBUG] 29-02-2024 16:53:09.672 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@525b8922
[DEBUG] 29-02-2024 16:53:09.674 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@145a821d
[DEBUG] 29-02-2024 16:53:09.678 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@6caa4dc5
[DEBUG] 29-02-2024 16:53:09.692 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@6ed51944
[DEBUG] 29-02-2024 16:53:09.692 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@60c98f25
[DEBUG] 29-02-2024 16:53:09.693 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@20c3b34b
[DEBUG] 29-02-2024 16:53:09.694 [main] BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@1eb906f3
[DEBUG] 29-02-2024 16:53:09.695 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@58e02359
[DEBUG] 29-02-2024 16:53:09.695 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@74fc3fc7
[DEBUG] 29-02-2024 16:53:11.277 [main] DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@28dacf31) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@47e60b71)
[DEBUG] 29-02-2024 16:53:11.285 [main] JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
[DEBUG] 29-02-2024 16:53:11.286 [main] JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 29-02-2024 16:53:11.331 [main] BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@6a04d2a4
[DEBUG] 29-02-2024 16:53:11.332 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@6a04d2a4
[DEBUG] 29-02-2024 16:53:11.332 [main] BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@13e1e816`
[DEBUG] 29-02-2024 16:53:11.338 [main] JdbcTypeRegistry - addDescriptor(3100, NumericTypeDescriptor) replaced previous registration(org.hibernate.dialect.PostgreSQLIntervalSecondJdbcType@1b632442)
[DEBUG] 29-02-2024 16:53:11.354 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 29-02-2024 16:53:11.355 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 29-02-2024 16:53:11.356 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 29-02-2024 16:53:11.356 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 29-02-2024 16:53:11.357 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 29-02-2024 16:53:11.357 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 29-02-2024 16:53:11.359 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 29-02-2024 16:53:11.360 [main] BasicTypeRegistry - Adding type registration OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 29-02-2024 16:53:11.360 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 29-02-2024 16:53:11.365 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7791ff50] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@46de118b]
[WARN ] 29-02-2024 16:53:11.825 [main] InFlightMetadataCollectorImpl - HHH000069: Duplicate generator name generator
[INFO ] 29-02-2024 16:53:12.027 [main] BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
[INFO ] 29-02-2024 16:53:14.407 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 29-02-2024 16:53:14.411 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7791ff50] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@589d831e]
[TRACE] 29-02-2024 16:53:14.421 [main] TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@589d831e] for TypeConfiguration
[INFO ] 29-02-2024 16:53:16.472 [main] SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
[INFO ] 29-02-2024 16:53:16.473 [main] TestDispatcherServlet - Initializing Servlet ''
[INFO ] 29-02-2024 16:53:16.482 [main] TestDispatcherServlet - Completed initialization in 2 ms
[INFO ] 29-02-2024 16:53:16.846 [main] TestCRUDUserProducts - Started TestCRUDUserProducts in 15.971 seconds (process running for 20.119)
[TRACE] 29-02-2024 16:53:17.202 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@589d831e] for TypeConfiguration
[DEBUG] 29-02-2024 16:53:17.202 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@702e859] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@589d831e]
[INFO ] 29-02-2024 16:54:33.633 [background-preinit] Version - HV000001: Hibernate Validator 8.0.1.Final
[INFO ] 29-02-2024 16:54:33.753 [main] TestCRUDUserProducts - Starting TestCRUDUserProducts using Java 17.0.10 with PID 1769344 (started by dima in /home/dima/backend_microservice/UserProductsMicroService)
[INFO ] 29-02-2024 16:54:33.764 [main] TestCRUDUserProducts - No active profile set, falling back to 1 default profile: "default"
[INFO ] 29-02-2024 16:54:34.639 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO ] 29-02-2024 16:54:35.086 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 427 ms. Found 1 JPA repository interfaces.
[INFO ] 29-02-2024 16:54:39.227 [main] Version - HHH000412: Hibernate ORM core version 6.2.6.Final
[INFO ] 29-02-2024 16:54:39.237 [main] Environment - HHH000406: Using bytecode reflection optimizer
[DEBUG] 29-02-2024 16:54:39.665 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@485451d8
[DEBUG] 29-02-2024 16:54:39.667 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@485451d8
[DEBUG] 29-02-2024 16:54:39.668 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@485451d8
[DEBUG] 29-02-2024 16:54:39.669 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@35e07e19
[DEBUG] 29-02-2024 16:54:39.670 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@35e07e19
[DEBUG] 29-02-2024 16:54:39.671 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@a1e912f
[DEBUG] 29-02-2024 16:54:39.672 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@a1e912f
[DEBUG] 29-02-2024 16:54:39.673 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@2036f83
[DEBUG] 29-02-2024 16:54:39.673 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@2036f83
[DEBUG] 29-02-2024 16:54:39.674 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@68b3248a
[DEBUG] 29-02-2024 16:54:39.675 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@68b3248a
[DEBUG] 29-02-2024 16:54:39.675 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@68b3248a
[DEBUG] 29-02-2024 16:54:39.676 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@5e158f33
[DEBUG] 29-02-2024 16:54:39.676 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@5e158f33
[DEBUG] 29-02-2024 16:54:39.677 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@5e158f33
[DEBUG] 29-02-2024 16:54:39.678 [main] BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@20fcea37
[DEBUG] 29-02-2024 16:54:39.678 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@20fcea37
[DEBUG] 29-02-2024 16:54:39.679 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@399af6dc
[DEBUG] 29-02-2024 16:54:39.679 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@48fc0211
[DEBUG] 29-02-2024 16:54:39.680 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@48fc0211
[DEBUG] 29-02-2024 16:54:39.681 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@3ae2702a
[DEBUG] 29-02-2024 16:54:39.681 [main] BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@7d088813
[DEBUG] 29-02-2024 16:54:39.682 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@134abd78
[DEBUG] 29-02-2024 16:54:39.683 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@134abd78
[DEBUG] 29-02-2024 16:54:39.683 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@134abd78
[DEBUG] 29-02-2024 16:54:39.684 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@3b0ed98a
[DEBUG] 29-02-2024 16:54:39.684 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@3b0ed98a
[DEBUG] 29-02-2024 16:54:39.685 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@3b0ed98a
[DEBUG] 29-02-2024 16:54:39.686 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@12448de1
[DEBUG] 29-02-2024 16:54:39.687 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@12448de1
[DEBUG] 29-02-2024 16:54:39.687 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@12448de1
[DEBUG] 29-02-2024 16:54:39.688 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@2b35c7aa
[DEBUG] 29-02-2024 16:54:39.688 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@2b35c7aa
[DEBUG] 29-02-2024 16:54:39.689 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@2b35c7aa
[DEBUG] 29-02-2024 16:54:39.690 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@6dd20ec9
[DEBUG] 29-02-2024 16:54:39.690 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@6dd20ec9
[DEBUG] 29-02-2024 16:54:39.691 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@6dd20ec9
[DEBUG] 29-02-2024 16:54:39.692 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@20dd5870
[DEBUG] 29-02-2024 16:54:39.693 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@20dd5870
[DEBUG] 29-02-2024 16:54:39.693 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@1640f20f
[DEBUG] 29-02-2024 16:54:39.694 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@1640f20f
[DEBUG] 29-02-2024 16:54:39.695 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@134d7ffa
[DEBUG] 29-02-2024 16:54:39.695 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@134d7ffa
[DEBUG] 29-02-2024 16:54:39.696 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@134d7ffa
[DEBUG] 29-02-2024 16:54:39.696 [main] BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@6e948f1c
[DEBUG] 29-02-2024 16:54:39.697 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@24405466
[DEBUG] 29-02-2024 16:54:39.698 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@24405466
[DEBUG] 29-02-2024 16:54:39.698 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@35010a6b
[DEBUG] 29-02-2024 16:54:39.699 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@4d4b019e
[DEBUG] 29-02-2024 16:54:39.699 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@4d4b019e
[DEBUG] 29-02-2024 16:54:39.700 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@4d4b019e
[DEBUG] 29-02-2024 16:54:39.701 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@7ed8b44
[DEBUG] 29-02-2024 16:54:39.701 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@21280cbb
[DEBUG] 29-02-2024 16:54:39.702 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@1cc708a7
[DEBUG] 29-02-2024 16:54:39.703 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@995ad50
[DEBUG] 29-02-2024 16:54:39.704 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@995ad50
[DEBUG] 29-02-2024 16:54:39.704 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@6249a08d
[DEBUG] 29-02-2024 16:54:39.705 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@6249a08d
[DEBUG] 29-02-2024 16:54:39.705 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@36525ab
[DEBUG] 29-02-2024 16:54:39.706 [main] BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@27438750
[DEBUG] 29-02-2024 16:54:39.706 [main] BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@39851c5
[DEBUG] 29-02-2024 16:54:39.707 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@2c7ad4f3
[DEBUG] 29-02-2024 16:54:39.707 [main] BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@698f4aa
[DEBUG] 29-02-2024 16:54:39.708 [main] BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@3dda8a2e
[DEBUG] 29-02-2024 16:54:39.708 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@7c0de229
[DEBUG] 29-02-2024 16:54:39.709 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@7c0de229
[DEBUG] 29-02-2024 16:54:39.709 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@6aa6c17
[DEBUG] 29-02-2024 16:54:39.710 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@6aa6c17
[DEBUG] 29-02-2024 16:54:39.711 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@4756e5cc
[DEBUG] 29-02-2024 16:54:39.711 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@4756e5cc
[DEBUG] 29-02-2024 16:54:39.711 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@2e349cf2
[DEBUG] 29-02-2024 16:54:39.712 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@2e349cf2
[DEBUG] 29-02-2024 16:54:39.712 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@3dbb3fb7
[DEBUG] 29-02-2024 16:54:39.713 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@3dbb3fb7
[DEBUG] 29-02-2024 16:54:39.713 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@68a426c3
[DEBUG] 29-02-2024 16:54:39.714 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@182cc69e
[DEBUG] 29-02-2024 16:54:39.715 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@12f51a65
[DEBUG] 29-02-2024 16:54:39.715 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@12f51a65
[DEBUG] 29-02-2024 16:54:39.716 [main] BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@7657d90b
[DEBUG] 29-02-2024 16:54:39.717 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@3f0c6b3c
[DEBUG] 29-02-2024 16:54:39.717 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@416a4275
[DEBUG] 29-02-2024 16:54:39.718 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@7bf65e0f
[DEBUG] 29-02-2024 16:54:39.721 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@7bf65e0f
[DEBUG] 29-02-2024 16:54:39.723 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@33215ffb
[DEBUG] 29-02-2024 16:54:39.723 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@6f289728
[DEBUG] 29-02-2024 16:54:39.724 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@7c421952
[DEBUG] 29-02-2024 16:54:39.725 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@7c421952
[DEBUG] 29-02-2024 16:54:39.726 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@350d26f3
[DEBUG] 29-02-2024 16:54:39.726 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@350d26f3
[DEBUG] 29-02-2024 16:54:39.727 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@c6a692e
[DEBUG] 29-02-2024 16:54:39.728 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@c6a692e
[DEBUG] 29-02-2024 16:54:39.728 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@c6a692e
[DEBUG] 29-02-2024 16:54:39.729 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@27502e5c
[DEBUG] 29-02-2024 16:54:39.729 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@27502e5c
[DEBUG] 29-02-2024 16:54:39.730 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@27502e5c
[DEBUG] 29-02-2024 16:54:39.730 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@4b343b6d
[DEBUG] 29-02-2024 16:54:39.731 [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@17d2b646
[DEBUG] 29-02-2024 16:54:39.731 [main] BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@48ae9e8b
[DEBUG] 29-02-2024 16:54:39.732 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@48ae9e8b
[DEBUG] 29-02-2024 16:54:39.732 [main] BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@6eaa6b0c
[DEBUG] 29-02-2024 16:54:39.733 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@6eaa6b0c
[DEBUG] 29-02-2024 16:54:39.733 [main] BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@6eaa6b0c
[DEBUG] 29-02-2024 16:54:39.734 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@4afcae7
[DEBUG] 29-02-2024 16:54:39.734 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@6cd2cb2
[DEBUG] 29-02-2024 16:54:39.734 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@3a2bb026
[DEBUG] 29-02-2024 16:54:39.735 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@3a2bb026
[DEBUG] 29-02-2024 16:54:39.735 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@7645e64
[DEBUG] 29-02-2024 16:54:39.736 [main] BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@7645e64
[DEBUG] 29-02-2024 16:54:39.736 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@7645e64
[DEBUG] 29-02-2024 16:54:39.736 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@7de6549d
[DEBUG] 29-02-2024 16:54:39.737 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@7de6549d
[DEBUG] 29-02-2024 16:54:39.737 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@12214f2f
[DEBUG] 29-02-2024 16:54:39.738 [main] BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@12214f2f
[DEBUG] 29-02-2024 16:54:39.738 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@756c67cd
[DEBUG] 29-02-2024 16:54:39.739 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@756c67cd
[DEBUG] 29-02-2024 16:54:39.739 [main] BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@50de907a
[DEBUG] 29-02-2024 16:54:39.739 [main] BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@50de907a
[DEBUG] 29-02-2024 16:54:39.740 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@1fd37440
[DEBUG] 29-02-2024 16:54:39.740 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@1fd37440
[DEBUG] 29-02-2024 16:54:39.740 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@79308a2
[DEBUG] 29-02-2024 16:54:39.756 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@733fae8
[DEBUG] 29-02-2024 16:54:39.757 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@733fae8
[DEBUG] 29-02-2024 16:54:39.760 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@1eb906f3
[DEBUG] 29-02-2024 16:54:39.761 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@58e02359
[DEBUG] 29-02-2024 16:54:39.762 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@74fc3fc7
[DEBUG] 29-02-2024 16:54:39.762 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@491893f8
[DEBUG] 29-02-2024 16:54:39.763 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@1f408ab6
[DEBUG] 29-02-2024 16:54:39.763 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@46e388ec
[DEBUG] 29-02-2024 16:54:39.763 [main] BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@53f495f0
[DEBUG] 29-02-2024 16:54:39.763 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@5efe5b25
[DEBUG] 29-02-2024 16:54:39.764 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@45707f76
[DEBUG] 29-02-2024 16:54:41.293 [main] DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@51869ad6) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@27a90ce5)
[DEBUG] 29-02-2024 16:54:41.299 [main] JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
[DEBUG] 29-02-2024 16:54:41.300 [main] JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 29-02-2024 16:54:41.322 [main] BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@2f75a9b1
[DEBUG] 29-02-2024 16:54:41.323 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@2f75a9b1
[DEBUG] 29-02-2024 16:54:41.323 [main] BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@733fae8`
[DEBUG] 29-02-2024 16:54:41.327 [main] JdbcTypeRegistry - addDescriptor(3100, NumericTypeDescriptor) replaced previous registration(org.hibernate.dialect.PostgreSQLIntervalSecondJdbcType@19e801b5)
[DEBUG] 29-02-2024 16:54:41.352 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 29-02-2024 16:54:41.352 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 29-02-2024 16:54:41.352 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 29-02-2024 16:54:41.353 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 29-02-2024 16:54:41.353 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 29-02-2024 16:54:41.353 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 29-02-2024 16:54:41.355 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 29-02-2024 16:54:41.356 [main] BasicTypeRegistry - Adding type registration OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 29-02-2024 16:54:41.356 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 29-02-2024 16:54:41.359 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3f4964f2] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@3bf01a01]
[WARN ] 29-02-2024 16:54:41.778 [main] InFlightMetadataCollectorImpl - HHH000069: Duplicate generator name generator
[INFO ] 29-02-2024 16:54:41.955 [main] BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
[INFO ] 29-02-2024 16:54:43.944 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 29-02-2024 16:54:43.948 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3f4964f2] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@2b30b627]
[TRACE] 29-02-2024 16:54:43.956 [main] TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@2b30b627] for TypeConfiguration
[INFO ] 29-02-2024 16:54:45.530 [main] SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
[INFO ] 29-02-2024 16:54:45.531 [main] TestDispatcherServlet - Initializing Servlet ''
[INFO ] 29-02-2024 16:54:45.540 [main] TestDispatcherServlet - Completed initialization in 2 ms
[INFO ] 29-02-2024 16:54:46.149 [main] TestCRUDUserProducts - Started TestCRUDUserProducts in 13.262 seconds (process running for 16.762)
[TRACE] 29-02-2024 16:54:47.209 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@2b30b627] for TypeConfiguration
[DEBUG] 29-02-2024 16:54:47.216 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@38c3dc0c] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@2b30b627]
[INFO ] 29-02-2024 16:56:34.664 [background-preinit] Version - HV000001: Hibernate Validator 8.0.1.Final
[INFO ] 29-02-2024 16:56:34.774 [main] TestCRUDUserProducts - Starting TestCRUDUserProducts using Java 17.0.10 with PID 1770452 (started by dima in /home/dima/backend_microservice/UserProductsMicroService)
[INFO ] 29-02-2024 16:56:34.786 [main] TestCRUDUserProducts - No active profile set, falling back to 1 default profile: "default"
[INFO ] 29-02-2024 16:56:35.752 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO ] 29-02-2024 16:56:36.173 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 397 ms. Found 1 JPA repository interfaces.
[INFO ] 29-02-2024 16:56:40.302 [main] Version - HHH000412: Hibernate ORM core version 6.2.6.Final
[INFO ] 29-02-2024 16:56:40.320 [main] Environment - HHH000406: Using bytecode reflection optimizer
[DEBUG] 29-02-2024 16:56:40.920 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@1f71e024
[DEBUG] 29-02-2024 16:56:40.921 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@1f71e024
[DEBUG] 29-02-2024 16:56:40.922 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@1f71e024
[DEBUG] 29-02-2024 16:56:40.923 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@60ed0b9d
[DEBUG] 29-02-2024 16:56:40.923 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@60ed0b9d
[DEBUG] 29-02-2024 16:56:40.924 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@7f5e6833
[DEBUG] 29-02-2024 16:56:40.925 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@7f5e6833
[DEBUG] 29-02-2024 16:56:40.925 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@2c674d58
[DEBUG] 29-02-2024 16:56:40.926 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@2c674d58
[DEBUG] 29-02-2024 16:56:40.927 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@3c07e830
[DEBUG] 29-02-2024 16:56:40.930 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@3c07e830
[DEBUG] 29-02-2024 16:56:40.931 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@3c07e830
[DEBUG] 29-02-2024 16:56:40.932 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@34beadce
[DEBUG] 29-02-2024 16:56:40.933 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@34beadce
[DEBUG] 29-02-2024 16:56:40.933 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@34beadce
[DEBUG] 29-02-2024 16:56:40.934 [main] BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@382d549a
[DEBUG] 29-02-2024 16:56:40.935 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@382d549a
[DEBUG] 29-02-2024 16:56:40.935 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@2eb6d34a
[DEBUG] 29-02-2024 16:56:40.936 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@2d73e8c4
[DEBUG] 29-02-2024 16:56:40.936 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@2d73e8c4
[DEBUG] 29-02-2024 16:56:40.937 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@6ce2e079
[DEBUG] 29-02-2024 16:56:40.938 [main] BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@3e39e0fb
[DEBUG] 29-02-2024 16:56:40.938 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@260d48f5
[DEBUG] 29-02-2024 16:56:40.939 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@260d48f5
[DEBUG] 29-02-2024 16:56:40.939 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@260d48f5
[DEBUG] 29-02-2024 16:56:40.940 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@148ab138
[DEBUG] 29-02-2024 16:56:40.941 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@148ab138
[DEBUG] 29-02-2024 16:56:40.941 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@148ab138
[DEBUG] 29-02-2024 16:56:40.942 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@6f106af8
[DEBUG] 29-02-2024 16:56:40.942 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@6f106af8
[DEBUG] 29-02-2024 16:56:40.943 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@6f106af8
[DEBUG] 29-02-2024 16:56:40.944 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@1edf71d9
[DEBUG] 29-02-2024 16:56:40.944 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@1edf71d9
[DEBUG] 29-02-2024 16:56:40.945 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@1edf71d9
[DEBUG] 29-02-2024 16:56:40.946 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@52d9d817
[DEBUG] 29-02-2024 16:56:40.946 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@52d9d817
[DEBUG] 29-02-2024 16:56:40.947 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@52d9d817
[DEBUG] 29-02-2024 16:56:40.948 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@131ba005
[DEBUG] 29-02-2024 16:56:40.948 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@131ba005
[DEBUG] 29-02-2024 16:56:40.949 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@7f305f34
[DEBUG] 29-02-2024 16:56:40.949 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@7f305f34
[DEBUG] 29-02-2024 16:56:40.951 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@1a84a8b2
[DEBUG] 29-02-2024 16:56:40.952 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@1a84a8b2
[DEBUG] 29-02-2024 16:56:40.952 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@1a84a8b2
[DEBUG] 29-02-2024 16:56:40.953 [main] BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@601d295
[DEBUG] 29-02-2024 16:56:40.954 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@485451d8
[DEBUG] 29-02-2024 16:56:40.956 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@485451d8
[DEBUG] 29-02-2024 16:56:40.956 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@35e07e19
[DEBUG] 29-02-2024 16:56:40.957 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@a1e912f
[DEBUG] 29-02-2024 16:56:40.958 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@a1e912f
[DEBUG] 29-02-2024 16:56:40.958 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@a1e912f
[DEBUG] 29-02-2024 16:56:40.959 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@2036f83
[DEBUG] 29-02-2024 16:56:40.960 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@68b3248a
[DEBUG] 29-02-2024 16:56:40.960 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@5e158f33
[DEBUG] 29-02-2024 16:56:40.961 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@20fcea37
[DEBUG] 29-02-2024 16:56:40.961 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@20fcea37
[DEBUG] 29-02-2024 16:56:40.962 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@399af6dc
[DEBUG] 29-02-2024 16:56:40.962 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@399af6dc
[DEBUG] 29-02-2024 16:56:40.963 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@48fc0211
[DEBUG] 29-02-2024 16:56:40.963 [main] BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@3ae2702a
[DEBUG] 29-02-2024 16:56:40.964 [main] BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@7d088813
[DEBUG] 29-02-2024 16:56:40.965 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@134abd78
[DEBUG] 29-02-2024 16:56:40.965 [main] BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@3b0ed98a
[DEBUG] 29-02-2024 16:56:40.972 [main] BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@12448de1
[DEBUG] 29-02-2024 16:56:40.973 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@2b35c7aa
[DEBUG] 29-02-2024 16:56:40.974 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@2b35c7aa
[DEBUG] 29-02-2024 16:56:40.975 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@6dd20ec9
[DEBUG] 29-02-2024 16:56:40.977 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@6dd20ec9
[DEBUG] 29-02-2024 16:56:40.978 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@20dd5870
[DEBUG] 29-02-2024 16:56:40.978 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@20dd5870
[DEBUG] 29-02-2024 16:56:40.979 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@1640f20f
[DEBUG] 29-02-2024 16:56:40.979 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@1640f20f
[DEBUG] 29-02-2024 16:56:40.980 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@134d7ffa
[DEBUG] 29-02-2024 16:56:40.980 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@134d7ffa
[DEBUG] 29-02-2024 16:56:40.981 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@6e948f1c
[DEBUG] 29-02-2024 16:56:40.981 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@24405466
[DEBUG] 29-02-2024 16:56:40.982 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@35010a6b
[DEBUG] 29-02-2024 16:56:40.983 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@35010a6b
[DEBUG] 29-02-2024 16:56:40.983 [main] BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@4d4b019e
[DEBUG] 29-02-2024 16:56:40.984 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@7ed8b44
[DEBUG] 29-02-2024 16:56:40.985 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@21280cbb
[DEBUG] 29-02-2024 16:56:40.985 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@1cc708a7
[DEBUG] 29-02-2024 16:56:40.986 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@1cc708a7
[DEBUG] 29-02-2024 16:56:40.986 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@995ad50
[DEBUG] 29-02-2024 16:56:40.987 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@6249a08d
[DEBUG] 29-02-2024 16:56:40.987 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@36525ab
[DEBUG] 29-02-2024 16:56:40.988 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@36525ab
[DEBUG] 29-02-2024 16:56:40.988 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@27438750
[DEBUG] 29-02-2024 16:56:40.989 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@27438750
[DEBUG] 29-02-2024 16:56:40.989 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@39851c5
[DEBUG] 29-02-2024 16:56:40.990 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@39851c5
[DEBUG] 29-02-2024 16:56:40.990 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@39851c5
[DEBUG] 29-02-2024 16:56:40.991 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@2c7ad4f3
[DEBUG] 29-02-2024 16:56:40.991 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@2c7ad4f3
[DEBUG] 29-02-2024 16:56:40.992 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@2c7ad4f3
[DEBUG] 29-02-2024 16:56:40.992 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@698f4aa
[DEBUG] 29-02-2024 16:56:40.993 [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@3dda8a2e
[DEBUG] 29-02-2024 16:56:40.993 [main] BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@7c0de229
[DEBUG] 29-02-2024 16:56:40.994 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@7c0de229
[DEBUG] 29-02-2024 16:56:40.994 [main] BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@6aa6c17
[DEBUG] 29-02-2024 16:56:40.994 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@6aa6c17
[DEBUG] 29-02-2024 16:56:40.995 [main] BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@6aa6c17
[DEBUG] 29-02-2024 16:56:40.995 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@4756e5cc
[DEBUG] 29-02-2024 16:56:40.996 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@2e349cf2
[DEBUG] 29-02-2024 16:56:40.996 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@3dbb3fb7
[DEBUG] 29-02-2024 16:56:40.996 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@3dbb3fb7
[DEBUG] 29-02-2024 16:56:40.997 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@68a426c3
[DEBUG] 29-02-2024 16:56:40.997 [main] BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@68a426c3
[DEBUG] 29-02-2024 16:56:40.998 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@68a426c3
[DEBUG] 29-02-2024 16:56:40.998 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@182cc69e
[DEBUG] 29-02-2024 16:56:40.998 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@182cc69e
[DEBUG] 29-02-2024 16:56:40.999 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@12f51a65
[DEBUG] 29-02-2024 16:56:40.999 [main] BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@12f51a65
[DEBUG] 29-02-2024 16:56:41.000 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@7657d90b
[DEBUG] 29-02-2024 16:56:41.000 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@7657d90b
[DEBUG] 29-02-2024 16:56:41.001 [main] BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@3f0c6b3c
[DEBUG] 29-02-2024 16:56:41.001 [main] BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@3f0c6b3c
[DEBUG] 29-02-2024 16:56:41.002 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@416a4275
[DEBUG] 29-02-2024 16:56:41.002 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@416a4275
[DEBUG] 29-02-2024 16:56:41.002 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@7bf65e0f
[DEBUG] 29-02-2024 16:56:41.020 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@6cf047cf
[DEBUG] 29-02-2024 16:56:41.021 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@6cf047cf
[DEBUG] 29-02-2024 16:56:41.025 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@2d4f67e
[DEBUG] 29-02-2024 16:56:41.026 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@1282f784
[DEBUG] 29-02-2024 16:56:41.026 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@41167ded
[DEBUG] 29-02-2024 16:56:41.027 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@13e1e816
[DEBUG] 29-02-2024 16:56:41.027 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@36238b12
[DEBUG] 29-02-2024 16:56:41.027 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@33187485
[DEBUG] 29-02-2024 16:56:41.028 [main] BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@41938e1e
[DEBUG] 29-02-2024 16:56:41.045 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@5d2e6f62
[DEBUG] 29-02-2024 16:56:41.046 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@77ff14ce
[DEBUG] 29-02-2024 16:56:42.694 [main] DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@51d88c38) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3ea2f72e)
[DEBUG] 29-02-2024 16:56:42.700 [main] JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
[DEBUG] 29-02-2024 16:56:42.700 [main] JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 29-02-2024 16:56:42.727 [main] BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@1ae9d0e4
[DEBUG] 29-02-2024 16:56:42.728 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@1ae9d0e4
[DEBUG] 29-02-2024 16:56:42.728 [main] BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@6cf047cf`
[DEBUG] 29-02-2024 16:56:42.732 [main] JdbcTypeRegistry - addDescriptor(3100, NumericTypeDescriptor) replaced previous registration(org.hibernate.dialect.PostgreSQLIntervalSecondJdbcType@67e4928c)
[DEBUG] 29-02-2024 16:56:42.773 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 29-02-2024 16:56:42.773 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 29-02-2024 16:56:42.774 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 29-02-2024 16:56:42.774 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 29-02-2024 16:56:42.774 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 29-02-2024 16:56:42.775 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 29-02-2024 16:56:42.777 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 29-02-2024 16:56:42.777 [main] BasicTypeRegistry - Adding type registration OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 29-02-2024 16:56:42.778 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 29-02-2024 16:56:42.782 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@126254ec] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@275902e1]
[WARN ] 29-02-2024 16:56:43.276 [main] InFlightMetadataCollectorImpl - HHH000069: Duplicate generator name generator
[INFO ] 29-02-2024 16:56:43.462 [main] BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
[INFO ] 29-02-2024 16:56:45.414 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 29-02-2024 16:56:45.416 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@126254ec] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@e2498a3]
[TRACE] 29-02-2024 16:56:45.425 [main] TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@e2498a3] for TypeConfiguration
[INFO ] 29-02-2024 16:56:47.043 [main] SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
[INFO ] 29-02-2024 16:56:47.043 [main] TestDispatcherServlet - Initializing Servlet ''
[INFO ] 29-02-2024 16:56:47.052 [main] TestDispatcherServlet - Completed initialization in 3 ms
[INFO ] 29-02-2024 16:56:47.375 [main] TestCRUDUserProducts - Started TestCRUDUserProducts in 13.419 seconds (process running for 17.333)
[TRACE] 29-02-2024 16:56:48.244 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@e2498a3] for TypeConfiguration
[DEBUG] 29-02-2024 16:56:48.245 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@8189139] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@e2498a3]
[INFO ] 29-02-2024 16:58:08.755 [background-preinit] Version - HV000001: Hibernate Validator 8.0.1.Final
[INFO ] 29-02-2024 16:58:08.862 [main] TestSpringBootApplication - Starting TestSpringBootApplication using Java 17.0.10 with PID 1771338 (/home/dima/backend_microservice/UserProductsMicroService/target/classes started by dima in /home/dima/backend_microservice/UserProductsMicroService)
[INFO ] 29-02-2024 16:58:08.881 [main] TestSpringBootApplication - No active profile set, falling back to 1 default profile: "default"
[INFO ] 29-02-2024 16:58:10.749 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO ] 29-02-2024 16:58:11.146 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 374 ms. Found 1 JPA repository interfaces.
[ERROR] 29-02-2024 16:58:13.302 [main] AprLifecycleListener - An incompatible version [1.2.23] of the Apache Tomcat Native library is installed, while Tomcat requires version [1.2.34]
[INFO ] 29-02-2024 16:58:14.501 [main] TomcatWebServer - Tomcat initialized with port(s): 8300 (http)
[INFO ] 29-02-2024 16:58:14.524 [main] Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8300"]
[INFO ] 29-02-2024 16:58:14.534 [main] StandardService - Starting service [Tomcat]
[INFO ] 29-02-2024 16:58:14.535 [main] StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.11]
[INFO ] 29-02-2024 16:58:16.056 [main] TldScanner - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
[INFO ] 29-02-2024 16:58:16.075 [main] [/users_products_api] - Initializing Spring embedded WebApplicationContext
[INFO ] 29-02-2024 16:58:16.082 [main] ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 7035 ms
[INFO ] 29-02-2024 16:58:16.555 [main] Version - HHH000412: Hibernate ORM core version 6.2.6.Final
[INFO ] 29-02-2024 16:58:16.562 [main] Environment - HHH000406: Using bytecode reflection optimizer
[DEBUG] 29-02-2024 16:58:16.945 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@7f42b194
[DEBUG] 29-02-2024 16:58:16.946 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@7f42b194
[DEBUG] 29-02-2024 16:58:16.947 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@7f42b194
[DEBUG] 29-02-2024 16:58:16.948 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@8eb6f9a
[DEBUG] 29-02-2024 16:58:16.948 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@8eb6f9a
[DEBUG] 29-02-2024 16:58:16.949 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@29170a47
[DEBUG] 29-02-2024 16:58:16.949 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@29170a47
[DEBUG] 29-02-2024 16:58:16.950 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@2a8f8555
[DEBUG] 29-02-2024 16:58:16.950 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@2a8f8555
[DEBUG] 29-02-2024 16:58:16.951 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@402b4f81
[DEBUG] 29-02-2024 16:58:16.951 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@402b4f81
[DEBUG] 29-02-2024 16:58:16.951 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@402b4f81
[DEBUG] 29-02-2024 16:58:16.952 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@13ef7fa1
[DEBUG] 29-02-2024 16:58:16.952 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@13ef7fa1
[DEBUG] 29-02-2024 16:58:16.953 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@13ef7fa1
[DEBUG] 29-02-2024 16:58:16.953 [main] BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@23b1aa9
[DEBUG] 29-02-2024 16:58:16.954 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@23b1aa9
[DEBUG] 29-02-2024 16:58:16.954 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@54489296
[DEBUG] 29-02-2024 16:58:16.955 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@4e8598d9
[DEBUG] 29-02-2024 16:58:16.955 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@4e8598d9
[DEBUG] 29-02-2024 16:58:16.955 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@267ff4df
[DEBUG] 29-02-2024 16:58:16.956 [main] BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@7c4b5ceb
[DEBUG] 29-02-2024 16:58:16.956 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@6c07add6
[DEBUG] 29-02-2024 16:58:16.957 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@6c07add6
[DEBUG] 29-02-2024 16:58:16.958 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@6c07add6
[DEBUG] 29-02-2024 16:58:16.958 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@e26a3df
[DEBUG] 29-02-2024 16:58:16.959 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@e26a3df
[DEBUG] 29-02-2024 16:58:16.959 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@e26a3df
[DEBUG] 29-02-2024 16:58:16.960 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@57a667c8
[DEBUG] 29-02-2024 16:58:16.960 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@57a667c8
[DEBUG] 29-02-2024 16:58:16.961 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@57a667c8
[DEBUG] 29-02-2024 16:58:16.961 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@712cd5d3
[DEBUG] 29-02-2024 16:58:16.962 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@712cd5d3
[DEBUG] 29-02-2024 16:58:16.962 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@712cd5d3
[DEBUG] 29-02-2024 16:58:16.963 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@2094bf3d
[DEBUG] 29-02-2024 16:58:16.963 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@2094bf3d
[DEBUG] 29-02-2024 16:58:16.964 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@2094bf3d
[DEBUG] 29-02-2024 16:58:16.964 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@1b17d8ab
[DEBUG] 29-02-2024 16:58:16.965 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@1b17d8ab
[DEBUG] 29-02-2024 16:58:16.965 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@7f6b7426
[DEBUG] 29-02-2024 16:58:16.965 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@7f6b7426
[DEBUG] 29-02-2024 16:58:16.966 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@687eb455
[DEBUG] 29-02-2024 16:58:16.966 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@687eb455
[DEBUG] 29-02-2024 16:58:16.967 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@687eb455
[DEBUG] 29-02-2024 16:58:16.967 [main] BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@6d969330
[DEBUG] 29-02-2024 16:58:16.967 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@4861cca9
[DEBUG] 29-02-2024 16:58:16.968 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@4861cca9
[DEBUG] 29-02-2024 16:58:16.969 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@6c8f4bc7
[DEBUG] 29-02-2024 16:58:16.969 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@714e861f
[DEBUG] 29-02-2024 16:58:16.970 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@714e861f
[DEBUG] 29-02-2024 16:58:16.970 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@714e861f
[DEBUG] 29-02-2024 16:58:16.971 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@28989415
[DEBUG] 29-02-2024 16:58:16.971 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@6eda012b
[DEBUG] 29-02-2024 16:58:16.971 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@781dbe44
[DEBUG] 29-02-2024 16:58:16.971 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@7d66a126
[DEBUG] 29-02-2024 16:58:16.972 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@7d66a126
[DEBUG] 29-02-2024 16:58:16.972 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@1132baa3
[DEBUG] 29-02-2024 16:58:16.973 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@1132baa3
[DEBUG] 29-02-2024 16:58:16.973 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@2fdf22f7
[DEBUG] 29-02-2024 16:58:16.973 [main] BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@3a2546d6
[DEBUG] 29-02-2024 16:58:16.975 [main] BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@7282af25
[DEBUG] 29-02-2024 16:58:16.976 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@7661e474
[DEBUG] 29-02-2024 16:58:16.976 [main] BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@20ffb8d5
[DEBUG] 29-02-2024 16:58:16.976 [main] BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@307c59ea
[DEBUG] 29-02-2024 16:58:16.977 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@57e03347
[DEBUG] 29-02-2024 16:58:16.977 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@57e03347
[DEBUG] 29-02-2024 16:58:16.977 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@2edb2f8b
[DEBUG] 29-02-2024 16:58:16.978 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@2edb2f8b
[DEBUG] 29-02-2024 16:58:16.978 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@733f1395
[DEBUG] 29-02-2024 16:58:16.978 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@733f1395
[DEBUG] 29-02-2024 16:58:16.979 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@21dea711
[DEBUG] 29-02-2024 16:58:16.979 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@21dea711
[DEBUG] 29-02-2024 16:58:16.979 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@7772d266
[DEBUG] 29-02-2024 16:58:16.980 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@7772d266
[DEBUG] 29-02-2024 16:58:16.980 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@a21c74
[DEBUG] 29-02-2024 16:58:16.980 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@b8a144e
[DEBUG] 29-02-2024 16:58:16.981 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@5fb8dc01
[DEBUG] 29-02-2024 16:58:16.981 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@5fb8dc01
[DEBUG] 29-02-2024 16:58:16.982 [main] BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@3e38c472
[DEBUG] 29-02-2024 16:58:16.982 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2ee92e7d
[DEBUG] 29-02-2024 16:58:16.982 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@759a678a
[DEBUG] 29-02-2024 16:58:16.983 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@6cdbe5ec
[DEBUG] 29-02-2024 16:58:16.984 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@6cdbe5ec
[DEBUG] 29-02-2024 16:58:16.984 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@14b8a751
[DEBUG] 29-02-2024 16:58:16.984 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@7345f97d
[DEBUG] 29-02-2024 16:58:16.985 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@554566a8
[DEBUG] 29-02-2024 16:58:16.985 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@554566a8
[DEBUG] 29-02-2024 16:58:16.986 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@66020d69
[DEBUG] 29-02-2024 16:58:16.986 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@66020d69
[DEBUG] 29-02-2024 16:58:16.986 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@3751acd7
[DEBUG] 29-02-2024 16:58:16.986 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@3751acd7
[DEBUG] 29-02-2024 16:58:16.987 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@3751acd7
[DEBUG] 29-02-2024 16:58:16.987 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@6b832551
[DEBUG] 29-02-2024 16:58:16.987 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@6b832551
[DEBUG] 29-02-2024 16:58:16.988 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@6b832551
[DEBUG] 29-02-2024 16:58:16.988 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@150d6eaf
[DEBUG] 29-02-2024 16:58:16.989 [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@63124022
[DEBUG] 29-02-2024 16:58:16.989 [main] BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@591f6f83
[DEBUG] 29-02-2024 16:58:16.990 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@591f6f83
[DEBUG] 29-02-2024 16:58:16.990 [main] BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@2b44605c
[DEBUG] 29-02-2024 16:58:16.990 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@2b44605c
[DEBUG] 29-02-2024 16:58:16.990 [main] BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@2b44605c
[DEBUG] 29-02-2024 16:58:16.991 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@55421b8d
[DEBUG] 29-02-2024 16:58:16.991 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@24a04257
[DEBUG] 29-02-2024 16:58:16.992 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@6615237
[DEBUG] 29-02-2024 16:58:16.992 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@6615237
[DEBUG] 29-02-2024 16:58:16.993 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@eaf8427
[DEBUG] 29-02-2024 16:58:16.993 [main] BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@eaf8427
[DEBUG] 29-02-2024 16:58:16.993 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@eaf8427
[DEBUG] 29-02-2024 16:58:16.994 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@4bf4680c
[DEBUG] 29-02-2024 16:58:16.994 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@4bf4680c
[DEBUG] 29-02-2024 16:58:16.994 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@6d6039df
[DEBUG] 29-02-2024 16:58:16.995 [main] BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@6d6039df
[DEBUG] 29-02-2024 16:58:16.995 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@611c3eae
[DEBUG] 29-02-2024 16:58:16.996 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@611c3eae
[DEBUG] 29-02-2024 16:58:16.996 [main] BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@13e00016
[DEBUG] 29-02-2024 16:58:16.996 [main] BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@13e00016
[DEBUG] 29-02-2024 16:58:16.997 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@7b3cbe6e
[DEBUG] 29-02-2024 16:58:16.997 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@7b3cbe6e
[DEBUG] 29-02-2024 16:58:16.997 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@177ede17
[DEBUG] 29-02-2024 16:58:17.012 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@38c460e8
[DEBUG] 29-02-2024 16:58:17.013 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@38c460e8
[DEBUG] 29-02-2024 16:58:17.016 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@6b16de91
[DEBUG] 29-02-2024 16:58:17.016 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@71bb8b34
[DEBUG] 29-02-2024 16:58:17.017 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@197ce367
[DEBUG] 29-02-2024 16:58:17.017 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@383cdd4d
[DEBUG] 29-02-2024 16:58:17.018 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@65036e8d
[DEBUG] 29-02-2024 16:58:17.018 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@48ccbb32
[DEBUG] 29-02-2024 16:58:17.018 [main] BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@36551e97
[DEBUG] 29-02-2024 16:58:17.019 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@685d7ba5
[DEBUG] 29-02-2024 16:58:17.019 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@16d41725
[DEBUG] 29-02-2024 16:58:18.327 [main] DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7b3a6e95) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4ebfb045)
[DEBUG] 29-02-2024 16:58:18.333 [main] JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
[DEBUG] 29-02-2024 16:58:18.333 [main] JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 29-02-2024 16:58:18.355 [main] BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@70884875
[DEBUG] 29-02-2024 16:58:18.356 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@70884875
[DEBUG] 29-02-2024 16:58:18.356 [main] BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@38c460e8`
[DEBUG] 29-02-2024 16:58:18.359 [main] JdbcTypeRegistry - addDescriptor(3100, NumericTypeDescriptor) replaced previous registration(org.hibernate.dialect.PostgreSQLIntervalSecondJdbcType@31f7eb8)
[DEBUG] 29-02-2024 16:58:18.374 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 29-02-2024 16:58:18.374 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 29-02-2024 16:58:18.374 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 29-02-2024 16:58:18.375 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 29-02-2024 16:58:18.375 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 29-02-2024 16:58:18.375 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 29-02-2024 16:58:18.377 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 29-02-2024 16:58:18.378 [main] BasicTypeRegistry - Adding type registration OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 29-02-2024 16:58:18.378 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 29-02-2024 16:58:18.381 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@10745a02] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@3e2d8623]
[WARN ] 29-02-2024 16:58:18.842 [main] InFlightMetadataCollectorImpl - HHH000069: Duplicate generator name generator
[INFO ] 29-02-2024 16:58:18.996 [main] BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
[INFO ] 29-02-2024 16:58:21.759 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 29-02-2024 16:58:21.761 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@10745a02] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@40fd1a78]
[TRACE] 29-02-2024 16:58:21.805 [main] TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@40fd1a78] for TypeConfiguration
[WARN ] 29-02-2024 16:58:22.906 [main] JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[INFO ] 29-02-2024 16:58:23.935 [main] Http11NioProtocol - Starting ProtocolHandler ["http-nio-8300"]
[INFO ] 29-02-2024 16:58:24.052 [main] TomcatWebServer - Tomcat started on port(s): 8300 (http) with context path '/users_products_api'
[INFO ] 29-02-2024 16:58:24.112 [main] TestSpringBootApplication - Started TestSpringBootApplication in 16.332 seconds (process running for 19.361)
[INFO ] 29-02-2024 16:58:29.828 [http-nio-8300-exec-1] [/users_products_api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[INFO ] 29-02-2024 16:58:29.829 [http-nio-8300-exec-1] DispatcherServlet - Initializing Servlet 'dispatcherServlet'
[INFO ] 29-02-2024 16:58:29.832 [http-nio-8300-exec-1] DispatcherServlet - Completed initialization in 3 ms
[DEBUG] 29-02-2024 16:58:30.188 [http-nio-8300-exec-1] SQL - select e1_0.id,e1_0.email,e1_0.login,e1_0.name,e1_0.password,p1_0.id_user,p1_0.id,p1_0.name,p1_0.page_image,p1_0.price,p1_0.raiting,p1_0.year_issue from users e1_0 left join products p1_0 on e1_0.id=p1_0.id_user where e1_0.id=?
[DEBUG] 29-02-2024 16:58:30.513 [http-nio-8300-exec-1] SQL - select nextval('products_id_seq')
[DEBUG] 29-02-2024 16:58:30.570 [http-nio-8300-exec-1] SQL - insert into products (name,page_image,price,raiting,id_user,year_issue,id) values (?,?,?,?,?,?,?)
[DEBUG] 29-02-2024 16:58:38.978 [http-nio-8300-exec-3] SQL - select e1_0.id,e1_0.email,e1_0.login,e1_0.name,e1_0.password,p1_0.id_user,p1_0.id,p1_0.name,p1_0.page_image,p1_0.price,p1_0.raiting,p1_0.year_issue from users e1_0 left join products p1_0 on e1_0.id=p1_0.id_user where e1_0.id=?
[DEBUG] 29-02-2024 16:58:39.002 [http-nio-8300-exec-3] SQL - select nextval('products_id_seq')
[DEBUG] 29-02-2024 16:58:39.007 [http-nio-8300-exec-3] SQL - insert into products (name,page_image,price,raiting,id_user,year_issue,id) values (?,?,?,?,?,?,?)
[TRACE] 29-02-2024 16:58:44.193 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@40fd1a78] for TypeConfiguration
[DEBUG] 29-02-2024 16:58:44.194 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@2926589b] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@40fd1a78]
[INFO ] 29-02-2024 17:13:06.468 [background-preinit] Version - HV000001: Hibernate Validator 8.0.1.Final
[INFO ] 29-02-2024 17:13:06.598 [main] TestCRUDUserProducts - Starting TestCRUDUserProducts using Java 17.0.10 with PID 1778922 (started by dima in /home/dima/backend_microservice/UserProductsMicroService)
[INFO ] 29-02-2024 17:13:06.609 [main] TestCRUDUserProducts - No active profile set, falling back to 1 default profile: "default"
[INFO ] 29-02-2024 17:13:07.606 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO ] 29-02-2024 17:13:08.051 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 424 ms. Found 1 JPA repository interfaces.
[INFO ] 29-02-2024 17:13:12.037 [main] Version - HHH000412: Hibernate ORM core version 6.2.6.Final
[INFO ] 29-02-2024 17:13:12.047 [main] Environment - HHH000406: Using bytecode reflection optimizer
[DEBUG] 29-02-2024 17:13:12.528 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@4d4b019e
[DEBUG] 29-02-2024 17:13:12.529 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@4d4b019e
[DEBUG] 29-02-2024 17:13:12.530 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@4d4b019e
[DEBUG] 29-02-2024 17:13:12.531 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@7ed8b44
[DEBUG] 29-02-2024 17:13:12.532 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@7ed8b44
[DEBUG] 29-02-2024 17:13:12.532 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@21280cbb
[DEBUG] 29-02-2024 17:13:12.533 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@21280cbb
[DEBUG] 29-02-2024 17:13:12.534 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@1cc708a7
[DEBUG] 29-02-2024 17:13:12.534 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@1cc708a7
[DEBUG] 29-02-2024 17:13:12.535 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@995ad50
[DEBUG] 29-02-2024 17:13:12.536 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@995ad50
[DEBUG] 29-02-2024 17:13:12.536 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@995ad50
[DEBUG] 29-02-2024 17:13:12.537 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@6249a08d
[DEBUG] 29-02-2024 17:13:12.537 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@6249a08d
[DEBUG] 29-02-2024 17:13:12.538 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@6249a08d
[DEBUG] 29-02-2024 17:13:12.539 [main] BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@36525ab
[DEBUG] 29-02-2024 17:13:12.539 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@36525ab
[DEBUG] 29-02-2024 17:13:12.540 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@27438750
[DEBUG] 29-02-2024 17:13:12.541 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@39851c5
[DEBUG] 29-02-2024 17:13:12.541 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@39851c5
[DEBUG] 29-02-2024 17:13:12.542 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@2c7ad4f3
[DEBUG] 29-02-2024 17:13:12.542 [main] BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@698f4aa
[DEBUG] 29-02-2024 17:13:12.543 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@3dda8a2e
[DEBUG] 29-02-2024 17:13:12.544 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@3dda8a2e
[DEBUG] 29-02-2024 17:13:12.545 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@3dda8a2e
[DEBUG] 29-02-2024 17:13:12.545 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@7c0de229
[DEBUG] 29-02-2024 17:13:12.546 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@7c0de229
[DEBUG] 29-02-2024 17:13:12.547 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@7c0de229
[DEBUG] 29-02-2024 17:13:12.547 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@6aa6c17
[DEBUG] 29-02-2024 17:13:12.548 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@6aa6c17
[DEBUG] 29-02-2024 17:13:12.549 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@6aa6c17
[DEBUG] 29-02-2024 17:13:12.549 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@4756e5cc
[DEBUG] 29-02-2024 17:13:12.550 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@4756e5cc
[DEBUG] 29-02-2024 17:13:12.550 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@4756e5cc
[DEBUG] 29-02-2024 17:13:12.551 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@2e349cf2
[DEBUG] 29-02-2024 17:13:12.552 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@2e349cf2
[DEBUG] 29-02-2024 17:13:12.552 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@2e349cf2
[DEBUG] 29-02-2024 17:13:12.553 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@3dbb3fb7
[DEBUG] 29-02-2024 17:13:12.553 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@3dbb3fb7
[DEBUG] 29-02-2024 17:13:12.554 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@68a426c3
[DEBUG] 29-02-2024 17:13:12.554 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@68a426c3
[DEBUG] 29-02-2024 17:13:12.555 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@182cc69e
[DEBUG] 29-02-2024 17:13:12.556 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@182cc69e
[DEBUG] 29-02-2024 17:13:12.556 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@182cc69e
[DEBUG] 29-02-2024 17:13:12.556 [main] BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@12f51a65
[DEBUG] 29-02-2024 17:13:12.557 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@7657d90b
[DEBUG] 29-02-2024 17:13:12.557 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@7657d90b
[DEBUG] 29-02-2024 17:13:12.558 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@3f0c6b3c
[DEBUG] 29-02-2024 17:13:12.558 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@416a4275
[DEBUG] 29-02-2024 17:13:12.559 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@416a4275
[DEBUG] 29-02-2024 17:13:12.559 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@416a4275
[DEBUG] 29-02-2024 17:13:12.560 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@7bf65e0f
[DEBUG] 29-02-2024 17:13:12.560 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@33215ffb
[DEBUG] 29-02-2024 17:13:12.561 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@6f289728
[DEBUG] 29-02-2024 17:13:12.561 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@7c421952
[DEBUG] 29-02-2024 17:13:12.562 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@7c421952
[DEBUG] 29-02-2024 17:13:12.562 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@350d26f3
[DEBUG] 29-02-2024 17:13:12.564 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@350d26f3
[DEBUG] 29-02-2024 17:13:12.564 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@c6a692e
[DEBUG] 29-02-2024 17:13:12.565 [main] BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@27502e5c
[DEBUG] 29-02-2024 17:13:12.565 [main] BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@4b343b6d
[DEBUG] 29-02-2024 17:13:12.566 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@17d2b646
[DEBUG] 29-02-2024 17:13:12.566 [main] BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@48ae9e8b
[DEBUG] 29-02-2024 17:13:12.567 [main] BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@6eaa6b0c
[DEBUG] 29-02-2024 17:13:12.567 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@4afcae7
[DEBUG] 29-02-2024 17:13:12.568 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@4afcae7
[DEBUG] 29-02-2024 17:13:12.568 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@6cd2cb2
[DEBUG] 29-02-2024 17:13:12.569 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@6cd2cb2
[DEBUG] 29-02-2024 17:13:12.569 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@3a2bb026
[DEBUG] 29-02-2024 17:13:12.570 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@3a2bb026
[DEBUG] 29-02-2024 17:13:12.570 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@7645e64
[DEBUG] 29-02-2024 17:13:12.571 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@7645e64
[DEBUG] 29-02-2024 17:13:12.571 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@7de6549d
[DEBUG] 29-02-2024 17:13:12.572 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@7de6549d
[DEBUG] 29-02-2024 17:13:12.572 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@12214f2f
[DEBUG] 29-02-2024 17:13:12.573 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@756c67cd
[DEBUG] 29-02-2024 17:13:12.574 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@50de907a
[DEBUG] 29-02-2024 17:13:12.574 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@50de907a
[DEBUG] 29-02-2024 17:13:12.574 [main] BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@1fd37440
[DEBUG] 29-02-2024 17:13:12.575 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@79308a2
[DEBUG] 29-02-2024 17:13:12.575 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@11574592
[DEBUG] 29-02-2024 17:13:12.576 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@352e5a82
[DEBUG] 29-02-2024 17:13:12.576 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@352e5a82
[DEBUG] 29-02-2024 17:13:12.577 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@315b5913
[DEBUG] 29-02-2024 17:13:12.577 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@2e929182
[DEBUG] 29-02-2024 17:13:12.578 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@5423a17
[DEBUG] 29-02-2024 17:13:12.578 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@5423a17
[DEBUG] 29-02-2024 17:13:12.579 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@42ff9a77
[DEBUG] 29-02-2024 17:13:12.579 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@42ff9a77
[DEBUG] 29-02-2024 17:13:12.580 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@2987d0fa
[DEBUG] 29-02-2024 17:13:12.580 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@2987d0fa
[DEBUG] 29-02-2024 17:13:12.581 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@2987d0fa
[DEBUG] 29-02-2024 17:13:12.581 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@13234ac9
[DEBUG] 29-02-2024 17:13:12.582 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@13234ac9
[DEBUG] 29-02-2024 17:13:12.582 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@13234ac9
[DEBUG] 29-02-2024 17:13:12.583 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@7254838
[DEBUG] 29-02-2024 17:13:12.583 [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@39374689
[DEBUG] 29-02-2024 17:13:12.583 [main] BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@2e204155
[DEBUG] 29-02-2024 17:13:12.584 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@2e204155
[DEBUG] 29-02-2024 17:13:12.584 [main] BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@27dc335a
[DEBUG] 29-02-2024 17:13:12.584 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@27dc335a
[DEBUG] 29-02-2024 17:13:12.585 [main] BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@27dc335a
[DEBUG] 29-02-2024 17:13:12.585 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@a95cb11
[DEBUG] 29-02-2024 17:13:12.586 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@915d7c4
[DEBUG] 29-02-2024 17:13:12.586 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@2513155a
[DEBUG] 29-02-2024 17:13:12.587 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@2513155a
[DEBUG] 29-02-2024 17:13:12.587 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@6313b441
[DEBUG] 29-02-2024 17:13:12.587 [main] BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@6313b441
[DEBUG] 29-02-2024 17:13:12.588 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@6313b441
[DEBUG] 29-02-2024 17:13:12.588 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@47fa3671
[DEBUG] 29-02-2024 17:13:12.588 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@47fa3671
[DEBUG] 29-02-2024 17:13:12.589 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@60f662bd
[DEBUG] 29-02-2024 17:13:12.589 [main] BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@60f662bd
[DEBUG] 29-02-2024 17:13:12.590 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@5df2023c
[DEBUG] 29-02-2024 17:13:12.590 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@5df2023c
[DEBUG] 29-02-2024 17:13:12.590 [main] BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@23bd047f
[DEBUG] 29-02-2024 17:13:12.591 [main] BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@23bd047f
[DEBUG] 29-02-2024 17:13:12.591 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@3562e7c7
[DEBUG] 29-02-2024 17:13:12.591 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@3562e7c7
[DEBUG] 29-02-2024 17:13:12.592 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@66d2885c
[DEBUG] 29-02-2024 17:13:12.608 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@44a93f8a
[DEBUG] 29-02-2024 17:13:12.609 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@44a93f8a
[DEBUG] 29-02-2024 17:13:12.612 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@608b35fa
[DEBUG] 29-02-2024 17:13:12.613 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@13a268cd
[DEBUG] 29-02-2024 17:13:12.613 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@7b3a6e95
[DEBUG] 29-02-2024 17:13:12.614 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@4ebfb045
[DEBUG] 29-02-2024 17:13:12.614 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@77a2688d
[DEBUG] 29-02-2024 17:13:12.615 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@77c692b4
[DEBUG] 29-02-2024 17:13:12.615 [main] BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@5fa0141f
[DEBUG] 29-02-2024 17:13:12.616 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@6caeba36
[DEBUG] 29-02-2024 17:13:12.616 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@8ac512e
[DEBUG] 29-02-2024 17:13:14.260 [main] DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@61d011e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3b56947a)
[DEBUG] 29-02-2024 17:13:14.266 [main] JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
[DEBUG] 29-02-2024 17:13:14.267 [main] JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 29-02-2024 17:13:14.291 [main] BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@54f373d4
[DEBUG] 29-02-2024 17:13:14.292 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@54f373d4
[DEBUG] 29-02-2024 17:13:14.292 [main] BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@44a93f8a`
[DEBUG] 29-02-2024 17:13:14.297 [main] JdbcTypeRegistry - addDescriptor(3100, NumericTypeDescriptor) replaced previous registration(org.hibernate.dialect.PostgreSQLIntervalSecondJdbcType@43778371)
[DEBUG] 29-02-2024 17:13:14.323 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 29-02-2024 17:13:14.324 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 29-02-2024 17:13:14.324 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 29-02-2024 17:13:14.325 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 29-02-2024 17:13:14.326 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 29-02-2024 17:13:14.327 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 29-02-2024 17:13:14.330 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 29-02-2024 17:13:14.331 [main] BasicTypeRegistry - Adding type registration OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 29-02-2024 17:13:14.331 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 29-02-2024 17:13:14.336 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@19924f15] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@621392ea]
[WARN ] 29-02-2024 17:13:14.888 [main] InFlightMetadataCollectorImpl - HHH000069: Duplicate generator name generator
[INFO ] 29-02-2024 17:13:15.227 [main] BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
[INFO ] 29-02-2024 17:13:17.302 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 29-02-2024 17:13:17.304 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@19924f15] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@84eafc2]
[TRACE] 29-02-2024 17:13:17.312 [main] TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@84eafc2] for TypeConfiguration
[INFO ] 29-02-2024 17:13:19.138 [main] SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
[INFO ] 29-02-2024 17:13:19.138 [main] TestDispatcherServlet - Initializing Servlet ''
[INFO ] 29-02-2024 17:13:19.146 [main] TestDispatcherServlet - Completed initialization in 3 ms
[INFO ] 29-02-2024 17:13:19.471 [main] TestCRUDUserProducts - Started TestCRUDUserProducts in 13.768 seconds (process running for 18.043)
[TRACE] 29-02-2024 17:13:20.453 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@84eafc2] for TypeConfiguration
[DEBUG] 29-02-2024 17:13:20.454 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@3e6da30d] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@84eafc2]
[INFO ] 29-02-2024 17:15:46.665 [background-preinit] Version - HV000001: Hibernate Validator 8.0.1.Final
[INFO ] 29-02-2024 17:15:46.800 [main] TestCRUDUserProducts - Starting TestCRUDUserProducts using Java 17.0.10 with PID 1780399 (started by dima in /home/dima/backend_microservice/UserProductsMicroService)
[INFO ] 29-02-2024 17:15:46.858 [main] TestCRUDUserProducts - No active profile set, falling back to 1 default profile: "default"
[INFO ] 29-02-2024 17:15:47.996 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO ] 29-02-2024 17:15:48.461 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 444 ms. Found 1 JPA repository interfaces.
[INFO ] 29-02-2024 17:15:52.473 [main] Version - HHH000412: Hibernate ORM core version 6.2.6.Final
[INFO ] 29-02-2024 17:15:52.483 [main] Environment - HHH000406: Using bytecode reflection optimizer
[DEBUG] 29-02-2024 17:15:52.967 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@27dc335a
[DEBUG] 29-02-2024 17:15:52.968 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@27dc335a
[DEBUG] 29-02-2024 17:15:52.969 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@27dc335a
[DEBUG] 29-02-2024 17:15:52.970 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@a95cb11
[DEBUG] 29-02-2024 17:15:52.970 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@a95cb11
[DEBUG] 29-02-2024 17:15:52.971 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@915d7c4
[DEBUG] 29-02-2024 17:15:52.972 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@915d7c4
[DEBUG] 29-02-2024 17:15:52.973 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@2513155a
[DEBUG] 29-02-2024 17:15:52.973 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@2513155a
[DEBUG] 29-02-2024 17:15:52.974 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@6313b441
[DEBUG] 29-02-2024 17:15:52.975 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@6313b441
[DEBUG] 29-02-2024 17:15:52.975 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@6313b441
[DEBUG] 29-02-2024 17:15:52.976 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@47fa3671
[DEBUG] 29-02-2024 17:15:52.977 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@47fa3671
[DEBUG] 29-02-2024 17:15:52.978 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@47fa3671
[DEBUG] 29-02-2024 17:15:52.978 [main] BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@60f662bd
[DEBUG] 29-02-2024 17:15:52.979 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@60f662bd
[DEBUG] 29-02-2024 17:15:52.980 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@5df2023c
[DEBUG] 29-02-2024 17:15:52.980 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@23bd047f
[DEBUG] 29-02-2024 17:15:52.981 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@23bd047f
[DEBUG] 29-02-2024 17:15:52.982 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@3562e7c7
[DEBUG] 29-02-2024 17:15:52.982 [main] BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@66d2885c
[DEBUG] 29-02-2024 17:15:52.983 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@2bfc8558
[DEBUG] 29-02-2024 17:15:52.983 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@2bfc8558
[DEBUG] 29-02-2024 17:15:52.984 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@2bfc8558
[DEBUG] 29-02-2024 17:15:52.985 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@6029f2a4
[DEBUG] 29-02-2024 17:15:52.986 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@6029f2a4
[DEBUG] 29-02-2024 17:15:52.987 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@6029f2a4
[DEBUG] 29-02-2024 17:15:52.987 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@42576db9
[DEBUG] 29-02-2024 17:15:52.988 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@42576db9
[DEBUG] 29-02-2024 17:15:52.988 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@42576db9
[DEBUG] 29-02-2024 17:15:52.989 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@30358dc7
[DEBUG] 29-02-2024 17:15:52.990 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@30358dc7
[DEBUG] 29-02-2024 17:15:52.990 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@30358dc7
[DEBUG] 29-02-2024 17:15:52.991 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@7fac18dc
[DEBUG] 29-02-2024 17:15:52.991 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@7fac18dc
[DEBUG] 29-02-2024 17:15:52.992 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@7fac18dc
[DEBUG] 29-02-2024 17:15:52.993 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@50bf795f
[DEBUG] 29-02-2024 17:15:52.993 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@50bf795f
[DEBUG] 29-02-2024 17:15:52.994 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@29fcfc54
[DEBUG] 29-02-2024 17:15:52.995 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@29fcfc54
[DEBUG] 29-02-2024 17:15:52.995 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@353b0719
[DEBUG] 29-02-2024 17:15:52.996 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@353b0719
[DEBUG] 29-02-2024 17:15:52.997 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@353b0719
[DEBUG] 29-02-2024 17:15:52.997 [main] BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@2a4e939a
[DEBUG] 29-02-2024 17:15:52.998 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@110620d
[DEBUG] 29-02-2024 17:15:52.999 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@110620d
[DEBUG] 29-02-2024 17:15:52.999 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@4f402027
[DEBUG] 29-02-2024 17:15:53.017 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@22aee519
[DEBUG] 29-02-2024 17:15:53.018 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@22aee519
[DEBUG] 29-02-2024 17:15:53.019 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@22aee519
[DEBUG] 29-02-2024 17:15:53.019 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@7c226095
[DEBUG] 29-02-2024 17:15:53.023 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@7ea07516
[DEBUG] 29-02-2024 17:15:53.023 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@30af23fd
[DEBUG] 29-02-2024 17:15:53.024 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@65fc8edc
[DEBUG] 29-02-2024 17:15:53.024 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@65fc8edc
[DEBUG] 29-02-2024 17:15:53.025 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@a357c3e
[DEBUG] 29-02-2024 17:15:53.026 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@a357c3e
[DEBUG] 29-02-2024 17:15:53.027 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@7740b0ab
[DEBUG] 29-02-2024 17:15:53.028 [main] BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@3eb9c575
[DEBUG] 29-02-2024 17:15:53.029 [main] BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@3f322610
[DEBUG] 29-02-2024 17:15:53.030 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@1e477944
[DEBUG] 29-02-2024 17:15:53.031 [main] BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@6cf047cf
[DEBUG] 29-02-2024 17:15:53.032 [main] BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@1c92a549
[DEBUG] 29-02-2024 17:15:53.050 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@323e026d
[DEBUG] 29-02-2024 17:15:53.050 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@323e026d
[DEBUG] 29-02-2024 17:15:53.051 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@1716c037
[DEBUG] 29-02-2024 17:15:53.052 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@1716c037
[DEBUG] 29-02-2024 17:15:53.052 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@79b63325
[DEBUG] 29-02-2024 17:15:53.053 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@79b63325
[DEBUG] 29-02-2024 17:15:53.054 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@708769b7
[DEBUG] 29-02-2024 17:15:53.054 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@708769b7
[DEBUG] 29-02-2024 17:15:53.055 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@32e830a0
[DEBUG] 29-02-2024 17:15:53.056 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@32e830a0
[DEBUG] 29-02-2024 17:15:53.056 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@135e49b2
[DEBUG] 29-02-2024 17:15:53.057 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@5bb97fe7
[DEBUG] 29-02-2024 17:15:53.058 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@10b87ff6
[DEBUG] 29-02-2024 17:15:53.058 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@10b87ff6
[DEBUG] 29-02-2024 17:15:53.059 [main] BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@63262071
[DEBUG] 29-02-2024 17:15:53.060 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2d4f67e
[DEBUG] 29-02-2024 17:15:53.060 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@1282f784
[DEBUG] 29-02-2024 17:15:53.067 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@41167ded
[DEBUG] 29-02-2024 17:15:53.069 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@41167ded
[DEBUG] 29-02-2024 17:15:53.069 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@13e1e816
[DEBUG] 29-02-2024 17:15:53.070 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@36238b12
[DEBUG] 29-02-2024 17:15:53.071 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@33187485
[DEBUG] 29-02-2024 17:15:53.071 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@33187485
[DEBUG] 29-02-2024 17:15:53.072 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@41938e1e
[DEBUG] 29-02-2024 17:15:53.073 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@41938e1e
[DEBUG] 29-02-2024 17:15:53.074 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@5d2e6f62
[DEBUG] 29-02-2024 17:15:53.075 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@5d2e6f62
[DEBUG] 29-02-2024 17:15:53.076 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@5d2e6f62
[DEBUG] 29-02-2024 17:15:53.077 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@77ff14ce
[DEBUG] 29-02-2024 17:15:53.077 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@77ff14ce
[DEBUG] 29-02-2024 17:15:53.078 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@77ff14ce
[DEBUG] 29-02-2024 17:15:53.079 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@733fae8
[DEBUG] 29-02-2024 17:15:53.080 [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@5a8d676e
[DEBUG] 29-02-2024 17:15:53.080 [main] BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@74764622
[DEBUG] 29-02-2024 17:15:53.081 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@74764622
[DEBUG] 29-02-2024 17:15:53.082 [main] BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@7ba06506
[DEBUG] 29-02-2024 17:15:53.083 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@7ba06506
[DEBUG] 29-02-2024 17:15:53.084 [main] BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@7ba06506
[DEBUG] 29-02-2024 17:15:53.084 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@63dc3420
[DEBUG] 29-02-2024 17:15:53.085 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@525b8922
[DEBUG] 29-02-2024 17:15:53.085 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@145a821d
[DEBUG] 29-02-2024 17:15:53.086 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@145a821d
[DEBUG] 29-02-2024 17:15:53.086 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@6caa4dc5
[DEBUG] 29-02-2024 17:15:53.087 [main] BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@6caa4dc5
[DEBUG] 29-02-2024 17:15:53.087 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@6caa4dc5
[DEBUG] 29-02-2024 17:15:53.088 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@6ed51944
[DEBUG] 29-02-2024 17:15:53.088 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@6ed51944
[DEBUG] 29-02-2024 17:15:53.090 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@60c98f25
[DEBUG] 29-02-2024 17:15:53.090 [main] BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@60c98f25
[DEBUG] 29-02-2024 17:15:53.091 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@20c3b34b
[DEBUG] 29-02-2024 17:15:53.092 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@20c3b34b
[DEBUG] 29-02-2024 17:15:53.092 [main] BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@1eb906f3
[DEBUG] 29-02-2024 17:15:53.093 [main] BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@1eb906f3
[DEBUG] 29-02-2024 17:15:53.094 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@58e02359
[DEBUG] 29-02-2024 17:15:53.094 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@58e02359
[DEBUG] 29-02-2024 17:15:53.117 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@74fc3fc7
[DEBUG] 29-02-2024 17:15:53.144 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@29d3d0fb
[DEBUG] 29-02-2024 17:15:53.146 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@29d3d0fb
[DEBUG] 29-02-2024 17:15:53.150 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@278de2b2
[DEBUG] 29-02-2024 17:15:53.151 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@1fc1c7e
[DEBUG] 29-02-2024 17:15:53.151 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@75cacb3e
[DEBUG] 29-02-2024 17:15:53.152 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@61957d9c
[DEBUG] 29-02-2024 17:15:53.152 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@29c59b6e
[DEBUG] 29-02-2024 17:15:53.152 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@483b7dc4
[DEBUG] 29-02-2024 17:15:53.153 [main] BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@6b8bdcc6
[DEBUG] 29-02-2024 17:15:53.154 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@213835b6
[DEBUG] 29-02-2024 17:15:53.154 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@24a3d414
[DEBUG] 29-02-2024 17:15:54.756 [main] DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1b632442) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7227926b)
[DEBUG] 29-02-2024 17:15:54.762 [main] JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
[DEBUG] 29-02-2024 17:15:54.763 [main] JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 29-02-2024 17:15:54.788 [main] BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@3f4964f2
[DEBUG] 29-02-2024 17:15:54.789 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@3f4964f2
[DEBUG] 29-02-2024 17:15:54.789 [main] BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@29d3d0fb`
[DEBUG] 29-02-2024 17:15:54.794 [main] JdbcTypeRegistry - addDescriptor(3100, NumericTypeDescriptor) replaced previous registration(org.hibernate.dialect.PostgreSQLIntervalSecondJdbcType@2374452a)
[DEBUG] 29-02-2024 17:15:54.812 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 29-02-2024 17:15:54.813 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 29-02-2024 17:15:54.814 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 29-02-2024 17:15:54.814 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 29-02-2024 17:15:54.815 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 29-02-2024 17:15:54.815 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 29-02-2024 17:15:54.817 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 29-02-2024 17:15:54.818 [main] BasicTypeRegistry - Adding type registration OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 29-02-2024 17:15:54.818 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 29-02-2024 17:15:54.823 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3e2772a9] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@4449b273]
[WARN ] 29-02-2024 17:15:55.324 [main] InFlightMetadataCollectorImpl - HHH000069: Duplicate generator name generator
[INFO ] 29-02-2024 17:15:55.530 [main] BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
[INFO ] 29-02-2024 17:15:57.652 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 29-02-2024 17:15:57.654 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3e2772a9] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@1cf4d454]
[TRACE] 29-02-2024 17:15:57.663 [main] TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@1cf4d454] for TypeConfiguration
[INFO ] 29-02-2024 17:15:59.692 [main] SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
[INFO ] 29-02-2024 17:15:59.693 [main] TestDispatcherServlet - Initializing Servlet ''
[INFO ] 29-02-2024 17:15:59.701 [main] TestDispatcherServlet - Completed initialization in 3 ms
[INFO ] 29-02-2024 17:16:00.154 [main] TestCRUDUserProducts - Started TestCRUDUserProducts in 14.217 seconds (process running for 18.084)
[TRACE] 29-02-2024 17:16:01.165 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@1cf4d454] for TypeConfiguration
[DEBUG] 29-02-2024 17:16:01.169 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@1d895532] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@1cf4d454]
[INFO ] 29-02-2024 17:37:39.944 [background-preinit] Version - HV000001: Hibernate Validator 8.0.1.Final
[INFO ] 29-02-2024 17:37:40.029 [main] TestSpringBootApplication - Starting TestSpringBootApplication using Java 17.0.10 with PID 1791470 (/home/dima/backend_microservice/UserProductsMicroService/target/classes started by dima in /home/dima/backend_microservice/UserProductsMicroService)
[INFO ] 29-02-2024 17:37:40.047 [main] TestSpringBootApplication - No active profile set, falling back to 1 default profile: "default"
[INFO ] 29-02-2024 17:37:42.007 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO ] 29-02-2024 17:37:42.452 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 422 ms. Found 1 JPA repository interfaces.
[ERROR] 29-02-2024 17:37:44.743 [main] AprLifecycleListener - An incompatible version [1.2.23] of the Apache Tomcat Native library is installed, while Tomcat requires version [1.2.34]
[INFO ] 29-02-2024 17:37:45.831 [main] TomcatWebServer - Tomcat initialized with port(s): 8300 (http)
[INFO ] 29-02-2024 17:37:45.856 [main] Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8300"]
[INFO ] 29-02-2024 17:37:45.863 [main] StandardService - Starting service [Tomcat]
[INFO ] 29-02-2024 17:37:45.866 [main] StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.11]
[INFO ] 29-02-2024 17:37:47.030 [main] TldScanner - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
[INFO ] 29-02-2024 17:37:47.053 [main] [/users_products_api] - Initializing Spring embedded WebApplicationContext
[INFO ] 29-02-2024 17:37:47.072 [main] ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 6825 ms
[INFO ] 29-02-2024 17:37:47.556 [main] Version - HHH000412: Hibernate ORM core version 6.2.6.Final
[INFO ] 29-02-2024 17:37:47.563 [main] Environment - HHH000406: Using bytecode reflection optimizer
[DEBUG] 29-02-2024 17:37:47.924 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@23b1aa9
[DEBUG] 29-02-2024 17:37:47.925 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@23b1aa9
[DEBUG] 29-02-2024 17:37:47.926 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@23b1aa9
[DEBUG] 29-02-2024 17:37:47.927 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@54489296
[DEBUG] 29-02-2024 17:37:47.927 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@54489296
[DEBUG] 29-02-2024 17:37:47.928 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@4e8598d9
[DEBUG] 29-02-2024 17:37:47.929 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@4e8598d9
[DEBUG] 29-02-2024 17:37:47.930 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@267ff4df
[DEBUG] 29-02-2024 17:37:47.930 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@267ff4df
[DEBUG] 29-02-2024 17:37:47.931 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@7c4b5ceb
[DEBUG] 29-02-2024 17:37:47.931 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@7c4b5ceb
[DEBUG] 29-02-2024 17:37:47.932 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@7c4b5ceb
[DEBUG] 29-02-2024 17:37:47.932 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@6c07add6
[DEBUG] 29-02-2024 17:37:47.933 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@6c07add6
[DEBUG] 29-02-2024 17:37:47.933 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@6c07add6
[DEBUG] 29-02-2024 17:37:47.934 [main] BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@e26a3df
[DEBUG] 29-02-2024 17:37:47.934 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@e26a3df
[DEBUG] 29-02-2024 17:37:47.935 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@57a667c8
[DEBUG] 29-02-2024 17:37:47.936 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@712cd5d3
[DEBUG] 29-02-2024 17:37:47.936 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@712cd5d3
[DEBUG] 29-02-2024 17:37:47.937 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@2094bf3d
[DEBUG] 29-02-2024 17:37:47.937 [main] BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@1b17d8ab
[DEBUG] 29-02-2024 17:37:47.938 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@7f6b7426
[DEBUG] 29-02-2024 17:37:47.938 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@7f6b7426
[DEBUG] 29-02-2024 17:37:47.939 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@7f6b7426
[DEBUG] 29-02-2024 17:37:47.939 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@687eb455
[DEBUG] 29-02-2024 17:37:47.940 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@687eb455
[DEBUG] 29-02-2024 17:37:47.941 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@687eb455
[DEBUG] 29-02-2024 17:37:47.942 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@6d969330
[DEBUG] 29-02-2024 17:37:47.942 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@6d969330
[DEBUG] 29-02-2024 17:37:47.943 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@6d969330
[DEBUG] 29-02-2024 17:37:47.943 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@4861cca9
[DEBUG] 29-02-2024 17:37:47.944 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@4861cca9
[DEBUG] 29-02-2024 17:37:47.944 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@4861cca9
[DEBUG] 29-02-2024 17:37:47.945 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@6c8f4bc7
[DEBUG] 29-02-2024 17:37:47.945 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@6c8f4bc7
[DEBUG] 29-02-2024 17:37:47.946 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@6c8f4bc7
[DEBUG] 29-02-2024 17:37:47.946 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@714e861f
[DEBUG] 29-02-2024 17:37:47.947 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@714e861f
[DEBUG] 29-02-2024 17:37:47.947 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@28989415
[DEBUG] 29-02-2024 17:37:47.948 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@28989415
[DEBUG] 29-02-2024 17:37:47.948 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@6eda012b
[DEBUG] 29-02-2024 17:37:47.949 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@6eda012b
[DEBUG] 29-02-2024 17:37:47.949 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@6eda012b
[DEBUG] 29-02-2024 17:37:47.950 [main] BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@781dbe44
[DEBUG] 29-02-2024 17:37:47.950 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@7d66a126
[DEBUG] 29-02-2024 17:37:47.951 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@7d66a126
[DEBUG] 29-02-2024 17:37:47.951 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@1132baa3
[DEBUG] 29-02-2024 17:37:47.952 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@2fdf22f7
[DEBUG] 29-02-2024 17:37:47.953 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@2fdf22f7
[DEBUG] 29-02-2024 17:37:47.953 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@2fdf22f7
[DEBUG] 29-02-2024 17:37:47.954 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@3a2546d6
[DEBUG] 29-02-2024 17:37:47.954 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@7282af25
[DEBUG] 29-02-2024 17:37:47.955 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@7661e474
[DEBUG] 29-02-2024 17:37:47.955 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@20ffb8d5
[DEBUG] 29-02-2024 17:37:47.956 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@20ffb8d5
[DEBUG] 29-02-2024 17:37:47.956 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@307c59ea
[DEBUG] 29-02-2024 17:37:47.957 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@307c59ea
[DEBUG] 29-02-2024 17:37:47.957 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@57e03347
[DEBUG] 29-02-2024 17:37:47.958 [main] BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@2edb2f8b
[DEBUG] 29-02-2024 17:37:47.958 [main] BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@733f1395
[DEBUG] 29-02-2024 17:37:47.959 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@21dea711
[DEBUG] 29-02-2024 17:37:47.959 [main] BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@7772d266
[DEBUG] 29-02-2024 17:37:47.960 [main] BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@a21c74
[DEBUG] 29-02-2024 17:37:47.960 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@b8a144e
[DEBUG] 29-02-2024 17:37:47.961 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@b8a144e
[DEBUG] 29-02-2024 17:37:47.962 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@5fb8dc01
[DEBUG] 29-02-2024 17:37:47.962 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@5fb8dc01
[DEBUG] 29-02-2024 17:37:47.963 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@3e38c472
[DEBUG] 29-02-2024 17:37:47.963 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@3e38c472
[DEBUG] 29-02-2024 17:37:47.963 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@2ee92e7d
[DEBUG] 29-02-2024 17:37:47.964 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@2ee92e7d
[DEBUG] 29-02-2024 17:37:47.965 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@759a678a
[DEBUG] 29-02-2024 17:37:47.965 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@759a678a
[DEBUG] 29-02-2024 17:37:47.966 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@6cdbe5ec
[DEBUG] 29-02-2024 17:37:47.966 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@14b8a751
[DEBUG] 29-02-2024 17:37:47.967 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@7345f97d
[DEBUG] 29-02-2024 17:37:47.967 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@7345f97d
[DEBUG] 29-02-2024 17:37:47.968 [main] BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@554566a8
[DEBUG] 29-02-2024 17:37:47.969 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@66020d69
[DEBUG] 29-02-2024 17:37:47.969 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3751acd7
[DEBUG] 29-02-2024 17:37:47.970 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@6b832551
[DEBUG] 29-02-2024 17:37:47.971 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@6b832551
[DEBUG] 29-02-2024 17:37:47.971 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@150d6eaf
[DEBUG] 29-02-2024 17:37:47.972 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@63124022
[DEBUG] 29-02-2024 17:37:47.972 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@591f6f83
[DEBUG] 29-02-2024 17:37:47.973 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@591f6f83
[DEBUG] 29-02-2024 17:37:47.973 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@2b44605c
[DEBUG] 29-02-2024 17:37:47.974 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@2b44605c
[DEBUG] 29-02-2024 17:37:47.974 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@55421b8d
[DEBUG] 29-02-2024 17:37:47.975 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@55421b8d
[DEBUG] 29-02-2024 17:37:47.975 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@55421b8d
[DEBUG] 29-02-2024 17:37:47.976 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@24a04257
[DEBUG] 29-02-2024 17:37:47.976 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@24a04257
[DEBUG] 29-02-2024 17:37:47.977 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@24a04257
[DEBUG] 29-02-2024 17:37:47.977 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@6615237
[DEBUG] 29-02-2024 17:37:47.978 [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@eaf8427
[DEBUG] 29-02-2024 17:37:47.978 [main] BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@4bf4680c
[DEBUG] 29-02-2024 17:37:47.979 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@4bf4680c
[DEBUG] 29-02-2024 17:37:47.979 [main] BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@6d6039df
[DEBUG] 29-02-2024 17:37:47.980 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@6d6039df
[DEBUG] 29-02-2024 17:37:47.982 [main] BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@6d6039df
[DEBUG] 29-02-2024 17:37:47.982 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@611c3eae
[DEBUG] 29-02-2024 17:37:47.983 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@13e00016
[DEBUG] 29-02-2024 17:37:47.983 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@7b3cbe6e
[DEBUG] 29-02-2024 17:37:47.984 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@7b3cbe6e
[DEBUG] 29-02-2024 17:37:47.984 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@177ede17
[DEBUG] 29-02-2024 17:37:47.985 [main] BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@177ede17
[DEBUG] 29-02-2024 17:37:47.985 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@177ede17
[DEBUG] 29-02-2024 17:37:47.986 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@17176b18
[DEBUG] 29-02-2024 17:37:47.986 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@17176b18
[DEBUG] 29-02-2024 17:37:47.987 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@4e4395c
[DEBUG] 29-02-2024 17:37:47.990 [main] BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@4e4395c
[DEBUG] 29-02-2024 17:37:47.993 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@1ab53860
[DEBUG] 29-02-2024 17:37:47.994 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@1ab53860
[DEBUG] 29-02-2024 17:37:47.995 [main] BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@7b5ac347
[DEBUG] 29-02-2024 17:37:47.995 [main] BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@7b5ac347
[DEBUG] 29-02-2024 17:37:47.995 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@57b9389f
[DEBUG] 29-02-2024 17:37:47.996 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@57b9389f
[DEBUG] 29-02-2024 17:37:47.996 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@72b2c5ed
[DEBUG] 29-02-2024 17:37:48.011 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@179ee36b
[DEBUG] 29-02-2024 17:37:48.012 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@179ee36b
[DEBUG] 29-02-2024 17:37:48.015 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@36551e97
[DEBUG] 29-02-2024 17:37:48.016 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@685d7ba5
[DEBUG] 29-02-2024 17:37:48.017 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@16d41725
[DEBUG] 29-02-2024 17:37:48.017 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@3b6c2be6
[DEBUG] 29-02-2024 17:37:48.018 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@25533bba
[DEBUG] 29-02-2024 17:37:48.018 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@26d0ece6
[DEBUG] 29-02-2024 17:37:48.019 [main] BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@100bba26
[DEBUG] 29-02-2024 17:37:48.020 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@4ae280da
[DEBUG] 29-02-2024 17:37:48.020 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@76d0ecd7
[DEBUG] 29-02-2024 17:37:49.421 [main] DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@8ac512e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4bbc21bd)
[DEBUG] 29-02-2024 17:37:49.426 [main] JdbcTypeRegistry - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
[DEBUG] 29-02-2024 17:37:49.427 [main] JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 29-02-2024 17:37:49.485 [main] BasicTypeRegistry - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@4ad1a276
[DEBUG] 29-02-2024 17:37:49.485 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@4ad1a276
[DEBUG] 29-02-2024 17:37:49.486 [main] BasicTypeRegistry - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@179ee36b`
[DEBUG] 29-02-2024 17:37:49.488 [main] JdbcTypeRegistry - addDescriptor(3100, NumericTypeDescriptor) replaced previous registration(org.hibernate.dialect.PostgreSQLIntervalSecondJdbcType@5d6b42cf)
[DEBUG] 29-02-2024 17:37:49.508 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 29-02-2024 17:37:49.508 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 29-02-2024 17:37:49.510 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
[DEBUG] 29-02-2024 17:37:49.510 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 29-02-2024 17:37:49.510 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 29-02-2024 17:37:49.511 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
[DEBUG] 29-02-2024 17:37:49.513 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 29-02-2024 17:37:49.514 [main] BasicTypeRegistry - Adding type registration OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 29-02-2024 17:37:49.515 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@3(java.time.OffsetTime,3007)
[DEBUG] 29-02-2024 17:37:49.519 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@70d5d96b] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@23469199]
[WARN ] 29-02-2024 17:37:49.975 [main] InFlightMetadataCollectorImpl - HHH000069: Duplicate generator name generator
[INFO ] 29-02-2024 17:37:50.151 [main] BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
[INFO ] 29-02-2024 17:37:52.840 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 29-02-2024 17:37:52.841 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@70d5d96b] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@7b4c793b]
[TRACE] 29-02-2024 17:37:52.849 [main] TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@7b4c793b] for TypeConfiguration
[WARN ] 29-02-2024 17:37:54.244 [main] JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[INFO ] 29-02-2024 17:37:55.090 [main] Http11NioProtocol - Starting ProtocolHandler ["http-nio-8300"]
[INFO ] 29-02-2024 17:37:55.214 [main] TomcatWebServer - Tomcat started on port(s): 8300 (http) with context path '/users_products_api'
[INFO ] 29-02-2024 17:37:55.255 [main] TestSpringBootApplication - Started TestSpringBootApplication in 16.419 seconds (process running for 19.461)
[INFO ] 29-02-2024 17:38:06.040 [http-nio-8300-exec-2] [/users_products_api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[INFO ] 29-02-2024 17:38:06.041 [http-nio-8300-exec-2] DispatcherServlet - Initializing Servlet 'dispatcherServlet'
[INFO ] 29-02-2024 17:38:06.044 [http-nio-8300-exec-2] DispatcherServlet - Completed initialization in 2 ms
[DEBUG] 29-02-2024 17:38:06.453 [http-nio-8300-exec-2] SQL - select e1_0.id,e1_0.email,e1_0.login,e1_0.name,e1_0.password,p1_0.id_user,p1_0.id,p1_0.name,p1_0.page_image,p1_0.price,p1_0.raiting,p1_0.year_issue from users e1_0 left join products p1_0 on e1_0.id=p1_0.id_user where e1_0.id=?
